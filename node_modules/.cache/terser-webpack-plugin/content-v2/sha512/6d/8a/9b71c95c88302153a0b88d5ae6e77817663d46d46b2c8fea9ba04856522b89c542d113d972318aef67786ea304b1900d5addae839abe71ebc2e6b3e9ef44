{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\style-loader\\\\index.js!k:\\\\OL_WORKSHOP\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\ol.css\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\ol.css\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\style-loader\\\\lib\\\\addStyles.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\style-loader\\\\lib\\\\urls.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\util.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\AssertionError.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\CollectionEventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\ObjectEventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\obj.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\events.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\Disposable.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\functions.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\events\\\\Event.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\events\\\\Target.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\events\\\\EventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\Observable.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\Object.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\Collection.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\MapEvent.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\MapBrowserEvent.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\has.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\MapBrowserEventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\MapBrowserPointerEvent.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\EventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\EventSource.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\MouseSource.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\MsSource.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\NativeSource.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\PointerEvent.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\array.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\TouchSource.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\pointer\\\\PointerEventHandler.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\MapBrowserEventHandler.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\MapEventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\MapProperty.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\render\\\\EventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\TileState.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\asserts.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\structs\\\\PriorityQueue.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\TileQueue.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\tilegrid\\\\common.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\math.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\centerconstraint.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\extent\\\\Corner.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\extent\\\\Relationship.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\extent.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\resolutionconstraint.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\rotationconstraint.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\ViewHint.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\ViewProperty.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\coordinate.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\easing.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\GeometryType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\GeometryLayout.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\transform.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\sphere.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\proj\\\\Units.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\proj\\\\Projection.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\proj\\\\epsg3857.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\proj\\\\epsg4326.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\proj\\\\projections.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\proj\\\\transforms.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\proj.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\transform.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\Geometry.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\SimpleGeometry.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\area.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\closest.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\deflate.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\inflate.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\simplify.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\LinearRing.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\Point.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\contains.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\interiorpoint.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\intersectsextent.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\segments.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\reverse.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\orient.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\geom\\\\Polygon.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\View.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\dom.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\layer\\\\Property.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\layer\\\\Base.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\source\\\\State.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\layer\\\\Group.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\size.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\PluggableMap.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\control\\\\Control.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\css.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\layer\\\\Layer.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\control\\\\Attribution.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\control\\\\Rotate.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\control\\\\Zoom.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\Kinetic.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\Property.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\Interaction.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\DoubleClickZoom.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\events\\\\condition.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\Pointer.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\DragPan.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\DragRotate.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\render\\\\Box.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\DragBox.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\DragZoom.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\events\\\\KeyCode.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\KeyboardPan.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\KeyboardZoom.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\MouseWheelZoom.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\PinchRotate.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction\\\\PinchZoom.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\render\\\\Event.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\color.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\style\\\\IconImageCache.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\renderer\\\\Map.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\renderer\\\\Composite.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\Map.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\control\\\\util.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\interaction.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\layer\\\\TileProperty.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\layer\\\\BaseTile.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\TileRange.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\structs\\\\LRUCache.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\LabelCache.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\render\\\\canvas.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\ImageState.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\renderer\\\\Layer.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\renderer\\\\canvas\\\\Layer.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\renderer\\\\canvas\\\\TileLayer.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\layer\\\\Tile.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\reproj\\\\common.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\Tile.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\ImageTile.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\tilecoord.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\TileCache.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\reproj.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\reproj\\\\Triangulation.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\reproj\\\\Tile.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\tileurlfunction.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\source\\\\Source.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\tilegrid\\\\TileGrid.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\tilegrid.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\source\\\\Tile.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\source\\\\TileEventType.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\source\\\\UrlTile.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\source\\\\TileImage.js\",\"k:\\\\OL_WORKSHOP\\\\node_modules\\\\ol\\\\source\\\\XYZ.js\",\"k:\\\\OL_WORKSHOP\\\\main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"content\",\"options\",\"hmr\",\"transform\",\"insertInto\",\"undefined\",\"locals\",\"push\",\"useSourceMap\",\"list\",\"toString\",\"this\",\"map\",\"item\",\"cssMapping\",\"btoa\",\"sourceMapping\",\"sourceMap\",\"unescape\",\"encodeURIComponent\",\"JSON\",\"stringify\",\"sourceURLs\",\"sources\",\"source\",\"sourceRoot\",\"concat\",\"join\",\"cssWithMappingToString\",\"mediaQuery\",\"alreadyImportedModules\",\"length\",\"id\",\"fn\",\"memo\",\"stylesInDom\",\"isOldIE\",\"window\",\"document\",\"all\",\"atob\",\"apply\",\"arguments\",\"getElement\",\"target\",\"parent\",\"styleTarget\",\"querySelector\",\"HTMLIFrameElement\",\"contentDocument\",\"head\",\"e\",\"singleton\",\"singletonCounter\",\"stylesInsertedAtTop\",\"fixUrls\",\"addStylesToDom\",\"styles\",\"domStyle\",\"refs\",\"j\",\"parts\",\"addStyle\",\"listToStyles\",\"newStyles\",\"base\",\"part\",\"css\",\"media\",\"insertStyleElement\",\"style\",\"Error\",\"lastStyleElementInsertedAtTop\",\"insertAt\",\"nextSibling\",\"insertBefore\",\"appendChild\",\"firstChild\",\"before\",\"removeStyleElement\",\"parentNode\",\"removeChild\",\"idx\",\"indexOf\",\"splice\",\"createStyleElement\",\"createElement\",\"attrs\",\"type\",\"nonce\",\"nc\",\"getNonce\",\"addAttrs\",\"el\",\"keys\",\"forEach\",\"setAttribute\",\"obj\",\"update\",\"remove\",\"result\",\"default\",\"styleIndex\",\"applyToSingletonTag\",\"URL\",\"createObjectURL\",\"revokeObjectURL\",\"Blob\",\"link\",\"rel\",\"createLinkElement\",\"autoFixUrls\",\"convertToAbsoluteUrls\",\"blob\",\"oldSrc\",\"href\",\"styleSheet\",\"cssText\",\"createTextNode\",\"newObj\",\"DEBUG\",\"newList\",\"mayRemove\",\"textStore\",\"replaceText\",\"index\",\"replacement\",\"filter\",\"Boolean\",\"cssNode\",\"childNodes\",\"location\",\"baseUrl\",\"protocol\",\"host\",\"currentDir\",\"pathname\",\"replace\",\"fullMatch\",\"origUrl\",\"newUrl\",\"unquotedOrigUrl\",\"trim\",\"$1\",\"test\",\"util_abstract\",\"uidCounter_\",\"getUid\",\"ol_uid\",\"String\",\"extendStatics\",\"VERSION\",\"__extends\",\"b\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"__\",\"constructor\",\"ol_AssertionError\",\"_super\",\"AssertionError\",\"code\",\"_this\",\"message\",\"split\",\"CollectionEventType\",\"ADD\",\"REMOVE\",\"ObjectEventType\",\"obj_assign\",\"assign\",\"var_sources\",\"TypeError\",\"output\",\"ii\",\"clear\",\"getValues\",\"values\",\"findListener\",\"listeners\",\"listener\",\"opt_this\",\"opt_setDeleteIndex\",\"listenerObj\",\"bindTo\",\"deleteIndex\",\"getListeners\",\"listenerMap\",\"getListenerMap\",\"opt_create\",\"ol_lm\",\"removeListeners\",\"removeEventListener\",\"boundListener\",\"removeListenerMap\",\"listen\",\"opt_once\",\"callOnce\",\"addEventListener\",\"evt\",\"unlistenByKey\",\"bindListener\",\"listenOnce\",\"unlisten\",\"ol_Disposable\",\"Disposable\",\"disposed_\",\"dispose\",\"disposeInternal\",\"TRUE\",\"FALSE\",\"VOID\",\"events_Event\",\"Event\",\"propagationStopped\",\"preventDefault\",\"stopPropagation\",\"Target_extends\",\"events_Target\",\"Target\",\"pendingRemovals_\",\"dispatching_\",\"listeners_\",\"dispatchEvent\",\"event\",\"propagate\",\"pendingRemovals\",\"unlistenAll\",\"hasListener\",\"opt_type\",\"EventType\",\"CHANGE\",\"CLEAR\",\"CONTEXTMENU\",\"CLICK\",\"DBLCLICK\",\"DRAGENTER\",\"DRAGOVER\",\"DROP\",\"ERROR\",\"KEYDOWN\",\"KEYPRESS\",\"LOAD\",\"MOUSEDOWN\",\"MOUSEMOVE\",\"MOUSEOUT\",\"MOUSEUP\",\"MOUSEWHEEL\",\"MSPOINTERDOWN\",\"RESIZE\",\"TOUCHSTART\",\"TOUCHMOVE\",\"TOUCHEND\",\"WHEEL\",\"Observable_extends\",\"ol_Observable\",\"Observable\",\"revision_\",\"changed\",\"getRevision\",\"on\",\"isArray\",\"len\",\"once\",\"un\",\"Object_extends\",\"ObjectEvent\",\"oldValue\",\"Object_BaseObject\",\"BaseObject\",\"opt_values\",\"values_\",\"setProperties\",\"getKeys\",\"getProperties\",\"notify\",\"eventType\",\"getChangeEventType\",\"set\",\"opt_silent\",\"unset\",\"changeEventTypeCache\",\"ol_Object\",\"Collection_extends\",\"Property\",\"CollectionEvent\",\"opt_element\",\"opt_index\",\"element\",\"ol_Collection\",\"Collection\",\"opt_array\",\"opt_options\",\"unique_\",\"unique\",\"array_\",\"assertUnique_\",\"updateLength_\",\"getLength\",\"pop\",\"extend\",\"arr\",\"f\",\"array\",\"getArray\",\"elem\",\"removeAt\",\"prev\",\"setAt\",\"opt_except\",\"MapEvent_extends\",\"ol_MapEvent\",\"MapEvent\",\"opt_frameState\",\"frameState\",\"MapBrowserEvent_extends\",\"ol_MapBrowserEvent\",\"MapBrowserEvent\",\"browserEvent\",\"opt_dragging\",\"originalEvent\",\"pixel\",\"getEventPixel\",\"coordinate\",\"getCoordinateFromPixel\",\"dragging\",\"ua\",\"navigator\",\"userAgent\",\"toLowerCase\",\"FIREFOX\",\"SAFARI\",\"WEBKIT\",\"MAC\",\"DEVICE_PIXEL_RATIO\",\"devicePixelRatio\",\"TOUCH\",\"POINTER\",\"MSPOINTER\",\"MapBrowserEventType\",\"SINGLECLICK\",\"POINTERDRAG\",\"POINTERMOVE\",\"POINTERDOWN\",\"POINTERUP\",\"POINTEROVER\",\"POINTEROUT\",\"POINTERENTER\",\"POINTERLEAVE\",\"POINTERCANCEL\",\"MapBrowserPointerEvent_extends\",\"ol_MapBrowserPointerEvent\",\"MapBrowserPointerEvent\",\"pointerEvent\",\"pointer_EventType\",\"pointer_EventSource\",\"EventSource\",\"dispatcher\",\"mapping\",\"mapping_\",\"getEvents\",\"getHandlerForEvent\",\"MouseSource_extends\",\"POINTER_ID\",\"POINTER_TYPE\",\"mousedown\",\"inEvent\",\"isEventSimulatedFromTouch_\",\"pointerMap\",\"cancel\",\"prepareEvent\",\"down\",\"mousemove\",\"move\",\"mouseup\",\"button\",\"up\",\"cleanupMouse\",\"mouseover\",\"enterOver\",\"mouseout\",\"leaveOut\",\"cloneEvent\",\"pd\",\"pointerId\",\"isPrimary\",\"pointerType\",\"pointer_MouseSource\",\"MouseSource\",\"lastTouches\",\"lts\",\"x\",\"clientX\",\"y\",\"clientY\",\"dx\",\"Math\",\"abs\",\"dy\",\"MsSource_extends\",\"POINTER_TYPES\",\"msPointerDown\",\"prepareEvent_\",\"msPointerMove\",\"msPointerUp\",\"cleanup\",\"msPointerOut\",\"msPointerOver\",\"msPointerCancel\",\"msLostPointerCapture\",\"makeEvent\",\"msGotPointerCapture\",\"pointer_MsSource\",\"MsSource\",\"MSPointerDown\",\"MSPointerMove\",\"MSPointerUp\",\"MSPointerOut\",\"MSPointerOver\",\"MSPointerCancel\",\"MSGotPointerCapture\",\"MSLostPointerCapture\",\"NativeSource_extends\",\"pointerDown\",\"fireNativeEvent\",\"pointerMove\",\"pointerUp\",\"pointerOut\",\"pointerOver\",\"pointerCancel\",\"lostPointerCapture\",\"gotPointerCapture\",\"pointer_NativeSource\",\"NativeSource\",\"pointerdown\",\"pointermove\",\"pointerup\",\"pointerout\",\"pointerover\",\"pointercancel\",\"gotpointercapture\",\"lostpointercapture\",\"PointerEvent_extends\",\"HAS_BUTTONS\",\"PointerEvent\",\"opt_eventDict\",\"eventDict\",\"buttons\",\"which\",\"getButtons\",\"pressure\",\"getPressure\",\"bubbles\",\"cancelable\",\"view\",\"detail\",\"screenX\",\"screenY\",\"ctrlKey\",\"altKey\",\"shiftKey\",\"metaKey\",\"relatedTarget\",\"width\",\"height\",\"tiltX\",\"tiltY\",\"hwTimestamp\",\"ev\",\"MouseEvent\",\"pointer_PointerEvent\",\"numberSafeCompareFunction\",\"a\",\"linearFindNearest\",\"direction\",\"data\",\"extension\",\"TouchSource_extends\",\"touchstart\",\"vacuumTouches_\",\"setPrimaryTouch_\",\"changedTouches\",\"dedupSynthMouse_\",\"clickCount_\",\"processTouches_\",\"overDown_\",\"touchmove\",\"moveOverOut_\",\"touchend\",\"upOut_\",\"touchcancel\",\"cancelOut_\",\"pointer_TouchSource\",\"TouchSource\",\"mouseSource\",\"firstTouchId_\",\"resetId_\",\"dedupTimeout_\",\"isPrimaryTouch_\",\"inTouch\",\"identifier\",\"count\",\"cancelResetClickCount_\",\"removePrimaryPointer_\",\"inPointer\",\"resetClickCount_\",\"setTimeout\",\"resetClickCountHandler_\",\"clearTimeout\",\"touchToPointer_\",\"radiusX\",\"radiusY\",\"force\",\"inFunction\",\"touches\",\"slice\",\"pointer\",\"findTouch_\",\"touchList\",\"searchId\",\"Number\",\"out\",\"outTarget\",\"over\",\"enter\",\"outEvent\",\"leave\",\"cleanUpPointer_\",\"lt_1\",\"PointerEventHandler_extends\",\"CLONE_PROPS\",\"pointer_PointerEventHandler\",\"PointerEventHandler\",\"element_\",\"eventMap_\",\"eventSourceList_\",\"registerSources\",\"registerSource\",\"register_\",\"newEvents\",\"handler\",\"eventSource\",\"addEvents_\",\"unregister_\",\"removeEvents_\",\"eventHandler_\",\"events\",\"eventName\",\"eventCopy\",\"fireEvent\",\"contains_\",\"container\",\"contained\",\"contains\",\"inType\",\"wrapMouseEvent\",\"MapBrowserEventHandler_extends\",\"ol_MapBrowserEventHandler\",\"MapBrowserEventHandler\",\"moveTolerance\",\"map_\",\"clickTimeoutId_\",\"dragging_\",\"dragListenerKeys_\",\"moveTolerance_\",\"down_\",\"getViewport\",\"activePointers_\",\"trackedTouches_\",\"pointerEventHandler_\",\"documentPointerEventHandler_\",\"pointerdownListenerKey_\",\"handlePointerDown_\",\"relayedListenerKey_\",\"relayEvent_\",\"emulateClick_\",\"newEvent\",\"updateActivePointers_\",\"handlePointerUp_\",\"isMouseActionButton_\",\"handlePointerMove_\",\"isMoving_\",\"MapEventType\",\"MapProperty\",\"LAYERGROUP\",\"SIZE\",\"TARGET\",\"VIEW\",\"render_EventType\",\"TileState\",\"IDLE\",\"LOADING\",\"LOADED\",\"EMPTY\",\"ABORT\",\"assert\",\"assertion\",\"errorCode\",\"structs_PriorityQueue\",\"PriorityQueue\",\"priorityFunction\",\"keyFunction\",\"priorityFunction_\",\"keyFunction_\",\"elements_\",\"priorities_\",\"queuedElements_\",\"dequeue\",\"elements\",\"priorities\",\"siftUp_\",\"elementKey\",\"enqueue\",\"priority\",\"Infinity\",\"siftDown_\",\"getCount\",\"getLeftChildIndex_\",\"getRightChildIndex_\",\"getParentIndex_\",\"heapify_\",\"isEmpty\",\"isKeyQueued\",\"isQueued\",\"startIndex\",\"lIndex\",\"rIndex\",\"smallerChildIndex\",\"parentIndex\",\"reprioritize\",\"TileQueue_extends\",\"ol_TileQueue\",\"TileQueue\",\"tilePriorityFunction\",\"tileChangeCallback\",\"getKey\",\"tileChangeCallback_\",\"tilesLoading_\",\"tilesLoadingKeys_\",\"added\",\"handleTileChange\",\"getTilesLoading\",\"tile\",\"state\",\"getState\",\"hifi\",\"tileKey\",\"loadMoreTiles\",\"maxTotalLoading\",\"maxNewLoads\",\"newLoads\",\"abortedTiles\",\"load\",\"DEFAULT_MAX_ZOOM\",\"DEFAULT_TILE_SIZE\",\"clamp\",\"min\",\"max\",\"cosh\",\"exp\",\"squaredSegmentDistance\",\"x1\",\"y1\",\"x2\",\"y2\",\"math_squaredDistance\",\"toRadians\",\"angleInDegrees\",\"PI\",\"modulo\",\"lerp\",\"none\",\"center\",\"Corner\",\"BOTTOM_LEFT\",\"BOTTOM_RIGHT\",\"TOP_LEFT\",\"TOP_RIGHT\",\"Relationship\",\"UNKNOWN\",\"INTERSECTING\",\"ABOVE\",\"RIGHT\",\"BELOW\",\"LEFT\",\"boundingExtent\",\"coordinates\",\"extent\",\"createEmpty\",\"extendCoordinate\",\"closestSquaredDistanceXY\",\"containsCoordinate\",\"containsXY\",\"coordinateRelationship\",\"minX\",\"minY\",\"maxX\",\"maxY\",\"relationship\",\"createOrUpdate\",\"opt_extent\",\"createOrUpdateEmpty\",\"extent_equals\",\"extent1\",\"extent2\",\"extendCoordinates\",\"extendFlatCoordinates\",\"flatCoordinates\",\"offset\",\"end\",\"stride\",\"extendXY\",\"getArea\",\"area\",\"extent_isEmpty\",\"getWidth\",\"getHeight\",\"getBottomLeft\",\"getBottomRight\",\"getCenter\",\"getCorner\",\"corner\",\"getTopLeft\",\"getTopRight\",\"getForViewAndSize\",\"resolution\",\"rotation\",\"size\",\"cosRotation\",\"cos\",\"sinRotation\",\"sin\",\"xCos\",\"xSin\",\"yCos\",\"ySin\",\"x0\",\"x3\",\"y0\",\"y3\",\"getIntersection\",\"intersection\",\"extent_intersects\",\"getViewportClampedResolution\",\"maxExtent\",\"viewportSize\",\"xResolution\",\"yResolution\",\"getSmoothClampedResolution\",\"maxResolution\",\"minResolution\",\"log\",\"createMinMaxResolution\",\"opt_smooth\",\"opt_maxExtent\",\"opt_isMoving\",\"cappedMaxRes\",\"disable\",\"rotationconstraint_none\",\"ViewHint\",\"ViewProperty\",\"coordinate_equals\",\"coordinate1\",\"coordinate2\",\"equals\",\"rotate\",\"angle\",\"cosAngle\",\"sinAngle\",\"easeIn\",\"pow\",\"easeOut\",\"inAndOut\",\"linear\",\"GeometryType\",\"POINT\",\"LINE_STRING\",\"LINEAR_RING\",\"POLYGON\",\"MULTI_POINT\",\"MULTI_LINE_STRING\",\"MULTI_POLYGON\",\"GEOMETRY_COLLECTION\",\"CIRCLE\",\"GeometryLayout\",\"XY\",\"XYZ\",\"XYM\",\"XYZM\",\"transform2D\",\"opt_dest\",\"dest\",\"DEFAULT_RADIUS\",\"getDistance\",\"c1\",\"c2\",\"opt_radius\",\"radius\",\"lat1\",\"lat2\",\"deltaLatBy2\",\"deltaLonBy2\",\"atan2\",\"sqrt\",\"Units\",\"DEGREES\",\"FEET\",\"METERS\",\"PIXELS\",\"TILE_PIXELS\",\"USFEET\",\"METERS_PER_UNIT\",\"proj_Units\",\"proj_Projection\",\"Projection\",\"code_\",\"units_\",\"extent_\",\"worldExtent_\",\"worldExtent\",\"axisOrientation_\",\"axisOrientation\",\"global_\",\"global\",\"canWrapX_\",\"getPointResolutionFunc_\",\"getPointResolution\",\"defaultTileGrid_\",\"metersPerUnit_\",\"metersPerUnit\",\"canWrapX\",\"getCode\",\"getExtent\",\"getUnits\",\"getMetersPerUnit\",\"getWorldExtent\",\"getAxisOrientation\",\"isGlobal\",\"setGlobal\",\"getDefaultTileGrid\",\"setDefaultTileGrid\",\"tileGrid\",\"setExtent\",\"setWorldExtent\",\"setGetPointResolution\",\"func\",\"getPointResolutionFunc\",\"epsg3857_extends\",\"RADIUS\",\"HALF_SIZE\",\"EXTENT\",\"WORLD_EXTENT\",\"epsg3857_EPSG3857Projection\",\"EPSG3857Projection\",\"units\",\"point\",\"PROJECTIONS\",\"fromEPSG4326\",\"input\",\"opt_output\",\"opt_dimension\",\"dimension\",\"halfSize\",\"tan\",\"toEPSG4326\",\"atan\",\"epsg4326_extends\",\"epsg4326_EXTENT\",\"epsg4326_METERS_PER_UNIT\",\"epsg4326_EPSG4326Projection\",\"EPSG4326Projection\",\"opt_axisOrientation\",\"epsg4326_PROJECTIONS\",\"projections_cache\",\"projections2\",\"forwardTransform\",\"inverseTransform\",\"transforms\",\"transforms_add\",\"destination\",\"transformFn\",\"sourceCode\",\"destinationCode\",\"cloneTransform\",\"identityTransform\",\"addProjection\",\"projection\",\"projections_add\",\"proj_get\",\"projectionLike\",\"opt_units\",\"pointResolution\",\"toEPSG4326_1\",\"getTransformFromProjections\",\"vertices\",\"addEquivalentProjections\",\"projections\",\"addProjections\",\"createProjection\",\"defaultCode\",\"equivalent\",\"projection1\",\"projection2\",\"equalUnits\",\"sourceProjection\",\"destinationProjection\",\"transformFunc\",\"transforms_get\",\"getTransform\",\"proj_transform\",\"compose\",\"dx1\",\"dy1\",\"sx\",\"sy\",\"dx2\",\"dy2\",\"makeInverse\",\"mat\",\"det\",\"Geometry_extends\",\"tmpTransform\",\"geom_Geometry\",\"Geometry\",\"extentRevision_\",\"simplifiedGeometryCache\",\"simplifiedGeometryMaxMinSquaredTolerance\",\"simplifiedGeometryRevision\",\"clone\",\"closestPointXY\",\"closestPoint\",\"minSquaredDistance\",\"coord\",\"getClosestPoint\",\"opt_closestPoint\",\"NaN\",\"intersectsCoordinate\",\"computeExtent\",\"returnOrUpdate\",\"anchor\",\"scale\",\"opt_sy\",\"opt_anchor\",\"simplify\",\"tolerance\",\"getSimplifiedGeometry\",\"squaredTolerance\",\"getType\",\"applyTransform\",\"intersectsExtent\",\"translate\",\"deltaX\",\"deltaY\",\"sourceProj\",\"inCoordinates\",\"outCoordinates\",\"pixelExtent\",\"projectedExtent\",\"SimpleGeometry_extends\",\"getStrideForLayout\",\"layout\",\"geom_SimpleGeometry\",\"SimpleGeometry\",\"getCoordinates\",\"getFirstCoordinate\",\"getFlatCoordinates\",\"getLastCoordinate\",\"getLayout\",\"simplifiedGeometry\",\"getSimplifiedGeometryInternal\",\"getStride\",\"setFlatCoordinates\",\"setCoordinates\",\"opt_layout\",\"setLayout\",\"nesting\",\"getLayoutForStride\",\"anchorX\",\"anchorY\",\"k\",\"transform_rotate\",\"transform_scale\",\"area_linearRing\",\"twiceArea\",\"area_linearRings\",\"ends\",\"assignClosest\",\"offset1\",\"offset2\",\"maxSquaredDelta\",\"squaredDelta\",\"arrayMaxSquaredDelta\",\"assignClosestPoint\",\"maxDelta\",\"isRing\",\"opt_tmpPoint\",\"squaredDistance\",\"tmpPoint\",\"assignClosestArrayPoint\",\"deflateCoordinates\",\"deflateCoordinatesArray\",\"coordinatess\",\"opt_ends\",\"jj\",\"inflateCoordinates\",\"opt_coordinates\",\"inflateCoordinatesArray\",\"opt_coordinatess\",\"douglasPeucker\",\"simplifiedFlatCoordinates\",\"simplifiedOffset\",\"markers\",\"stack\",\"last\",\"first\",\"maxSquaredDistance\",\"squaredDistance_1\",\"snap\",\"round\",\"quantize\",\"quantizeArray\",\"simplifiedEnds\",\"LinearRing_extends\",\"geom_LinearRing\",\"LinearRing\",\"maxDelta_\",\"maxDeltaRevision_\",\"Point_extends\",\"geom_Point\",\"Point\",\"deflateCoordinate\",\"linearRingContainsExtent\",\"callback\",\"val\",\"forEachCorner\",\"linearRingContainsXY\",\"wn\",\"linearRingsContainsXY\",\"getInteriorPointOfArray\",\"flatCenters\",\"flatCentersOffset\",\"intersections\",\"rr\",\"pointX\",\"maxSegmentLength\",\"sort\",\"segmentLength\",\"isNaN\",\"intersectsLineString\",\"coordinatesExtent\",\"ret\",\"point1\",\"point2\",\"start\",\"intersects\",\"startRel\",\"endRel\",\"startX\",\"startY\",\"endX\",\"endY\",\"slope\",\"intersectsSegment\",\"intersectsLinearRingArray\",\"intersectsLinearRing\",\"reverse_coordinates\",\"tmp\",\"linearRingIsClockwise\",\"edge\",\"linearRingsAreOriented\",\"opt_right\",\"right\",\"isClockwise\",\"orientLinearRings\",\"Polygon_extends\",\"Polygon_Polygon\",\"Polygon\",\"ends_\",\"flatInteriorPointRevision_\",\"flatInteriorPoint_\",\"orientedRevision_\",\"orientedFlatCoordinates_\",\"appendLinearRing\",\"linearRing\",\"getOrientedFlatCoordinates\",\"getEnds\",\"getFlatInteriorPoint\",\"flatCenter\",\"getInteriorPoint\",\"getLinearRingCount\",\"getLinearRing\",\"getLinearRings\",\"linearRings\",\"geom_Polygon\",\"fromExtent\",\"View_extends\",\"DEFAULT_MIN_ZOOM\",\"animationCallback\",\"returnValue\",\"isNoopAnimation\",\"animation\",\"sourceCenter\",\"targetCenter\",\"sourceResolution\",\"targetResolution\",\"sourceRotation\",\"targetRotation\",\"ol_View\",\"View\",\"hints_\",\"animations_\",\"updateAnimationKey_\",\"projection_\",\"targetCenter_\",\"targetResolution_\",\"targetRotation_\",\"applyOptions_\",\"resolutionConstraintInfo\",\"resolutionConstraint\",\"minZoom\",\"maxZoom\",\"zoomFactor\",\"multiWorld\",\"smooth\",\"smoothResolutionConstraint\",\"resolutions\",\"constrainResolution\",\"capped\",\"z\",\"floor\",\"createSnapToResolutions\",\"constrainOnlyCenter\",\"defaultMaxResolution\",\"defaultMinResolution\",\"power\",\"opt_minResolution\",\"zoomLevel\",\"createSnapToPower\",\"extent_1\",\"constraint\",\"createResolutionConstraint\",\"maxResolution_\",\"minResolution_\",\"zoomFactor_\",\"resolutions_\",\"minZoom_\",\"centerConstraint\",\"onlyCenter\",\"smoothExtentConstraint\",\"viewWidth\",\"viewHeight\",\"ratio\",\"createCenterConstraint\",\"rotationConstraint\",\"enableRotation\",\"constrainRotation\",\"opt_tolerance\",\"theta\",\"createRotationConstraint\",\"constraints_\",\"setRotation\",\"setCenter\",\"setResolution\",\"zoom\",\"setZoom\",\"resolveConstraints\",\"options_\",\"getUpdatedOptions_\",\"newOptions\",\"getResolution\",\"getZoom\",\"getRotation\",\"animate\",\"var_args\",\"isDef\",\"getAnimating\",\"animate_\",\"animationCount\",\"Date\",\"now\",\"series\",\"complete\",\"duration\",\"easing\",\"getResolutionForZoom\",\"delta\",\"setHint\",\"updateAnimations_\",\"getInteracting\",\"cancelAnimations\",\"cancelAnimationFrame\",\"more\",\"seriesComplete\",\"elapsed\",\"fraction\",\"progress\",\"getSizeFromViewport_\",\"constrainedResolution\",\"calculateCenterZoom\",\"applyTargetState_\",\"constrainedRotation\",\"calculateCenterRotate\",\"requestAnimationFrame\",\"currentCenter\",\"currentResolution\",\"opt_rotation\",\"selector\",\"metrics\",\"getComputedStyle\",\"parseInt\",\"w\",\"h\",\"getConstraints\",\"getHints\",\"opt_hints\",\"calculateExtent\",\"opt_size\",\"getMaxResolution\",\"getMinResolution\",\"getMaxZoom\",\"getZoomForResolution\",\"setMaxZoom\",\"getMinZoom\",\"setMinZoom\",\"setConstrainResolution\",\"enabled\",\"getProjection\",\"getResolutions\",\"getResolutionForExtent\",\"getResolutionForValueFunction\",\"opt_power\",\"getValueForResolutionFunction\",\"pixelRatio\",\"nearest\",\"baseLevel\",\"fit\",\"geometryOrExtent\",\"geometry\",\"padding\",\"coords\",\"minRotX\",\"minRotY\",\"maxRotX\",\"maxRotY\",\"rotX\",\"rotY\",\"getConstrainedResolution\",\"centerRotX\",\"centerRotY\",\"getConstrainedCenter\",\"centerOn\",\"position\",\"centerX\",\"centerY\",\"adjustCenter\",\"deltaCoordinates\",\"adjustResolution\",\"isMoving\",\"newResolution\",\"adjustZoom\",\"adjustRotation\",\"newRotation\",\"hint\",\"opt_doNotCancelAnims\",\"opt_forceMoving\",\"newCenter\",\"opt_duration\",\"opt_resolutionDirection\",\"beginInteraction\",\"endInteraction\",\"opt_targetResolution\",\"getConstrainedZoom\",\"targetZoom\",\"opt_direction\",\"targetRes\",\"createCanvasContext2D\",\"opt_width\",\"opt_height\",\"canvas\",\"getContext\",\"replaceNode\",\"newNode\",\"oldNode\",\"replaceChild\",\"removeNode\",\"node\",\"layer_Property\",\"OPACITY\",\"VISIBLE\",\"Z_INDEX\",\"MAX_RESOLUTION\",\"MIN_RESOLUTION\",\"SOURCE\",\"Base_extends\",\"Base\",\"BaseLayer\",\"properties\",\"opacity\",\"visible\",\"zIndex\",\"className_\",\"className\",\"state_\",\"getClassName\",\"getLayerState\",\"layer\",\"managed\",\"getOpacity\",\"sourceState\",\"getSourceState\",\"getVisible\",\"getZIndex\",\"getLayersArray\",\"getLayerStatesArray\",\"opt_states\",\"setMaxResolution\",\"setMinResolution\",\"setOpacity\",\"setVisible\",\"setZIndex\",\"zindex\",\"State\",\"UNDEFINED\",\"READY\",\"Group_extends\",\"Group_Property\",\"LAYERS\",\"Group\",\"LayerGroup\",\"baseOptions\",\"layers\",\"layersListenerKeys_\",\"listenerKeys_\",\"handleLayersChanged_\",\"setLayers\",\"handleLayerChange_\",\"getLayers\",\"handleLayersAdd_\",\"handleLayersRemove_\",\"layersArray\",\"collectionEvent\",\"states\",\"pos\",\"ownLayerState\",\"layerState\",\"toSize\",\"PluggableMap_extends\",\"ol_PluggableMap\",\"PluggableMap\",\"optionsInternal\",\"keyboardEventTarget\",\"getElementById\",\"controls\",\"interactions\",\"overlays\",\"layerGroup\",\"createOptionsInternal\",\"maxTilesLoading_\",\"maxTilesLoading\",\"pixelRatio_\",\"animationDelayKey_\",\"animationDelay_\",\"renderFrame_\",\"coordinateToPixelTransform_\",\"pixelToCoordinateTransform_\",\"frameIndex_\",\"frameState_\",\"previousExtent_\",\"viewPropertyListenerKey_\",\"viewChangeListenerKey_\",\"layerGroupPropertyListenerKeys_\",\"viewport_\",\"overflow\",\"msTouchAction\",\"touchAction\",\"overlayContainer_\",\"overlayContainerStopEvent_\",\"mapBrowserEventHandler_\",\"handleMapBrowserEvent\",\"keyboardEventTarget_\",\"keyHandlerKeys_\",\"handleBrowserEvent\",\"overlays_\",\"overlayIdIndex_\",\"renderer_\",\"createRenderer\",\"handleResize_\",\"focus_\",\"postRenderFunctions_\",\"tileQueue_\",\"getTilePriority\",\"handleTileChange_\",\"skippedFeatureUids_\",\"handleLayerGroupChanged_\",\"handleViewChanged_\",\"handleSizeChanged_\",\"handleTargetChanged_\",\"control\",\"setMap\",\"interaction\",\"addOverlayInternal_\",\"getId\",\"addControl\",\"getControls\",\"addInteraction\",\"getInteractions\",\"addLayer\",\"getLayerGroup\",\"addOverlay\",\"overlay\",\"getOverlays\",\"setTarget\",\"forEachFeatureAtPixel\",\"hitTolerance\",\"layerFilter\",\"forEachFeatureAtCoordinate\",\"getFeaturesAtPixel\",\"features\",\"feature\",\"forEachLayerAtPixel\",\"hasFeatureAtPixel\",\"hasFeatureAtCoordinate\",\"getEventCoordinate\",\"viewportPosition\",\"getBoundingClientRect\",\"eventPosition\",\"left\",\"top\",\"getTarget\",\"getTargetElement\",\"pixelToCoordinateTransform\",\"getOverlayById\",\"getPixelFromCoordinate\",\"coordinateToPixelTransform\",\"getRenderer\",\"getSize\",\"getView\",\"getOverlayContainer\",\"getOverlayContainerStopEvent\",\"tileSourceKey\",\"tileCenter\",\"tileResolution\",\"wantedTiles\",\"focus\",\"mapBrowserEvent\",\"HTMLElement\",\"parentElement\",\"interactionsArray\",\"getActive\",\"handleEvent\",\"handlePostRender\",\"tileQueue\",\"hints\",\"viewHints\",\"lowOnFrameBudget\",\"time\",\"getLoading\",\"getSource\",\"loading\",\"dispatchRenderEvent\",\"postRenderFunctions\",\"render\",\"targetElement\",\"updateSize\",\"removeLayerRenderers\",\"handleViewPropertyChanged_\",\"isRendered\",\"renderSync\",\"removeControl\",\"removeInteraction\",\"removeLayer\",\"removeOverlay\",\"viewState\",\"previousFrameState\",\"hasArea\",\"layerStatesArray\",\"skippedFeatureUids\",\"usedTiles\",\"renderFrame\",\"setLayerGroup\",\"setSize\",\"setView\",\"skipFeature\",\"computedStyle\",\"offsetWidth\",\"parseFloat\",\"offsetHeight\",\"unskipFeature\",\"cache\",\"Control_extends\",\"control_Control\",\"Control\",\"target_\",\"listenerKeys\",\"getMap\",\"CLASS_HIDDEN\",\"CLASS_UNSELECTABLE\",\"CLASS_CONTROL\",\"CLASS_COLLAPSED\",\"getFontFamilies\",\"font\",\"family\",\"fontFamily\",\"Layer_extends\",\"visibleAtResolution\",\"layer_Layer\",\"Layer\",\"mapPrecomposeKey_\",\"mapRenderKey_\",\"sourceChangeKey_\",\"handleSourcePropertyChange_\",\"setSource\",\"handleSourceChange_\",\"layerRenderer\",\"prepareFrame\",\"renderEvent\",\"Attribution_extends\",\"Attribution_render\",\"mapEvent\",\"updateElement_\",\"control_Attribution\",\"Attribution\",\"ulElement_\",\"collapsed_\",\"collapsed\",\"overrideCollapsible_\",\"collapsible\",\"collapsible_\",\"tipLabel\",\"collapseLabel\",\"collapseLabel_\",\"textContent\",\"label\",\"label_\",\"activeLabel\",\"title\",\"handleClick_\",\"cssClasses\",\"renderedAttributions_\",\"renderedVisible_\",\"collectSourceAttributions_\",\"lookup\",\"visibleAttributions\",\"attributionGetter\",\"getAttributions\",\"attributions\",\"getAttributionsCollapsible\",\"setCollapsible\",\"display\",\"arr1\",\"arr2\",\"len1\",\"lastChild\",\"removeChildren\",\"innerHTML\",\"handleToggle_\",\"classList\",\"toggle\",\"getCollapsible\",\"setCollapsed\",\"getCollapsed\",\"Rotate_extends\",\"Rotate_render\",\"rotation_\",\"autoHide_\",\"add\",\"control_Rotate\",\"Rotate\",\"callResetNorth_\",\"resetNorth\",\"duration_\",\"autoHide\",\"resetNorth_\",\"Zoom_extends\",\"control_Zoom\",\"Zoom\",\"zoomInLabel\",\"zoomOutLabel\",\"zoomInTipLabel\",\"zoomOutTipLabel\",\"inElement\",\"outElement\",\"zoomByDelta_\",\"currentZoom\",\"newZoom\",\"ol_Kinetic\",\"Kinetic\",\"decay\",\"minVelocity\",\"delay\",\"decay_\",\"minVelocity_\",\"delay_\",\"points_\",\"angle_\",\"initialVelocity_\",\"begin\",\"lastIndex\",\"firstIndex\",\"getAngle\",\"interaction_Property\",\"Interaction_extends\",\"zoomByDelta\",\"interaction_Interaction\",\"Interaction\",\"setActive\",\"active\",\"DoubleClickZoom_extends\",\"stopEvent\",\"delta_\",\"interaction_DoubleClickZoom\",\"DoubleClickZoom\",\"altShiftKeysOnly\",\"condition_focus\",\"activeElement\",\"always\",\"mouseActionButton\",\"noModifierKeys\",\"shiftKeyOnly\",\"targetNotEditable\",\"tagName\",\"mouseOnly\",\"Pointer_extends\",\"Pointer_centroid\",\"pointerEvents\",\"Pointer\",\"PointerInteraction\",\"handleDownEvent\",\"handleDragEvent\",\"handleMoveEvent\",\"handleUpEvent\",\"stopDown\",\"handlingDownUpSequence\",\"trackedPointers_\",\"targetPointers\",\"updateTrackedPointers_\",\"handledUp\",\"handled\",\"isPointerDraggingEvent\",\"event_1\",\"DragPan_extends\",\"interaction_DragPan\",\"DragPan\",\"kinetic_\",\"kinetic\",\"lastCentroid\",\"lastPointersCount_\",\"panning_\",\"condition_\",\"condition\",\"noKinetic_\",\"centroid\",\"distance\",\"centerpx\",\"DragRotate_extends\",\"interaction_DragRotate\",\"DragRotate\",\"lastAngle_\",\"Box_extends\",\"Box\",\"RenderBox\",\"geometry_\",\"startPixel_\",\"endPixel_\",\"render_\",\"startPixel\",\"endPixel\",\"setPixels\",\"createOrUpdateGeometry\",\"getGeometry\",\"DragBox_extends\",\"DragBoxEventType\",\"DragBoxEvent\",\"interaction_DragBox\",\"DragBox\",\"box_\",\"minArea_\",\"minArea\",\"onBoxEnd_\",\"onBoxEnd\",\"boxEndCondition_\",\"boxEndCondition\",\"defaultBoxEndCondition\",\"DragZoom_extends\",\"out_\",\"mapExtent\",\"boxPixelExtent\",\"scaleFromCenter\",\"interaction_DragZoom\",\"DragZoom\",\"KeyCode\",\"UP\",\"DOWN\",\"KeyboardPan_extends\",\"KeyboardPan_handleEvent\",\"keyCode\",\"mapUnitsDelta\",\"pixelDelta_\",\"pan\",\"interaction_KeyboardPan\",\"KeyboardPan\",\"defaultCondition_\",\"pixelDelta\",\"KeyboardZoom_extends\",\"KeyboardZoom_handleEvent\",\"charCode\",\"charCodeAt\",\"interaction_KeyboardZoom\",\"KeyboardZoom\",\"MouseWheelZoom_extends\",\"Mode\",\"interaction_MouseWheelZoom\",\"MouseWheelZoom\",\"totalDelta_\",\"lastDelta_\",\"timeout_\",\"timeout\",\"useAnchor_\",\"useAnchor\",\"lastAnchor_\",\"startTime_\",\"timeoutId_\",\"mode_\",\"trackpadEventGap_\",\"trackpadTimeoutId_\",\"trackpadDeltaPerZoom_\",\"endInteraction_\",\"sign\",\"wheelEvent\",\"deltaMode\",\"WheelEvent\",\"DOM_DELTA_PIXEL\",\"DOM_DELTA_LINE\",\"wheelDeltaY\",\"timeLeft\",\"handleWheelZoom_\",\"setMouseAnchor\",\"PinchRotate_extends\",\"interaction_PinchRotate\",\"PinchRotate\",\"pointerOptions\",\"anchor_\",\"rotating_\",\"rotationDelta_\",\"threshold_\",\"threshold\",\"rotationDelta\",\"touch0\",\"touch1\",\"PinchZoom_extends\",\"interaction_PinchZoom\",\"PinchZoom\",\"lastDistance_\",\"lastScaleDelta_\",\"scaleDelta\",\"Event_extends\",\"render_Event\",\"RenderEvent\",\"opt_inversePixelTransform\",\"opt_context\",\"opt_glContext\",\"inversePixelTransform\",\"context\",\"glContext\",\"HEX_COLOR_RE_\",\"NAMED_COLOR_RE_\",\"asString\",\"color\",\"g\",\"color_toString\",\"cacheSize\",\"normalize\",\"IconImageCache\",\"cache_\",\"cacheSize_\",\"maxCacheSize_\",\"canExpireCache\",\"expire\",\"iconImage\",\"src\",\"crossOrigin\",\"maxCacheSize\",\"shared\",\"Map_extends\",\"expireIconCache\",\"renderer_Map\",\"MapRenderer\",\"layerRenderers_\",\"layerRendererListeners_\",\"calculateMatrices2D\",\"removeLayerRendererByKey_\",\"thisArg\",\"thisArg2\",\"viewResolution\",\"translatedCoordinate\",\"projectionExtent\",\"worldWidth\",\"ceil\",\"layerStates\",\"getLayerRenderer\",\"callback_1\",\"getWrapX\",\"layerKey\",\"renderer\",\"handleLayerRendererChange_\",\"getLayerRenderers\",\"scheduleExpireIconCache\",\"scheduleRemoveUnusedLayerRenderers\",\"layerStatesMap\",\"reduce\",\"acc\",\"_loop_1\",\"this_1\",\"Composite_extends\",\"Composite\",\"CompositeMapRenderer\",\"children_\",\"children\",\"oldChildren\",\"oldChild\",\"newChild\",\"replaceChildren\",\"getDataAtPixel\",\"ol_Map_extends\",\"ol_Map\",\"Map\",\"zoomOptions\",\"rotateOptions\",\"attribution\",\"attributionOptions\",\"defaults\",\"altShiftDragRotate\",\"doubleClickZoom\",\"zoomDelta\",\"zoomDuration\",\"dragPan\",\"onFocusOnly\",\"pinchRotate\",\"pinchZoom\",\"keyboard\",\"mouseWheelZoom\",\"shiftDragZoom\",\"interaction_defaults\",\"TileProperty\",\"BaseTile_extends\",\"BaseTile\",\"BaseTileLayer\",\"preload\",\"useInterimTilesOnError\",\"setPreload\",\"setUseInterimTilesOnError\",\"getPreload\",\"getUseInterimTilesOnError\",\"TileRange\",\"tileCoord\",\"containsTileRange\",\"tileRange\",\"TileRange_createOrUpdate\",\"ol_TileRange\",\"LRUCache_extends\",\"structs_LRUCache\",\"LRUCache\",\"opt_highWaterMark\",\"highWaterMark\",\"count_\",\"entries_\",\"oldest_\",\"newest_\",\"containsKey\",\"entry\",\"value_\",\"key_\",\"newer\",\"older\",\"peekLast\",\"peekLastKey\",\"peekFirstKey\",\"LabelCache_extends\",\"labelCache\",\"LabelCache\",\"consumers\",\"consumer\",\"consumerId\",\"prune\",\"outer\",\"release\",\"checkedFonts\",\"measureContext\",\"textHeights\",\"interval\",\"referenceWidth\",\"retries\",\"checked\",\"referenceFonts\",\"text\",\"isAvailable\",\"getMeasureContext\",\"weight\",\"fontWeight\",\"available\",\"referenceFont\",\"measureText\",\"check\",\"done\",\"clearInterval\",\"div\",\"heights\",\"rotateAtOffset\",\"offsetX\",\"offsetY\",\"ImageState\",\"renderer_Layer_extends\",\"renderer_Layer\",\"LayerRenderer\",\"layer_\",\"loadedTileCallback\",\"tiles\",\"createLoadedTileFinder\",\"forEachLoadedTile\",\"getLayer\",\"handleImageChange_\",\"renderIfReadyAndVisible\",\"loadImage\",\"image\",\"imageState\",\"canvas_Layer_extends\",\"canvas_Layer\",\"CanvasLayerRenderer\",\"renderedResolution\",\"tempTransform_\",\"pixelTransform_\",\"inversePixelTransform_\",\"transformOrigin\",\"clip\",\"halfWidth\",\"halfHeight\",\"topLeft\",\"topRight\",\"bottomRight\",\"bottomLeft\",\"save\",\"beginPath\",\"moveTo\",\"lineTo\",\"clipUnrotated\",\"inverted\",\"dispatchRenderEvent_\",\"preRender\",\"postRender\",\"getRenderTransform\",\"renderPixel\",\"getImageData\",\"err\",\"Uint8Array\",\"TileLayer_extends\",\"TileLayer_CanvasTileLayerRenderer\",\"CanvasTileLayerRenderer\",\"tileLayer\",\"extentChanged\",\"renderedExtent_\",\"renderedRevision\",\"renderedTiles\",\"newTiles_\",\"tmpExtent\",\"tmpTileRange_\",\"zDirection\",\"isDrawableTile\",\"tileState\",\"getTile\",\"setState\",\"getInterimTile\",\"viewCenter\",\"tileSource\",\"sourceRevision\",\"getTileGridForProjection\",\"getZForResolution\",\"tilePixelRatio\",\"getTilePixelRatio\",\"canvasExtent\",\"getTileRangeForExtentAndZ\",\"tilesToDrawByZ\",\"findLoadedTiles\",\"tmpTileRange\",\"uid\",\"inTransition\",\"getAlpha\",\"childTileRange\",\"getTileCoordChildTileRange\",\"covered\",\"forEachTileCoordParentTileRange\",\"canvasScale\",\"clearRect\",\"zs\",\"currentZ\",\"currentTilePixelSize\",\"getTilePixelSize\",\"currentScale\",\"dx_1\",\"dy_1\",\"originTileCoord\",\"getTileCoordForCoordAndZ\",\"originTileExtent\",\"getTileCoordExtent\",\"origin_1\",\"tileGutter\",\"getGutterForProjection\",\"tilesToDraw\",\"tileCoordKey\",\"floatX\",\"nextX\",\"floatY\",\"nextY\",\"drawTileImage\",\"updateUsedTiles\",\"manageTilePyramid\",\"updateCacheSize_\",\"scheduleExpireCache\",\"restore\",\"canvasTransform\",\"gutter\",\"transition\",\"getTileImage\",\"alpha\",\"getOpaque\",\"alphaChanged\",\"globalAlpha\",\"drawImage\",\"endTransition\",\"getImage\",\"postRenderFunction\",\"expireCache\",\"tileCache\",\"opt_tileCallback\",\"getTileCoordCenter\",\"useTile\",\"canvas_TileLayer\",\"Tile_extends\",\"layer_Tile\",\"TileLayer\",\"ERROR_THRESHOLD\",\"ol_Tile_extends\",\"ol_Tile\",\"Tile\",\"interimTile\",\"transition_\",\"transitionStarts_\",\"refreshInterimChain\",\"getTileCoord\",\"ImageTile_extends\",\"getBlankImage\",\"ctx\",\"fillStyle\",\"fillRect\",\"ol_ImageTile\",\"ImageTile\",\"tileLoadFunction\",\"crossOrigin_\",\"src_\",\"image_\",\"Image\",\"imageListenerKeys_\",\"tileLoadFunction_\",\"unlistenImage_\",\"handleImageError_\",\"handleImageLoad_\",\"naturalWidth\",\"naturalHeight\",\"tilecoord_createOrUpdate\",\"opt_tileCoord\",\"getKeyZXY\",\"tilecoord_getKey\",\"TileCache_extends\",\"ol_TileCache\",\"TileCache\",\"pruneExceptNewestZ\",\"fromKey\",\"enlargeClipPoint\",\"centroidX\",\"centroidY\",\"dX\",\"dY\",\"reproj_render\",\"sourceExtent\",\"targetExtent\",\"triangulation\",\"opt_renderEdges\",\"sourceDataExtent\",\"canvasWidthInUnits\",\"canvasHeightInUnits\",\"stitchContext\",\"stitchScale\",\"xPos\",\"yPos\",\"srcWidth\",\"srcHeight\",\"targetTopLeft\",\"getTriangles\",\"triangle\",\"u0\",\"v0\",\"u1\",\"v1\",\"u2\",\"v2\",\"sourceNumericalShiftX\",\"sourceNumericalShiftY\",\"affineCoefs\",\"maxRow\",\"maxEl\",\"absValue\",\"coef\",\"solveLinearSystem\",\"p0\",\"p1\",\"p2\",\"strokeStyle\",\"lineWidth\",\"closePath\",\"stroke\",\"MAX_SUBDIVISION\",\"reproj_Triangulation\",\"Triangulation\",\"targetProj\",\"maxSourceExtent\",\"errorThreshold\",\"sourceProj_\",\"targetProj_\",\"transformInvCache\",\"transformInv\",\"transformInv_\",\"maxSourceExtent_\",\"errorThresholdSquared_\",\"triangles_\",\"wrapsXInSource_\",\"canWrapXInSource_\",\"sourceWorldWidth_\",\"targetWorldWidth_\",\"destinationTopLeft\",\"destinationTopRight\",\"destinationBottomRight\",\"destinationBottomLeft\",\"sourceTopLeft\",\"sourceTopRight\",\"sourceBottomRight\",\"sourceBottomLeft\",\"addQuad_\",\"leftBound_1\",\"newTriangle\",\"addTriangle_\",\"aSrc\",\"bSrc\",\"cSrc\",\"dSrc\",\"maxSubdivision\",\"sourceQuadExtent\",\"sourceCoverageX\",\"sourceWorldWidth\",\"wrapsX\",\"needsSubdivision\",\"isFinite\",\"centerSrc\",\"bc\",\"bcSrc\",\"da\",\"daSrc\",\"ab\",\"abSrc\",\"cd\",\"cdSrc\",\"calculateSourceExtent\",\"reproj_Tile_extends\",\"reproj_Tile\",\"ReprojTile\",\"sourceTileGrid\",\"targetTileGrid\",\"wrappedTileCoord\",\"getTileFunction\",\"opt_errorThreshold\",\"renderEdges_\",\"gutter_\",\"canvas_\",\"sourceTileGrid_\",\"targetTileGrid_\",\"wrappedTileCoord_\",\"sourceTiles_\",\"sourcesListenerKeys_\",\"sourceZ_\",\"maxTargetExtent\",\"limitedTargetExtent\",\"sourceProjExtent\",\"targetMetersPerUnit\",\"sourceMetersPerUnit\",\"compensationFactor\",\"calculateSourceResolution\",\"errorThresholdInPixels\",\"triangulation_\",\"sourceRange\",\"srcX\",\"srcY\",\"unlistenSources_\",\"reproject_\",\"getTileSize\",\"leftToLoad_1\",\"sourceListenKey_1\",\"createFromTemplate\",\"template\",\"zRegEx\",\"xRegEx\",\"yRegEx\",\"dashYRegEx\",\"range\",\"getFullTileRange\",\"createFromTemplates\",\"templates\",\"tileUrlFunctions\",\"hash\",\"createFromTileUrlFunctions\",\"nullTileUrlFunction\",\"Source_extends\",\"adaptAttributions\",\"attributionLike\",\"source_Source\",\"Source\",\"attributions_\",\"attributionsCollapsible_\",\"attributionsCollapsible\",\"wrapX_\",\"wrapX\",\"refresh\",\"setAttributions\",\"tmpTileCoord\",\"tilegrid_TileGrid\",\"TileGrid\",\"opt_strict\",\"compare\",\"every\",\"currentVal\",\"res\",\"origins\",\"origin_\",\"origin\",\"origins_\",\"tileSizes_\",\"tileSizes\",\"tileSize_\",\"tileSize\",\"fullTileRanges_\",\"tmpSize_\",\"sizes\",\"calculateTileRanges_\",\"forEachTileCoord\",\"opt_tileRange\",\"tileCoordExtent\",\"getOrigin\",\"getTileRangeExtent\",\"getTileCoordForXYAndZ_\",\"getTileCoordForCoordAndResolution\",\"getTileCoordForXYAndResolution_\",\"reverseIntersectionPolicy\",\"adjustX\",\"adjustY\",\"xFromOrigin\",\"yFromOrigin\",\"tileCoordX\",\"tileCoordY\",\"getTileCoordResolution\",\"fullTileRanges\",\"getForProjection\",\"opt_maxZoom\",\"opt_tileSize\",\"opt_corner\",\"resolutionsFromExtent\",\"createForExtent\",\"extentFromProjection\",\"createForProjection\",\"half\",\"source_Tile_extends\",\"Tile_TileSource\",\"TileSource\",\"opaque_\",\"opaque\",\"tilePixelRatio_\",\"canUseScreen\",\"self\",\"screen\",\"availWidth\",\"availHeight\",\"tmpSize\",\"tileOptions\",\"getTileCacheForProjection\",\"loaded\",\"setKey\",\"getTileGrid\",\"thisProj\",\"getTileCoordForTileUrlFunction\",\"opt_projection\",\"worldsAway\",\"withinExtentAndZ\",\"TileSourceEvent\",\"source_Tile\",\"TileEventType\",\"UrlTile_extends\",\"source_UrlTile\",\"UrlTile\",\"generateTileUrlFunction_\",\"tileUrlFunction\",\"urls\",\"setUrls\",\"url\",\"setUrl\",\"tileLoadingKeys_\",\"getTileLoadFunction\",\"getTileUrlFunction\",\"getUrls\",\"setTileLoadFunction\",\"setTileUrlFunction\",\"match\",\"exec\",\"startCharCode\",\"stopCharCode\",\"fromCharCode\",\"stop_1\",\"expandUrl\",\"TileImage_extends\",\"defaultTileLoadFunction\",\"imageTile\",\"source_TileImage\",\"TileImage\",\"tileClass\",\"tileCacheForProjection\",\"tileGridForProjection\",\"reprojectionErrorThreshold_\",\"reprojectionErrorThreshold\",\"renderReprojectionEdges_\",\"usedTileCache\",\"getGutter\",\"projKey\",\"createTile_\",\"urlTileCoord\",\"tileUrl\",\"newTile\",\"getTileInternal\",\"setRenderReprojectionEdges\",\"setTileGridForProjection\",\"tilegrid\",\"proj\",\"XYZ_extends\",\"xyzOptions\",\"gridOptions\",\"createXYZ\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 14);\\n\",\"\\nvar content = require(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\");\\n\\nif(typeof content === 'string') content = [[module.id, content, '']];\\n\\nvar transform;\\nvar insertInto;\\n\\n\\n\\nvar options = {\\\"hmr\\\":true}\\n\\noptions.transform = transform\\noptions.insertInto = undefined;\\n\\nvar update = require(\\\"!../style-loader/lib/addStyles.js\\\")(content, options);\\n\\nif(content.locals) module.exports = content.locals;\\n\\nif(module.hot) {\\n\\tmodule.hot.accept(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\", function() {\\n\\t\\tvar newContent = require(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\");\\n\\n\\t\\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\\n\\n\\t\\tvar locals = (function(a, b) {\\n\\t\\t\\tvar key, idx = 0;\\n\\n\\t\\t\\tfor(key in a) {\\n\\t\\t\\t\\tif(!b || a[key] !== b[key]) return false;\\n\\t\\t\\t\\tidx++;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor(key in b) idx--;\\n\\n\\t\\t\\treturn idx === 0;\\n\\t\\t}(content.locals, newContent.locals));\\n\\n\\t\\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\\n\\n\\t\\tupdate(newContent);\\n\\t});\\n\\n\\tmodule.hot.dispose(function() { update(); });\\n}\",\"exports = module.exports = require(\\\"../css-loader/dist/runtime/api.js\\\")(false);\\n// Module\\nexports.push([module.id, \\\".ol-box {\\\\n  box-sizing: border-box;\\\\n  border-radius: 2px;\\\\n  border: 2px solid blue;\\\\n}\\\\n\\\\n.ol-mouse-position {\\\\n  top: 8px;\\\\n  right: 8px;\\\\n  position: absolute;\\\\n}\\\\n\\\\n.ol-scale-line {\\\\n  background: rgba(0,60,136,0.3);\\\\n  border-radius: 4px;\\\\n  bottom: 8px;\\\\n  left: 8px;\\\\n  padding: 2px;\\\\n  position: absolute;\\\\n}\\\\n.ol-scale-line-inner {\\\\n  border: 1px solid #eee;\\\\n  border-top: none;\\\\n  color: #eee;\\\\n  font-size: 10px;\\\\n  text-align: center;\\\\n  margin: 1px;\\\\n  will-change: contents, width;\\\\n  transition: all 0.25s;\\\\n}\\\\n.ol-scale-bar {\\\\n  position: absolute;\\\\n  bottom: 8px;\\\\n  left: 8px;\\\\n}\\\\n.ol-scale-step-marker {\\\\n  width: 1px;\\\\n  height: 15px;\\\\n  background-color: #000000;\\\\n  float: right;\\\\n  z-Index: 10;\\\\n}\\\\n.ol-scale-step-text {\\\\n  position: absolute;\\\\n  bottom: -5px;\\\\n  font-size: 12px;\\\\n  z-Index: 11;\\\\n  color: #000000;\\\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\\\n}\\\\n.ol-scale-text {\\\\n  position: absolute;\\\\n  font-size: 14px;\\\\n  text-align: center;\\\\n  bottom: 25px;\\\\n  color: #000000;\\\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\\\n}\\\\n.ol-scale-singlebar {\\\\n  position: relative;\\\\n  height: 10px;\\\\n  z-Index: 9;\\\\n  border: 1px solid black;\\\\n}\\\\n\\\\n.ol-overlay-container {\\\\n  will-change: left,right,top,bottom;\\\\n}\\\\n\\\\n.ol-unsupported {\\\\n  display: none;\\\\n}\\\\n.ol-viewport, .ol-unselectable {\\\\n  -webkit-touch-callout: none;\\\\n  -webkit-user-select: none;\\\\n  -moz-user-select: none;\\\\n  -ms-user-select: none;\\\\n  user-select: none;\\\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\\\n}\\\\n.ol-selectable {\\\\n  -webkit-touch-callout: default;\\\\n  -webkit-user-select: text;\\\\n  -moz-user-select: text;\\\\n  -ms-user-select: text;\\\\n  user-select: text;\\\\n}\\\\n.ol-grabbing {\\\\n  cursor: -webkit-grabbing;\\\\n  cursor: -moz-grabbing;\\\\n  cursor: grabbing;\\\\n}\\\\n.ol-grab {\\\\n  cursor: move;\\\\n  cursor: -webkit-grab;\\\\n  cursor: -moz-grab;\\\\n  cursor: grab;\\\\n}\\\\n.ol-control {\\\\n  position: absolute;\\\\n  background-color: rgba(255,255,255,0.4);\\\\n  border-radius: 4px;\\\\n  padding: 2px;\\\\n}\\\\n.ol-control:hover {\\\\n  background-color: rgba(255,255,255,0.6);\\\\n}\\\\n.ol-zoom {\\\\n  top: .5em;\\\\n  left: .5em;\\\\n}\\\\n.ol-rotate {\\\\n  top: .5em;\\\\n  right: .5em;\\\\n  transition: opacity .25s linear, visibility 0s linear;\\\\n}\\\\n.ol-rotate.ol-hidden {\\\\n  opacity: 0;\\\\n  visibility: hidden;\\\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\\\n}\\\\n.ol-zoom-extent {\\\\n  top: 4.643em;\\\\n  left: .5em;\\\\n}\\\\n.ol-full-screen {\\\\n  right: .5em;\\\\n  top: .5em;\\\\n}\\\\n@media print {\\\\n  .ol-control {\\\\n    display: none;\\\\n  }\\\\n}\\\\n\\\\n.ol-control button {\\\\n  display: block;\\\\n  margin: 1px;\\\\n  padding: 0;\\\\n  color: white;\\\\n  font-size: 1.14em;\\\\n  font-weight: bold;\\\\n  text-decoration: none;\\\\n  text-align: center;\\\\n  height: 1.375em;\\\\n  width: 1.375em;\\\\n  line-height: .4em;\\\\n  background-color: rgba(0,60,136,0.5);\\\\n  border: none;\\\\n  border-radius: 2px;\\\\n}\\\\n.ol-control button::-moz-focus-inner {\\\\n  border: none;\\\\n  padding: 0;\\\\n}\\\\n.ol-zoom-extent button {\\\\n  line-height: 1.4em;\\\\n}\\\\n.ol-compass {\\\\n  display: block;\\\\n  font-weight: normal;\\\\n  font-size: 1.2em;\\\\n  will-change: transform;\\\\n}\\\\n.ol-touch .ol-control button {\\\\n  font-size: 1.5em;\\\\n}\\\\n.ol-touch .ol-zoom-extent {\\\\n  top: 5.5em;\\\\n}\\\\n.ol-control button:hover,\\\\n.ol-control button:focus {\\\\n  text-decoration: none;\\\\n  background-color: rgba(0,60,136,0.7);\\\\n}\\\\n.ol-zoom .ol-zoom-in {\\\\n  border-radius: 2px 2px 0 0;\\\\n}\\\\n.ol-zoom .ol-zoom-out {\\\\n  border-radius: 0 0 2px 2px;\\\\n}\\\\n\\\\n\\\\n.ol-attribution {\\\\n  text-align: right;\\\\n  bottom: .5em;\\\\n  right: .5em;\\\\n  max-width: calc(100% - 1.3em);\\\\n}\\\\n\\\\n.ol-attribution ul {\\\\n  margin: 0;\\\\n  padding: 0 .5em;\\\\n  font-size: .7rem;\\\\n  line-height: 1.375em;\\\\n  color: #000;\\\\n  text-shadow: 0 0 2px #fff;\\\\n}\\\\n.ol-attribution li {\\\\n  display: inline;\\\\n  list-style: none;\\\\n  line-height: inherit;\\\\n}\\\\n.ol-attribution li:not(:last-child):after {\\\\n  content: \\\\\\\" \\\\\\\";\\\\n}\\\\n.ol-attribution img {\\\\n  max-height: 2em;\\\\n  max-width: inherit;\\\\n  vertical-align: middle;\\\\n}\\\\n.ol-attribution ul, .ol-attribution button {\\\\n  display: inline-block;\\\\n}\\\\n.ol-attribution.ol-collapsed ul {\\\\n  display: none;\\\\n}\\\\n.ol-attribution:not(.ol-collapsed) {\\\\n  background: rgba(255,255,255,0.8);\\\\n}\\\\n.ol-attribution.ol-uncollapsible {\\\\n  bottom: 0;\\\\n  right: 0;\\\\n  border-radius: 4px 0 0;\\\\n  height: 1.1em;\\\\n  line-height: 1em;\\\\n}\\\\n.ol-attribution.ol-uncollapsible img {\\\\n  margin-top: -.2em;\\\\n  max-height: 1.6em;\\\\n}\\\\n.ol-attribution.ol-uncollapsible button {\\\\n  display: none;\\\\n}\\\\n\\\\n.ol-zoomslider {\\\\n  top: 4.5em;\\\\n  left: .5em;\\\\n  height: 200px;\\\\n}\\\\n.ol-zoomslider button {\\\\n  position: relative;\\\\n  height: 10px;\\\\n}\\\\n\\\\n.ol-touch .ol-zoomslider {\\\\n  top: 5.5em;\\\\n}\\\\n\\\\n.ol-overviewmap {\\\\n  left: 0.5em;\\\\n  bottom: 0.5em;\\\\n}\\\\n.ol-overviewmap.ol-uncollapsible {\\\\n  bottom: 0;\\\\n  left: 0;\\\\n  border-radius: 0 4px 0 0;\\\\n}\\\\n.ol-overviewmap .ol-overviewmap-map,\\\\n.ol-overviewmap button {\\\\n  display: inline-block;\\\\n}\\\\n.ol-overviewmap .ol-overviewmap-map {\\\\n  border: 1px solid #7b98bc;\\\\n  height: 150px;\\\\n  margin: 2px;\\\\n  width: 150px;\\\\n}\\\\n.ol-overviewmap:not(.ol-collapsed) button{\\\\n  bottom: 1px;\\\\n  left: 2px;\\\\n  position: absolute;\\\\n}\\\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\\\n.ol-overviewmap.ol-uncollapsible button {\\\\n  display: none;\\\\n}\\\\n.ol-overviewmap:not(.ol-collapsed) {\\\\n  background: rgba(255,255,255,0.8);\\\\n}\\\\n.ol-overviewmap-box {\\\\n  border: 2px dotted rgba(0,60,136,0.7);\\\\n}\\\\n\\\\n.ol-overviewmap .ol-overviewmap-box:hover {\\\\n  cursor: move;\\\\n}\\\\n\\\", \\\"\\\"]);\\n\\n\",\"\\\"use strict\\\";\\n\\n/*\\n  MIT License http://www.opensource.org/licenses/mit-license.php\\n  Author Tobias Koppers @sokra\\n*/\\n// css base code, injected by the css-loader\\nmodule.exports = function (useSourceMap) {\\n  var list = []; // return the list of modules as css string\\n\\n  list.toString = function toString() {\\n    return this.map(function (item) {\\n      var content = cssWithMappingToString(item, useSourceMap);\\n\\n      if (item[2]) {\\n        return '@media ' + item[2] + '{' + content + '}';\\n      } else {\\n        return content;\\n      }\\n    }).join('');\\n  }; // import a list of modules into the list\\n\\n\\n  list.i = function (modules, mediaQuery) {\\n    if (typeof modules === 'string') {\\n      modules = [[null, modules, '']];\\n    }\\n\\n    var alreadyImportedModules = {};\\n\\n    for (var i = 0; i < this.length; i++) {\\n      var id = this[i][0];\\n\\n      if (id != null) {\\n        alreadyImportedModules[id] = true;\\n      }\\n    }\\n\\n    for (i = 0; i < modules.length; i++) {\\n      var item = modules[i]; // skip already imported module\\n      // this implementation is not 100% perfect for weird media query combinations\\n      // when a module is imported multiple times with different media queries.\\n      // I hope this will never occur (Hey this way we have smaller bundles)\\n\\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\\n        if (mediaQuery && !item[2]) {\\n          item[2] = mediaQuery;\\n        } else if (mediaQuery) {\\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\\n        }\\n\\n        list.push(item);\\n      }\\n    }\\n  };\\n\\n  return list;\\n};\\n\\nfunction cssWithMappingToString(item, useSourceMap) {\\n  var content = item[1] || '';\\n  var cssMapping = item[3];\\n\\n  if (!cssMapping) {\\n    return content;\\n  }\\n\\n  if (useSourceMap && typeof btoa === 'function') {\\n    var sourceMapping = toComment(cssMapping);\\n    var sourceURLs = cssMapping.sources.map(function (source) {\\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\\n    });\\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\\\n');\\n  }\\n\\n  return [content].join('\\\\n');\\n} // Adapted from convert-source-map (MIT)\\n\\n\\nfunction toComment(sourceMap) {\\n  // eslint-disable-next-line no-undef\\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\\n  return '/*# ' + data + ' */';\\n}\",\"/*\\n\\tMIT License http://www.opensource.org/licenses/mit-license.php\\n\\tAuthor Tobias Koppers @sokra\\n*/\\n\\nvar stylesInDom = {};\\n\\nvar\\tmemoize = function (fn) {\\n\\tvar memo;\\n\\n\\treturn function () {\\n\\t\\tif (typeof memo === \\\"undefined\\\") memo = fn.apply(this, arguments);\\n\\t\\treturn memo;\\n\\t};\\n};\\n\\nvar isOldIE = memoize(function () {\\n\\t// Test for IE <= 9 as proposed by Browserhacks\\n\\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\\n\\t// Tests for existence of standard globals is to allow style-loader\\n\\t// to operate correctly into non-standard environments\\n\\t// @see https://github.com/webpack-contrib/style-loader/issues/177\\n\\treturn window && document && document.all && !window.atob;\\n});\\n\\nvar getTarget = function (target, parent) {\\n  if (parent){\\n    return parent.querySelector(target);\\n  }\\n  return document.querySelector(target);\\n};\\n\\nvar getElement = (function (fn) {\\n\\tvar memo = {};\\n\\n\\treturn function(target, parent) {\\n                // If passing function in options, then use it for resolve \\\"head\\\" element.\\n                // Useful for Shadow Root style i.e\\n                // {\\n                //   insertInto: function () { return document.querySelector(\\\"#foo\\\").shadowRoot }\\n                // }\\n                if (typeof target === 'function') {\\n                        return target();\\n                }\\n                if (typeof memo[target] === \\\"undefined\\\") {\\n\\t\\t\\tvar styleTarget = getTarget.call(this, target, parent);\\n\\t\\t\\t// Special case to return head of iframe instead of iframe itself\\n\\t\\t\\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t// This will throw an exception if access to iframe is blocked\\n\\t\\t\\t\\t\\t// due to cross-origin restrictions\\n\\t\\t\\t\\t\\tstyleTarget = styleTarget.contentDocument.head;\\n\\t\\t\\t\\t} catch(e) {\\n\\t\\t\\t\\t\\tstyleTarget = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tmemo[target] = styleTarget;\\n\\t\\t}\\n\\t\\treturn memo[target]\\n\\t};\\n})();\\n\\nvar singleton = null;\\nvar\\tsingletonCounter = 0;\\nvar\\tstylesInsertedAtTop = [];\\n\\nvar\\tfixUrls = require(\\\"./urls\\\");\\n\\nmodule.exports = function(list, options) {\\n\\tif (typeof DEBUG !== \\\"undefined\\\" && DEBUG) {\\n\\t\\tif (typeof document !== \\\"object\\\") throw new Error(\\\"The style-loader cannot be used in a non-browser environment\\\");\\n\\t}\\n\\n\\toptions = options || {};\\n\\n\\toptions.attrs = typeof options.attrs === \\\"object\\\" ? options.attrs : {};\\n\\n\\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\\n\\t// tags it will allow on a page\\n\\tif (!options.singleton && typeof options.singleton !== \\\"boolean\\\") options.singleton = isOldIE();\\n\\n\\t// By default, add <style> tags to the <head> element\\n        if (!options.insertInto) options.insertInto = \\\"head\\\";\\n\\n\\t// By default, add <style> tags to the bottom of the target\\n\\tif (!options.insertAt) options.insertAt = \\\"bottom\\\";\\n\\n\\tvar styles = listToStyles(list, options);\\n\\n\\taddStylesToDom(styles, options);\\n\\n\\treturn function update (newList) {\\n\\t\\tvar mayRemove = [];\\n\\n\\t\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\t\\tvar item = styles[i];\\n\\t\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\t\\tdomStyle.refs--;\\n\\t\\t\\tmayRemove.push(domStyle);\\n\\t\\t}\\n\\n\\t\\tif(newList) {\\n\\t\\t\\tvar newStyles = listToStyles(newList, options);\\n\\t\\t\\taddStylesToDom(newStyles, options);\\n\\t\\t}\\n\\n\\t\\tfor (var i = 0; i < mayRemove.length; i++) {\\n\\t\\t\\tvar domStyle = mayRemove[i];\\n\\n\\t\\t\\tif(domStyle.refs === 0) {\\n\\t\\t\\t\\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\\n\\n\\t\\t\\t\\tdelete stylesInDom[domStyle.id];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nfunction addStylesToDom (styles, options) {\\n\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\tvar item = styles[i];\\n\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\tif(domStyle) {\\n\\t\\t\\tdomStyle.refs++;\\n\\n\\t\\t\\tfor(var j = 0; j < domStyle.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts[j](item.parts[j]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor(; j < item.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvar parts = [];\\n\\n\\t\\t\\tfor(var j = 0; j < item.parts.length; j++) {\\n\\t\\t\\t\\tparts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\n\\t\\t\\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction listToStyles (list, options) {\\n\\tvar styles = [];\\n\\tvar newStyles = {};\\n\\n\\tfor (var i = 0; i < list.length; i++) {\\n\\t\\tvar item = list[i];\\n\\t\\tvar id = options.base ? item[0] + options.base : item[0];\\n\\t\\tvar css = item[1];\\n\\t\\tvar media = item[2];\\n\\t\\tvar sourceMap = item[3];\\n\\t\\tvar part = {css: css, media: media, sourceMap: sourceMap};\\n\\n\\t\\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\\n\\t\\telse newStyles[id].parts.push(part);\\n\\t}\\n\\n\\treturn styles;\\n}\\n\\nfunction insertStyleElement (options, style) {\\n\\tvar target = getElement(options.insertInto)\\n\\n\\tif (!target) {\\n\\t\\tthrow new Error(\\\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\\\");\\n\\t}\\n\\n\\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\\n\\n\\tif (options.insertAt === \\\"top\\\") {\\n\\t\\tif (!lastStyleElementInsertedAtTop) {\\n\\t\\t\\ttarget.insertBefore(style, target.firstChild);\\n\\t\\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\\n\\t\\t\\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\\n\\t\\t} else {\\n\\t\\t\\ttarget.appendChild(style);\\n\\t\\t}\\n\\t\\tstylesInsertedAtTop.push(style);\\n\\t} else if (options.insertAt === \\\"bottom\\\") {\\n\\t\\ttarget.appendChild(style);\\n\\t} else if (typeof options.insertAt === \\\"object\\\" && options.insertAt.before) {\\n\\t\\tvar nextSibling = getElement(options.insertAt.before, target);\\n\\t\\ttarget.insertBefore(style, nextSibling);\\n\\t} else {\\n\\t\\tthrow new Error(\\\"[Style Loader]\\\\n\\\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\\\n Must be 'top', 'bottom', or Object.\\\\n (https://github.com/webpack-contrib/style-loader#insertat)\\\\n\\\");\\n\\t}\\n}\\n\\nfunction removeStyleElement (style) {\\n\\tif (style.parentNode === null) return false;\\n\\tstyle.parentNode.removeChild(style);\\n\\n\\tvar idx = stylesInsertedAtTop.indexOf(style);\\n\\tif(idx >= 0) {\\n\\t\\tstylesInsertedAtTop.splice(idx, 1);\\n\\t}\\n}\\n\\nfunction createStyleElement (options) {\\n\\tvar style = document.createElement(\\\"style\\\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \\\"text/css\\\";\\n\\t}\\n\\n\\tif(options.attrs.nonce === undefined) {\\n\\t\\tvar nonce = getNonce();\\n\\t\\tif (nonce) {\\n\\t\\t\\toptions.attrs.nonce = nonce;\\n\\t\\t}\\n\\t}\\n\\n\\taddAttrs(style, options.attrs);\\n\\tinsertStyleElement(options, style);\\n\\n\\treturn style;\\n}\\n\\nfunction createLinkElement (options) {\\n\\tvar link = document.createElement(\\\"link\\\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \\\"text/css\\\";\\n\\t}\\n\\toptions.attrs.rel = \\\"stylesheet\\\";\\n\\n\\taddAttrs(link, options.attrs);\\n\\tinsertStyleElement(options, link);\\n\\n\\treturn link;\\n}\\n\\nfunction addAttrs (el, attrs) {\\n\\tObject.keys(attrs).forEach(function (key) {\\n\\t\\tel.setAttribute(key, attrs[key]);\\n\\t});\\n}\\n\\nfunction getNonce() {\\n\\tif (typeof __webpack_nonce__ === 'undefined') {\\n\\t\\treturn null;\\n\\t}\\n\\n\\treturn __webpack_nonce__;\\n}\\n\\nfunction addStyle (obj, options) {\\n\\tvar style, update, remove, result;\\n\\n\\t// If a transform function was defined, run it on the css\\n\\tif (options.transform && obj.css) {\\n\\t    result = typeof options.transform === 'function'\\n\\t\\t ? options.transform(obj.css) \\n\\t\\t : options.transform.default(obj.css);\\n\\n\\t    if (result) {\\n\\t    \\t// If transform returns a value, use that instead of the original css.\\n\\t    \\t// This allows running runtime transformations on the css.\\n\\t    \\tobj.css = result;\\n\\t    } else {\\n\\t    \\t// If the transform function returns a falsy value, don't add this css.\\n\\t    \\t// This allows conditional loading of css\\n\\t    \\treturn function() {\\n\\t    \\t\\t// noop\\n\\t    \\t};\\n\\t    }\\n\\t}\\n\\n\\tif (options.singleton) {\\n\\t\\tvar styleIndex = singletonCounter++;\\n\\n\\t\\tstyle = singleton || (singleton = createStyleElement(options));\\n\\n\\t\\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\\n\\t\\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\\n\\n\\t} else if (\\n\\t\\tobj.sourceMap &&\\n\\t\\ttypeof URL === \\\"function\\\" &&\\n\\t\\ttypeof URL.createObjectURL === \\\"function\\\" &&\\n\\t\\ttypeof URL.revokeObjectURL === \\\"function\\\" &&\\n\\t\\ttypeof Blob === \\\"function\\\" &&\\n\\t\\ttypeof btoa === \\\"function\\\"\\n\\t) {\\n\\t\\tstyle = createLinkElement(options);\\n\\t\\tupdate = updateLink.bind(null, style, options);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\n\\t\\t\\tif(style.href) URL.revokeObjectURL(style.href);\\n\\t\\t};\\n\\t} else {\\n\\t\\tstyle = createStyleElement(options);\\n\\t\\tupdate = applyToTag.bind(null, style);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\t\\t};\\n\\t}\\n\\n\\tupdate(obj);\\n\\n\\treturn function updateStyle (newObj) {\\n\\t\\tif (newObj) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\tnewObj.css === obj.css &&\\n\\t\\t\\t\\tnewObj.media === obj.media &&\\n\\t\\t\\t\\tnewObj.sourceMap === obj.sourceMap\\n\\t\\t\\t) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tupdate(obj = newObj);\\n\\t\\t} else {\\n\\t\\t\\tremove();\\n\\t\\t}\\n\\t};\\n}\\n\\nvar replaceText = (function () {\\n\\tvar textStore = [];\\n\\n\\treturn function (index, replacement) {\\n\\t\\ttextStore[index] = replacement;\\n\\n\\t\\treturn textStore.filter(Boolean).join('\\\\n');\\n\\t};\\n})();\\n\\nfunction applyToSingletonTag (style, index, remove, obj) {\\n\\tvar css = remove ? \\\"\\\" : obj.css;\\n\\n\\tif (style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = replaceText(index, css);\\n\\t} else {\\n\\t\\tvar cssNode = document.createTextNode(css);\\n\\t\\tvar childNodes = style.childNodes;\\n\\n\\t\\tif (childNodes[index]) style.removeChild(childNodes[index]);\\n\\n\\t\\tif (childNodes.length) {\\n\\t\\t\\tstyle.insertBefore(cssNode, childNodes[index]);\\n\\t\\t} else {\\n\\t\\t\\tstyle.appendChild(cssNode);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction applyToTag (style, obj) {\\n\\tvar css = obj.css;\\n\\tvar media = obj.media;\\n\\n\\tif(media) {\\n\\t\\tstyle.setAttribute(\\\"media\\\", media)\\n\\t}\\n\\n\\tif(style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = css;\\n\\t} else {\\n\\t\\twhile(style.firstChild) {\\n\\t\\t\\tstyle.removeChild(style.firstChild);\\n\\t\\t}\\n\\n\\t\\tstyle.appendChild(document.createTextNode(css));\\n\\t}\\n}\\n\\nfunction updateLink (link, options, obj) {\\n\\tvar css = obj.css;\\n\\tvar sourceMap = obj.sourceMap;\\n\\n\\t/*\\n\\t\\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\\n\\t\\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\\n\\t\\ton by default.  Otherwise default to the convertToAbsoluteUrls option\\n\\t\\tdirectly\\n\\t*/\\n\\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\\n\\n\\tif (options.convertToAbsoluteUrls || autoFixUrls) {\\n\\t\\tcss = fixUrls(css);\\n\\t}\\n\\n\\tif (sourceMap) {\\n\\t\\t// http://stackoverflow.com/a/26603875\\n\\t\\tcss += \\\"\\\\n/*# sourceMappingURL=data:application/json;base64,\\\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \\\" */\\\";\\n\\t}\\n\\n\\tvar blob = new Blob([css], { type: \\\"text/css\\\" });\\n\\n\\tvar oldSrc = link.href;\\n\\n\\tlink.href = URL.createObjectURL(blob);\\n\\n\\tif(oldSrc) URL.revokeObjectURL(oldSrc);\\n}\\n\",\"\\n/**\\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\\n * embed the css on the page. This breaks all relative urls because now they are relative to a\\n * bundle instead of the current page.\\n *\\n * One solution is to only use full urls, but that may be impossible.\\n *\\n * Instead, this function \\\"fixes\\\" the relative urls to be absolute according to the current page location.\\n *\\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\\n *\\n */\\n\\nmodule.exports = function (css) {\\n  // get current location\\n  var location = typeof window !== \\\"undefined\\\" && window.location;\\n\\n  if (!location) {\\n    throw new Error(\\\"fixUrls requires window.location\\\");\\n  }\\n\\n\\t// blank or null?\\n\\tif (!css || typeof css !== \\\"string\\\") {\\n\\t  return css;\\n  }\\n\\n  var baseUrl = location.protocol + \\\"//\\\" + location.host;\\n  var currentDir = baseUrl + location.pathname.replace(/\\\\/[^\\\\/]*$/, \\\"/\\\");\\n\\n\\t// convert each url(...)\\n\\t/*\\n\\tThis regular expression is just a way to recursively match brackets within\\n\\ta string.\\n\\n\\t /url\\\\s*\\\\(  = Match on the word \\\"url\\\" with any whitespace after it and then a parens\\n\\t   (  = Start a capturing group\\n\\t     (?:  = Start a non-capturing group\\n\\t         [^)(]  = Match anything that isn't a parentheses\\n\\t         |  = OR\\n\\t         \\\\(  = Match a start parentheses\\n\\t             (?:  = Start another non-capturing groups\\n\\t                 [^)(]+  = Match anything that isn't a parentheses\\n\\t                 |  = OR\\n\\t                 \\\\(  = Match a start parentheses\\n\\t                     [^)(]*  = Match anything that isn't a parentheses\\n\\t                 \\\\)  = Match a end parentheses\\n\\t             )  = End Group\\n              *\\\\) = Match anything and then a close parens\\n          )  = Close non-capturing group\\n          *  = Match anything\\n       )  = Close capturing group\\n\\t \\\\)  = Match a close parens\\n\\n\\t /gi  = Get all matches, not the first.  Be case insensitive.\\n\\t */\\n\\tvar fixedCss = css.replace(/url\\\\s*\\\\(((?:[^)(]|\\\\((?:[^)(]+|\\\\([^)(]*\\\\))*\\\\))*)\\\\)/gi, function(fullMatch, origUrl) {\\n\\t\\t// strip quotes (if they exist)\\n\\t\\tvar unquotedOrigUrl = origUrl\\n\\t\\t\\t.trim()\\n\\t\\t\\t.replace(/^\\\"(.*)\\\"$/, function(o, $1){ return $1; })\\n\\t\\t\\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\\n\\n\\t\\t// already a full url? no change\\n\\t\\tif (/^(#|data:|http:\\\\/\\\\/|https:\\\\/\\\\/|file:\\\\/\\\\/\\\\/|\\\\s*$)/i.test(unquotedOrigUrl)) {\\n\\t\\t  return fullMatch;\\n\\t\\t}\\n\\n\\t\\t// convert the url to a full url\\n\\t\\tvar newUrl;\\n\\n\\t\\tif (unquotedOrigUrl.indexOf(\\\"//\\\") === 0) {\\n\\t\\t  \\t//TODO: should we add protocol?\\n\\t\\t\\tnewUrl = unquotedOrigUrl;\\n\\t\\t} else if (unquotedOrigUrl.indexOf(\\\"/\\\") === 0) {\\n\\t\\t\\t// path should be relative to the base url\\n\\t\\t\\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\\n\\t\\t} else {\\n\\t\\t\\t// path should be relative to current directory\\n\\t\\t\\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\\\.\\\\//, \\\"\\\"); // Strip leading './'\\n\\t\\t}\\n\\n\\t\\t// send back the fixed url(...)\\n\\t\\treturn \\\"url(\\\" + JSON.stringify(newUrl) + \\\")\\\";\\n\\t});\\n\\n\\t// send back the fixed css\\n\\treturn fixedCss;\\n};\\n\",\"/**\\n * @module ol/util\\n */\\n/**\\n * @return {?} Any return.\\n */\\nexport function abstract() {\\n    return /** @type {?} */ ((function () {\\n        throw new Error('Unimplemented abstract method.');\\n    })());\\n}\\n/**\\n * Counter for getUid.\\n * @type {number}\\n * @private\\n */\\nvar uidCounter_ = 0;\\n/**\\n * Gets a unique ID for an object. This mutates the object so that further calls\\n * with the same object as a parameter returns the same value. Unique IDs are generated\\n * as a strictly increasing sequence. Adapted from goog.getUid.\\n *\\n * @param {Object} obj The object to get the unique ID for.\\n * @return {string} The unique ID for the object.\\n * @function module:ol.getUid\\n * @api\\n */\\nexport function getUid(obj) {\\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\\n}\\n/**\\n * OpenLayers version.\\n * @type {string}\\n */\\nexport var VERSION = '6.0.0-beta.6';\\n//# sourceMappingURL=util.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/AssertionError\\n */\\nimport { VERSION } from './util.js';\\n/**\\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\\n * extended with a `code` property.\\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\\n */\\nvar AssertionError = /** @class */ (function (_super) {\\n    __extends(AssertionError, _super);\\n    /**\\n     * @param {number} code Error code.\\n     */\\n    function AssertionError(code) {\\n        var _this = this;\\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\\n            '/doc/errors/#' + code + ' for details.';\\n        _this = _super.call(this, message) || this;\\n        /**\\n         * Error code. The meaning of the code can be found on\\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\\n         * the version found in the OpenLayers script's header comment if a version\\n         * other than the latest is used).\\n         * @type {number}\\n         * @api\\n         */\\n        _this.code = code;\\n        /**\\n         * @type {string}\\n         */\\n        _this.name = 'AssertionError';\\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\\n        _this.message = message;\\n        return _this;\\n    }\\n    return AssertionError;\\n}(Error));\\nexport default AssertionError;\\n//# sourceMappingURL=AssertionError.js.map\",\"/**\\n * @module ol/CollectionEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when an item is added to the collection.\\n     * @event module:ol/Collection.CollectionEvent#add\\n     * @api\\n     */\\n    ADD: 'add',\\n    /**\\n     * Triggered when an item is removed from the collection.\\n     * @event module:ol/Collection.CollectionEvent#remove\\n     * @api\\n     */\\n    REMOVE: 'remove'\\n};\\n//# sourceMappingURL=CollectionEventType.js.map\",\"/**\\n * @module ol/ObjectEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a property is changed.\\n     * @event module:ol/Object.ObjectEvent#propertychange\\n     * @api\\n     */\\n    PROPERTYCHANGE: 'propertychange'\\n};\\n//# sourceMappingURL=ObjectEventType.js.map\",\"/**\\n * @module ol/obj\\n */\\n/**\\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\\n * one or more source objects to a target object.\\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\\n *\\n * @param {!Object} target The target object.\\n * @param {...Object} var_sources The source object(s).\\n * @return {!Object} The modified target object.\\n */\\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\\n    if (target === undefined || target === null) {\\n        throw new TypeError('Cannot convert undefined or null to object');\\n    }\\n    var output = Object(target);\\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\\n        var source = arguments[i];\\n        if (source !== undefined && source !== null) {\\n            for (var key in source) {\\n                if (source.hasOwnProperty(key)) {\\n                    output[key] = source[key];\\n                }\\n            }\\n        }\\n    }\\n    return output;\\n};\\n/**\\n * Removes all properties from an object.\\n * @param {Object} object The object to clear.\\n */\\nexport function clear(object) {\\n    for (var property in object) {\\n        delete object[property];\\n    }\\n}\\n/**\\n * Polyfill for Object.values().  Get an array of property values from an object.\\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\\n *\\n * @param {!Object<K,V>} object The object from which to get the values.\\n * @return {!Array<V>} The property values.\\n * @template K,V\\n */\\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\\n    var values = [];\\n    for (var property in object) {\\n        values.push(object[property]);\\n    }\\n    return values;\\n};\\n/**\\n * Determine if an object has any properties.\\n * @param {Object} object The object to check.\\n * @return {boolean} The object is empty.\\n */\\nexport function isEmpty(object) {\\n    var property;\\n    for (property in object) {\\n        return false;\\n    }\\n    return !property;\\n}\\n//# sourceMappingURL=obj.js.map\",\"/**\\n * @module ol/events\\n */\\nimport { clear } from './obj.js';\\n/**\\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\\n * @typedef {Object} EventsKey\\n * @property {Object} [bindTo]\\n * @property {ListenerFunction} [boundListener]\\n * @property {boolean} callOnce\\n * @property {number} [deleteIndex]\\n * @property {ListenerFunction} listener\\n * @property {import(\\\"./events/Target.js\\\").EventTargetLike} target\\n * @property {string} type\\n * @api\\n */\\n/**\\n * Listener function. This function is called with an event object as argument.\\n * When the function returns `false`, event propagation will stop.\\n *\\n * @typedef {function((Event|import(\\\"./events/Event.js\\\").default)): (void|boolean)} ListenerFunction\\n * @api\\n */\\n/**\\n * @param {EventsKey} listenerObj Listener object.\\n * @return {ListenerFunction} Bound listener.\\n */\\nexport function bindListener(listenerObj) {\\n    var boundListener = function (evt) {\\n        var listener = listenerObj.listener;\\n        var bindTo = listenerObj.bindTo || listenerObj.target;\\n        if (listenerObj.callOnce) {\\n            unlistenByKey(listenerObj);\\n        }\\n        return listener.call(bindTo, evt);\\n    };\\n    listenerObj.boundListener = boundListener;\\n    return boundListener;\\n}\\n/**\\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\\n * array.\\n *\\n * @param {!Array<!EventsKey>} listeners Array of listeners.\\n * @param {!Function} listener The listener function.\\n * @param {Object=} opt_this The `this` value inside the listener.\\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\\n *     listener, for {@link module:ol/events~unlistenByKey}.\\n * @return {EventsKey|undefined} The matching listener object.\\n */\\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\\n    var listenerObj;\\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n        listenerObj = listeners[i];\\n        if (listenerObj.listener === listener &&\\n            listenerObj.bindTo === opt_this) {\\n            if (opt_setDeleteIndex) {\\n                listenerObj.deleteIndex = i;\\n            }\\n            return listenerObj;\\n        }\\n    }\\n    return undefined;\\n}\\n/**\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n * @return {Array<EventsKey>|undefined} Listeners.\\n */\\nexport function getListeners(target, type) {\\n    var listenerMap = getListenerMap(target);\\n    return listenerMap ? listenerMap[type] : undefined;\\n}\\n/**\\n * Get the lookup of listeners.\\n * @param {Object} target Target.\\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\\n * @return {!Object<string, Array<EventsKey>>} Map of\\n *     listeners by event type.\\n */\\nfunction getListenerMap(target, opt_create) {\\n    var listenerMap = target.ol_lm;\\n    if (!listenerMap && opt_create) {\\n        listenerMap = target.ol_lm = {};\\n    }\\n    return listenerMap;\\n}\\n/**\\n * Remove the listener map from a target.\\n * @param {Object} target Target.\\n */\\nfunction removeListenerMap(target) {\\n    delete target.ol_lm;\\n}\\n/**\\n * Clean up all listener objects of the given type.  All properties on the\\n * listener objects will be removed, and if no listeners remain in the listener\\n * map, it will be removed from the target.\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n */\\nfunction removeListeners(target, type) {\\n    var listeners = getListeners(target, type);\\n    if (listeners) {\\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n            /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n                removeEventListener(type, listeners[i].boundListener);\\n            clear(listeners[i]);\\n        }\\n        listeners.length = 0;\\n        var listenerMap = getListenerMap(target);\\n        if (listenerMap) {\\n            delete listenerMap[type];\\n            if (Object.keys(listenerMap).length === 0) {\\n                removeListenerMap(target);\\n            }\\n        }\\n    }\\n}\\n/**\\n * Registers an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` to a `this` object, and returns\\n * a key for use with {@link module:ol/events~unlistenByKey}.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\\n * @return {EventsKey} Unique key for the listener.\\n */\\nexport function listen(target, type, listener, opt_this, opt_once) {\\n    var listenerMap = getListenerMap(target, true);\\n    var listeners = listenerMap[type];\\n    if (!listeners) {\\n        listeners = listenerMap[type] = [];\\n    }\\n    var listenerObj = findListener(listeners, listener, opt_this, false);\\n    if (listenerObj) {\\n        if (!opt_once) {\\n            // Turn one-off listener into a permanent one.\\n            listenerObj.callOnce = false;\\n        }\\n    }\\n    else {\\n        listenerObj = {\\n            bindTo: opt_this,\\n            callOnce: !!opt_once,\\n            listener: listener,\\n            target: target,\\n            type: type\\n        };\\n        /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n            addEventListener(type, bindListener(listenerObj));\\n        listeners.push(listenerObj);\\n    }\\n    return listenerObj;\\n}\\n/**\\n * Registers a one-off event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` as self-unregistering listener\\n * to a `this` object, and returns a key for use with\\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\\n * unregistered before it is called.\\n *\\n * When {@link module:ol/events~listen} is called with the same arguments after this\\n * function, the self-unregistering listener will be turned into a permanent\\n * listener.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @return {EventsKey} Key for unlistenByKey.\\n */\\nexport function listenOnce(target, type, listener, opt_this) {\\n    return listen(target, type, listener, opt_this, true);\\n}\\n/**\\n * Unregisters an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * To return a listener, this function needs to be called with the exact same\\n * arguments that were used for a previous {@link module:ol/events~listen} call.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n */\\nexport function unlisten(target, type, listener, opt_this) {\\n    var listeners = getListeners(target, type);\\n    if (listeners) {\\n        var listenerObj = findListener(listeners, listener, opt_this, true);\\n        if (listenerObj) {\\n            unlistenByKey(listenerObj);\\n        }\\n    }\\n}\\n/**\\n * Unregisters event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * The argument passed to this function is the key returned from\\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\\n *\\n * @param {EventsKey} key The key.\\n */\\nexport function unlistenByKey(key) {\\n    if (key && key.target) {\\n        /** @type {import(\\\"./events/Target.js\\\").default} */ (key.target).\\n            removeEventListener(key.type, key.boundListener);\\n        var listeners = getListeners(key.target, key.type);\\n        if (listeners) {\\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\\n            if (i !== -1) {\\n                listeners.splice(i, 1);\\n            }\\n            if (listeners.length === 0) {\\n                removeListeners(key.target, key.type);\\n            }\\n        }\\n        clear(key);\\n    }\\n}\\n/**\\n * Unregisters all event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n */\\nexport function unlistenAll(target) {\\n    var listenerMap = getListenerMap(target);\\n    if (listenerMap) {\\n        for (var type in listenerMap) {\\n            removeListeners(target, type);\\n        }\\n    }\\n}\\n//# sourceMappingURL=events.js.map\",\"/**\\n * @module ol/Disposable\\n */\\n/**\\n * @classdesc\\n * Objects that need to clean up after themselves.\\n */\\nvar Disposable = /** @class */ (function () {\\n    function Disposable() {\\n        /**\\n         * The object has already been disposed.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.disposed_ = false;\\n    }\\n    /**\\n     * Clean up.\\n     */\\n    Disposable.prototype.dispose = function () {\\n        if (!this.disposed_) {\\n            this.disposed_ = true;\\n            this.disposeInternal();\\n        }\\n    };\\n    /**\\n     * Extension point for disposable objects.\\n     * @protected\\n     */\\n    Disposable.prototype.disposeInternal = function () { };\\n    return Disposable;\\n}());\\nexport default Disposable;\\n//# sourceMappingURL=Disposable.js.map\",\"/**\\n * @module ol/functions\\n */\\n/**\\n * Always returns true.\\n * @returns {boolean} true.\\n */\\nexport function TRUE() {\\n    return true;\\n}\\n/**\\n * Always returns false.\\n * @returns {boolean} false.\\n */\\nexport function FALSE() {\\n    return false;\\n}\\n/**\\n * A reusable function, used e.g. as a default for callbacks.\\n *\\n * @return {void} Nothing.\\n */\\nexport function VOID() { }\\n//# sourceMappingURL=functions.js.map\",\"/**\\n * @module ol/events/Event\\n */\\n/**\\n * @classdesc\\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\\n *\\n * This implementation only provides `type` and `target` properties, and\\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\\n * for higher level events defined in the library, and works with\\n * {@link module:ol/events/Target~Target}.\\n */\\nvar Event = /** @class */ (function () {\\n    /**\\n     * @param {string} type Type.\\n     */\\n    function Event(type) {\\n        /**\\n         * @type {boolean}\\n         */\\n        this.propagationStopped;\\n        /**\\n         * The event type.\\n         * @type {string}\\n         * @api\\n         */\\n        this.type = type;\\n        /**\\n         * The event target.\\n         * @type {Object}\\n         * @api\\n         */\\n        this.target = null;\\n    }\\n    /**\\n     * Stop event propagation.\\n     * @api\\n     */\\n    Event.prototype.preventDefault = function () {\\n        this.propagationStopped = true;\\n    };\\n    /**\\n     * Stop event propagation.\\n     * @api\\n     */\\n    Event.prototype.stopPropagation = function () {\\n        this.propagationStopped = true;\\n    };\\n    return Event;\\n}());\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function stopPropagation(evt) {\\n    evt.stopPropagation();\\n}\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function preventDefault(evt) {\\n    evt.preventDefault();\\n}\\nexport default Event;\\n//# sourceMappingURL=Event.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/events/Target\\n */\\nimport Disposable from '../Disposable.js';\\nimport { unlistenAll } from '../events.js';\\nimport { VOID } from '../functions.js';\\nimport Event from './Event.js';\\n/**\\n * @typedef {EventTarget|Target} EventTargetLike\\n */\\n/**\\n * @classdesc\\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\\n *\\n * There are two important simplifications compared to the specification:\\n *\\n * 1. The handling of `useCapture` in `addEventListener` and\\n *    `removeEventListener`. There is no real capture model.\\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\\n *    There is no event target hierarchy. When a listener calls\\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\\n *    more listeners after this one will be called. Same as when the listener\\n *    returns false.\\n */\\nvar Target = /** @class */ (function (_super) {\\n    __extends(Target, _super);\\n    function Target() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {!Object<string, number>}\\n         */\\n        _this.pendingRemovals_ = {};\\n        /**\\n         * @private\\n         * @type {!Object<string, number>}\\n         */\\n        _this.dispatching_ = {};\\n        /**\\n         * @private\\n         * @type {!Object<string, Array<import(\\\"../events.js\\\").ListenerFunction>>}\\n         */\\n        _this.listeners_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n     */\\n    Target.prototype.addEventListener = function (type, listener) {\\n        var listeners = this.listeners_[type];\\n        if (!listeners) {\\n            listeners = this.listeners_[type] = [];\\n        }\\n        if (listeners.indexOf(listener) === -1) {\\n            listeners.push(listener);\\n        }\\n    };\\n    /**\\n     * Dispatches an event and calls all listeners listening for events\\n     * of this type. The event parameter can either be a string or an\\n     * Object with a `type` property.\\n     *\\n     * @param {{type: string,\\n     *     target: (EventTargetLike|undefined),\\n     *     propagationStopped: (boolean|undefined)}|\\n     *     import(\\\"./Event.js\\\").default|string} event Event object.\\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\\n     *     event object or if any of the listeners returned false.\\n     * @api\\n     */\\n    Target.prototype.dispatchEvent = function (event) {\\n        var evt = typeof event === 'string' ? new Event(event) : event;\\n        var type = evt.type;\\n        evt.target = this;\\n        var listeners = this.listeners_[type];\\n        var propagate;\\n        if (listeners) {\\n            if (!(type in this.dispatching_)) {\\n                this.dispatching_[type] = 0;\\n                this.pendingRemovals_[type] = 0;\\n            }\\n            ++this.dispatching_[type];\\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\\n                    propagate = false;\\n                    break;\\n                }\\n            }\\n            --this.dispatching_[type];\\n            if (this.dispatching_[type] === 0) {\\n                var pendingRemovals = this.pendingRemovals_[type];\\n                delete this.pendingRemovals_[type];\\n                while (pendingRemovals--) {\\n                    this.removeEventListener(type, VOID);\\n                }\\n                delete this.dispatching_[type];\\n            }\\n            return propagate;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Target.prototype.disposeInternal = function () {\\n        unlistenAll(this);\\n    };\\n    /**\\n     * Get the listeners for a specified event type. Listeners are returned in the\\n     * order that they will be called in.\\n     *\\n     * @param {string} type Type.\\n     * @return {Array<import(\\\"../events.js\\\").ListenerFunction>} Listeners.\\n     */\\n    Target.prototype.getListeners = function (type) {\\n        return this.listeners_[type];\\n    };\\n    /**\\n     * @param {string=} opt_type Type. If not provided,\\n     *     `true` will be returned if this event target has any listeners.\\n     * @return {boolean} Has listeners.\\n     */\\n    Target.prototype.hasListener = function (opt_type) {\\n        return opt_type ?\\n            opt_type in this.listeners_ :\\n            Object.keys(this.listeners_).length > 0;\\n    };\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n     */\\n    Target.prototype.removeEventListener = function (type, listener) {\\n        var listeners = this.listeners_[type];\\n        if (listeners) {\\n            var index = listeners.indexOf(listener);\\n            if (type in this.pendingRemovals_) {\\n                // make listener a no-op, and remove later in #dispatchEvent()\\n                listeners[index] = VOID;\\n                ++this.pendingRemovals_[type];\\n            }\\n            else {\\n                listeners.splice(index, 1);\\n                if (listeners.length === 0) {\\n                    delete this.listeners_[type];\\n                }\\n            }\\n        }\\n    };\\n    return Target;\\n}(Disposable));\\nexport default Target;\\n//# sourceMappingURL=Target.js.map\",\"/**\\n * @module ol/events/EventType\\n */\\n/**\\n * @enum {string}\\n * @const\\n */\\nexport default {\\n    /**\\n     * Generic change event. Triggered when the revision counter is increased.\\n     * @event module:ol/events/Event~Event#change\\n     * @api\\n     */\\n    CHANGE: 'change',\\n    CLEAR: 'clear',\\n    CONTEXTMENU: 'contextmenu',\\n    CLICK: 'click',\\n    DBLCLICK: 'dblclick',\\n    DRAGENTER: 'dragenter',\\n    DRAGOVER: 'dragover',\\n    DROP: 'drop',\\n    ERROR: 'error',\\n    KEYDOWN: 'keydown',\\n    KEYPRESS: 'keypress',\\n    LOAD: 'load',\\n    MOUSEDOWN: 'mousedown',\\n    MOUSEMOVE: 'mousemove',\\n    MOUSEOUT: 'mouseout',\\n    MOUSEUP: 'mouseup',\\n    MOUSEWHEEL: 'mousewheel',\\n    MSPOINTERDOWN: 'MSPointerDown',\\n    RESIZE: 'resize',\\n    TOUCHSTART: 'touchstart',\\n    TOUCHMOVE: 'touchmove',\\n    TOUCHEND: 'touchend',\\n    WHEEL: 'wheel'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Observable\\n */\\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\\nimport EventTarget from './events/Target.js';\\nimport EventType from './events/EventType.js';\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * An event target providing convenient methods for listener registration\\n * and unregistration. A generic `change` event is always available through\\n * {@link module:ol/Observable~Observable#changed}.\\n *\\n * @fires import(\\\"./events/Event.js\\\").Event\\n * @api\\n */\\nvar Observable = /** @class */ (function (_super) {\\n    __extends(Observable, _super);\\n    function Observable() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.revision_ = 0;\\n        return _this;\\n    }\\n    /**\\n     * Increases the revision counter and dispatches a 'change' event.\\n     * @api\\n     */\\n    Observable.prototype.changed = function () {\\n        ++this.revision_;\\n        this.dispatchEvent(EventType.CHANGE);\\n    };\\n    /**\\n     * Get the version number for this object.  Each time the object is modified,\\n     * its version number will be incremented.\\n     * @return {number} Revision.\\n     * @api\\n     */\\n    Observable.prototype.getRevision = function () {\\n        return this.revision_;\\n    };\\n    /**\\n     * Listen for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n     *     called with an array of event types as the first argument, the return\\n     *     will be an array of keys.\\n     * @api\\n     */\\n    Observable.prototype.on = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            var len = type.length;\\n            var keys = new Array(len);\\n            for (var i = 0; i < len; ++i) {\\n                keys[i] = listen(this, type[i], listener);\\n            }\\n            return keys;\\n        }\\n        else {\\n            return listen(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    /**\\n     * Listen once for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n     *     called with an array of event types as the first argument, the return\\n     *     will be an array of keys.\\n     * @api\\n     */\\n    Observable.prototype.once = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            var len = type.length;\\n            var keys = new Array(len);\\n            for (var i = 0; i < len; ++i) {\\n                keys[i] = listenOnce(this, type[i], listener);\\n            }\\n            return keys;\\n        }\\n        else {\\n            return listenOnce(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    /**\\n     * Unlisten for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @api\\n     */\\n    Observable.prototype.un = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            for (var i = 0, ii = type.length; i < ii; ++i) {\\n                unlisten(this, type[i], listener);\\n            }\\n            return;\\n        }\\n        else {\\n            unlisten(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    return Observable;\\n}(EventTarget));\\n/**\\n * Removes an event listener using the key returned by `on()` or `once()`.\\n * @param {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} key The key returned by `on()`\\n *     or `once()` (or an array of keys).\\n * @api\\n */\\nexport function unByKey(key) {\\n    if (Array.isArray(key)) {\\n        for (var i = 0, ii = key.length; i < ii; ++i) {\\n            unlistenByKey(key[i]);\\n        }\\n    }\\n    else {\\n        unlistenByKey(/** @type {import(\\\"./events.js\\\").EventsKey} */ (key));\\n    }\\n}\\nexport default Observable;\\n//# sourceMappingURL=Observable.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Object\\n */\\nimport { getUid } from './util.js';\\nimport ObjectEventType from './ObjectEventType.js';\\nimport Observable from './Observable.js';\\nimport Event from './events/Event.js';\\nimport { assign } from './obj.js';\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\\n */\\nvar ObjectEvent = /** @class */ (function (_super) {\\n    __extends(ObjectEvent, _super);\\n    /**\\n     * @param {string} type The event type.\\n     * @param {string} key The property name.\\n     * @param {*} oldValue The old value for `key`.\\n     */\\n    function ObjectEvent(type, key, oldValue) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The name of the property whose value is changing.\\n         * @type {string}\\n         * @api\\n         */\\n        _this.key = key;\\n        /**\\n         * The old value. To get the new value use `e.target.get(e.key)` where\\n         * `e` is the event object.\\n         * @type {*}\\n         * @api\\n         */\\n        _this.oldValue = oldValue;\\n        return _this;\\n    }\\n    return ObjectEvent;\\n}(Event));\\nexport { ObjectEvent };\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Most non-trivial classes inherit from this.\\n *\\n * This extends {@link module:ol/Observable} with observable\\n * properties, where each property is observable as well as the object as a\\n * whole.\\n *\\n * Classes that inherit from this have pre-defined properties, to which you can\\n * add your owns. The pre-defined properties are listed in this documentation as\\n * 'Observable Properties', and have their own accessors; for example,\\n * {@link module:ol/Map~Map} has a `target` property, accessed with\\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\\n * settable. There are also general-purpose accessors `get()` and `set()`. For\\n * example, `get('target')` is equivalent to `getTarget()`.\\n *\\n * The `set` accessors trigger a change event, and you can monitor this by\\n * registering a listener. For example, {@link module:ol/View~View} has a\\n * `center` property, so `view.on('change:center', function(evt) {...});` would\\n * call the function whenever the value of the center property changes. Within\\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\\n * would return the new center.\\n *\\n * You can add your own observable properties with\\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\\n * You can listen for changes on that property value with\\n * `object.on('change:prop', listener)`. You can get a list of all\\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\\n *\\n * Note that the observable properties are separate from standard JS properties.\\n * You can, for example, give your map object a title with\\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\\n * first will be a `hasOwnProperty`; the second will appear in\\n * `getProperties()`. Only the second is observable.\\n *\\n * Properties can be deleted by using the unset method. E.g.\\n * object.unset('foo').\\n *\\n * @fires ObjectEvent\\n * @api\\n */\\nvar BaseObject = /** @class */ (function (_super) {\\n    __extends(BaseObject, _super);\\n    /**\\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\\n     */\\n    function BaseObject(opt_values) {\\n        var _this = _super.call(this) || this;\\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\\n        // the same as the order in which they were created.  This also helps to\\n        // ensure that object properties are always added in the same order, which\\n        // helps many JavaScript engines generate faster code.\\n        getUid(_this);\\n        /**\\n         * @private\\n         * @type {!Object<string, *>}\\n         */\\n        _this.values_ = {};\\n        if (opt_values !== undefined) {\\n            _this.setProperties(opt_values);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Gets a value.\\n     * @param {string} key Key name.\\n     * @return {*} Value.\\n     * @api\\n     */\\n    BaseObject.prototype.get = function (key) {\\n        var value;\\n        if (this.values_.hasOwnProperty(key)) {\\n            value = this.values_[key];\\n        }\\n        return value;\\n    };\\n    /**\\n     * Get a list of object property names.\\n     * @return {Array<string>} List of property names.\\n     * @api\\n     */\\n    BaseObject.prototype.getKeys = function () {\\n        return Object.keys(this.values_);\\n    };\\n    /**\\n     * Get an object of all property names and values.\\n     * @return {Object<string, *>} Object.\\n     * @api\\n     */\\n    BaseObject.prototype.getProperties = function () {\\n        return assign({}, this.values_);\\n    };\\n    /**\\n     * @param {string} key Key name.\\n     * @param {*} oldValue Old value.\\n     */\\n    BaseObject.prototype.notify = function (key, oldValue) {\\n        var eventType;\\n        eventType = getChangeEventType(key);\\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n        eventType = ObjectEventType.PROPERTYCHANGE;\\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n    };\\n    /**\\n     * Sets a value.\\n     * @param {string} key Key name.\\n     * @param {*} value Value.\\n     * @param {boolean=} opt_silent Update without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.set = function (key, value, opt_silent) {\\n        if (opt_silent) {\\n            this.values_[key] = value;\\n        }\\n        else {\\n            var oldValue = this.values_[key];\\n            this.values_[key] = value;\\n            if (oldValue !== value) {\\n                this.notify(key, oldValue);\\n            }\\n        }\\n    };\\n    /**\\n     * Sets a collection of key-value pairs.  Note that this changes any existing\\n     * properties and adds new ones (it does not remove any existing properties).\\n     * @param {Object<string, *>} values Values.\\n     * @param {boolean=} opt_silent Update without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\\n        for (var key in values) {\\n            this.set(key, values[key], opt_silent);\\n        }\\n    };\\n    /**\\n     * Unsets a property.\\n     * @param {string} key Key name.\\n     * @param {boolean=} opt_silent Unset without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.unset = function (key, opt_silent) {\\n        if (key in this.values_) {\\n            var oldValue = this.values_[key];\\n            delete this.values_[key];\\n            if (!opt_silent) {\\n                this.notify(key, oldValue);\\n            }\\n        }\\n    };\\n    return BaseObject;\\n}(Observable));\\n/**\\n * @type {Object<string, string>}\\n */\\nvar changeEventTypeCache = {};\\n/**\\n * @param {string} key Key name.\\n * @return {string} Change name.\\n */\\nexport function getChangeEventType(key) {\\n    return changeEventTypeCache.hasOwnProperty(key) ?\\n        changeEventTypeCache[key] :\\n        (changeEventTypeCache[key] = 'change:' + key);\\n}\\nexport default BaseObject;\\n//# sourceMappingURL=Object.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Collection\\n */\\nimport AssertionError from './AssertionError.js';\\nimport CollectionEventType from './CollectionEventType.js';\\nimport BaseObject from './Object.js';\\nimport Event from './events/Event.js';\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    LENGTH: 'length'\\n};\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\\n * type.\\n */\\nvar CollectionEvent = /** @class */ (function (_super) {\\n    __extends(CollectionEvent, _super);\\n    /**\\n     * @param {CollectionEventType} type Type.\\n     * @param {*=} opt_element Element.\\n     * @param {number} opt_index The index of the added or removed element.\\n     */\\n    function CollectionEvent(type, opt_element, opt_index) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The element that is added to or removed from the collection.\\n         * @type {*}\\n         * @api\\n         */\\n        _this.element = opt_element;\\n        /**\\n         * The index of the added or removed element.\\n         * @type {number}\\n         * @api\\n         */\\n        _this.index = opt_index;\\n        return _this;\\n    }\\n    return CollectionEvent;\\n}(Event));\\nexport { CollectionEvent };\\n/**\\n * @typedef {Object} Options\\n * @property {boolean} [unique=false] Disallow the same item from being added to\\n * the collection twice.\\n */\\n/**\\n * @classdesc\\n * An expanded version of standard JS Array, adding convenience methods for\\n * manipulation. Add and remove changes to the Collection trigger a Collection\\n * event. Note that this does not cover changes to the objects _within_ the\\n * Collection; they trigger events on the appropriate object, not on the\\n * Collection as a whole.\\n *\\n * @fires CollectionEvent\\n *\\n * @template T\\n * @api\\n */\\nvar Collection = /** @class */ (function (_super) {\\n    __extends(Collection, _super);\\n    /**\\n     * @param {Array<T>=} opt_array Array.\\n     * @param {Options=} opt_options Collection options.\\n     */\\n    function Collection(opt_array, opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.unique_ = !!options.unique;\\n        /**\\n         * @private\\n         * @type {!Array<T>}\\n         */\\n        _this.array_ = opt_array ? opt_array : [];\\n        if (_this.unique_) {\\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\\n                _this.assertUnique_(_this.array_[i], i);\\n            }\\n        }\\n        _this.updateLength_();\\n        return _this;\\n    }\\n    /**\\n     * Remove all elements from the collection.\\n     * @api\\n     */\\n    Collection.prototype.clear = function () {\\n        while (this.getLength() > 0) {\\n            this.pop();\\n        }\\n    };\\n    /**\\n     * Add elements to the collection.  This pushes each item in the provided array\\n     * to the end of the collection.\\n     * @param {!Array<T>} arr Array.\\n     * @return {Collection<T>} This collection.\\n     * @api\\n     */\\n    Collection.prototype.extend = function (arr) {\\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\\n            this.push(arr[i]);\\n        }\\n        return this;\\n    };\\n    /**\\n     * Iterate over each element, calling the provided callback.\\n     * @param {function(T, number, Array<T>): *} f The function to call\\n     *     for every element. This function takes 3 arguments (the element, the\\n     *     index and the array). The return value is ignored.\\n     * @api\\n     */\\n    Collection.prototype.forEach = function (f) {\\n        var array = this.array_;\\n        for (var i = 0, ii = array.length; i < ii; ++i) {\\n            f(array[i], i, array);\\n        }\\n    };\\n    /**\\n     * Get a reference to the underlying Array object. Warning: if the array\\n     * is mutated, no events will be dispatched by the collection, and the\\n     * collection's \\\"length\\\" property won't be in sync with the actual length\\n     * of the array.\\n     * @return {!Array<T>} Array.\\n     * @api\\n     */\\n    Collection.prototype.getArray = function () {\\n        return this.array_;\\n    };\\n    /**\\n     * Get the element at the provided index.\\n     * @param {number} index Index.\\n     * @return {T} Element.\\n     * @api\\n     */\\n    Collection.prototype.item = function (index) {\\n        return this.array_[index];\\n    };\\n    /**\\n     * Get the length of this collection.\\n     * @return {number} The length of the array.\\n     * @observable\\n     * @api\\n     */\\n    Collection.prototype.getLength = function () {\\n        return this.get(Property.LENGTH);\\n    };\\n    /**\\n     * Insert an element at the provided index.\\n     * @param {number} index Index.\\n     * @param {T} elem Element.\\n     * @api\\n     */\\n    Collection.prototype.insertAt = function (index, elem) {\\n        if (this.unique_) {\\n            this.assertUnique_(elem);\\n        }\\n        this.array_.splice(index, 0, elem);\\n        this.updateLength_();\\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\\n    };\\n    /**\\n     * Remove the last element of the collection and return it.\\n     * Return `undefined` if the collection is empty.\\n     * @return {T|undefined} Element.\\n     * @api\\n     */\\n    Collection.prototype.pop = function () {\\n        return this.removeAt(this.getLength() - 1);\\n    };\\n    /**\\n     * Insert the provided element at the end of the collection.\\n     * @param {T} elem Element.\\n     * @return {number} New length of the collection.\\n     * @api\\n     */\\n    Collection.prototype.push = function (elem) {\\n        if (this.unique_) {\\n            this.assertUnique_(elem);\\n        }\\n        var n = this.getLength();\\n        this.insertAt(n, elem);\\n        return this.getLength();\\n    };\\n    /**\\n     * Remove the first occurrence of an element from the collection.\\n     * @param {T} elem Element.\\n     * @return {T|undefined} The removed element or undefined if none found.\\n     * @api\\n     */\\n    Collection.prototype.remove = function (elem) {\\n        var arr = this.array_;\\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\\n            if (arr[i] === elem) {\\n                return this.removeAt(i);\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * Remove the element at the provided index and return it.\\n     * Return `undefined` if the collection does not contain this index.\\n     * @param {number} index Index.\\n     * @return {T|undefined} Value.\\n     * @api\\n     */\\n    Collection.prototype.removeAt = function (index) {\\n        var prev = this.array_[index];\\n        this.array_.splice(index, 1);\\n        this.updateLength_();\\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\\n        return prev;\\n    };\\n    /**\\n     * Set the element at the provided index.\\n     * @param {number} index Index.\\n     * @param {T} elem Element.\\n     * @api\\n     */\\n    Collection.prototype.setAt = function (index, elem) {\\n        var n = this.getLength();\\n        if (index < n) {\\n            if (this.unique_) {\\n                this.assertUnique_(elem, index);\\n            }\\n            var prev = this.array_[index];\\n            this.array_[index] = elem;\\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\\n        }\\n        else {\\n            for (var j = n; j < index; ++j) {\\n                this.insertAt(j, undefined);\\n            }\\n            this.insertAt(index, elem);\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    Collection.prototype.updateLength_ = function () {\\n        this.set(Property.LENGTH, this.array_.length);\\n    };\\n    /**\\n     * @private\\n     * @param {T} elem Element.\\n     * @param {number=} opt_except Optional index to ignore.\\n     */\\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\\n            if (this.array_[i] === elem && i !== opt_except) {\\n                throw new AssertionError(58);\\n            }\\n        }\\n    };\\n    return Collection;\\n}(BaseObject));\\nexport default Collection;\\n//# sourceMappingURL=Collection.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapEvent\\n */\\nimport Event from './events/Event.js';\\n/**\\n * @classdesc\\n * Events emitted as map events are instances of this type.\\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\\n */\\nvar MapEvent = /** @class */ (function (_super) {\\n    __extends(MapEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapEvent(type, map, opt_frameState) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The map where the event occurred.\\n         * @type {import(\\\"./PluggableMap.js\\\").default}\\n         * @api\\n         */\\n        _this.map = map;\\n        /**\\n         * The frame state at the time of the event.\\n         * @type {?import(\\\"./PluggableMap.js\\\").FrameState}\\n         * @api\\n         */\\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\\n        return _this;\\n    }\\n    return MapEvent;\\n}(Event));\\nexport default MapEvent;\\n//# sourceMappingURL=MapEvent.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserEvent\\n */\\nimport MapEvent from './MapEvent.js';\\n/**\\n * @classdesc\\n * Events emitted as map browser events are instances of this type.\\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\\n */\\nvar MapBrowserEvent = /** @class */ (function (_super) {\\n    __extends(MapBrowserEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {Event} browserEvent Browser event.\\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\\n        var _this = _super.call(this, type, map, opt_frameState) || this;\\n        /**\\n         * The original browser event.\\n         * @const\\n         * @type {Event}\\n         * @api\\n         */\\n        _this.originalEvent = browserEvent;\\n        /**\\n         * The map pixel relative to the viewport corresponding to the original browser event.\\n         * @type {import(\\\"./pixel.js\\\").Pixel}\\n         * @api\\n         */\\n        _this.pixel = map.getEventPixel(browserEvent);\\n        /**\\n         * The coordinate in view projection corresponding to the original browser event.\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate}\\n         * @api\\n         */\\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\\n        /**\\n         * Indicates if the map is currently being dragged. Only set for\\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\\n         *\\n         * @type {boolean}\\n         * @api\\n         */\\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\\n        return _this;\\n    }\\n    /**\\n     * Prevents the default browser action.\\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\\n     * @override\\n     * @api\\n     */\\n    MapBrowserEvent.prototype.preventDefault = function () {\\n        _super.prototype.preventDefault.call(this);\\n        this.originalEvent.preventDefault();\\n    };\\n    /**\\n     * Prevents further propagation of the current event.\\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\\n     * @override\\n     * @api\\n     */\\n    MapBrowserEvent.prototype.stopPropagation = function () {\\n        _super.prototype.stopPropagation.call(this);\\n        this.originalEvent.stopPropagation();\\n    };\\n    return MapBrowserEvent;\\n}(MapEvent));\\nexport default MapBrowserEvent;\\n//# sourceMappingURL=MapBrowserEvent.js.map\",\"/**\\n * @module ol/has\\n */\\nvar ua = typeof navigator !== 'undefined' ?\\n    navigator.userAgent.toLowerCase() : '';\\n/**\\n * User agent string says we are dealing with Firefox as browser.\\n * @type {boolean}\\n */\\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\\n/**\\n * User agent string says we are dealing with Safari as browser.\\n * @type {boolean}\\n */\\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\\n/**\\n * User agent string says we are dealing with a WebKit engine.\\n * @type {boolean}\\n */\\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\\n/**\\n * User agent string says we are dealing with a Mac as platform.\\n * @type {boolean}\\n */\\nexport var MAC = ua.indexOf('macintosh') !== -1;\\n/**\\n * The ratio between physical pixels and device-independent pixels\\n * (dips) on the device (`window.devicePixelRatio`).\\n * @const\\n * @type {number}\\n * @api\\n */\\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\\n/**\\n * Is HTML5 geolocation supported in the current browser?\\n * @const\\n * @type {boolean}\\n * @api\\n */\\nexport var GEOLOCATION = 'geolocation' in navigator;\\n/**\\n * True if browser supports touch events.\\n * @const\\n * @type {boolean}\\n * @api\\n */\\nexport var TOUCH = 'ontouchstart' in window;\\n/**\\n * True if browser supports pointer events.\\n * @const\\n * @type {boolean}\\n */\\nexport var POINTER = 'PointerEvent' in window;\\n/**\\n * True if browser supports ms pointer events (IE 10).\\n * @const\\n * @type {boolean}\\n */\\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\\nexport { HAS as WEBGL } from './webgl.js';\\n//# sourceMappingURL=has.js.map\",\"/**\\n * @module ol/MapBrowserEventType\\n */\\nimport EventType from './events/EventType.js';\\n/**\\n * Constants for event names.\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * A true single click with no dragging and no double click. Note that this\\n     * event is delayed by 250 ms to ensure that it is not a double click.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\\n     * @api\\n     */\\n    SINGLECLICK: 'singleclick',\\n    /**\\n     * A click with no dragging. A double click will fire two of this.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\\n     * @api\\n     */\\n    CLICK: EventType.CLICK,\\n    /**\\n     * A true double click, with no dragging.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\\n     * @api\\n     */\\n    DBLCLICK: EventType.DBLCLICK,\\n    /**\\n     * Triggered when a pointer is dragged.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\\n     * @api\\n     */\\n    POINTERDRAG: 'pointerdrag',\\n    /**\\n     * Triggered when a pointer is moved. Note that on touch devices this is\\n     * triggered when the map is panned, so is not the same as mousemove.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\\n     * @api\\n     */\\n    POINTERMOVE: 'pointermove',\\n    POINTERDOWN: 'pointerdown',\\n    POINTERUP: 'pointerup',\\n    POINTEROVER: 'pointerover',\\n    POINTEROUT: 'pointerout',\\n    POINTERENTER: 'pointerenter',\\n    POINTERLEAVE: 'pointerleave',\\n    POINTERCANCEL: 'pointercancel'\\n};\\n//# sourceMappingURL=MapBrowserEventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserPointerEvent\\n */\\nimport MapBrowserEvent from './MapBrowserEvent.js';\\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\\n    __extends(MapBrowserPointerEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer event.\\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\\n        /**\\n         * @const\\n         * @type {import(\\\"./pointer/PointerEvent.js\\\").default}\\n         */\\n        _this.pointerEvent = pointerEvent;\\n        return _this;\\n    }\\n    return MapBrowserPointerEvent;\\n}(MapBrowserEvent));\\nexport default MapBrowserPointerEvent;\\n//# sourceMappingURL=MapBrowserPointerEvent.js.map\",\"/**\\n * @module ol/pointer/EventType\\n */\\n/**\\n * Constants for event names.\\n * @enum {string}\\n */\\nexport default {\\n    POINTERMOVE: 'pointermove',\\n    POINTERDOWN: 'pointerdown',\\n    POINTERUP: 'pointerup',\\n    POINTEROVER: 'pointerover',\\n    POINTEROUT: 'pointerout',\\n    POINTERENTER: 'pointerenter',\\n    POINTERLEAVE: 'pointerleave',\\n    POINTERCANCEL: 'pointercancel'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"/**\\n * @module ol/pointer/EventSource\\n */\\nvar EventSource = /** @class */ (function () {\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\\n     */\\n    function EventSource(dispatcher, mapping) {\\n        /**\\n         * @type {import(\\\"./PointerEventHandler.js\\\").default}\\n         */\\n        this.dispatcher = dispatcher;\\n        /**\\n         * @private\\n         * @const\\n         * @type {!Object<string, function(Event): void>}\\n         */\\n        this.mapping_ = mapping;\\n    }\\n    /**\\n     * List of events supported by this source.\\n     * @return {Array<string>} Event names\\n     */\\n    EventSource.prototype.getEvents = function () {\\n        return Object.keys(this.mapping_);\\n    };\\n    /**\\n     * Returns the handler that should handle a given event type.\\n     * @param {string} eventType The event type.\\n     * @return {function(Event)} Handler\\n     */\\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\\n        return this.mapping_[eventType];\\n    };\\n    return EventSource;\\n}());\\nexport default EventSource;\\n//# sourceMappingURL=EventSource.js.map\",\"/**\\n * @module ol/pointer/MouseSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * @type {number}\\n */\\nexport var POINTER_ID = 1;\\n/**\\n * @type {string}\\n */\\nexport var POINTER_TYPE = 'mouse';\\n/**\\n * Radius around touchend that swallows mouse events.\\n *\\n * @type {number}\\n */\\nvar DEDUP_DIST = 25;\\n/**\\n * Handler for `mousedown`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mousedown(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        // TODO(dfreedman) workaround for some elements not sending mouseup\\n        // http://crbug/149091\\n        if (POINTER_ID.toString() in this.pointerMap) {\\n            this.cancel(inEvent);\\n        }\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\\n        this.dispatcher.down(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mousemove`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mousemove(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.move(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mouseup`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseup(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var p = this.pointerMap[POINTER_ID.toString()];\\n        if (p && p.button === inEvent.button) {\\n            var e = prepareEvent(inEvent, this.dispatcher);\\n            this.dispatcher.up(e, inEvent);\\n            this.cleanupMouse();\\n        }\\n    }\\n}\\n/**\\n * Handler for `mouseover`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseover(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.enterOver(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mouseout`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseout(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.leaveOut(e, inEvent);\\n    }\\n}\\nvar MouseSource = /** @class */ (function (_super) {\\n    __extends(MouseSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function MouseSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'mousedown': mousedown,\\n            'mousemove': mousemove,\\n            'mouseup': mouseup,\\n            'mouseover': mouseover,\\n            'mouseout': mouseout\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        /**\\n         * @const\\n         * @type {Array<import(\\\"../pixel.js\\\").Pixel>}\\n         */\\n        _this.lastTouches = [];\\n        return _this;\\n    }\\n    /**\\n     * Detect if a mouse event was simulated from a touch by\\n     * checking if previously there was a touch event at the\\n     * same position.\\n     *\\n     * FIXME - Known problem with the native Android browser on\\n     * Samsung GT-I9100 (Android 4.1.2):\\n     * In case the page is scrolled, this function does not work\\n     * correctly when a canvas is used (WebGL or canvas renderer).\\n     * Mouse listeners on canvas elements (for this browser), create\\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\\n     * when a div is used, there is only one event). For the 'bad' one,\\n     * clientX/clientY and also pageX/pageY are wrong when the page\\n     * is scrolled. Because of that, this function can not detect if\\n     * the events were simulated from a touch event. As result, a\\n     * pointer event at a wrong position is dispatched, which confuses\\n     * the map interactions.\\n     * It is unclear, how one can get the correct position for the event\\n     * or detect that the positions are invalid.\\n     *\\n     * @private\\n     * @param {MouseEvent} inEvent The in event.\\n     * @return {boolean} True, if the event was generated by a touch.\\n     */\\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\\n        var lts = this.lastTouches;\\n        var x = inEvent.clientX;\\n        var y = inEvent.clientY;\\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\\n            // simulated mouse events will be swallowed near a primary touchend\\n            var dx = Math.abs(x - t[0]);\\n            var dy = Math.abs(y - t[1]);\\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * Dispatches a `pointercancel` event.\\n     *\\n     * @param {Event} inEvent The in event.\\n     */\\n    MouseSource.prototype.cancel = function (inEvent) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.cancel(e, inEvent);\\n        this.cleanupMouse();\\n    };\\n    /**\\n     * Remove the mouse from the list of active pointers.\\n     */\\n    MouseSource.prototype.cleanupMouse = function () {\\n        delete this.pointerMap[POINTER_ID.toString()];\\n    };\\n    return MouseSource;\\n}(EventSource));\\n/**\\n * Creates a copy of the original event that will be used\\n * for the fake pointer event.\\n *\\n * @param {Event} inEvent The in event.\\n * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n * @return {Object} The copied event.\\n */\\nexport function prepareEvent(inEvent, dispatcher) {\\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\\n    // forward mouse preventDefault\\n    var pd = e.preventDefault;\\n    e.preventDefault = function () {\\n        inEvent.preventDefault();\\n        pd();\\n    };\\n    e.pointerId = POINTER_ID;\\n    e.isPrimary = true;\\n    e.pointerType = POINTER_TYPE;\\n    return e;\\n}\\nexport default MouseSource;\\n//# sourceMappingURL=MouseSource.js.map\",\"/**\\n * @module ol/pointer/MsSource\\n */\\n// Based on https://github.com/Polymer/PointerEvents\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * @const\\n * @type {Array<string>}\\n */\\nvar POINTER_TYPES = [\\n    '',\\n    'unavailable',\\n    'touch',\\n    'pen',\\n    'mouse'\\n];\\n/**\\n * Handler for `msPointerDown`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerDown(inEvent) {\\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.down(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerMove`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerMove(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.move(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerUp`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerUp(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.up(e, inEvent);\\n    this.cleanup(inEvent.pointerId);\\n}\\n/**\\n * Handler for `msPointerOut`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerOut(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.leaveOut(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerOver`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerOver(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.enterOver(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerCancel`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerCancel(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.cancel(e, inEvent);\\n    this.cleanup(inEvent.pointerId);\\n}\\n/**\\n * Handler for `msLostPointerCapture`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msLostPointerCapture(inEvent) {\\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\\n    this.dispatcher.dispatchEvent(e);\\n}\\n/**\\n * Handler for `msGotPointerCapture`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msGotPointerCapture(inEvent) {\\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\\n    this.dispatcher.dispatchEvent(e);\\n}\\nvar MsSource = /** @class */ (function (_super) {\\n    __extends(MsSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function MsSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'MSPointerDown': msPointerDown,\\n            'MSPointerMove': msPointerMove,\\n            'MSPointerUp': msPointerUp,\\n            'MSPointerOut': msPointerOut,\\n            'MSPointerOver': msPointerOver,\\n            'MSPointerCancel': msPointerCancel,\\n            'MSGotPointerCapture': msGotPointerCapture,\\n            'MSLostPointerCapture': msLostPointerCapture\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, MSPointerEvent|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        return _this;\\n    }\\n    /**\\n     * Creates a copy of the original event that will be used\\n     * for the fake pointer event.\\n     *\\n     * @private\\n     * @param {MSPointerEvent} inEvent The in event.\\n     * @return {Object} The copied event.\\n     */\\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\\n        /** @type {MSPointerEvent|Object} */\\n        var e = inEvent;\\n        if (typeof inEvent.pointerType === 'number') {\\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\\n        }\\n        return e;\\n    };\\n    /**\\n     * Remove this pointer from the list of active pointers.\\n     * @param {number} pointerId Pointer identifier.\\n     */\\n    MsSource.prototype.cleanup = function (pointerId) {\\n        delete this.pointerMap[pointerId.toString()];\\n    };\\n    return MsSource;\\n}(EventSource));\\nexport default MsSource;\\n//# sourceMappingURL=MsSource.js.map\",\"/**\\n * @module ol/pointer/NativeSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * Handler for `pointerdown`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerDown(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointermove`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerMove(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerup`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerUp(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerout`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerOut(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerover`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerOver(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointercancel`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerCancel(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `lostpointercapture`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction lostPointerCapture(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `gotpointercapture`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction gotPointerCapture(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\nvar NativeSource = /** @class */ (function (_super) {\\n    __extends(NativeSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function NativeSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'pointerdown': pointerDown,\\n            'pointermove': pointerMove,\\n            'pointerup': pointerUp,\\n            'pointerout': pointerOut,\\n            'pointerover': pointerOver,\\n            'pointercancel': pointerCancel,\\n            'gotpointercapture': gotPointerCapture,\\n            'lostpointercapture': lostPointerCapture\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        return _this;\\n    }\\n    return NativeSource;\\n}(EventSource));\\nexport default NativeSource;\\n//# sourceMappingURL=NativeSource.js.map\",\"/**\\n * @module ol/pointer/PointerEvent\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport _Event from '../events/Event.js';\\n/**\\n * Is the `buttons` property supported?\\n * @type {boolean}\\n */\\nvar HAS_BUTTONS = false;\\nvar PointerEvent = /** @class */ (function (_super) {\\n    __extends(PointerEvent, _super);\\n    /**\\n     * A class for pointer events.\\n     *\\n     * This class is used as an abstraction for mouse events,\\n     * touch events and even native pointer events.\\n     *\\n     * @param {string} type The type of the event to create.\\n     * @param {Event} originalEvent The event.\\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\\n     *    initial event properties.\\n     */\\n    function PointerEvent(type, originalEvent, opt_eventDict) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * @const\\n         * @type {Event}\\n         */\\n        _this.originalEvent = originalEvent;\\n        var eventDict = opt_eventDict ? opt_eventDict : {};\\n        /**\\n         * @type {number}\\n         */\\n        _this.buttons = getButtons(eventDict);\\n        /**\\n         * @type {number}\\n         */\\n        _this.pressure = getPressure(eventDict, _this.buttons);\\n        // MouseEvent related properties\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\\n        /**\\n         * @type {Object}\\n         */\\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\\n        /**\\n         * @type {number}\\n         */\\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\\n        /**\\n         * @type {Node}\\n         */\\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\\n            eventDict['relatedTarget'] : null;\\n        // PointerEvent related properties\\n        /**\\n         * @const\\n         * @type {number}\\n         */\\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\\n        /**\\n         * @type {string}\\n         */\\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\\n        /**\\n         * @type {number}\\n         */\\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\\n        // keep the semantics of preventDefault\\n        if (originalEvent.preventDefault) {\\n            _this.preventDefault = function () {\\n                originalEvent.preventDefault();\\n            };\\n        }\\n        return _this;\\n    }\\n    return PointerEvent;\\n}(_Event));\\n/**\\n * @param {Object<string, ?>} eventDict The event dictionary.\\n * @return {number} Button indicator.\\n */\\nfunction getButtons(eventDict) {\\n    // According to the w3c spec,\\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\\n    // left mouse button depressed.\\n    //\\n    // As of now, the only way to distinguish between the two states of\\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\\n    // no mouse button is held.\\n    //\\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\\n    // but initMouseEvent does not expose an argument with which to set\\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\\n    // of app developers.\\n    //\\n    // The only way to propagate the correct state of MouseEvent.which and\\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\\n    // is to call initMouseEvent with a buttonArg value of -1.\\n    //\\n    // This is fixed with DOM Level 4's use of buttons\\n    var buttons;\\n    if (eventDict.buttons || HAS_BUTTONS) {\\n        buttons = eventDict.buttons;\\n    }\\n    else {\\n        switch (eventDict.which) {\\n            case 1:\\n                buttons = 1;\\n                break;\\n            case 2:\\n                buttons = 4;\\n                break;\\n            case 3:\\n                buttons = 2;\\n                break;\\n            default: buttons = 0;\\n        }\\n    }\\n    return buttons;\\n}\\n/**\\n * @param {Object<string, ?>} eventDict The event dictionary.\\n * @param {number} buttons Button indicator.\\n * @return {number} The pressure.\\n */\\nfunction getPressure(eventDict, buttons) {\\n    // Spec requires that pointers without pressure specified use 0.5 for down\\n    // state and 0 for up state.\\n    var pressure = 0;\\n    if (eventDict.pressure) {\\n        pressure = eventDict.pressure;\\n    }\\n    else {\\n        pressure = buttons ? 0.5 : 0;\\n    }\\n    return pressure;\\n}\\n/**\\n * Checks if the `buttons` property is supported.\\n */\\n(function () {\\n    try {\\n        var ev = new MouseEvent('click', { buttons: 1 });\\n        HAS_BUTTONS = ev.buttons === 1;\\n    }\\n    catch (e) {\\n        // pass\\n    }\\n})();\\nexport default PointerEvent;\\n//# sourceMappingURL=PointerEvent.js.map\",\"/**\\n * @module ol/array\\n */\\n/**\\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\\n * https://github.com/darkskyapp/binary-search\\n *\\n * @param {Array<*>} haystack Items to search through.\\n * @param {*} needle The item to look for.\\n * @param {Function=} opt_comparator Comparator function.\\n * @return {number} The index of the item if found, -1 if not.\\n */\\nexport function binarySearch(haystack, needle, opt_comparator) {\\n    var mid, cmp;\\n    var comparator = opt_comparator || numberSafeCompareFunction;\\n    var low = 0;\\n    var high = haystack.length;\\n    var found = false;\\n    while (low < high) {\\n        /* Note that \\\"(low + high) >>> 1\\\" may overflow, and results in a typecast\\n         * to double (which gives the wrong results). */\\n        mid = low + (high - low >> 1);\\n        cmp = +comparator(haystack[mid], needle);\\n        if (cmp < 0.0) { /* Too low. */\\n            low = mid + 1;\\n        }\\n        else { /* Key found or too high */\\n            high = mid;\\n            found = !cmp;\\n        }\\n    }\\n    /* Key not found. */\\n    return found ? low : ~low;\\n}\\n/**\\n * Compare function for array sort that is safe for numbers.\\n * @param {*} a The first object to be compared.\\n * @param {*} b The second object to be compared.\\n * @return {number} A negative number, zero, or a positive number as the first\\n *     argument is less than, equal to, or greater than the second.\\n */\\nexport function numberSafeCompareFunction(a, b) {\\n    return a > b ? 1 : a < b ? -1 : 0;\\n}\\n/**\\n * Whether the array contains the given object.\\n * @param {Array<*>} arr The array to test for the presence of the element.\\n * @param {*} obj The object for which to test.\\n * @return {boolean} The object is in the array.\\n */\\nexport function includes(arr, obj) {\\n    return arr.indexOf(obj) >= 0;\\n}\\n/**\\n * @param {Array<number>} arr Array.\\n * @param {number} target Target.\\n * @param {number} direction 0 means return the nearest, > 0\\n *    means return the largest nearest, < 0 means return the\\n *    smallest nearest.\\n * @return {number} Index.\\n */\\nexport function linearFindNearest(arr, target, direction) {\\n    var n = arr.length;\\n    if (arr[0] <= target) {\\n        return 0;\\n    }\\n    else if (target <= arr[n - 1]) {\\n        return n - 1;\\n    }\\n    else {\\n        var i = void 0;\\n        if (direction > 0) {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] < target) {\\n                    return i - 1;\\n                }\\n            }\\n        }\\n        else if (direction < 0) {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] <= target) {\\n                    return i;\\n                }\\n            }\\n        }\\n        else {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] == target) {\\n                    return i;\\n                }\\n                else if (arr[i] < target) {\\n                    if (arr[i - 1] - target < target - arr[i]) {\\n                        return i - 1;\\n                    }\\n                    else {\\n                        return i;\\n                    }\\n                }\\n            }\\n        }\\n        return n - 1;\\n    }\\n}\\n/**\\n * @param {Array<*>} arr Array.\\n * @param {number} begin Begin index.\\n * @param {number} end End index.\\n */\\nexport function reverseSubArray(arr, begin, end) {\\n    while (begin < end) {\\n        var tmp = arr[begin];\\n        arr[begin] = arr[end];\\n        arr[end] = tmp;\\n        ++begin;\\n        --end;\\n    }\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\\n * @template VALUE\\n */\\nexport function extend(arr, data) {\\n    var extension = Array.isArray(data) ? data : [data];\\n    var length = extension.length;\\n    for (var i = 0; i < length; i++) {\\n        arr[arr.length] = extension[i];\\n    }\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {VALUE} obj The element to remove.\\n * @template VALUE\\n * @return {boolean} If the element was removed.\\n */\\nexport function remove(arr, obj) {\\n    var i = arr.indexOf(obj);\\n    var found = i > -1;\\n    if (found) {\\n        arr.splice(i, 1);\\n    }\\n    return found;\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to search in.\\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\\n * @template VALUE\\n * @return {VALUE|null} The element found or null.\\n */\\nexport function find(arr, func) {\\n    var length = arr.length >>> 0;\\n    var value;\\n    for (var i = 0; i < length; i++) {\\n        value = arr[i];\\n        if (func(value, i, arr)) {\\n            return value;\\n        }\\n    }\\n    return null;\\n}\\n/**\\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\\n * @return {boolean} Whether the two arrays are equal.\\n */\\nexport function equals(arr1, arr2) {\\n    var len1 = arr1.length;\\n    if (len1 !== arr2.length) {\\n        return false;\\n    }\\n    for (var i = 0; i < len1; i++) {\\n        if (arr1[i] !== arr2[i]) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * Sort the passed array such that the relative order of equal elements is preverved.\\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\\n * @param {Array<*>} arr The array to sort (modifies original).\\n * @param {!function(*, *): number} compareFnc Comparison function.\\n * @api\\n */\\nexport function stableSort(arr, compareFnc) {\\n    var length = arr.length;\\n    var tmp = Array(arr.length);\\n    var i;\\n    for (i = 0; i < length; i++) {\\n        tmp[i] = { index: i, value: arr[i] };\\n    }\\n    tmp.sort(function (a, b) {\\n        return compareFnc(a.value, b.value) || a.index - b.index;\\n    });\\n    for (i = 0; i < arr.length; i++) {\\n        arr[i] = tmp[i].value;\\n    }\\n}\\n/**\\n * @param {Array<*>} arr The array to search in.\\n * @param {Function} func Comparison function.\\n * @return {number} Return index.\\n */\\nexport function findIndex(arr, func) {\\n    var index;\\n    var found = !arr.every(function (el, idx) {\\n        index = idx;\\n        return !func(el, idx, arr);\\n    });\\n    return found ? index : -1;\\n}\\n/**\\n * @param {Array<*>} arr The array to test.\\n * @param {Function=} opt_func Comparison function.\\n * @param {boolean=} opt_strict Strictly sorted (default false).\\n * @return {boolean} Return index.\\n */\\nexport function isSorted(arr, opt_func, opt_strict) {\\n    var compare = opt_func || numberSafeCompareFunction;\\n    return arr.every(function (currentVal, index) {\\n        if (index === 0) {\\n            return true;\\n        }\\n        var res = compare(arr[index - 1], currentVal);\\n        return !(res > 0 || opt_strict && res === 0);\\n    });\\n}\\n//# sourceMappingURL=array.js.map\",\"/**\\n * @module ol/pointer/TouchSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport { remove } from '../array.js';\\nimport EventSource from './EventSource.js';\\nimport { POINTER_ID } from './MouseSource.js';\\n/**\\n * @type {number}\\n */\\nvar CLICK_COUNT_TIMEOUT = 200;\\n/**\\n * @type {string}\\n */\\nvar POINTER_TYPE = 'touch';\\n/**\\n * Handler for `touchstart`, triggers `pointerover`,\\n * `pointerenter` and `pointerdown` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchstart(inEvent) {\\n    this.vacuumTouches_(inEvent);\\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\\n    this.dedupSynthMouse_(inEvent);\\n    this.clickCount_++;\\n    this.processTouches_(inEvent, this.overDown_);\\n}\\n/**\\n * Handler for `touchmove`.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchmove(inEvent) {\\n    this.processTouches_(inEvent, this.moveOverOut_);\\n}\\n/**\\n * Handler for `touchend`, triggers `pointerup`,\\n * `pointerout` and `pointerleave` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The event.\\n */\\nfunction touchend(inEvent) {\\n    this.dedupSynthMouse_(inEvent);\\n    this.processTouches_(inEvent, this.upOut_);\\n}\\n/**\\n * Handler for `touchcancel`, triggers `pointercancel`,\\n * `pointerout` and `pointerleave` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchcancel(inEvent) {\\n    this.processTouches_(inEvent, this.cancelOut_);\\n}\\nvar TouchSource = /** @class */ (function (_super) {\\n    __extends(TouchSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher The event handler.\\n     * @param {import(\\\"./MouseSource.js\\\").default} mouseSource Mouse source.\\n     */\\n    function TouchSource(dispatcher, mouseSource) {\\n        var _this = this;\\n        var mapping = {\\n            'touchstart': touchstart,\\n            'touchmove': touchmove,\\n            'touchend': touchend,\\n            'touchcancel': touchcancel\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        /**\\n         * @const\\n         * @type {import(\\\"./MouseSource.js\\\").default}\\n         */\\n        _this.mouseSource = mouseSource;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.firstTouchId_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.clickCount_ = 0;\\n        /**\\n         * @private\\n         * @type {?}\\n         */\\n        _this.resetId_;\\n        /**\\n         * Mouse event timeout: This should be long enough to\\n         * ignore compat mouse events made by touch.\\n         * @private\\n         * @type {number}\\n         */\\n        _this.dedupTimeout_ = 2500;\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     * @param {Touch} inTouch The in touch.\\n     * @return {boolean} True, if this is the primary touch.\\n     */\\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\\n        return this.firstTouchId_ === inTouch.identifier;\\n    };\\n    /**\\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\\n     * @param {Touch} inTouch The in touch.\\n     * @private\\n     */\\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\\n        var count = Object.keys(this.pointerMap).length;\\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\\n            this.firstTouchId_ = inTouch.identifier;\\n            this.cancelResetClickCount_();\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {PointerEvent} inPointer The in pointer object.\\n     */\\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\\n        if (inPointer.isPrimary) {\\n            this.firstTouchId_ = undefined;\\n            this.resetClickCount_();\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.resetClickCount_ = function () {\\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.resetClickCountHandler_ = function () {\\n        this.clickCount_ = 0;\\n        this.resetId_ = undefined;\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.cancelResetClickCount_ = function () {\\n        if (this.resetId_ !== undefined) {\\n            clearTimeout(this.resetId_);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent Browser event\\n     * @param {Touch} inTouch Touch event\\n     * @return {PointerEvent} A pointer object.\\n     */\\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\\n        // Spec specifies that pointerId 1 is reserved for Mouse.\\n        // Touch identifiers can start at 0.\\n        // Add 2 to the touch identifier for compatibility.\\n        e.pointerId = inTouch.identifier + 2;\\n        // TODO: check if this is necessary?\\n        //e.target = findTarget(e);\\n        e.bubbles = true;\\n        e.cancelable = true;\\n        e.detail = this.clickCount_;\\n        e.button = 0;\\n        e.buttons = 1;\\n        e.width = inTouch.radiusX || 0;\\n        e.height = inTouch.radiusY || 0;\\n        e.pressure = inTouch.force || 0.5;\\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\\n        e.pointerType = POINTER_TYPE;\\n        // make sure that the properties that are different for\\n        // each `Touch` object are not copied from the BrowserEvent object\\n        e.clientX = inTouch.clientX;\\n        e.clientY = inTouch.clientY;\\n        e.screenX = inTouch.screenX;\\n        e.screenY = inTouch.screenY;\\n        return e;\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} inEvent Touch event\\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\\n     */\\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\\n        var count = touches.length;\\n        function preventDefault() {\\n            inEvent.preventDefault();\\n        }\\n        for (var i = 0; i < count; ++i) {\\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\\n            // forward touch preventDefaults\\n            pointer.preventDefault = preventDefault;\\n            inFunction.call(this, inEvent, pointer);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchList} touchList The touch list.\\n     * @param {number} searchId Search identifier.\\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\\n     */\\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\\n        var l = touchList.length;\\n        for (var i = 0; i < l; i++) {\\n            var touch = touchList[i];\\n            if (touch.identifier === searchId) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * In some instances, a touchstart can happen without a touchend. This\\n     * leaves the pointermap in a broken state.\\n     * Therefore, on every touchstart, we remove the touches that did not fire a\\n     * touchend event.\\n     * To keep state globally consistent, we fire a pointercancel for\\n     * this \\\"abandoned\\\" touch\\n     *\\n     * @private\\n     * @param {TouchEvent} inEvent The in event.\\n     */\\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\\n        var touchList = inEvent.touches;\\n        // pointerMap.getCount() should be < touchList.length here,\\n        // as the touchstart has not been processed yet.\\n        var keys = Object.keys(this.pointerMap);\\n        var count = keys.length;\\n        if (count >= touchList.length) {\\n            var d = [];\\n            for (var i = 0; i < count; ++i) {\\n                var key = Number(keys[i]);\\n                var value = this.pointerMap[key];\\n                // Never remove pointerId == 1, which is mouse.\\n                // Touch identifiers are 2 smaller than their pointerId, which is the\\n                // index in pointermap.\\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\\n                    d.push(value.out);\\n                }\\n            }\\n            for (var i = 0; i < d.length; ++i) {\\n                this.cancelOut_(inEvent, d[i]);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer object.\\n     */\\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\\n        this.pointerMap[inPointer.pointerId] = {\\n            target: inPointer.target,\\n            out: inPointer,\\n            outTarget: inPointer.target\\n        };\\n        this.dispatcher.over(inPointer, browserEvent);\\n        this.dispatcher.enter(inPointer, browserEvent);\\n        this.dispatcher.down(inPointer, browserEvent);\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer.\\n     */\\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\\n        var event = inPointer;\\n        var pointer = this.pointerMap[event.pointerId];\\n        // a finger drifted off the screen, ignore it\\n        if (!pointer) {\\n            return;\\n        }\\n        var outEvent = pointer.out;\\n        var outTarget = pointer.outTarget;\\n        this.dispatcher.move(event, browserEvent);\\n        if (outEvent && outTarget !== event.target) {\\n            outEvent.relatedTarget = event.target;\\n            /** @type {Object} */ (event).relatedTarget = outTarget;\\n            // recover from retargeting by shadow\\n            outEvent.target = outTarget;\\n            if (event.target) {\\n                this.dispatcher.leaveOut(outEvent, browserEvent);\\n                this.dispatcher.enterOver(event, browserEvent);\\n            }\\n            else {\\n                // clean up case when finger leaves the screen\\n                /** @type {Object} */ (event).target = outTarget;\\n                /** @type {Object} */ (event).relatedTarget = null;\\n                this.cancelOut_(browserEvent, event);\\n            }\\n        }\\n        pointer.out = event;\\n        pointer.outTarget = event.target;\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent An event.\\n     * @param {PointerEvent} inPointer The inPointer object.\\n     */\\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\\n        this.dispatcher.up(inPointer, browserEvent);\\n        this.dispatcher.out(inPointer, browserEvent);\\n        this.dispatcher.leave(inPointer, browserEvent);\\n        this.cleanUpPointer_(inPointer);\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer.\\n     */\\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\\n        this.dispatcher.cancel(inPointer, browserEvent);\\n        this.dispatcher.out(inPointer, browserEvent);\\n        this.dispatcher.leave(inPointer, browserEvent);\\n        this.cleanUpPointer_(inPointer);\\n    };\\n    /**\\n     * @private\\n     * @param {PointerEvent} inPointer The inPointer object.\\n     */\\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\\n        delete this.pointerMap[inPointer.pointerId];\\n        this.removePrimaryPointer_(inPointer);\\n    };\\n    /**\\n     * Prevent synth mouse events from creating pointer events.\\n     *\\n     * @private\\n     * @param {TouchEvent} inEvent The in event.\\n     */\\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\\n        var lts = this.mouseSource.lastTouches;\\n        var t = inEvent.changedTouches[0];\\n        // only the primary finger will synth mouse events\\n        if (this.isPrimaryTouch_(t)) {\\n            // remember x/y of last touch\\n            var lt_1 = [t.clientX, t.clientY];\\n            lts.push(lt_1);\\n            setTimeout(function () {\\n                // remove touch after timeout\\n                remove(lts, lt_1);\\n            }, this.dedupTimeout_);\\n        }\\n    };\\n    return TouchSource;\\n}(EventSource));\\nexport default TouchSource;\\n//# sourceMappingURL=TouchSource.js.map\",\"/**\\n * @module ol/pointer/PointerEventHandler\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport { listen, unlisten } from '../events.js';\\nimport EventTarget from '../events/Target.js';\\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\\nimport PointerEventType from './EventType.js';\\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\\nimport MsSource from './MsSource.js';\\nimport NativeSource from './NativeSource.js';\\nimport PointerEvent from './PointerEvent.js';\\nimport TouchSource from './TouchSource.js';\\n/**\\n * Properties to copy when cloning an event, with default values.\\n * @type {Array<Array>}\\n */\\nvar CLONE_PROPS = [\\n    // MouseEvent\\n    ['bubbles', false],\\n    ['cancelable', false],\\n    ['view', null],\\n    ['detail', null],\\n    ['screenX', 0],\\n    ['screenY', 0],\\n    ['clientX', 0],\\n    ['clientY', 0],\\n    ['ctrlKey', false],\\n    ['altKey', false],\\n    ['shiftKey', false],\\n    ['metaKey', false],\\n    ['button', 0],\\n    ['relatedTarget', null],\\n    // DOM Level 3\\n    ['buttons', 0],\\n    // PointerEvent\\n    ['pointerId', 0],\\n    ['width', 0],\\n    ['height', 0],\\n    ['pressure', 0],\\n    ['tiltX', 0],\\n    ['tiltY', 0],\\n    ['pointerType', ''],\\n    ['hwTimestamp', 0],\\n    ['isPrimary', false],\\n    // event instance\\n    ['type', ''],\\n    ['target', null],\\n    ['currentTarget', null],\\n    ['which', 0]\\n];\\nvar PointerEventHandler = /** @class */ (function (_super) {\\n    __extends(PointerEventHandler, _super);\\n    /**\\n     * @param {Element|HTMLDocument} element Viewport element.\\n     */\\n    function PointerEventHandler(element) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @const\\n         * @private\\n         * @type {Element|HTMLDocument}\\n         */\\n        _this.element_ = element;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = {};\\n        /**\\n         * @type {Object<string, function(Event): void>}\\n         * @private\\n         */\\n        _this.eventMap_ = {};\\n        /**\\n         * @type {Array<import(\\\"./EventSource.js\\\").default>}\\n         * @private\\n         */\\n        _this.eventSourceList_ = [];\\n        _this.registerSources();\\n        return _this;\\n    }\\n    /**\\n     * Set up the event sources (mouse, touch and native pointers)\\n     * that generate pointer events.\\n     */\\n    PointerEventHandler.prototype.registerSources = function () {\\n        if (POINTER) {\\n            this.registerSource('native', new NativeSource(this));\\n        }\\n        else if (MSPOINTER) {\\n            this.registerSource('ms', new MsSource(this));\\n        }\\n        else {\\n            var mouseSource = new MouseSource(this);\\n            this.registerSource('mouse', mouseSource);\\n            if (TOUCH) {\\n                this.registerSource('touch', new TouchSource(this, mouseSource));\\n            }\\n        }\\n        // register events on the viewport element\\n        this.register_();\\n    };\\n    /**\\n     * Add a new event source that will generate pointer events.\\n     *\\n     * @param {string} name A name for the event source\\n     * @param {import(\\\"./EventSource.js\\\").default} source The source event.\\n     */\\n    PointerEventHandler.prototype.registerSource = function (name, source) {\\n        var s = source;\\n        var newEvents = s.getEvents();\\n        if (newEvents) {\\n            newEvents.forEach(function (e) {\\n                var handler = s.getHandlerForEvent(e);\\n                if (handler) {\\n                    this.eventMap_[e] = handler.bind(s);\\n                }\\n            }.bind(this));\\n            this.eventSourceList_.push(s);\\n        }\\n    };\\n    /**\\n     * Set up the events for all registered event sources.\\n     * @private\\n     */\\n    PointerEventHandler.prototype.register_ = function () {\\n        var l = this.eventSourceList_.length;\\n        for (var i = 0; i < l; i++) {\\n            var eventSource = this.eventSourceList_[i];\\n            this.addEvents_(eventSource.getEvents());\\n        }\\n    };\\n    /**\\n     * Remove all registered events.\\n     * @private\\n     */\\n    PointerEventHandler.prototype.unregister_ = function () {\\n        var l = this.eventSourceList_.length;\\n        for (var i = 0; i < l; i++) {\\n            var eventSource = this.eventSourceList_[i];\\n            this.removeEvents_(eventSource.getEvents());\\n        }\\n    };\\n    /**\\n     * Calls the right handler for a new event.\\n     * @private\\n     * @param {Event} inEvent Browser event.\\n     */\\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\\n        var type = inEvent.type;\\n        var handler = this.eventMap_[type];\\n        if (handler) {\\n            handler(inEvent);\\n        }\\n    };\\n    /**\\n     * Setup listeners for the given events.\\n     * @private\\n     * @param {Array<string>} events List of events.\\n     */\\n    PointerEventHandler.prototype.addEvents_ = function (events) {\\n        events.forEach(function (eventName) {\\n            listen(this.element_, eventName, this.eventHandler_, this);\\n        }.bind(this));\\n    };\\n    /**\\n     * Unregister listeners for the given events.\\n     * @private\\n     * @param {Array<string>} events List of events.\\n     */\\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\\n        events.forEach(function (e) {\\n            unlisten(this.element_, e, this.eventHandler_, this);\\n        }.bind(this));\\n    };\\n    /**\\n     * Returns a snapshot of inEvent, with writable properties.\\n     *\\n     * @param {Event} event Browser event.\\n     * @param {Event|Touch} inEvent An event that contains\\n     *    properties to copy.\\n     * @return {Object} An object containing shallow copies of\\n     *    `inEvent`'s properties.\\n     */\\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\\n        var eventCopy = {};\\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\\n            var p = CLONE_PROPS[i][0];\\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\\n        }\\n        return eventCopy;\\n    };\\n    // EVENTS\\n    /**\\n     * Triggers a 'pointerdown' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.down = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointermove' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.move = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerup' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.up = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerenter' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.enter = function (data, event) {\\n        data.bubbles = false;\\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerleave' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.leave = function (data, event) {\\n        data.bubbles = false;\\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerover' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.over = function (data, event) {\\n        data.bubbles = true;\\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerout' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.out = function (data, event) {\\n        data.bubbles = true;\\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointercancel' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.cancel = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\\n    };\\n    /**\\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\\n        this.out(data, event);\\n        if (!this.contains_(data.target, data.relatedTarget)) {\\n            this.leave(data, event);\\n        }\\n    };\\n    /**\\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.enterOver = function (data, event) {\\n        this.over(data, event);\\n        if (!this.contains_(data.target, data.relatedTarget)) {\\n            this.enter(data, event);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {Element} container The container element.\\n     * @param {Element} contained The contained element.\\n     * @return {boolean} Returns true if the container element\\n     *   contains the other element.\\n     */\\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\\n        if (!container || !contained) {\\n            return false;\\n        }\\n        return container.contains(contained);\\n    };\\n    // EVENT CREATION AND TRACKING\\n    /**\\n     * Creates a new Event of type `inType`, based on the information in\\n     * `data`.\\n     *\\n     * @param {string} inType A string representing the type of event to create.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     * @return {PointerEvent} A PointerEvent of type `inType`.\\n     */\\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\\n        return new PointerEvent(inType, event, data);\\n    };\\n    /**\\n     * Make and dispatch an event in one call.\\n     * @param {string} inType A string representing the type of event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\\n        var e = this.makeEvent(inType, data, event);\\n        this.dispatchEvent(e);\\n    };\\n    /**\\n     * Creates a pointer event from a native pointer event\\n     * and dispatches this event.\\n     * @param {Event} event A platform event with a target.\\n     */\\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\\n        var e = this.makeEvent(event.type, event, event);\\n        this.dispatchEvent(e);\\n    };\\n    /**\\n     * Wrap a native mouse event into a pointer event.\\n     * This proxy method is required for the legacy IE support.\\n     * @param {string} eventType The pointer event type.\\n     * @param {Event} event The event.\\n     * @return {PointerEvent} The wrapped event.\\n     */\\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\\n        return pointerEvent;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PointerEventHandler.prototype.disposeInternal = function () {\\n        this.unregister_();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return PointerEventHandler;\\n}(EventTarget));\\nexport default PointerEventHandler;\\n//# sourceMappingURL=PointerEventHandler.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserEventHandler\\n */\\nimport { DEVICE_PIXEL_RATIO } from './has.js';\\nimport MapBrowserEventType from './MapBrowserEventType.js';\\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\\nimport { listen, unlistenByKey } from './events.js';\\nimport EventTarget from './events/Target.js';\\nimport PointerEventType from './pointer/EventType.js';\\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\\n    __extends(MapBrowserEventHandler, _super);\\n    /**\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map The map with the viewport to listen to events on.\\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\\n     */\\n    function MapBrowserEventHandler(map, moveTolerance) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * This is the element that we will listen to the real events on.\\n         * @type {import(\\\"./PluggableMap.js\\\").default}\\n         * @private\\n         */\\n        _this.map_ = map;\\n        /**\\n         * @type {any}\\n         * @private\\n         */\\n        _this.clickTimeoutId_;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.dragging_ = false;\\n        /**\\n         * @type {!Array<import(\\\"./events.js\\\").EventsKey>}\\n         * @private\\n         */\\n        _this.dragListenerKeys_ = [];\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.moveTolerance_ = moveTolerance ?\\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\\n        /**\\n         * The most recent \\\"down\\\" type event (or null if none have occurred).\\n         * Set on pointerdown.\\n         * @type {import(\\\"./pointer/PointerEvent.js\\\").default}\\n         * @private\\n         */\\n        _this.down_ = null;\\n        var element = _this.map_.getViewport();\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.activePointers_ = 0;\\n        /**\\n         * @type {!Object<number, boolean>}\\n         * @private\\n         */\\n        _this.trackedTouches_ = {};\\n        /**\\n         * Event handler which generates pointer events for\\n         * the viewport element.\\n         *\\n         * @type {PointerEventHandler}\\n         * @private\\n         */\\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\\n        /**\\n         * Event handler which generates pointer events for\\n         * the document (used when dragging).\\n         *\\n         * @type {PointerEventHandler}\\n         * @private\\n         */\\n        _this.documentPointerEventHandler_ = null;\\n        /**\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         * @private\\n         */\\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\\n        /**\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         * @private\\n         */\\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\\n        return _this;\\n    }\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        if (this.clickTimeoutId_ !== undefined) {\\n            // double-click\\n            clearTimeout(this.clickTimeoutId_);\\n            this.clickTimeoutId_ = undefined;\\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\\n            this.dispatchEvent(newEvent);\\n        }\\n        else {\\n            // click\\n            this.clickTimeoutId_ = setTimeout(function () {\\n                this.clickTimeoutId_ = undefined;\\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\\n                this.dispatchEvent(newEvent);\\n            }.bind(this), 250);\\n        }\\n    };\\n    /**\\n     * Keeps track on how many pointers are currently active.\\n     *\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\\n        var event = pointerEvent;\\n        if (event.type == MapBrowserEventType.POINTERUP ||\\n            event.type == MapBrowserEventType.POINTERCANCEL) {\\n            delete this.trackedTouches_[event.pointerId];\\n        }\\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\\n            this.trackedTouches_[event.pointerId] = true;\\n        }\\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\\n        this.updateActivePointers_(pointerEvent);\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        // We emulate click events on left mouse button click, touch contact, and pen\\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\\n        // to 0).\\n        // See http://www.w3.org/TR/pointerevents/#button-states\\n        // We only fire click, singleclick, and doubleclick if nobody has called\\n        // event.stopPropagation() or event.preventDefault().\\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\\n            this.emulateClick_(this.down_);\\n        }\\n        if (this.activePointers_ === 0) {\\n            this.dragListenerKeys_.forEach(unlistenByKey);\\n            this.dragListenerKeys_.length = 0;\\n            this.dragging_ = false;\\n            this.down_ = null;\\n            this.documentPointerEventHandler_.dispose();\\n            this.documentPointerEventHandler_ = null;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @return {boolean} If the left mouse button was pressed.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\\n        return pointerEvent.button === 0;\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\\n        this.updateActivePointers_(pointerEvent);\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        this.down_ = pointerEvent;\\n        if (this.dragListenerKeys_.length === 0) {\\n            /* Set up a pointer event handler on the `document`,\\n             * which is required when the pointer is moved outside\\n             * the viewport when dragging.\\n             */\\n            this.documentPointerEventHandler_ =\\n                new PointerEventHandler(document);\\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \\n            /* Note that the listener for `pointercancel is set up on\\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\\n             * the `pointerup` and `pointermove` listeners.\\n             *\\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\\n             * issues `pointercancel` events, when there was no `touchend` for a\\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\\n             * But `documentPointerEventHandler_` doesn't know about the first\\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\\n             * only registered there.\\n             */\\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\\n        // Between pointerdown and pointerup, pointermove events are triggered.\\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\\n        // moved a significant distance.\\n        if (this.isMoving_(pointerEvent)) {\\n            this.dragging_ = true;\\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\\n            this.dispatchEvent(newEvent);\\n        }\\n        // Some native android browser triggers mousemove events during small period\\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\\n        // https://code.google.com/p/android/issues/detail?id=19827\\n        // ex: Galaxy Tab P3110 + Android 4.1.1\\n        pointerEvent.preventDefault();\\n    };\\n    /**\\n     * Wrap and relay a pointer event.  Note that this requires that the type\\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @return {boolean} Is moving.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\\n        return this.dragging_ ||\\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\\n        if (this.relayedListenerKey_) {\\n            unlistenByKey(this.relayedListenerKey_);\\n            this.relayedListenerKey_ = null;\\n        }\\n        if (this.pointerdownListenerKey_) {\\n            unlistenByKey(this.pointerdownListenerKey_);\\n            this.pointerdownListenerKey_ = null;\\n        }\\n        this.dragListenerKeys_.forEach(unlistenByKey);\\n        this.dragListenerKeys_.length = 0;\\n        if (this.documentPointerEventHandler_) {\\n            this.documentPointerEventHandler_.dispose();\\n            this.documentPointerEventHandler_ = null;\\n        }\\n        if (this.pointerEventHandler_) {\\n            this.pointerEventHandler_.dispose();\\n            this.pointerEventHandler_ = null;\\n        }\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return MapBrowserEventHandler;\\n}(EventTarget));\\nexport default MapBrowserEventHandler;\\n//# sourceMappingURL=MapBrowserEventHandler.js.map\",\"/**\\n * @module ol/MapEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered after a map frame is rendered.\\n     * @event module:ol/MapEvent~MapEvent#postrender\\n     * @api\\n     */\\n    POSTRENDER: 'postrender',\\n    /**\\n     * Triggered when the map starts moving.\\n     * @event module:ol/MapEvent~MapEvent#movestart\\n     * @api\\n     */\\n    MOVESTART: 'movestart',\\n    /**\\n     * Triggered after the map is moved.\\n     * @event module:ol/MapEvent~MapEvent#moveend\\n     * @api\\n     */\\n    MOVEEND: 'moveend'\\n};\\n//# sourceMappingURL=MapEventType.js.map\",\"/**\\n * @module ol/MapProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    LAYERGROUP: 'layergroup',\\n    SIZE: 'size',\\n    TARGET: 'target',\\n    VIEW: 'view'\\n};\\n//# sourceMappingURL=MapProperty.js.map\",\"/**\\n * @module ol/render/EventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered before a layer is rendered.\\n     * @event module:ol/render/Event~RenderEvent#prerender\\n     * @api\\n     */\\n    PRERENDER: 'prerender',\\n    /**\\n     * Triggered after a layer is rendered.\\n     * @event module:ol/render/Event~RenderEvent#postrender\\n     * @api\\n     */\\n    POSTRENDER: 'postrender',\\n    /**\\n     * Triggered before layers are rendered.\\n     * @event module:ol/render/Event~RenderEvent#precompose\\n     * @api\\n     */\\n    PRECOMPOSE: 'precompose',\\n    /**\\n     * Triggered after all layers are rendered.\\n     * @event module:ol/render/Event~RenderEvent#postcompose\\n     * @api\\n     */\\n    POSTCOMPOSE: 'postcompose',\\n    /**\\n     * Triggered when rendering is complete, i.e. all sources and tiles have\\n     * finished loading for the current viewport, and all tiles are faded in.\\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\\n     * @api\\n     */\\n    RENDERCOMPLETE: 'rendercomplete'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"/**\\n * @module ol/TileState\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    IDLE: 0,\\n    LOADING: 1,\\n    LOADED: 2,\\n    /**\\n     * Indicates that tile loading failed\\n     * @type {number}\\n     */\\n    ERROR: 3,\\n    EMPTY: 4,\\n    ABORT: 5\\n};\\n//# sourceMappingURL=TileState.js.map\",\"/**\\n * @module ol/asserts\\n */\\nimport AssertionError from './AssertionError.js';\\n/**\\n * @param {*} assertion Assertion we expected to be truthy.\\n * @param {number} errorCode Error code.\\n */\\nexport function assert(assertion, errorCode) {\\n    if (!assertion) {\\n        throw new AssertionError(errorCode);\\n    }\\n}\\n//# sourceMappingURL=asserts.js.map\",\"/**\\n * @module ol/structs/PriorityQueue\\n */\\nimport { assert } from '../asserts.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @type {number}\\n */\\nexport var DROP = Infinity;\\n/**\\n * @classdesc\\n * Priority queue.\\n *\\n * The implementation is inspired from the Closure Library's Heap class and\\n * Python's heapq module.\\n *\\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\\n *\\n * @template T\\n */\\nvar PriorityQueue = /** @class */ (function () {\\n    /**\\n     * @param {function(T): number} priorityFunction Priority function.\\n     * @param {function(T): string} keyFunction Key function.\\n     */\\n    function PriorityQueue(priorityFunction, keyFunction) {\\n        /**\\n         * @type {function(T): number}\\n         * @private\\n         */\\n        this.priorityFunction_ = priorityFunction;\\n        /**\\n         * @type {function(T): string}\\n         * @private\\n         */\\n        this.keyFunction_ = keyFunction;\\n        /**\\n         * @type {Array<T>}\\n         * @private\\n         */\\n        this.elements_ = [];\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        this.priorities_ = [];\\n        /**\\n         * @type {!Object<string, boolean>}\\n         * @private\\n         */\\n        this.queuedElements_ = {};\\n    }\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    PriorityQueue.prototype.clear = function () {\\n        this.elements_.length = 0;\\n        this.priorities_.length = 0;\\n        clear(this.queuedElements_);\\n    };\\n    /**\\n     * Remove and return the highest-priority element. O(log N).\\n     * @return {T} Element.\\n     */\\n    PriorityQueue.prototype.dequeue = function () {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var element = elements[0];\\n        if (elements.length == 1) {\\n            elements.length = 0;\\n            priorities.length = 0;\\n        }\\n        else {\\n            elements[0] = elements.pop();\\n            priorities[0] = priorities.pop();\\n            this.siftUp_(0);\\n        }\\n        var elementKey = this.keyFunction_(element);\\n        delete this.queuedElements_[elementKey];\\n        return element;\\n    };\\n    /**\\n     * Enqueue an element. O(log N).\\n     * @param {T} element Element.\\n     * @return {boolean} The element was added to the queue.\\n     */\\n    PriorityQueue.prototype.enqueue = function (element) {\\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\\n        var priority = this.priorityFunction_(element);\\n        if (priority != DROP) {\\n            this.elements_.push(element);\\n            this.priorities_.push(priority);\\n            this.queuedElements_[this.keyFunction_(element)] = true;\\n            this.siftDown_(0, this.elements_.length - 1);\\n            return true;\\n        }\\n        return false;\\n    };\\n    /**\\n     * @return {number} Count.\\n     */\\n    PriorityQueue.prototype.getCount = function () {\\n        return this.elements_.length;\\n    };\\n    /**\\n     * Gets the index of the left child of the node at the given index.\\n     * @param {number} index The index of the node to get the left child for.\\n     * @return {number} The index of the left child.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\\n        return index * 2 + 1;\\n    };\\n    /**\\n     * Gets the index of the right child of the node at the given index.\\n     * @param {number} index The index of the node to get the right child for.\\n     * @return {number} The index of the right child.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\\n        return index * 2 + 2;\\n    };\\n    /**\\n     * Gets the index of the parent of the node at the given index.\\n     * @param {number} index The index of the node to get the parent for.\\n     * @return {number} The index of the parent.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\\n        return (index - 1) >> 1;\\n    };\\n    /**\\n     * Make this a heap. O(N).\\n     * @private\\n     */\\n    PriorityQueue.prototype.heapify_ = function () {\\n        var i;\\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\\n            this.siftUp_(i);\\n        }\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    PriorityQueue.prototype.isEmpty = function () {\\n        return this.elements_.length === 0;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @return {boolean} Is key queued.\\n     */\\n    PriorityQueue.prototype.isKeyQueued = function (key) {\\n        return key in this.queuedElements_;\\n    };\\n    /**\\n     * @param {T} element Element.\\n     * @return {boolean} Is queued.\\n     */\\n    PriorityQueue.prototype.isQueued = function (element) {\\n        return this.isKeyQueued(this.keyFunction_(element));\\n    };\\n    /**\\n     * @param {number} index The index of the node to move down.\\n     * @private\\n     */\\n    PriorityQueue.prototype.siftUp_ = function (index) {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var count = elements.length;\\n        var element = elements[index];\\n        var priority = priorities[index];\\n        var startIndex = index;\\n        while (index < (count >> 1)) {\\n            var lIndex = this.getLeftChildIndex_(index);\\n            var rIndex = this.getRightChildIndex_(index);\\n            var smallerChildIndex = rIndex < count &&\\n                priorities[rIndex] < priorities[lIndex] ?\\n                rIndex : lIndex;\\n            elements[index] = elements[smallerChildIndex];\\n            priorities[index] = priorities[smallerChildIndex];\\n            index = smallerChildIndex;\\n        }\\n        elements[index] = element;\\n        priorities[index] = priority;\\n        this.siftDown_(startIndex, index);\\n    };\\n    /**\\n     * @param {number} startIndex The index of the root.\\n     * @param {number} index The index of the node to move up.\\n     * @private\\n     */\\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var element = elements[index];\\n        var priority = priorities[index];\\n        while (index > startIndex) {\\n            var parentIndex = this.getParentIndex_(index);\\n            if (priorities[parentIndex] > priority) {\\n                elements[index] = elements[parentIndex];\\n                priorities[index] = priorities[parentIndex];\\n                index = parentIndex;\\n            }\\n            else {\\n                break;\\n            }\\n        }\\n        elements[index] = element;\\n        priorities[index] = priority;\\n    };\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    PriorityQueue.prototype.reprioritize = function () {\\n        var priorityFunction = this.priorityFunction_;\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var index = 0;\\n        var n = elements.length;\\n        var element, i, priority;\\n        for (i = 0; i < n; ++i) {\\n            element = elements[i];\\n            priority = priorityFunction(element);\\n            if (priority == DROP) {\\n                delete this.queuedElements_[this.keyFunction_(element)];\\n            }\\n            else {\\n                priorities[index] = priority;\\n                elements[index++] = element;\\n            }\\n        }\\n        elements.length = index;\\n        priorities.length = index;\\n        this.heapify_();\\n    };\\n    return PriorityQueue;\\n}());\\nexport default PriorityQueue;\\n//# sourceMappingURL=PriorityQueue.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/TileQueue\\n */\\nimport TileState from './TileState.js';\\nimport { listen, unlisten } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport PriorityQueue from './structs/PriorityQueue.js';\\n/**\\n * @typedef {function(import(\\\"./Tile.js\\\").default, string, import(\\\"./coordinate.js\\\").Coordinate, number): number} PriorityFunction\\n */\\nvar TileQueue = /** @class */ (function (_super) {\\n    __extends(TileQueue, _super);\\n    /**\\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\\n     */\\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\\n        var _this = _super.call(this, \\n        /**\\n         * @param {Array} element Element.\\n         * @return {number} Priority.\\n         */\\n        function (element) {\\n            return tilePriorityFunction.apply(null, element);\\n        }, \\n        /**\\n         * @param {Array} element Element.\\n         * @return {string} Key.\\n         */\\n        function (element) {\\n            return ( /** @type {import(\\\"./Tile.js\\\").default} */(element[0]).getKey());\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {function(): ?}\\n         */\\n        _this.tileChangeCallback_ = tileChangeCallback;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.tilesLoading_ = 0;\\n        /**\\n         * @private\\n         * @type {!Object<string,boolean>}\\n         */\\n        _this.tilesLoadingKeys_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    TileQueue.prototype.enqueue = function (element) {\\n        var added = _super.prototype.enqueue.call(this, element);\\n        if (added) {\\n            var tile = element[0];\\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\\n        }\\n        return added;\\n    };\\n    /**\\n     * @return {number} Number of tiles loading.\\n     */\\n    TileQueue.prototype.getTilesLoading = function () {\\n        return this.tilesLoading_;\\n    };\\n    /**\\n     * @param {import(\\\"./events/Event.js\\\").default} event Event.\\n     * @protected\\n     */\\n    TileQueue.prototype.handleTileChange = function (event) {\\n        var tile = /** @type {import(\\\"./Tile.js\\\").default} */ (event.target);\\n        var state = tile.getState();\\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\\n            state === TileState.EMPTY || state === TileState.ABORT) {\\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\\n            var tileKey = tile.getKey();\\n            if (tileKey in this.tilesLoadingKeys_) {\\n                delete this.tilesLoadingKeys_[tileKey];\\n                --this.tilesLoading_;\\n            }\\n            this.tileChangeCallback_();\\n        }\\n    };\\n    /**\\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\\n     */\\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\\n        var newLoads = 0;\\n        var abortedTiles = false;\\n        var state, tile, tileKey;\\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\\n            this.getCount() > 0) {\\n            tile = /** @type {import(\\\"./Tile.js\\\").default} */ (this.dequeue()[0]);\\n            tileKey = tile.getKey();\\n            state = tile.getState();\\n            if (state === TileState.ABORT) {\\n                abortedTiles = true;\\n            }\\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\\n                this.tilesLoadingKeys_[tileKey] = true;\\n                ++this.tilesLoading_;\\n                ++newLoads;\\n                tile.load();\\n            }\\n        }\\n        if (newLoads === 0 && abortedTiles) {\\n            // Do not stop the render loop when all wanted tiles were aborted due to\\n            // a small, saturated tile cache.\\n            this.tileChangeCallback_();\\n        }\\n    };\\n    return TileQueue;\\n}(PriorityQueue));\\nexport default TileQueue;\\n//# sourceMappingURL=TileQueue.js.map\",\"/**\\n * @module ol/tilegrid/common\\n */\\n/**\\n * Default maximum zoom for default tile grids.\\n * @type {number}\\n */\\nexport var DEFAULT_MAX_ZOOM = 42;\\n/**\\n * Default tile size.\\n * @type {number}\\n */\\nexport var DEFAULT_TILE_SIZE = 256;\\n//# sourceMappingURL=common.js.map\",\"/**\\n * @module ol/math\\n */\\nimport { assert } from './asserts.js';\\n/**\\n * Takes a number and clamps it to within the provided bounds.\\n * @param {number} value The input number.\\n * @param {number} min The minimum value to return.\\n * @param {number} max The maximum value to return.\\n * @return {number} The input number if it is within bounds, or the nearest\\n *     number within the bounds.\\n */\\nexport function clamp(value, min, max) {\\n    return Math.min(Math.max(value, min), max);\\n}\\n/**\\n * Return the hyperbolic cosine of a given number. The method will use the\\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\\n * cosine will be calculated via the reference implementation of the Mozilla\\n * developer network.\\n *\\n * @param {number} x X.\\n * @return {number} Hyperbolic cosine of x.\\n */\\nexport var cosh = (function () {\\n    // Wrapped in a iife, to save the overhead of checking for the native\\n    // implementation on every invocation.\\n    var cosh;\\n    if ('cosh' in Math) {\\n        // The environment supports the native Math.cosh function, use it…\\n        cosh = Math.cosh;\\n    }\\n    else {\\n        // … else, use the reference implementation of MDN:\\n        cosh = function (x) {\\n            var y = /** @type {Math} */ (Math).exp(x);\\n            return (y + 1 / y) / 2;\\n        };\\n    }\\n    return cosh;\\n}());\\n/**\\n * @param {number} x X.\\n * @return {number} The smallest power of two greater than or equal to x.\\n */\\nexport function roundUpToPowerOfTwo(x) {\\n    assert(0 < x, 29); // `x` must be greater than `0`\\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\\n}\\n/**\\n * Returns the square of the closest distance between the point (x, y) and the\\n * line segment (x1, y1) to (x2, y2).\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    if (dx !== 0 || dy !== 0) {\\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\\n        if (t > 1) {\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n        else if (t > 0) {\\n            x1 += dx * t;\\n            y1 += dy * t;\\n        }\\n    }\\n    return squaredDistance(x, y, x1, y1);\\n}\\n/**\\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredDistance(x1, y1, x2, y2) {\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * Solves system of linear equations using Gaussian elimination method.\\n *\\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\\n *                                     in row-major order.\\n * @return {Array<number>} The resulting vector.\\n */\\nexport function solveLinearSystem(mat) {\\n    var n = mat.length;\\n    for (var i = 0; i < n; i++) {\\n        // Find max in the i-th column (ignoring i - 1 first rows)\\n        var maxRow = i;\\n        var maxEl = Math.abs(mat[i][i]);\\n        for (var r = i + 1; r < n; r++) {\\n            var absValue = Math.abs(mat[r][i]);\\n            if (absValue > maxEl) {\\n                maxEl = absValue;\\n                maxRow = r;\\n            }\\n        }\\n        if (maxEl === 0) {\\n            return null; // matrix is singular\\n        }\\n        // Swap max row with i-th (current) row\\n        var tmp = mat[maxRow];\\n        mat[maxRow] = mat[i];\\n        mat[i] = tmp;\\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\\n        for (var j = i + 1; j < n; j++) {\\n            var coef = -mat[j][i] / mat[i][i];\\n            for (var k = i; k < n + 1; k++) {\\n                if (i == k) {\\n                    mat[j][k] = 0;\\n                }\\n                else {\\n                    mat[j][k] += coef * mat[i][k];\\n                }\\n            }\\n        }\\n    }\\n    // Solve Ax=b for upper triangular matrix A (mat)\\n    var x = new Array(n);\\n    for (var l = n - 1; l >= 0; l--) {\\n        x[l] = mat[l][n] / mat[l][l];\\n        for (var m = l - 1; m >= 0; m--) {\\n            mat[m][n] -= mat[m][l] * x[l];\\n        }\\n    }\\n    return x;\\n}\\n/**\\n * Converts radians to to degrees.\\n *\\n * @param {number} angleInRadians Angle in radians.\\n * @return {number} Angle in degrees.\\n */\\nexport function toDegrees(angleInRadians) {\\n    return angleInRadians * 180 / Math.PI;\\n}\\n/**\\n * Converts degrees to radians.\\n *\\n * @param {number} angleInDegrees Angle in degrees.\\n * @return {number} Angle in radians.\\n */\\nexport function toRadians(angleInDegrees) {\\n    return angleInDegrees * Math.PI / 180;\\n}\\n/**\\n * Returns the modulo of a / b, depending on the sign of b.\\n *\\n * @param {number} a Dividend.\\n * @param {number} b Divisor.\\n * @return {number} Modulo.\\n */\\nexport function modulo(a, b) {\\n    var r = a % b;\\n    return r * b < 0 ? r + b : r;\\n}\\n/**\\n * Calculates the linearly interpolated value of x between a and b.\\n *\\n * @param {number} a Number\\n * @param {number} b Number\\n * @param {number} x Value to be interpolated.\\n * @return {number} Interpolated value.\\n */\\nexport function lerp(a, b, x) {\\n    return a + x * (b - a);\\n}\\n//# sourceMappingURL=math.js.map\",\"/**\\n * @module ol/centerconstraint\\n */\\nimport { clamp } from './math.js';\\n/**\\n * @typedef {function((import(\\\"./coordinate.js\\\").Coordinate|undefined), number, import(\\\"./size.js\\\").Size, boolean=): (import(\\\"./coordinate.js\\\").Coordinate|undefined)} Type\\n */\\n/**\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\\n * (only during interaction and animation).\\n * @return {Type} The constraint.\\n */\\nexport function createExtent(extent, onlyCenter, smooth) {\\n    return (\\n    /**\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} center Center.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size; unused if `onlyCenter` was specified.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center.\\n     */\\n    function (center, resolution, size, opt_isMoving) {\\n        if (center) {\\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\\n            var minX = extent[0] + viewWidth / 2;\\n            var maxX = extent[2] - viewWidth / 2;\\n            var minY = extent[1] + viewHeight / 2;\\n            var maxY = extent[3] - viewHeight / 2;\\n            // note: when zooming out of bounds, min and max values for x and y may\\n            // end up inverted (min > max); this has to be accounted for\\n            if (minX > maxX) {\\n                minX = maxX = (maxX + minX) / 2;\\n            }\\n            if (minY > maxY) {\\n                minY = maxY = (maxY + minY) / 2;\\n            }\\n            var x = clamp(center[0], minX, maxX);\\n            var y = clamp(center[1], minY, maxY);\\n            var ratio = 30 * resolution;\\n            // during an interaction, allow some overscroll\\n            if (opt_isMoving && smooth) {\\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\\n            }\\n            return [x, y];\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate=} center Center.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center.\\n */\\nexport function none(center) {\\n    return center;\\n}\\n//# sourceMappingURL=centerconstraint.js.map\",\"/**\\n * @module ol/extent/Corner\\n */\\n/**\\n * Extent corner.\\n * @enum {string}\\n */\\nexport default {\\n    BOTTOM_LEFT: 'bottom-left',\\n    BOTTOM_RIGHT: 'bottom-right',\\n    TOP_LEFT: 'top-left',\\n    TOP_RIGHT: 'top-right'\\n};\\n//# sourceMappingURL=Corner.js.map\",\"/**\\n * @module ol/extent/Relationship\\n */\\n/**\\n * Relationship to an extent.\\n * @enum {number}\\n */\\nexport default {\\n    UNKNOWN: 0,\\n    INTERSECTING: 1,\\n    ABOVE: 2,\\n    RIGHT: 4,\\n    BELOW: 8,\\n    LEFT: 16\\n};\\n//# sourceMappingURL=Relationship.js.map\",\"/**\\n * @module ol/extent\\n */\\nimport { assert } from './asserts.js';\\nimport Corner from './extent/Corner.js';\\nimport Relationship from './extent/Relationship.js';\\n/**\\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\\n * @typedef {Array<number>} Extent\\n * @api\\n */\\n/**\\n * Build an extent that includes all given coordinates.\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Bounding extent.\\n * @api\\n */\\nexport function boundingExtent(coordinates) {\\n    var extent = createEmpty();\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        extendCoordinate(extent, coordinates[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Array<number>} xs Xs.\\n * @param {Array<number>} ys Ys.\\n * @param {Extent=} opt_extent Destination extent.\\n * @private\\n * @return {Extent} Extent.\\n */\\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\\n    var minX = Math.min.apply(null, xs);\\n    var minY = Math.min.apply(null, ys);\\n    var maxX = Math.max.apply(null, xs);\\n    var maxY = Math.max.apply(null, ys);\\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n}\\n/**\\n * Return extent increased by the provided value.\\n * @param {Extent} extent Extent.\\n * @param {number} value The amount by which the extent should be buffered.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function buffer(extent, value, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0] - value;\\n        opt_extent[1] = extent[1] - value;\\n        opt_extent[2] = extent[2] + value;\\n        opt_extent[3] = extent[3] + value;\\n        return opt_extent;\\n    }\\n    else {\\n        return [\\n            extent[0] - value,\\n            extent[1] - value,\\n            extent[2] + value,\\n            extent[3] + value\\n        ];\\n    }\\n}\\n/**\\n * Creates a clone of an extent.\\n *\\n * @param {Extent} extent Extent to clone.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} The clone.\\n */\\nexport function clone(extent, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0];\\n        opt_extent[1] = extent[1];\\n        opt_extent[2] = extent[2];\\n        opt_extent[3] = extent[3];\\n        return opt_extent;\\n    }\\n    else {\\n        return extent.slice();\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {number} Closest squared distance.\\n */\\nexport function closestSquaredDistanceXY(extent, x, y) {\\n    var dx, dy;\\n    if (x < extent[0]) {\\n        dx = extent[0] - x;\\n    }\\n    else if (extent[2] < x) {\\n        dx = x - extent[2];\\n    }\\n    else {\\n        dx = 0;\\n    }\\n    if (y < extent[1]) {\\n        dy = extent[1] - y;\\n    }\\n    else if (extent[3] < y) {\\n        dy = y - extent[3];\\n    }\\n    else {\\n        dy = 0;\\n    }\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @return {boolean} The coordinate is contained in the extent.\\n * @api\\n */\\nexport function containsCoordinate(extent, coordinate) {\\n    return containsXY(extent, coordinate[0], coordinate[1]);\\n}\\n/**\\n * Check if one extent contains another.\\n *\\n * An extent is deemed contained if it lies completely within the other extent,\\n * including if they share one or more edges.\\n *\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The second extent is contained by or on the edge of the\\n *     first.\\n * @api\\n */\\nexport function containsExtent(extent1, extent2) {\\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\\n}\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {number} x X coordinate.\\n * @param {number} y Y coordinate.\\n * @return {boolean} The x, y values are contained in the extent.\\n * @api\\n */\\nexport function containsXY(extent, x, y) {\\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\\n}\\n/**\\n * Get the relationship between a coordinate and extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate The coordinate.\\n * @return {Relationship} The relationship (bitwise compare with\\n *     import(\\\"./extent/Relationship.js\\\").Relationship).\\n */\\nexport function coordinateRelationship(extent, coordinate) {\\n    var minX = extent[0];\\n    var minY = extent[1];\\n    var maxX = extent[2];\\n    var maxY = extent[3];\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    var relationship = Relationship.UNKNOWN;\\n    if (x < minX) {\\n        relationship = relationship | Relationship.LEFT;\\n    }\\n    else if (x > maxX) {\\n        relationship = relationship | Relationship.RIGHT;\\n    }\\n    if (y < minY) {\\n        relationship = relationship | Relationship.BELOW;\\n    }\\n    else if (y > maxY) {\\n        relationship = relationship | Relationship.ABOVE;\\n    }\\n    if (relationship === Relationship.UNKNOWN) {\\n        relationship = Relationship.INTERSECTING;\\n    }\\n    return relationship;\\n}\\n/**\\n * Create an empty extent.\\n * @return {Extent} Empty extent.\\n * @api\\n */\\nexport function createEmpty() {\\n    return [Infinity, Infinity, -Infinity, -Infinity];\\n}\\n/**\\n * Create a new extent or update the provided extent.\\n * @param {number} minX Minimum X.\\n * @param {number} minY Minimum Y.\\n * @param {number} maxX Maximum X.\\n * @param {number} maxY Maximum Y.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = minX;\\n        opt_extent[1] = minY;\\n        opt_extent[2] = maxX;\\n        opt_extent[3] = maxY;\\n        return opt_extent;\\n    }\\n    else {\\n        return [minX, minY, maxX, maxY];\\n    }\\n}\\n/**\\n * Create a new empty extent or make the provided one empty.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateEmpty(opt_extent) {\\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    return createOrUpdate(x, y, x, y, opt_extent);\\n}\\n/**\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendCoordinates(extent, coordinates);\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\\n}\\n/**\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromRings(rings, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendRings(extent, rings);\\n}\\n/**\\n * Determine if two extents are equivalent.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The two extents are equivalent.\\n * @api\\n */\\nexport function equals(extent1, extent2) {\\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\\n}\\n/**\\n * Modify an extent to include another extent.\\n * @param {Extent} extent1 The extent to be modified.\\n * @param {Extent} extent2 The extent that will be included in the first.\\n * @return {Extent} A reference to the first (extended) extent.\\n * @api\\n */\\nexport function extend(extent1, extent2) {\\n    if (extent2[0] < extent1[0]) {\\n        extent1[0] = extent2[0];\\n    }\\n    if (extent2[2] > extent1[2]) {\\n        extent1[2] = extent2[2];\\n    }\\n    if (extent2[1] < extent1[1]) {\\n        extent1[1] = extent2[1];\\n    }\\n    if (extent2[3] > extent1[3]) {\\n        extent1[3] = extent2[3];\\n    }\\n    return extent1;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n */\\nexport function extendCoordinate(extent, coordinate) {\\n    if (coordinate[0] < extent[0]) {\\n        extent[0] = coordinate[0];\\n    }\\n    if (coordinate[0] > extent[2]) {\\n        extent[2] = coordinate[0];\\n    }\\n    if (coordinate[1] < extent[1]) {\\n        extent[1] = coordinate[1];\\n    }\\n    if (coordinate[1] > extent[3]) {\\n        extent[3] = coordinate[1];\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Extent.\\n */\\nexport function extendCoordinates(extent, coordinates) {\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        extendCoordinate(extent, coordinates[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {Extent} Extent.\\n */\\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\\n    for (; offset < end; offset += stride) {\\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @return {Extent} Extent.\\n */\\nexport function extendRings(extent, rings) {\\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\\n        extendCoordinates(extent, rings[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n */\\nexport function extendXY(extent, x, y) {\\n    extent[0] = Math.min(extent[0], x);\\n    extent[1] = Math.min(extent[1], y);\\n    extent[2] = Math.max(extent[2], x);\\n    extent[3] = Math.max(extent[3], y);\\n}\\n/**\\n * This function calls `callback` for each corner of the extent. If the\\n * callback returns a truthy value the function returns that value\\n * immediately. Otherwise the function returns `false`.\\n * @param {Extent} extent Extent.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): S} callback Callback.\\n * @return {S|boolean} Value.\\n * @template S\\n */\\nexport function forEachCorner(extent, callback) {\\n    var val;\\n    val = callback(getBottomLeft(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getBottomRight(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getTopRight(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getTopLeft(extent));\\n    if (val) {\\n        return val;\\n    }\\n    return false;\\n}\\n/**\\n * Get the size of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Area.\\n * @api\\n */\\nexport function getArea(extent) {\\n    var area = 0;\\n    if (!isEmpty(extent)) {\\n        area = getWidth(extent) * getHeight(extent);\\n    }\\n    return area;\\n}\\n/**\\n * Get the bottom left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom left coordinate.\\n * @api\\n */\\nexport function getBottomLeft(extent) {\\n    return [extent[0], extent[1]];\\n}\\n/**\\n * Get the bottom right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom right coordinate.\\n * @api\\n */\\nexport function getBottomRight(extent) {\\n    return [extent[2], extent[1]];\\n}\\n/**\\n * Get the center coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Center.\\n * @api\\n */\\nexport function getCenter(extent) {\\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\\n}\\n/**\\n * Get a corner coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @param {Corner} corner Corner.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Corner coordinate.\\n */\\nexport function getCorner(extent, corner) {\\n    var coordinate;\\n    if (corner === Corner.BOTTOM_LEFT) {\\n        coordinate = getBottomLeft(extent);\\n    }\\n    else if (corner === Corner.BOTTOM_RIGHT) {\\n        coordinate = getBottomRight(extent);\\n    }\\n    else if (corner === Corner.TOP_LEFT) {\\n        coordinate = getTopLeft(extent);\\n    }\\n    else if (corner === Corner.TOP_RIGHT) {\\n        coordinate = getTopRight(extent);\\n    }\\n    else {\\n        assert(false, 13); // Invalid corner\\n    }\\n    return coordinate;\\n}\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Enlarged area.\\n */\\nexport function getEnlargedArea(extent1, extent2) {\\n    var minX = Math.min(extent1[0], extent2[0]);\\n    var minY = Math.min(extent1[1], extent2[1]);\\n    var maxX = Math.max(extent1[2], extent2[2]);\\n    var maxY = Math.max(extent1[3], extent2[3]);\\n    return (maxX - minX) * (maxY - minY);\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} center Center.\\n * @param {number} resolution Resolution.\\n * @param {number} rotation Rotation.\\n * @param {import(\\\"./size.js\\\").Size} size Size.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\\n    var dx = resolution * size[0] / 2;\\n    var dy = resolution * size[1] / 2;\\n    var cosRotation = Math.cos(rotation);\\n    var sinRotation = Math.sin(rotation);\\n    var xCos = dx * cosRotation;\\n    var xSin = dx * sinRotation;\\n    var yCos = dy * cosRotation;\\n    var ySin = dy * sinRotation;\\n    var x = center[0];\\n    var y = center[1];\\n    var x0 = x - xCos + ySin;\\n    var x1 = x - xCos - ySin;\\n    var x2 = x + xCos - ySin;\\n    var x3 = x + xCos + ySin;\\n    var y0 = y - xSin - yCos;\\n    var y1 = y - xSin + yCos;\\n    var y2 = y + xSin + yCos;\\n    var y3 = y + xSin - yCos;\\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\\n}\\n/**\\n * Get the height of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Height.\\n * @api\\n */\\nexport function getHeight(extent) {\\n    return extent[3] - extent[1];\\n}\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Intersection area.\\n */\\nexport function getIntersectionArea(extent1, extent2) {\\n    var intersection = getIntersection(extent1, extent2);\\n    return getArea(intersection);\\n}\\n/**\\n * Get the intersection of two extents.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\\n * @return {Extent} Intersecting extent.\\n * @api\\n */\\nexport function getIntersection(extent1, extent2, opt_extent) {\\n    var intersection = opt_extent ? opt_extent : createEmpty();\\n    if (intersects(extent1, extent2)) {\\n        if (extent1[0] > extent2[0]) {\\n            intersection[0] = extent1[0];\\n        }\\n        else {\\n            intersection[0] = extent2[0];\\n        }\\n        if (extent1[1] > extent2[1]) {\\n            intersection[1] = extent1[1];\\n        }\\n        else {\\n            intersection[1] = extent2[1];\\n        }\\n        if (extent1[2] < extent2[2]) {\\n            intersection[2] = extent1[2];\\n        }\\n        else {\\n            intersection[2] = extent2[2];\\n        }\\n        if (extent1[3] < extent2[3]) {\\n            intersection[3] = extent1[3];\\n        }\\n        else {\\n            intersection[3] = extent2[3];\\n        }\\n    }\\n    else {\\n        createOrUpdateEmpty(intersection);\\n    }\\n    return intersection;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @return {number} Margin.\\n */\\nexport function getMargin(extent) {\\n    return getWidth(extent) + getHeight(extent);\\n}\\n/**\\n * Get the size (width, height) of an extent.\\n * @param {Extent} extent The extent.\\n * @return {import(\\\"./size.js\\\").Size} The extent size.\\n * @api\\n */\\nexport function getSize(extent) {\\n    return [extent[2] - extent[0], extent[3] - extent[1]];\\n}\\n/**\\n * Get the top left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top left coordinate.\\n * @api\\n */\\nexport function getTopLeft(extent) {\\n    return [extent[0], extent[3]];\\n}\\n/**\\n * Get the top right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top right coordinate.\\n * @api\\n */\\nexport function getTopRight(extent) {\\n    return [extent[2], extent[3]];\\n}\\n/**\\n * Get the width of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Width.\\n * @api\\n */\\nexport function getWidth(extent) {\\n    return extent[2] - extent[0];\\n}\\n/**\\n * Determine if one extent intersects another.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent.\\n * @return {boolean} The two extents intersect.\\n * @api\\n */\\nexport function intersects(extent1, extent2) {\\n    return extent1[0] <= extent2[2] &&\\n        extent1[2] >= extent2[0] &&\\n        extent1[1] <= extent2[3] &&\\n        extent1[3] >= extent2[1];\\n}\\n/**\\n * Determine if an extent is empty.\\n * @param {Extent} extent Extent.\\n * @return {boolean} Is empty.\\n * @api\\n */\\nexport function isEmpty(extent) {\\n    return extent[2] < extent[0] || extent[3] < extent[1];\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function returnOrUpdate(extent, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0];\\n        opt_extent[1] = extent[1];\\n        opt_extent[2] = extent[2];\\n        opt_extent[3] = extent[3];\\n        return opt_extent;\\n    }\\n    else {\\n        return extent;\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} value Value.\\n */\\nexport function scaleFromCenter(extent, value) {\\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\\n    extent[0] -= deltaX;\\n    extent[2] += deltaX;\\n    extent[1] -= deltaY;\\n    extent[3] += deltaY;\\n}\\n/**\\n * Determine if the segment between two coordinates intersects (crosses,\\n * touches, or is contained by) the provided extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} start Segment start coordinate.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} end Segment end coordinate.\\n * @return {boolean} The segment intersects the extent.\\n */\\nexport function intersectsSegment(extent, start, end) {\\n    var intersects = false;\\n    var startRel = coordinateRelationship(extent, start);\\n    var endRel = coordinateRelationship(extent, end);\\n    if (startRel === Relationship.INTERSECTING ||\\n        endRel === Relationship.INTERSECTING) {\\n        intersects = true;\\n    }\\n    else {\\n        var minX = extent[0];\\n        var minY = extent[1];\\n        var maxX = extent[2];\\n        var maxY = extent[3];\\n        var startX = start[0];\\n        var startY = start[1];\\n        var endX = end[0];\\n        var endY = end[1];\\n        var slope = (endY - startY) / (endX - startX);\\n        var x = void 0, y = void 0;\\n        if (!!(endRel & Relationship.ABOVE) &&\\n            !(startRel & Relationship.ABOVE)) {\\n            // potentially intersects top\\n            x = endX - ((endY - maxY) / slope);\\n            intersects = x >= minX && x <= maxX;\\n        }\\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\\n            !(startRel & Relationship.RIGHT)) {\\n            // potentially intersects right\\n            y = endY - ((endX - maxX) * slope);\\n            intersects = y >= minY && y <= maxY;\\n        }\\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\\n            !(startRel & Relationship.BELOW)) {\\n            // potentially intersects bottom\\n            x = endX - ((endY - minY) / slope);\\n            intersects = x >= minX && x <= maxX;\\n        }\\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\\n            !(startRel & Relationship.LEFT)) {\\n            // potentially intersects left\\n            y = endY - ((endX - minX) * slope);\\n            intersects = y >= minY && y <= maxY;\\n        }\\n    }\\n    return intersects;\\n}\\n/**\\n * Apply a transform function to the extent.\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./proj.js\\\").TransformFunction} transformFn Transform function.\\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function applyTransform(extent, transformFn, opt_extent) {\\n    var coordinates = [\\n        extent[0], extent[1],\\n        extent[0], extent[3],\\n        extent[2], extent[1],\\n        extent[2], extent[3]\\n    ];\\n    transformFn(coordinates, coordinates, 2);\\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\\n    return _boundingExtentXYs(xs, ys, opt_extent);\\n}\\n//# sourceMappingURL=extent.js.map\",\"/**\\n * @module ol/resolutionconstraint\\n */\\nimport { linearFindNearest } from './array.js';\\nimport { getHeight, getWidth } from './extent';\\nimport { clamp } from './math';\\n/**\\n * @typedef {function((number|undefined), number, import(\\\"./size.js\\\").Size, boolean=): (number|undefined)} Type\\n */\\n/**\\n * Returns a modified resolution taking into acocunt the viewport size and maximum\\n * allowed extent.\\n * @param {number} resolution Resolution\\n * @param {import(\\\"./extent.js\\\").Extent=} maxExtent Maximum allowed extent.\\n * @param {import(\\\"./size.js\\\").Size} viewportSize Viewport size.\\n * @return {number} Capped resolution.\\n */\\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\\n    return Math.min(resolution, Math.min(xResolution, yResolution));\\n}\\n/**\\n * Returns a modified resolution to be between maxResolution and minResolution while\\n * still allowing the value to be slightly out of bounds.\\n * Note: the computation is based on the logarithm function (ln):\\n *  - at 1, ln(x) is 0\\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\\n * The final result is clamped to prevent getting too far away from bounds.\\n * @param {number} resolution Resolution.\\n * @param {number} maxResolution Max resolution.\\n * @param {number} minResolution Min resolution.\\n * @return {number} Smoothed resolution.\\n */\\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\\n    var result = Math.min(resolution, maxResolution);\\n    var ratio = 50;\\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\\n    if (minResolution) {\\n        result = Math.max(result, minResolution);\\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\\n    }\\n    return clamp(result, minResolution / 2, maxResolution * 2);\\n}\\n/**\\n * @param {Array<number>} resolutions Resolutions.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var maxResolution = resolutions[0];\\n            var minResolution = resolutions[resolutions.length - 1];\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            // during interacting or animating, allow intermediary values\\n            if (opt_isMoving) {\\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n                if (!smooth) {\\n                    return clamp(resolution, minResolution, cappedMaxRes);\\n                }\\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n            }\\n            var capped = Math.min(cappedMaxRes, resolution);\\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\\n            return resolutions[z];\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number} power Power.\\n * @param {number} maxResolution Maximum resolution.\\n * @param {number=} opt_minResolution Minimum resolution.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\\n            // during interacting or animating, allow intermediary values\\n            if (opt_isMoving) {\\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n                if (!smooth) {\\n                    return clamp(resolution, minResolution, cappedMaxRes);\\n                }\\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n            }\\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\\n            var capped = Math.min(cappedMaxRes, resolution);\\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\\n            return clamp(newResolution, minResolution, cappedMaxRes);\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number} maxResolution Max resolution.\\n * @param {number} minResolution Min resolution.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n            if (!smooth || !opt_isMoving) {\\n                return clamp(resolution, minResolution, cappedMaxRes);\\n            }\\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n//# sourceMappingURL=resolutionconstraint.js.map\",\"/**\\n * @module ol/rotationconstraint\\n */\\nimport { toRadians } from './math.js';\\n/**\\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\\n */\\n/**\\n * @param {number|undefined} rotation Rotation.\\n * @return {number|undefined} Rotation.\\n */\\nexport function disable(rotation) {\\n    if (rotation !== undefined) {\\n        return 0;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {number|undefined} rotation Rotation.\\n * @return {number|undefined} Rotation.\\n */\\nexport function none(rotation) {\\n    if (rotation !== undefined) {\\n        return rotation;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {number} n N.\\n * @return {Type} Rotation constraint.\\n */\\nexport function createSnapToN(n) {\\n    var theta = 2 * Math.PI / n;\\n    return (\\n    /**\\n     * @param {number|undefined} rotation Rotation.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Rotation.\\n     */\\n    function (rotation, opt_isMoving) {\\n        if (opt_isMoving) {\\n            return rotation;\\n        }\\n        if (rotation !== undefined) {\\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\\n            return rotation;\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number=} opt_tolerance Tolerance.\\n * @return {Type} Rotation constraint.\\n */\\nexport function createSnapToZero(opt_tolerance) {\\n    var tolerance = opt_tolerance || toRadians(5);\\n    return (\\n    /**\\n     * @param {number|undefined} rotation Rotation.\\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Rotation.\\n     */\\n    function (rotation, opt_isMoving) {\\n        if (opt_isMoving) {\\n            return rotation;\\n        }\\n        if (rotation !== undefined) {\\n            if (Math.abs(rotation) <= tolerance) {\\n                return 0;\\n            }\\n            else {\\n                return rotation;\\n            }\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n//# sourceMappingURL=rotationconstraint.js.map\",\"/**\\n * @module ol/ViewHint\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    ANIMATING: 0,\\n    INTERACTING: 1\\n};\\n//# sourceMappingURL=ViewHint.js.map\",\"/**\\n * @module ol/ViewProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    CENTER: 'center',\\n    RESOLUTION: 'resolution',\\n    ROTATION: 'rotation'\\n};\\n//# sourceMappingURL=ViewProperty.js.map\",\"/**\\n * @module ol/coordinate\\n */\\nimport { modulo } from './math.js';\\nimport { padNumber } from './string.js';\\n/**\\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\\n * @typedef {Array<number>} Coordinate\\n * @api\\n */\\n/**\\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\\n * transforms it into a `{string}`.\\n *\\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\\n * @api\\n */\\n/**\\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {add} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     add(coord, [-2, 4]);\\n *     // coord is now [5.85, 51.983333]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {Coordinate} delta Delta.\\n * @return {Coordinate} The input coordinate adjusted by\\n * the given delta.\\n * @api\\n */\\nexport function add(coordinate, delta) {\\n    coordinate[0] += +delta[0];\\n    coordinate[1] += +delta[1];\\n    return coordinate;\\n}\\n/**\\n * Calculates the point closest to the passed coordinate on the passed circle.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {import(\\\"./geom/Circle.js\\\").default} circle The circle.\\n * @return {Coordinate} Closest point on the circumference.\\n */\\nexport function closestOnCircle(coordinate, circle) {\\n    var r = circle.getRadius();\\n    var center = circle.getCenter();\\n    var x0 = center[0];\\n    var y0 = center[1];\\n    var x1 = coordinate[0];\\n    var y1 = coordinate[1];\\n    var dx = x1 - x0;\\n    var dy = y1 - y0;\\n    if (dx === 0 && dy === 0) {\\n        dx = 1;\\n    }\\n    var d = Math.sqrt(dx * dx + dy * dy);\\n    var x = x0 + r * dx / d;\\n    var y = y0 + r * dy / d;\\n    return [x, y];\\n}\\n/**\\n * Calculates the point closest to the passed coordinate on the passed segment.\\n * This is the foot of the perpendicular of the coordinate to the segment when\\n * the foot is on the segment, or the closest segment coordinate when the foot\\n * is outside the segment.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {Array<Coordinate>} segment The two coordinates\\n * of the segment.\\n * @return {Coordinate} The foot of the perpendicular of\\n * the coordinate to the segment.\\n */\\nexport function closestOnSegment(coordinate, segment) {\\n    var x0 = coordinate[0];\\n    var y0 = coordinate[1];\\n    var start = segment[0];\\n    var end = segment[1];\\n    var x1 = start[0];\\n    var y1 = start[1];\\n    var x2 = end[0];\\n    var y2 = end[1];\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    var along = (dx === 0 && dy === 0) ? 0 :\\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\\n    var x, y;\\n    if (along <= 0) {\\n        x = x1;\\n        y = y1;\\n    }\\n    else if (along >= 1) {\\n        x = x2;\\n        y = y2;\\n    }\\n    else {\\n        x = x1 + along * dx;\\n        y = y1 + along * dy;\\n    }\\n    return [x, y];\\n}\\n/**\\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\\n * used to format\\n * a {Coordinate} to a string.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY();\\n *     var out = stringifyFunc(coord);\\n *     // out is now '8, 48'\\n *\\n * Example with explicitly specifying 2 fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY(2);\\n *     var out = stringifyFunc(coord);\\n *     // out is now '7.85, 47.98'\\n *\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {CoordinateFormat} Coordinate format.\\n * @api\\n */\\nexport function createStringXY(opt_fractionDigits) {\\n    return (\\n    /**\\n     * @param {Coordinate} coordinate Coordinate.\\n     * @return {string} String XY.\\n     */\\n    function (coordinate) {\\n        return toStringXY(coordinate, opt_fractionDigits);\\n    });\\n}\\n/**\\n * @param {string} hemispheres Hemispheres.\\n * @param {number} degrees Degrees.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} String.\\n */\\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\\n    var x = Math.abs(3600 * normalizedDegrees);\\n    var dflPrecision = opt_fractionDigits || 0;\\n    var precision = Math.pow(10, dflPrecision);\\n    var deg = Math.floor(x / 3600);\\n    var min = Math.floor((x - deg * 3600) / 60);\\n    var sec = x - (deg * 3600) - (min * 60);\\n    sec = Math.ceil(sec * precision) / precision;\\n    if (sec >= 60) {\\n        sec = 0;\\n        min += 1;\\n    }\\n    if (min >= 60) {\\n        min = 0;\\n        deg += 1;\\n    }\\n    return deg + '\\\\u00b0 ' + padNumber(min, 2) + '\\\\u2032 ' +\\n        padNumber(sec, 2, dflPrecision) + '\\\\u2033' +\\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\\n}\\n/**\\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\\n * using the given string template. The strings `{x}` and `{y}` in the template\\n * will be replaced with the first and second coordinate values respectively.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template);\\n *     // out is now 'Coordinate is (8|48).'\\n *\\n * Example explicitly specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template, 2);\\n *     // out is now 'Coordinate is (7.85|47.98).'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {string} template A template string with `{x}` and `{y}` placeholders\\n *     that will be replaced by first and second coordinate values.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Formatted coordinate.\\n * @api\\n */\\nexport function format(coordinate, template, opt_fractionDigits) {\\n    if (coordinate) {\\n        return template\\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * @param {Coordinate} coordinate1 First coordinate.\\n * @param {Coordinate} coordinate2 Second coordinate.\\n * @return {boolean} The two coordinates are equal.\\n */\\nexport function equals(coordinate1, coordinate2) {\\n    var equals = true;\\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\\n        if (coordinate1[i] != coordinate2[i]) {\\n            equals = false;\\n            break;\\n        }\\n    }\\n    return equals;\\n}\\n/**\\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\\n * returned by the function.\\n *\\n * Example:\\n *\\n *     import {rotate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var rotateRadians = Math.PI / 2; // 90 degrees\\n *     rotate(coord, rotateRadians);\\n *     // coord is now [-47.983333, 7.85]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} angle Angle in radian.\\n * @return {Coordinate} Coordinate.\\n * @api\\n */\\nexport function rotate(coordinate, angle) {\\n    var cosAngle = Math.cos(angle);\\n    var sinAngle = Math.sin(angle);\\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\\n    coordinate[0] = x;\\n    coordinate[1] = y;\\n    return coordinate;\\n}\\n/**\\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var scale = 1.2;\\n *     scaleCoordinate(coord, scale);\\n *     // coord is now [9.42, 57.5799996]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} scale Scale factor.\\n * @return {Coordinate} Coordinate.\\n */\\nexport function scale(coordinate, scale) {\\n    coordinate[0] *= scale;\\n    coordinate[1] *= scale;\\n    return coordinate;\\n}\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Squared distance between coord1 and coord2.\\n */\\nexport function squaredDistance(coord1, coord2) {\\n    var dx = coord1[0] - coord2[0];\\n    var dy = coord1[1] - coord2[1];\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Distance between coord1 and coord2.\\n */\\nexport function distance(coord1, coord2) {\\n    return Math.sqrt(squaredDistance(coord1, coord2));\\n}\\n/**\\n * Calculate the squared distance from a coordinate to a line segment.\\n *\\n * @param {Coordinate} coordinate Coordinate of the point.\\n * @param {Array<Coordinate>} segment Line segment (2\\n * coordinates).\\n * @return {number} Squared distance from the point to the line segment.\\n */\\nexport function squaredDistanceToSegment(coordinate, segment) {\\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\\n}\\n/**\\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\\n * seconds.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord);\\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord, 1);\\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Hemisphere, degrees, minutes and seconds.\\n * @api\\n */\\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\\n    if (coordinate) {\\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * Format a coordinate as a comma delimited string.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord);\\n *     // out is now '8, 48'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord, 1);\\n *     // out is now '7.8, 48.0'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} XY.\\n * @api\\n */\\nexport function toStringXY(coordinate, opt_fractionDigits) {\\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\\n}\\n//# sourceMappingURL=coordinate.js.map\",\"/**\\n * @module ol/easing\\n */\\n/**\\n * Start slow and speed up.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function easeIn(t) {\\n    return Math.pow(t, 3);\\n}\\n/**\\n * Start fast and slow down.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function easeOut(t) {\\n    return 1 - easeIn(1 - t);\\n}\\n/**\\n * Start slow, speed up, and then slow down again.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function inAndOut(t) {\\n    return 3 * t * t - 2 * t * t * t;\\n}\\n/**\\n * Maintain a constant speed over time.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function linear(t) {\\n    return t;\\n}\\n/**\\n * Start slow, speed up, and at the very end slow down again.  This has the\\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\\n * slowdown is delayed.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function upAndDown(t) {\\n    if (t < 0.5) {\\n        return inAndOut(2 * t);\\n    }\\n    else {\\n        return 1 - inAndOut(2 * (t - 0.5));\\n    }\\n}\\n//# sourceMappingURL=easing.js.map\",\"/**\\n * @module ol/geom/GeometryType\\n */\\n/**\\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\\n * `'GeometryCollection'`, `'Circle'`.\\n * @enum {string}\\n */\\nexport default {\\n    POINT: 'Point',\\n    LINE_STRING: 'LineString',\\n    LINEAR_RING: 'LinearRing',\\n    POLYGON: 'Polygon',\\n    MULTI_POINT: 'MultiPoint',\\n    MULTI_LINE_STRING: 'MultiLineString',\\n    MULTI_POLYGON: 'MultiPolygon',\\n    GEOMETRY_COLLECTION: 'GeometryCollection',\\n    CIRCLE: 'Circle'\\n};\\n//# sourceMappingURL=GeometryType.js.map\",\"/**\\n * @module ol/geom/GeometryLayout\\n */\\n/**\\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\\n * @enum {string}\\n */\\nexport default {\\n    XY: 'XY',\\n    XYZ: 'XYZ',\\n    XYM: 'XYM',\\n    XYZM: 'XYZM'\\n};\\n//# sourceMappingURL=GeometryLayout.js.map\",\"/**\\n * @module ol/geom/flat/transform\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var x = flatCoordinates[j];\\n        var y = flatCoordinates[j + 1];\\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} angle Angle.\\n * @param {Array<number>} anchor Rotation anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var cos = Math.cos(angle);\\n    var sin = Math.sin(angle);\\n    var anchorX = anchor[0];\\n    var anchorY = anchor[1];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var deltaX = flatCoordinates[j] - anchorX;\\n        var deltaY = flatCoordinates[j + 1] - anchorY;\\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * Scale the coordinates.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} sx Scale factor in the x-direction.\\n * @param {number} sy Scale factor in the y-direction.\\n * @param {Array<number>} anchor Scale anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var anchorX = anchor[0];\\n    var anchorY = anchor[1];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var deltaX = flatCoordinates[j] - anchorX;\\n        var deltaY = flatCoordinates[j + 1] - anchorY;\\n        dest[i++] = anchorX + sx * deltaX;\\n        dest[i++] = anchorY + sy * deltaY;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} deltaX Delta X.\\n * @param {number} deltaY Delta Y.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        dest[i++] = flatCoordinates[j] + deltaX;\\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n//# sourceMappingURL=transform.js.map\",\"/**\\n * @license\\n * Latitude/longitude spherical geodesy formulae taken from\\n * http://www.movable-type.co.uk/scripts/latlong.html\\n * Licensed under CC-BY-3.0.\\n */\\n/**\\n * @module ol/sphere\\n */\\nimport { toRadians, toDegrees } from './math.js';\\nimport GeometryType from './geom/GeometryType.js';\\n/**\\n * Object literal with options for the {@link getLength} or {@link getArea}\\n * functions.\\n * @typedef {Object} SphereMetricOptions\\n * @property {import(\\\"./proj.js\\\").ProjectionLike} [projection='EPSG:3857']\\n * Projection of the  geometry.  By default, the geometry is assumed to be in\\n * Web Mercator.\\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\\n * earth is used (Clarke 1866 Authalic Sphere).\\n */\\n/**\\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\\n * @type {number}\\n */\\nexport var DEFAULT_RADIUS = 6371008.8;\\n/**\\n * Get the great circle distance (in meters) between two geographic coordinates.\\n * @param {Array} c1 Starting coordinate.\\n * @param {Array} c2 Ending coordinate.\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {number} The great circle distance between the points (in meters).\\n * @api\\n */\\nexport function getDistance(c1, c2, opt_radius) {\\n    var radius = opt_radius || DEFAULT_RADIUS;\\n    var lat1 = toRadians(c1[1]);\\n    var lat2 = toRadians(c2[1]);\\n    var deltaLatBy2 = (lat2 - lat1) / 2;\\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\\n            Math.cos(lat1) * Math.cos(lat2);\\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\\n}\\n/**\\n * Get the cumulative great circle length of linestring coordinates (geographic).\\n * @param {Array} coordinates Linestring coordinates.\\n * @param {number} radius The sphere radius to use.\\n * @return {number} The length (in meters).\\n */\\nfunction getLengthInternal(coordinates, radius) {\\n    var length = 0;\\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\\n    }\\n    return length;\\n}\\n/**\\n * Get the spherical length of a geometry.  This length is the sum of the\\n * great circle distances between coordinates.  For polygons, the length is\\n * the sum of all rings.  For points, the length is zero.  For multi-part\\n * geometries, the length is the sum of the length of each part.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the\\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n * You can change this by providing a `projection` option.\\n * @return {number} The spherical length (in meters).\\n * @api\\n */\\nexport function getLength(geometry, opt_options) {\\n    var options = opt_options || {};\\n    var radius = options.radius || DEFAULT_RADIUS;\\n    var projection = options.projection || 'EPSG:3857';\\n    var type = geometry.getType();\\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n    }\\n    var length = 0;\\n    var coordinates, coords, i, ii, j, jj;\\n    switch (type) {\\n        case GeometryType.POINT:\\n        case GeometryType.MULTI_POINT: {\\n            break;\\n        }\\n        case GeometryType.LINE_STRING:\\n        case GeometryType.LINEAR_RING: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            length = getLengthInternal(coordinates, radius);\\n            break;\\n        }\\n        case GeometryType.MULTI_LINE_STRING:\\n        case GeometryType.POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                length += getLengthInternal(coordinates[i], radius);\\n            }\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coords = coordinates[i];\\n                for (j = 0, jj = coords.length; j < jj; ++j) {\\n                    length += getLengthInternal(coords[j], radius);\\n                }\\n            }\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\\n                length += getLength(geometries[i], opt_options);\\n            }\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return length;\\n}\\n/**\\n * Returns the spherical area for a list of coordinates.\\n *\\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\\n * Robert. G. Chamberlain and William H. Duquette, \\\"Some Algorithms for\\n * Polygons on a Sphere\\\", JPL Publication 07-03, Jet Propulsion\\n * Laboratory, Pasadena, CA, June 2007\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates List of coordinates of a linear\\n * ring. If the ring is oriented clockwise, the area will be positive,\\n * otherwise it will be negative.\\n * @param {number} radius The sphere radius.\\n * @return {number} Area (in square meters).\\n */\\nfunction getAreaInternal(coordinates, radius) {\\n    var area = 0;\\n    var len = coordinates.length;\\n    var x1 = coordinates[len - 1][0];\\n    var y1 = coordinates[len - 1][1];\\n    for (var i = 0; i < len; i++) {\\n        var x2 = coordinates[i][0];\\n        var y2 = coordinates[i][1];\\n        area += toRadians(x2 - x1) *\\n            (2 + Math.sin(toRadians(y1)) +\\n                Math.sin(toRadians(y2)));\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return area * radius * radius / 2.0;\\n}\\n/**\\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\\n * that polygon edges are segments of great circles on a sphere.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the area\\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n *     You can change this by providing a `projection` option.\\n * @return {number} The spherical area (in square meters).\\n * @api\\n */\\nexport function getArea(geometry, opt_options) {\\n    var options = opt_options || {};\\n    var radius = options.radius || DEFAULT_RADIUS;\\n    var projection = options.projection || 'EPSG:3857';\\n    var type = geometry.getType();\\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n    }\\n    var area = 0;\\n    var coordinates, coords, i, ii, j, jj;\\n    switch (type) {\\n        case GeometryType.POINT:\\n        case GeometryType.MULTI_POINT:\\n        case GeometryType.LINE_STRING:\\n        case GeometryType.MULTI_LINE_STRING:\\n        case GeometryType.LINEAR_RING: {\\n            break;\\n        }\\n        case GeometryType.POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/Polygon.js\\\").default} */ (geometry).getCoordinates();\\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\\n            }\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coords = coordinates[i];\\n                area += Math.abs(getAreaInternal(coords[0], radius));\\n                for (j = 1, jj = coords.length; j < jj; ++j) {\\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\\n                }\\n            }\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\\n                area += getArea(geometries[i], opt_options);\\n            }\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return area;\\n}\\n/**\\n * Returns the coordinate at the given distance and bearing from `c1`.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\\n * @param {number} distance The great-circle distance between the origin\\n *     point and the target point.\\n * @param {number} bearing The bearing (in radians).\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} The target point.\\n */\\nexport function offset(c1, distance, bearing, opt_radius) {\\n    var radius = opt_radius || DEFAULT_RADIUS;\\n    var lat1 = toRadians(c1[1]);\\n    var lon1 = toRadians(c1[0]);\\n    var dByR = distance / radius;\\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\\n    return [toDegrees(lon), toDegrees(lat)];\\n}\\n//# sourceMappingURL=sphere.js.map\",\"/**\\n * @module ol/proj/Units\\n */\\n/**\\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\\n * `'us-ft'`.\\n * @enum {string}\\n */\\nvar Units = {\\n    DEGREES: 'degrees',\\n    FEET: 'ft',\\n    METERS: 'm',\\n    PIXELS: 'pixels',\\n    TILE_PIXELS: 'tile-pixels',\\n    USFEET: 'us-ft'\\n};\\n/**\\n * Meters per unit lookup table.\\n * @const\\n * @type {Object<Units, number>}\\n * @api\\n */\\nexport var METERS_PER_UNIT = {};\\n// use the radius of the Normal sphere\\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\\nMETERS_PER_UNIT[Units.METERS] = 1;\\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\\nexport default Units;\\n//# sourceMappingURL=Units.js.map\",\"/**\\n * @module ol/proj/Projection\\n */\\nimport { METERS_PER_UNIT } from './Units.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\\n * @property {import(\\\"./Units.js\\\").default|string} [units] Units. Required unless a\\n * proj4 projection is defined for `code`.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The validity extent for the SRS.\\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\\n * lookup table.\\n * @property {import(\\\"../extent.js\\\").Extent} [worldExtent] The world extent for the SRS.\\n * @property {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} [getPointResolution]\\n * Function to determine resolution at a point. The function is called with a\\n * `{number}` view resolution and an `{import(\\\"../coordinate.js\\\").Coordinate}` as arguments, and returns\\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\\n * the default {@link module:ol/proj#getPointResolution} function will be used.\\n */\\n/**\\n * @classdesc\\n * Projection definition class. One of these is created for each projection\\n * supported in the application and stored in the {@link module:ol/proj} namespace.\\n * You can use these in applications, but this is not required, as API params\\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\\n * code will suffice.\\n *\\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\\n * projection.\\n *\\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\\n * with the following aliases:\\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\\n *     urn:x-ogc:def:crs:EPSG:4326\\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\\n *\\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\\n * be added using `proj4.defs()`. After all required projection definitions are\\n * added, call the {@link module:ol/proj/proj4~register} function.\\n *\\n * @api\\n */\\nvar Projection = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Projection options.\\n     */\\n    function Projection(options) {\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        this.code_ = options.code;\\n        /**\\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\\n         * tile.\\n         * @private\\n         * @type {import(\\\"./Units.js\\\").default}\\n         */\\n        this.units_ = /** @type {import(\\\"./Units.js\\\").default} */ (options.units);\\n        /**\\n         * Validity extent of the projection in projected coordinates. For projections\\n         * with `TILE_PIXELS` units, this is the extent of the tile in\\n         * tile pixel space.\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.extent_ = options.extent !== undefined ? options.extent : null;\\n        /**\\n         * Extent of the world in EPSG:4326. For projections with\\n         * `TILE_PIXELS` units, this is the extent of the tile in\\n         * projected coordinate space.\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.worldExtent_ = options.worldExtent !== undefined ?\\n            options.worldExtent : null;\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\\n            options.axisOrientation : 'enu';\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.global_ = options.global !== undefined ? options.global : false;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.canWrapX_ = !!(this.global_ && this.extent_);\\n        /**\\n         * @private\\n         * @type {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined}\\n         */\\n        this.getPointResolutionFunc_ = options.getPointResolution;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        this.defaultTileGrid_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.metersPerUnit_ = options.metersPerUnit;\\n    }\\n    /**\\n     * @return {boolean} The projection is suitable for wrapping the x-axis\\n     */\\n    Projection.prototype.canWrapX = function () {\\n        return this.canWrapX_;\\n    };\\n    /**\\n     * Get the code for this projection, e.g. 'EPSG:4326'.\\n     * @return {string} Code.\\n     * @api\\n     */\\n    Projection.prototype.getCode = function () {\\n        return this.code_;\\n    };\\n    /**\\n     * Get the validity extent for this projection.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    Projection.prototype.getExtent = function () {\\n        return this.extent_;\\n    };\\n    /**\\n     * Get the units of this projection.\\n     * @return {import(\\\"./Units.js\\\").default} Units.\\n     * @api\\n     */\\n    Projection.prototype.getUnits = function () {\\n        return this.units_;\\n    };\\n    /**\\n     * Get the amount of meters per unit of this projection.  If the projection is\\n     * not configured with `metersPerUnit` or a units identifier, the return is\\n     * `undefined`.\\n     * @return {number|undefined} Meters.\\n     * @api\\n     */\\n    Projection.prototype.getMetersPerUnit = function () {\\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\\n    };\\n    /**\\n     * Get the world extent for this projection.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    Projection.prototype.getWorldExtent = function () {\\n        return this.worldExtent_;\\n    };\\n    /**\\n     * Get the axis orientation of this projection.\\n     * Example values are:\\n     * enu - the default easting, northing, elevation.\\n     * neu - northing, easting, up - useful for \\\"lat/long\\\" geographic coordinates,\\n     *     or south orientated transverse mercator.\\n     * wnu - westing, northing, up - some planetary coordinate systems have\\n     *     \\\"west positive\\\" coordinate systems\\n     * @return {string} Axis orientation.\\n     * @api\\n     */\\n    Projection.prototype.getAxisOrientation = function () {\\n        return this.axisOrientation_;\\n    };\\n    /**\\n     * Is this projection a global projection which spans the whole world?\\n     * @return {boolean} Whether the projection is global.\\n     * @api\\n     */\\n    Projection.prototype.isGlobal = function () {\\n        return this.global_;\\n    };\\n    /**\\n     * Set if the projection is a global projection which spans the whole world\\n     * @param {boolean} global Whether the projection is global.\\n     * @api\\n     */\\n    Projection.prototype.setGlobal = function (global) {\\n        this.global_ = global;\\n        this.canWrapX_ = !!(global && this.extent_);\\n    };\\n    /**\\n     * @return {import(\\\"../tilegrid/TileGrid.js\\\").default} The default tile grid.\\n     */\\n    Projection.prototype.getDefaultTileGrid = function () {\\n        return this.defaultTileGrid_;\\n    };\\n    /**\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} tileGrid The default tile grid.\\n     */\\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\\n        this.defaultTileGrid_ = tileGrid;\\n    };\\n    /**\\n     * Set the validity extent for this projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    Projection.prototype.setExtent = function (extent) {\\n        this.extent_ = extent;\\n        this.canWrapX_ = !!(this.global_ && extent);\\n    };\\n    /**\\n     * Set the world extent for this projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} worldExtent World extent\\n     *     [minlon, minlat, maxlon, maxlat].\\n     * @api\\n     */\\n    Projection.prototype.setWorldExtent = function (worldExtent) {\\n        this.worldExtent_ = worldExtent;\\n    };\\n    /**\\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\\n     * for this projection.\\n     * @param {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} func Function\\n     * @api\\n     */\\n    Projection.prototype.setGetPointResolution = function (func) {\\n        this.getPointResolutionFunc_ = func;\\n    };\\n    /**\\n     * Get the custom point resolution function for this projection (if set).\\n     * @return {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined} The custom point\\n     * resolution function (if set).\\n     */\\n    Projection.prototype.getPointResolutionFunc = function () {\\n        return this.getPointResolutionFunc_;\\n    };\\n    return Projection;\\n}());\\nexport default Projection;\\n//# sourceMappingURL=Projection.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/proj/epsg3857\\n */\\nimport { cosh } from '../math.js';\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n/**\\n * Radius of WGS84 sphere\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var HALF_SIZE = Math.PI * RADIUS;\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [\\n    -HALF_SIZE, -HALF_SIZE,\\n    HALF_SIZE, HALF_SIZE\\n];\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\\n/**\\n * @classdesc\\n * Projection object for web/spherical Mercator (EPSG:3857).\\n */\\nvar EPSG3857Projection = /** @class */ (function (_super) {\\n    __extends(EPSG3857Projection, _super);\\n    /**\\n     * @param {string} code Code.\\n     */\\n    function EPSG3857Projection(code) {\\n        return _super.call(this, {\\n            code: code,\\n            units: Units.METERS,\\n            extent: EXTENT,\\n            global: true,\\n            worldExtent: WORLD_EXTENT,\\n            getPointResolution: function (resolution, point) {\\n                return resolution / cosh(point[1] / RADIUS);\\n            }\\n        }) || this;\\n    }\\n    return EPSG3857Projection;\\n}(Projection));\\n/**\\n * Projections equal to EPSG:3857.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n    new EPSG3857Projection('EPSG:3857'),\\n    new EPSG3857Projection('EPSG:102100'),\\n    new EPSG3857Projection('EPSG:102113'),\\n    new EPSG3857Projection('EPSG:900913'),\\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\\n];\\n/**\\n * Transformation from EPSG:4326 to EPSG:3857.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\\n    var length = input.length;\\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n    var output = opt_output;\\n    if (output === undefined) {\\n        if (dimension > 2) {\\n            // preserve values beyond second dimension\\n            output = input.slice();\\n        }\\n        else {\\n            output = new Array(length);\\n        }\\n    }\\n    var halfSize = HALF_SIZE;\\n    for (var i = 0; i < length; i += dimension) {\\n        output[i] = halfSize * input[i] / 180;\\n        var y = RADIUS *\\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\\n        if (y > halfSize) {\\n            y = halfSize;\\n        }\\n        else if (y < -halfSize) {\\n            y = -halfSize;\\n        }\\n        output[i + 1] = y;\\n    }\\n    return output;\\n}\\n/**\\n * Transformation from EPSG:3857 to EPSG:4326.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function toEPSG4326(input, opt_output, opt_dimension) {\\n    var length = input.length;\\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n    var output = opt_output;\\n    if (output === undefined) {\\n        if (dimension > 2) {\\n            // preserve values beyond second dimension\\n            output = input.slice();\\n        }\\n        else {\\n            output = new Array(length);\\n        }\\n    }\\n    for (var i = 0; i < length; i += dimension) {\\n        output[i] = 180 * input[i] / HALF_SIZE;\\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\\n    }\\n    return output;\\n}\\n//# sourceMappingURL=epsg3857.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/proj/epsg4326\\n */\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n/**\\n * Semi-major radius of the WGS84 ellipsoid.\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n/**\\n * Extent of the EPSG:4326 projection which is the whole world.\\n *\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [-180, -90, 180, 90];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\\n/**\\n * @classdesc\\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\\n *\\n * Note that OpenLayers does not strictly comply with the EPSG definition.\\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\\n */\\nvar EPSG4326Projection = /** @class */ (function (_super) {\\n    __extends(EPSG4326Projection, _super);\\n    /**\\n     * @param {string} code Code.\\n     * @param {string=} opt_axisOrientation Axis orientation.\\n     */\\n    function EPSG4326Projection(code, opt_axisOrientation) {\\n        return _super.call(this, {\\n            code: code,\\n            units: Units.DEGREES,\\n            extent: EXTENT,\\n            axisOrientation: opt_axisOrientation,\\n            global: true,\\n            metersPerUnit: METERS_PER_UNIT,\\n            worldExtent: EXTENT\\n        }) || this;\\n    }\\n    return EPSG4326Projection;\\n}(Projection));\\n/**\\n * Projections equal to EPSG:4326.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n    new EPSG4326Projection('CRS:84'),\\n    new EPSG4326Projection('EPSG:4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\\n];\\n//# sourceMappingURL=epsg4326.js.map\",\"/**\\n * @module ol/proj/projections\\n */\\n/**\\n * @type {Object<string, import(\\\"./Projection.js\\\").default>}\\n */\\nvar cache = {};\\n/**\\n * Clear the projections cache.\\n */\\nexport function clear() {\\n    cache = {};\\n}\\n/**\\n * Get a cached projection by code.\\n * @param {string} code The code for the projection.\\n * @return {import(\\\"./Projection.js\\\").default} The projection (if cached).\\n */\\nexport function get(code) {\\n    return cache[code] || null;\\n}\\n/**\\n * Add a projection to the cache.\\n * @param {string} code The projection code.\\n * @param {import(\\\"./Projection.js\\\").default} projection The projection to cache.\\n */\\nexport function add(code, projection) {\\n    cache[code] = projection;\\n}\\n//# sourceMappingURL=projections.js.map\",\"/**\\n * @module ol/proj/transforms\\n */\\nimport { isEmpty } from '../obj.js';\\n/**\\n * @private\\n * @type {!Object<string, Object<string, import(\\\"../proj.js\\\").TransformFunction>>}\\n */\\nvar transforms = {};\\n/**\\n * Clear the transform cache.\\n */\\nexport function clear() {\\n    transforms = {};\\n}\\n/**\\n * Registers a conversion function to convert coordinates from the source\\n * projection to the destination projection.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination.\\n * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n */\\nexport function add(source, destination, transformFn) {\\n    var sourceCode = source.getCode();\\n    var destinationCode = destination.getCode();\\n    if (!(sourceCode in transforms)) {\\n        transforms[sourceCode] = {};\\n    }\\n    transforms[sourceCode][destinationCode] = transformFn;\\n}\\n/**\\n * Unregisters the conversion function to convert coordinates from the source\\n * projection to the destination projection.  This method is used to clean up\\n * cached transforms during testing.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source projection.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction} transformFn The unregistered transform.\\n */\\nexport function remove(source, destination) {\\n    var sourceCode = source.getCode();\\n    var destinationCode = destination.getCode();\\n    var transform = transforms[sourceCode][destinationCode];\\n    delete transforms[sourceCode][destinationCode];\\n    if (isEmpty(transforms[sourceCode])) {\\n        delete transforms[sourceCode];\\n    }\\n    return transform;\\n}\\n/**\\n * Get a transform given a source code and a destination code.\\n * @param {string} sourceCode The code for the source projection.\\n * @param {string} destinationCode The code for the destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction|undefined} The transform function (if found).\\n */\\nexport function get(sourceCode, destinationCode) {\\n    var transform;\\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\\n        transform = transforms[sourceCode][destinationCode];\\n    }\\n    return transform;\\n}\\n//# sourceMappingURL=transforms.js.map\",\"/**\\n * @module ol/proj\\n */\\n/**\\n * The ol/proj module stores:\\n * * a list of {@link module:ol/proj/Projection}\\n * objects, one for each projection supported by the application\\n * * a list of transform functions needed to convert coordinates in one projection\\n * into another.\\n *\\n * The static functions are the methods used to maintain these.\\n * Each transform function can handle not only simple coordinate pairs, but also\\n * large arrays of coordinates such as vector geometries.\\n *\\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\\n * for example by Bing Maps or OpenStreetMap), together with the relevant\\n * transform functions.\\n *\\n * Additional transforms may be added by using the http://proj4js.org/\\n * library (version 2.2 or later). You can use the full build supplied by\\n * Proj4js, or create a custom build to support those projections you need; see\\n * the Proj4js website for how to do this. You also need the Proj4js definitions\\n * for the required projections. These definitions can be obtained from\\n * https://epsg.io/, and are a JS function, so can be loaded in a script\\n * tag (as in the examples) or pasted into your application.\\n *\\n * After all required projection definitions are added to proj4's registry (by\\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\\n * package. Existing transforms are not changed by this function. See\\n * examples/wms-image-custom-proj for an example of this.\\n *\\n * Additional projection definitions can be registered with `proj4.defs()` any\\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\\n * know in advance what projections are needed, you can initially load minimal\\n * support and then load whichever are requested.\\n *\\n * Note that Proj4js does not support projection extents. If you want to add\\n * one for creating default tile grids, you can add it after the Projection\\n * object has been created with `setExtent`, for example,\\n * `get('EPSG:1234').setExtent(extent)`.\\n *\\n * In addition to Proj4js support, any transform functions can be added with\\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\\n * examples/wms-custom-proj for an example of this.\\n *\\n * Note that if no transforms are needed and you only need to define the\\n * projection, just add a {@link module:ol/proj/Projection} with\\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\\n * this.\\n */\\nimport { getDistance } from './sphere.js';\\nimport { applyTransform } from './extent.js';\\nimport { modulo } from './math.js';\\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\\nimport Projection from './proj/Projection.js';\\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\\nimport * as projections from './proj/projections.js';\\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\\n/**\\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\\n * string or undefined.\\n * @typedef {Projection|string|undefined} ProjectionLike\\n * @api\\n */\\n/**\\n * A transform function accepts an array of input coordinate values, an optional\\n * output array, and an optional dimension (default should be 2).  The function\\n * transforms the input coordinate values, populates the output array, and\\n * returns the output array.\\n *\\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\\n * @api\\n */\\nexport { METERS_PER_UNIT };\\nexport { Projection };\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Output coordinate array (new array, same coordinate\\n *     values).\\n */\\nexport function cloneTransform(input, opt_output, opt_dimension) {\\n    var output;\\n    if (opt_output !== undefined) {\\n        for (var i = 0, ii = input.length; i < ii; ++i) {\\n            opt_output[i] = input[i];\\n        }\\n        output = opt_output;\\n    }\\n    else {\\n        output = input.slice();\\n    }\\n    return output;\\n}\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Input coordinate array (same array as input).\\n */\\nexport function identityTransform(input, opt_output, opt_dimension) {\\n    if (opt_output !== undefined && input !== opt_output) {\\n        for (var i = 0, ii = input.length; i < ii; ++i) {\\n            opt_output[i] = input[i];\\n        }\\n        input = opt_output;\\n    }\\n    return input;\\n}\\n/**\\n * Add a Projection object to the list of supported projections that can be\\n * looked up by their code.\\n *\\n * @param {Projection} projection Projection instance.\\n * @api\\n */\\nexport function addProjection(projection) {\\n    projections.add(projection.getCode(), projection);\\n    addTransformFunc(projection, projection, cloneTransform);\\n}\\n/**\\n * @param {Array<Projection>} projections Projections.\\n */\\nexport function addProjections(projections) {\\n    projections.forEach(addProjection);\\n}\\n/**\\n * Fetches a Projection object for the code specified.\\n *\\n * @param {ProjectionLike} projectionLike Either a code string which is\\n *     a combination of authority and identifier such as \\\"EPSG:4326\\\", or an\\n *     existing projection object, or undefined.\\n * @return {Projection} Projection object, or null if not in list.\\n * @api\\n */\\nexport function get(projectionLike) {\\n    return typeof projectionLike === 'string' ?\\n        projections.get(/** @type {string} */ (projectionLike)) :\\n        ( /** @type {Projection} */(projectionLike) || null);\\n}\\n/**\\n * Get the resolution of the point in degrees or distance units.\\n * For projections with degrees as the unit this will simply return the\\n * provided resolution. For other projections the point resolution is\\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\\n * measuring its width and height on the normal sphere,\\n * and taking the average of the width and height.\\n * A custom function can be provided for a specific projection, either\\n * by setting the `getPointResolution` option in the\\n * {@link module:ol/proj/Projection~Projection} constructor or by using\\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\\n * projection object.\\n * @param {ProjectionLike} projection The projection.\\n * @param {number} resolution Nominal resolution in projection units.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point to find adjusted resolution at.\\n * @param {Units=} opt_units Units to get the point resolution in.\\n * Default is the projection's units.\\n * @return {number} Point resolution.\\n * @api\\n */\\nexport function getPointResolution(projection, resolution, point, opt_units) {\\n    projection = get(projection);\\n    var pointResolution;\\n    var getter = projection.getPointResolutionFunc();\\n    if (getter) {\\n        pointResolution = getter(resolution, point);\\n        if (opt_units && opt_units !== projection.getUnits()) {\\n            var metersPerUnit = projection.getMetersPerUnit();\\n            if (metersPerUnit) {\\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\\n            }\\n        }\\n    }\\n    else {\\n        var units = projection.getUnits();\\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\\n            pointResolution = resolution;\\n        }\\n        else {\\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\\n            // measuring its width and height on the normal sphere, and taking the\\n            // average of the width and height.\\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\\n            var vertices = [\\n                point[0] - resolution / 2, point[1],\\n                point[0] + resolution / 2, point[1],\\n                point[0], point[1] - resolution / 2,\\n                point[0], point[1] + resolution / 2\\n            ];\\n            vertices = toEPSG4326_1(vertices, vertices, 2);\\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\\n            pointResolution = (width + height) / 2;\\n            var metersPerUnit = opt_units ?\\n                METERS_PER_UNIT[opt_units] :\\n                projection.getMetersPerUnit();\\n            if (metersPerUnit !== undefined) {\\n                pointResolution /= metersPerUnit;\\n            }\\n        }\\n    }\\n    return pointResolution;\\n}\\n/**\\n * Registers transformation functions that don't alter coordinates. Those allow\\n * to transform between projections with equal meaning.\\n *\\n * @param {Array<Projection>} projections Projections.\\n * @api\\n */\\nexport function addEquivalentProjections(projections) {\\n    addProjections(projections);\\n    projections.forEach(function (source) {\\n        projections.forEach(function (destination) {\\n            if (source !== destination) {\\n                addTransformFunc(source, destination, cloneTransform);\\n            }\\n        });\\n    });\\n}\\n/**\\n * Registers transformation functions to convert coordinates in any projection\\n * in projection1 to any projection in projection2.\\n *\\n * @param {Array<Projection>} projections1 Projections with equal\\n *     meaning.\\n * @param {Array<Projection>} projections2 Projections with equal\\n *     meaning.\\n * @param {TransformFunction} forwardTransform Transformation from any\\n *   projection in projection1 to any projection in projection2.\\n * @param {TransformFunction} inverseTransform Transform from any projection\\n *   in projection2 to any projection in projection1..\\n */\\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\\n    projections1.forEach(function (projection1) {\\n        projections2.forEach(function (projection2) {\\n            addTransformFunc(projection1, projection2, forwardTransform);\\n            addTransformFunc(projection2, projection1, inverseTransform);\\n        });\\n    });\\n}\\n/**\\n * Clear all cached projections and transforms.\\n */\\nexport function clearAllProjections() {\\n    projections.clear();\\n    clearTransformFuncs();\\n}\\n/**\\n * @param {Projection|string|undefined} projection Projection.\\n * @param {string} defaultCode Default code.\\n * @return {Projection} Projection.\\n */\\nexport function createProjection(projection, defaultCode) {\\n    if (!projection) {\\n        return get(defaultCode);\\n    }\\n    else if (typeof projection === 'string') {\\n        return get(projection);\\n    }\\n    else {\\n        return (\\n        /** @type {Projection} */ (projection));\\n    }\\n}\\n/**\\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\\n * function.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} coordTransform Coordinate\\n *     transform.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function createTransformFromCoordinateTransform(coordTransform) {\\n    return (\\n    /**\\n     * @param {Array<number>} input Input.\\n     * @param {Array<number>=} opt_output Output.\\n     * @param {number=} opt_dimension Dimension.\\n     * @return {Array<number>} Output.\\n     */\\n    function (input, opt_output, opt_dimension) {\\n        var length = input.length;\\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\\n        var output = opt_output !== undefined ? opt_output : new Array(length);\\n        for (var i = 0; i < length; i += dimension) {\\n            var point = coordTransform([input[i], input[i + 1]]);\\n            output[i] = point[0];\\n            output[i + 1] = point[1];\\n            for (var j = dimension - 1; j >= 2; --j) {\\n                output[i + j] = input[i + j];\\n            }\\n        }\\n        return output;\\n    });\\n}\\n/**\\n * Registers coordinate transform functions to convert coordinates between the\\n * source projection and the destination projection.\\n * The forward and inverse functions convert coordinate pairs; this function\\n * converts these into the functions used internally which also handle\\n * extents and coordinate arrays.\\n *\\n * @param {ProjectionLike} source Source projection.\\n * @param {ProjectionLike} destination Destination projection.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} forward The forward transform\\n *     function (that is, from the source projection to the destination\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} inverse The inverse transform\\n *     function (that is, from the destination projection to the source\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @api\\n */\\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\\n    var sourceProj = get(source);\\n    var destProj = get(destination);\\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\\n}\\n/**\\n * Transforms a coordinate from longitude/latitude to a different projection.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\\n *     an array with longitude as 1st and latitude as 2nd element.\\n * @param {ProjectionLike=} opt_projection Target projection. The\\n *     default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate projected to the target projection.\\n * @api\\n */\\nexport function fromLonLat(coordinate, opt_projection) {\\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\\n}\\n/**\\n * Transforms a coordinate to longitude/latitude.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Projected coordinate.\\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate as longitude and latitude, i.e. an array\\n *     with longitude as 1st and latitude as 2nd element.\\n * @api\\n */\\nexport function toLonLat(coordinate, opt_projection) {\\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\\n    var lon = lonLat[0];\\n    if (lon < -180 || lon > 180) {\\n        lonLat[0] = modulo(lon + 180, 360) - 180;\\n    }\\n    return lonLat;\\n}\\n/**\\n * Checks if two projections are the same, that is every coordinate in one\\n * projection does represent the same geographic point as the same coordinate in\\n * the other projection.\\n *\\n * @param {Projection} projection1 Projection 1.\\n * @param {Projection} projection2 Projection 2.\\n * @return {boolean} Equivalent.\\n * @api\\n */\\nexport function equivalent(projection1, projection2) {\\n    if (projection1 === projection2) {\\n        return true;\\n    }\\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\\n    if (projection1.getCode() === projection2.getCode()) {\\n        return equalUnits;\\n    }\\n    else {\\n        var transformFunc = getTransformFromProjections(projection1, projection2);\\n        return transformFunc === cloneTransform && equalUnits;\\n    }\\n}\\n/**\\n * Searches in the list of transform functions for the function for converting\\n * coordinates from the source projection to the destination projection.\\n *\\n * @param {Projection} sourceProjection Source Projection object.\\n * @param {Projection} destinationProjection Destination Projection\\n *     object.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\\n    var sourceCode = sourceProjection.getCode();\\n    var destinationCode = destinationProjection.getCode();\\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\\n    if (!transformFunc) {\\n        transformFunc = identityTransform;\\n    }\\n    return transformFunc;\\n}\\n/**\\n * Given the projection-like objects, searches for a transformation\\n * function to convert a coordinates array from the source projection to the\\n * destination projection.\\n *\\n * @param {ProjectionLike} source Source.\\n * @param {ProjectionLike} destination Destination.\\n * @return {TransformFunction} Transform function.\\n * @api\\n */\\nexport function getTransform(source, destination) {\\n    var sourceProjection = get(source);\\n    var destinationProjection = get(destination);\\n    return getTransformFromProjections(sourceProjection, destinationProjection);\\n}\\n/**\\n * Transforms a coordinate from source projection to destination projection.\\n * This returns a new coordinate (and does not modify the original).\\n *\\n * See {@link module:ol/proj~transformExtent} for extent transformation.\\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\\n * subclasses for geometry transforms.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate.\\n * @api\\n */\\nexport function transform(coordinate, source, destination) {\\n    var transformFunc = getTransform(source, destination);\\n    return transformFunc(coordinate, undefined, coordinate.length);\\n}\\n/**\\n * Transforms an extent from source projection to destination projection.  This\\n * returns a new extent (and does not modify the original).\\n *\\n * @param {import(\\\"./extent.js\\\").Extent} extent The extent to transform.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./extent.js\\\").Extent} The transformed extent.\\n * @api\\n */\\nexport function transformExtent(extent, source, destination) {\\n    var transformFunc = getTransform(source, destination);\\n    return applyTransform(extent, transformFunc);\\n}\\n/**\\n * Transforms the given point to the destination projection.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point.\\n * @param {Projection} sourceProjection Source projection.\\n * @param {Projection} destinationProjection Destination projection.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Point.\\n */\\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\\n    return transformFunc(point);\\n}\\n/**\\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\\n * by when this module is executed and should only need to be called again after\\n * `clearAllProjections()` is called (e.g. in tests).\\n */\\nexport function addCommon() {\\n    // Add transformations that don't alter coordinates to convert within set of\\n    // projections with equal meaning.\\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\\n    // coordinates and back.\\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\\n}\\naddCommon();\\n//# sourceMappingURL=proj.js.map\",\"/**\\n * @module ol/transform\\n */\\nimport { assert } from './asserts.js';\\n/**\\n * An array representing an affine 2d transformation for use with\\n * {@link module:ol/transform} functions. The array has 6 elements.\\n * @typedef {!Array<number>} Transform\\n */\\n/**\\n * Collection of affine 2d transformation functions. The functions work on an\\n * array of 6 elements. The element order is compatible with the [SVGMatrix\\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\\n * a subset (elements a to f) of a 3×3 matrix:\\n * ```\\n * [ a c e ]\\n * [ b d f ]\\n * [ 0 0 1 ]\\n * ```\\n */\\n/**\\n * @private\\n * @type {Transform}\\n */\\nvar tmp_ = new Array(6);\\n/**\\n * Create an identity transform.\\n * @return {!Transform} Identity transform.\\n */\\nexport function create() {\\n    return [1, 0, 0, 1, 0, 0];\\n}\\n/**\\n * Resets the given transform to an identity transform.\\n * @param {!Transform} transform Transform.\\n * @return {!Transform} Transform.\\n */\\nexport function reset(transform) {\\n    return set(transform, 1, 0, 0, 1, 0, 0);\\n}\\n/**\\n * Multiply the underlying matrices of two transforms and return the result in\\n * the first transform.\\n * @param {!Transform} transform1 Transform parameters of matrix 1.\\n * @param {!Transform} transform2 Transform parameters of matrix 2.\\n * @return {!Transform} transform1 multiplied with transform2.\\n */\\nexport function multiply(transform1, transform2) {\\n    var a1 = transform1[0];\\n    var b1 = transform1[1];\\n    var c1 = transform1[2];\\n    var d1 = transform1[3];\\n    var e1 = transform1[4];\\n    var f1 = transform1[5];\\n    var a2 = transform2[0];\\n    var b2 = transform2[1];\\n    var c2 = transform2[2];\\n    var d2 = transform2[3];\\n    var e2 = transform2[4];\\n    var f2 = transform2[5];\\n    transform1[0] = a1 * a2 + c1 * b2;\\n    transform1[1] = b1 * a2 + d1 * b2;\\n    transform1[2] = a1 * c2 + c1 * d2;\\n    transform1[3] = b1 * c2 + d1 * d2;\\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\\n    return transform1;\\n}\\n/**\\n * Set the transform components a-f on a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} a The a component of the transform.\\n * @param {number} b The b component of the transform.\\n * @param {number} c The c component of the transform.\\n * @param {number} d The d component of the transform.\\n * @param {number} e The e component of the transform.\\n * @param {number} f The f component of the transform.\\n * @return {!Transform} Matrix with transform applied.\\n */\\nexport function set(transform, a, b, c, d, e, f) {\\n    transform[0] = a;\\n    transform[1] = b;\\n    transform[2] = c;\\n    transform[3] = d;\\n    transform[4] = e;\\n    transform[5] = f;\\n    return transform;\\n}\\n/**\\n * Set transform on one matrix from another matrix.\\n * @param {!Transform} transform1 Matrix to set transform to.\\n * @param {!Transform} transform2 Matrix to set transform from.\\n * @return {!Transform} transform1 with transform from transform2 applied.\\n */\\nexport function setFromArray(transform1, transform2) {\\n    transform1[0] = transform2[0];\\n    transform1[1] = transform2[1];\\n    transform1[2] = transform2[2];\\n    transform1[3] = transform2[3];\\n    transform1[4] = transform2[4];\\n    transform1[5] = transform2[5];\\n    return transform1;\\n}\\n/**\\n * Transforms the given coordinate with the given transform returning the\\n * resulting, transformed coordinate. The coordinate will be modified in-place.\\n *\\n * @param {Transform} transform The transformation.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} coordinate The coordinate to transform.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} return coordinate so that operations can be\\n *     chained together.\\n */\\nexport function apply(transform, coordinate) {\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\\n    return coordinate;\\n}\\n/**\\n * Applies rotation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} angle Angle in radians.\\n * @return {!Transform} The rotated transform.\\n */\\nexport function rotate(transform, angle) {\\n    var cos = Math.cos(angle);\\n    var sin = Math.sin(angle);\\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\\n}\\n/**\\n * Applies scale to a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} x Scale factor x.\\n * @param {number} y Scale factor y.\\n * @return {!Transform} The scaled transform.\\n */\\nexport function scale(transform, x, y) {\\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\\n}\\n/**\\n * Creates a scale transform.\\n * @param {!Transform} target Transform to overwrite.\\n * @param {number} x Scale factor x.\\n * @param {number} y Scale factor y.\\n * @return {!Transform} The scale transform.\\n */\\nexport function makeScale(target, x, y) {\\n    return set(target, x, 0, 0, y, 0, 0);\\n}\\n/**\\n * Applies translation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} dx Translation x.\\n * @param {number} dy Translation y.\\n * @return {!Transform} The translated transform.\\n */\\nexport function translate(transform, dx, dy) {\\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\\n}\\n/**\\n * Creates a composite transform given an initial translation, scale, rotation, and\\n * final translation (in that order only, not commutative).\\n * @param {!Transform} transform The transform (will be modified in place).\\n * @param {number} dx1 Initial translation x.\\n * @param {number} dy1 Initial translation y.\\n * @param {number} sx Scale factor x.\\n * @param {number} sy Scale factor y.\\n * @param {number} angle Rotation (in counter-clockwise radians).\\n * @param {number} dx2 Final translation x.\\n * @param {number} dy2 Final translation y.\\n * @return {!Transform} The composite transform.\\n */\\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\\n    var sin = Math.sin(angle);\\n    var cos = Math.cos(angle);\\n    transform[0] = sx * cos;\\n    transform[1] = sy * sin;\\n    transform[2] = -sx * sin;\\n    transform[3] = sy * cos;\\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\\n    return transform;\\n}\\n/**\\n * Invert the given transform.\\n * @param {!Transform} source The source transform to invert.\\n * @return {!Transform} The inverted (source) transform.\\n */\\nexport function invert(source) {\\n    return makeInverse(source, source);\\n}\\n/**\\n * Invert the given transform.\\n * @param {!Transform} target Transform to be set as the inverse of\\n *     the source transform.\\n * @param {!Transform} source The source transform to invert.\\n * @return {!Transform} The inverted (target) transform.\\n */\\nexport function makeInverse(target, source) {\\n    var det = determinant(source);\\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\\n    var a = source[0];\\n    var b = source[1];\\n    var c = source[2];\\n    var d = source[3];\\n    var e = source[4];\\n    var f = source[5];\\n    target[0] = d / det;\\n    target[1] = -b / det;\\n    target[2] = -c / det;\\n    target[3] = a / det;\\n    target[4] = (c * f - d * e) / det;\\n    target[5] = -(a * f - b * e) / det;\\n    return target;\\n}\\n/**\\n * Returns the determinant of the given matrix.\\n * @param {!Transform} mat Matrix.\\n * @return {number} Determinant.\\n */\\nexport function determinant(mat) {\\n    return mat[0] * mat[3] - mat[1] * mat[2];\\n}\\n/**\\n * A string version of the transform.  This can be used\\n * for CSS transforms.\\n * @param {!Transform} mat Matrix.\\n * @return {string} The transform as a string.\\n */\\nexport function toString(mat) {\\n    return 'matrix(' + mat.join(', ') + ')';\\n}\\n//# sourceMappingURL=transform.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Geometry\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\\nimport { transform2D } from './flat/transform.js';\\nimport { get as getProjection, getTransform } from '../proj.js';\\nimport Units from '../proj/Units.js';\\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\\n/**\\n * @type {import(\\\"../transform.js\\\").Transform}\\n */\\nvar tmpTransform = createTransform();\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for vector geometries.\\n *\\n * To get notified of changes to the geometry, register a listener for the\\n * generic `change` event on your geometry instance.\\n *\\n * @abstract\\n * @api\\n */\\nvar Geometry = /** @class */ (function (_super) {\\n    __extends(Geometry, _super);\\n    function Geometry() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        _this.extent_ = createEmpty();\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.extentRevision_ = -1;\\n        /**\\n         * @protected\\n         * @type {Object<string, Geometry>}\\n         */\\n        _this.simplifiedGeometryCache = {};\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.simplifiedGeometryRevision = 0;\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @abstract\\n     * @return {!Geometry} Clone.\\n     */\\n    Geometry.prototype.clone = function () {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} closestPoint Closest point.\\n     * @param {number} minSquaredDistance Minimum squared distance.\\n     * @return {number} Minimum squared distance.\\n     */\\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @return {boolean} Contains (x, y).\\n     */\\n    Geometry.prototype.containsXY = function (x, y) {\\n        var coord = this.getClosestPoint([x, y]);\\n        return coord[0] === x && coord[1] === y;\\n    };\\n    /**\\n     * Return the closest point of the geometry to the passed point as\\n     * {@link module:ol/coordinate~Coordinate coordinate}.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} point Point.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_closestPoint Closest point.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Closest point.\\n     * @api\\n     */\\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\\n        return closestPoint;\\n    };\\n    /**\\n     * Returns true if this geometry includes the specified coordinate. If the\\n     * coordinate is on the boundary of the geometry, returns false.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {boolean} Contains coordinate.\\n     * @api\\n     */\\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\\n        return this.containsXY(coordinate[0], coordinate[1]);\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @protected\\n     * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     */\\n    Geometry.prototype.computeExtent = function (extent) {\\n        return abstract();\\n    };\\n    /**\\n     * Get the extent of the geometry.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Extent.\\n     * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    Geometry.prototype.getExtent = function (opt_extent) {\\n        if (this.extentRevision_ != this.getRevision()) {\\n            this.extent_ = this.computeExtent(this.extent_);\\n            this.extentRevision_ = this.getRevision();\\n        }\\n        return returnOrUpdate(this.extent_, opt_extent);\\n    };\\n    /**\\n     * Rotate the geometry around a given coordinate. This modifies the geometry\\n     * coordinates in place.\\n     * @abstract\\n     * @param {number} angle Rotation angle in radians.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} anchor The rotation center.\\n     * @api\\n     */\\n    Geometry.prototype.rotate = function (angle, anchor) {\\n        abstract();\\n    };\\n    /**\\n     * Scale the geometry (with an optional origin).  This modifies the geometry\\n     * coordinates in place.\\n     * @abstract\\n     * @param {number} sx The scaling factor in the x-direction.\\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\\n     *     sx).\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_anchor The scale origin (defaults to the center\\n     *     of the geometry extent).\\n     * @api\\n     */\\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        abstract();\\n    };\\n    /**\\n     * Create a simplified version of this geometry.  For linestrings, this uses\\n     * the the {@link\\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\\n     * simplification is used to preserve topology.\\n     * @param {number} tolerance The tolerance distance for simplification.\\n     * @return {Geometry} A new, simplified version of the original geometry.\\n     * @api\\n     */\\n    Geometry.prototype.simplify = function (tolerance) {\\n        return this.getSimplifiedGeometry(tolerance * tolerance);\\n    };\\n    /**\\n     * Create a simplified version of this geometry using the Douglas Peucker\\n     * algorithm.\\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\\n     * @abstract\\n     * @param {number} squaredTolerance Squared tolerance.\\n     * @return {Geometry} Simplified geometry.\\n     */\\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        return abstract();\\n    };\\n    /**\\n     * Get the type of this geometry.\\n     * @abstract\\n     * @return {import(\\\"./GeometryType.js\\\").default} Geometry type.\\n     */\\n    Geometry.prototype.getType = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Apply a transform function to each coordinate of the geometry.\\n     * The geometry is modified in place.\\n     * If you do not want the geometry modified in place, first `clone()` it and\\n     * then use this function on the clone.\\n     * @abstract\\n     * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n     */\\n    Geometry.prototype.applyTransform = function (transformFn) {\\n        abstract();\\n    };\\n    /**\\n     * Test if the geometry and the passed extent intersect.\\n     * @abstract\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @return {boolean} `true` if the geometry and the extent intersect.\\n     */\\n    Geometry.prototype.intersectsExtent = function (extent) {\\n        return abstract();\\n    };\\n    /**\\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\\n     * instead you want a new geometry, first `clone()` this geometry.\\n     * @abstract\\n     * @param {number} deltaX Delta X.\\n     * @param {number} deltaY Delta Y.\\n     * @api\\n     */\\n    Geometry.prototype.translate = function (deltaX, deltaY) {\\n        abstract();\\n    };\\n    /**\\n     * Transform each coordinate of the geometry from one coordinate reference\\n     * system to another. The geometry is modified in place.\\n     * For example, a line will be transformed to a line and a circle to a circle.\\n     * If you do not want the geometry modified in place, first `clone()` it and\\n     * then use this function on the clone.\\n     *\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} source The current projection.  Can be a\\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} destination The desired projection.  Can be a\\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n     * @return {Geometry} This geometry.  Note that original geometry is\\n     *     modified in place.\\n     * @api\\n     */\\n    Geometry.prototype.transform = function (source, destination) {\\n        /** @type {import(\\\"../proj/Projection.js\\\").default} */\\n        var sourceProj = getProjection(source);\\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\\n            function (inCoordinates, outCoordinates, stride) {\\n                var pixelExtent = sourceProj.getExtent();\\n                var projectedExtent = sourceProj.getWorldExtent();\\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\\n            } :\\n            getTransform(sourceProj, destination);\\n        this.applyTransform(transformFn);\\n        return this;\\n    };\\n    return Geometry;\\n}(BaseObject));\\nexport default Geometry;\\n//# sourceMappingURL=Geometry.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/SimpleGeometry\\n */\\nimport { abstract } from '../util.js';\\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\\nimport Geometry from './Geometry.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @classdesc\\n * Abstract base class; only used for creating subclasses; do not instantiate\\n * in apps, as cannot be rendered.\\n *\\n * @abstract\\n * @api\\n */\\nvar SimpleGeometry = /** @class */ (function (_super) {\\n    __extends(SimpleGeometry, _super);\\n    function SimpleGeometry() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {GeometryLayout}\\n         */\\n        _this.layout = GeometryLayout.XY;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.stride = 2;\\n        /**\\n         * @protected\\n         * @type {Array<number>}\\n         */\\n        _this.flatCoordinates = null;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    SimpleGeometry.prototype.computeExtent = function (extent) {\\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\\n    };\\n    /**\\n     * @abstract\\n     * @return {Array<*>} Coordinates.\\n     */\\n    SimpleGeometry.prototype.getCoordinates = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Return the first coordinate of the geometry.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} First coordinate.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\\n        return this.flatCoordinates.slice(0, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Flat coordinates.\\n     */\\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\\n        return this.flatCoordinates;\\n    };\\n    /**\\n     * Return the last coordinate of the geometry.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Last point.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getLastCoordinate = function () {\\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\\n    };\\n    /**\\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\\n     * @return {GeometryLayout} Layout.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getLayout = function () {\\n        return this.layout;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\\n            clear(this.simplifiedGeometryCache);\\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n            this.simplifiedGeometryRevision = this.getRevision();\\n        }\\n        // If squaredTolerance is negative or if we know that simplification will not\\n        // have any effect then just return this.\\n        if (squaredTolerance < 0 ||\\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\\n            return this;\\n        }\\n        var key = squaredTolerance.toString();\\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\\n            return this.simplifiedGeometryCache[key];\\n        }\\n        else {\\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\\n                return simplifiedGeometry;\\n            }\\n            else {\\n                // Simplification did not actually remove any coordinates.  We now know\\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\\n                // than or equal to the current squaredTolerance will also not have any\\n                // effect.  This allows us to short circuit simplification (saving CPU\\n                // cycles) and prevents the cache of simplified geometries from filling\\n                // up with useless identical copies of this geometry (saving memory).\\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\\n                return this;\\n            }\\n        }\\n    };\\n    /**\\n     * @param {number} squaredTolerance Squared tolerance.\\n     * @return {SimpleGeometry} Simplified geometry.\\n     * @protected\\n     */\\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        return this;\\n    };\\n    /**\\n     * @return {number} Stride.\\n     */\\n    SimpleGeometry.prototype.getStride = function () {\\n        return this.stride;\\n    };\\n    /**\\n     * @param {GeometryLayout} layout Layout.\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     */\\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\\n        this.stride = getStrideForLayout(layout);\\n        this.layout = layout;\\n        this.flatCoordinates = flatCoordinates;\\n    };\\n    /**\\n     * @abstract\\n     * @param {!Array<*>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        abstract();\\n    };\\n    /**\\n     * @param {GeometryLayout|undefined} layout Layout.\\n     * @param {Array<*>} coordinates Coordinates.\\n     * @param {number} nesting Nesting.\\n     * @protected\\n     */\\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\\n        /** @type {number} */\\n        var stride;\\n        if (layout) {\\n            stride = getStrideForLayout(layout);\\n        }\\n        else {\\n            for (var i = 0; i < nesting; ++i) {\\n                if (coordinates.length === 0) {\\n                    this.layout = GeometryLayout.XY;\\n                    this.stride = 2;\\n                    return;\\n                }\\n                else {\\n                    coordinates = /** @type {Array} */ (coordinates[0]);\\n                }\\n            }\\n            stride = coordinates.length;\\n            layout = getLayoutForStride(stride);\\n        }\\n        this.layout = layout;\\n        this.stride = stride;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\\n        if (this.flatCoordinates) {\\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        var sy = opt_sy;\\n        if (sy === undefined) {\\n            sy = sx;\\n        }\\n        var anchor = opt_anchor;\\n        if (!anchor) {\\n            anchor = getCenter(this.getExtent());\\n        }\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    return SimpleGeometry;\\n}(Geometry));\\n/**\\n * @param {number} stride Stride.\\n * @return {GeometryLayout} layout Layout.\\n */\\nfunction getLayoutForStride(stride) {\\n    var layout;\\n    if (stride == 2) {\\n        layout = GeometryLayout.XY;\\n    }\\n    else if (stride == 3) {\\n        layout = GeometryLayout.XYZ;\\n    }\\n    else if (stride == 4) {\\n        layout = GeometryLayout.XYZM;\\n    }\\n    return (\\n    /** @type {GeometryLayout} */ (layout));\\n}\\n/**\\n * @param {GeometryLayout} layout Layout.\\n * @return {number} Stride.\\n */\\nexport function getStrideForLayout(layout) {\\n    var stride;\\n    if (layout == GeometryLayout.XY) {\\n        stride = 2;\\n    }\\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\\n        stride = 3;\\n    }\\n    else if (layout == GeometryLayout.XYZM) {\\n        stride = 4;\\n    }\\n    return /** @type {number} */ (stride);\\n}\\n/**\\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\\n * @param {import(\\\"../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed flat coordinates.\\n */\\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\\n    if (!flatCoordinates) {\\n        return null;\\n    }\\n    else {\\n        var stride = simpleGeometry.getStride();\\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\\n    }\\n}\\nexport default SimpleGeometry;\\n//# sourceMappingURL=SimpleGeometry.js.map\",\"/**\\n * @module ol/geom/flat/area\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRing(flatCoordinates, offset, end, stride) {\\n    var twiceArea = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        twiceArea += y1 * x2 - x1 * y2;\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return twiceArea / 2;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRings(flatCoordinates, offset, ends, stride) {\\n    var area = 0;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        area += linearRing(flatCoordinates, offset, end, stride);\\n        offset = end;\\n    }\\n    return area;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\\n    var area = 0;\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        area += linearRings(flatCoordinates, offset, ends, stride);\\n        offset = ends[ends.length - 1];\\n    }\\n    return area;\\n}\\n//# sourceMappingURL=area.js.map\",\"/**\\n * @module ol/geom/flat/closest\\n */\\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\\n/**\\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\\n * dimensions are linearly interpolated.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset1 Offset 1.\\n * @param {number} offset2 Offset 2.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n */\\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\\n    var x1 = flatCoordinates[offset1];\\n    var y1 = flatCoordinates[offset1 + 1];\\n    var dx = flatCoordinates[offset2] - x1;\\n    var dy = flatCoordinates[offset2 + 1] - y1;\\n    var offset;\\n    if (dx === 0 && dy === 0) {\\n        offset = offset1;\\n    }\\n    else {\\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\\n        if (t > 1) {\\n            offset = offset2;\\n        }\\n        else if (t > 0) {\\n            for (var i = 0; i < stride; ++i) {\\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\\n            }\\n            closestPoint.length = stride;\\n            return;\\n        }\\n        else {\\n            offset = offset1;\\n        }\\n    }\\n    for (var i = 0; i < stride; ++i) {\\n        closestPoint[i] = flatCoordinates[offset + i];\\n    }\\n    closestPoint.length = stride;\\n}\\n/**\\n * Return the squared of the largest distance between any pair of consecutive\\n * coordinates.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    for (offset += stride; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\\n        if (squaredDelta > max) {\\n            max = squaredDelta;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\\n        offset = end;\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\\n        offset = ends[ends.length - 1];\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    if (offset == end) {\\n        return minSquaredDistance;\\n    }\\n    var i, squaredDistance;\\n    if (maxDelta === 0) {\\n        // All points are identical, so just test the first point.\\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = flatCoordinates[offset + i];\\n            }\\n            closestPoint.length = stride;\\n            return squaredDistance;\\n        }\\n        else {\\n            return minSquaredDistance;\\n        }\\n    }\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    var index = offset + stride;\\n    while (index < end) {\\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            minSquaredDistance = squaredDistance;\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = tmpPoint[i];\\n            }\\n            closestPoint.length = stride;\\n            index += stride;\\n        }\\n        else {\\n            // Skip ahead multiple points, because we know that all the skipped\\n            // points cannot be any closer than the closest point we have found so\\n            // far.  We know this because we know how close the current point is, how\\n            // close the closest point we have found so far is, and the maximum\\n            // distance between consecutive points.  For example, if we're currently\\n            // at distance 10, the best we've found so far is 3, and that the maximum\\n            // distance between consecutive points is 2, then we'll need to skip at\\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\\n            // always advance at least one point, to avoid an infinite loop.\\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\\n        }\\n    }\\n    if (isRing) {\\n        // Check the closing segment.\\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            minSquaredDistance = squaredDistance;\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = tmpPoint[i];\\n            }\\n            closestPoint.length = stride;\\n        }\\n    }\\n    return minSquaredDistance;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\\n        offset = end;\\n    }\\n    return minSquaredDistance;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\\n        offset = ends[ends.length - 1];\\n    }\\n    return minSquaredDistance;\\n}\\n//# sourceMappingURL=closest.js.map\",\"/**\\n * @module ol/geom/flat/deflate\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\\n        flatCoordinates[offset++] = coordinate[i];\\n    }\\n    return offset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<import(\\\"../../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        var coordinate = coordinates[i];\\n        for (var j = 0; j < stride; ++j) {\\n            flatCoordinates[offset++] = coordinate[j];\\n        }\\n    }\\n    return offset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>} coordinatess Coordinatess.\\n * @param {number} stride Stride.\\n * @param {Array<number>=} opt_ends Ends.\\n * @return {Array<number>} Ends.\\n */\\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\\n    var ends = opt_ends ? opt_ends : [];\\n    var i = 0;\\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\\n        ends[i++] = end;\\n        offset = end;\\n    }\\n    ends.length = i;\\n    return ends;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>} coordinatesss Coordinatesss.\\n * @param {number} stride Stride.\\n * @param {Array<Array<number>>=} opt_endss Endss.\\n * @return {Array<Array<number>>} Endss.\\n */\\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\\n    var endss = opt_endss ? opt_endss : [];\\n    var i = 0;\\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\\n        endss[i++] = ends;\\n        offset = ends[ends.length - 1];\\n    }\\n    endss.length = i;\\n    return endss;\\n}\\n//# sourceMappingURL=deflate.js.map\",\"/**\\n * @module ol/geom/flat/inflate\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {Array<import(\\\"../../coordinate.js\\\").Coordinate>=} opt_coordinates Coordinates.\\n * @return {Array<import(\\\"../../coordinate.js\\\").Coordinate>} Coordinates.\\n */\\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\\n    }\\n    coordinates.length = i;\\n    return coordinates;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>=} opt_coordinatess Coordinatess.\\n * @return {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>} Coordinatess.\\n */\\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\\n    var i = 0;\\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\\n        var end = ends[j];\\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\\n        offset = end;\\n    }\\n    coordinatess.length = i;\\n    return coordinatess;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>=} opt_coordinatesss\\n *     Coordinatesss.\\n * @return {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>} Coordinatesss.\\n */\\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\\n    var i = 0;\\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\\n        var ends = endss[j];\\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\\n        offset = ends[ends.length - 1];\\n    }\\n    coordinatesss.length = i;\\n    return coordinatesss;\\n}\\n//# sourceMappingURL=inflate.js.map\",\"/**\\n * @module ol/geom/flat/simplify\\n */\\n// Based on simplify-js https://github.com/mourner/simplify-js\\n// Copyright (c) 2012, Vladimir Agafonkin\\n// All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are met:\\n//\\n//    1. Redistributions of source code must retain the above copyright notice,\\n//       this list of conditions and the following disclaimer.\\n//\\n//    2. Redistributions in binary form must reproduce the above copyright\\n//       notice, this list of conditions and the following disclaimer in the\\n//       documentation and/or other materials provided with the distribution.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n// POSSIBILITY OF SUCH DAMAGE.\\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {boolean} highQuality Highest quality.\\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @return {Array<number>} Simplified line string.\\n */\\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\\n        opt_simplifiedFlatCoordinates : [];\\n    if (!highQuality) {\\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        flatCoordinates = simplifiedFlatCoordinates;\\n        offset = 0;\\n        stride = 2;\\n    }\\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n    return simplifiedFlatCoordinates;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    var n = (end - offset) / stride;\\n    if (n < 3) {\\n        for (; offset < end; offset += stride) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + 1];\\n        }\\n        return simplifiedOffset;\\n    }\\n    /** @type {Array<number>} */\\n    var markers = new Array(n);\\n    markers[0] = 1;\\n    markers[n - 1] = 1;\\n    /** @type {Array<number>} */\\n    var stack = [offset, end - stride];\\n    var index = 0;\\n    while (stack.length > 0) {\\n        var last = stack.pop();\\n        var first = stack.pop();\\n        var maxSquaredDistance = 0;\\n        var x1 = flatCoordinates[first];\\n        var y1 = flatCoordinates[first + 1];\\n        var x2 = flatCoordinates[last];\\n        var y2 = flatCoordinates[last + 1];\\n        for (var i = first + stride; i < last; i += stride) {\\n            var x = flatCoordinates[i];\\n            var y = flatCoordinates[i + 1];\\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\\n            if (squaredDistance_1 > maxSquaredDistance) {\\n                index = i;\\n                maxSquaredDistance = squaredDistance_1;\\n            }\\n        }\\n        if (maxSquaredDistance > squaredTolerance) {\\n            markers[(index - offset) / stride] = 1;\\n            if (first + stride < index) {\\n                stack.push(first, index);\\n            }\\n            if (index + stride < last) {\\n                stack.push(index, last);\\n            }\\n        }\\n    }\\n    for (var i = 0; i < n; ++i) {\\n        if (markers[i]) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + i * stride];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + i * stride + 1];\\n        }\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<number>} simplifiedEnds Simplified ends.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\\n        simplifiedEnds.push(simplifiedOffset);\\n        offset = end;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        var simplifiedEnds = [];\\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\\n        simplifiedEndss.push(simplifiedEnds);\\n        offset = ends[ends.length - 1];\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    if (end <= offset + stride) {\\n        // zero or one point, no simplification possible, so copy and return\\n        for (; offset < end; offset += stride) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + 1];\\n        }\\n        return simplifiedOffset;\\n    }\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    // copy first point\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\\n    var x2 = x1;\\n    var y2 = y1;\\n    for (offset += stride; offset < end; offset += stride) {\\n        x2 = flatCoordinates[offset];\\n        y2 = flatCoordinates[offset + 1];\\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\\n            // copy point at offset\\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n    }\\n    if (x2 != x1 || y2 != y1) {\\n        // copy last point\\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {number} value Value.\\n * @param {number} tolerance Tolerance.\\n * @return {number} Rounded value.\\n */\\nexport function snap(value, tolerance) {\\n    return tolerance * Math.round(value / tolerance);\\n}\\n/**\\n * Simplifies a line string using an algorithm designed by Tim Schaub.\\n * Coordinates are snapped to the nearest value in a virtual grid and\\n * consecutive duplicate coordinates are discarded.  This effectively preserves\\n * topology as the simplification of any subsection of a line string is\\n * independent of the rest of the line string.  This means that, for examples,\\n * the common edge between two polygons will be simplified to the same line\\n * string independently in both polygons.  This implementation uses a single\\n * pass over the coordinates and eliminates intermediate collinear points.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    // do nothing if the line is empty\\n    if (offset == end) {\\n        return simplifiedOffset;\\n    }\\n    // snap the first coordinate (P1)\\n    var x1 = snap(flatCoordinates[offset], tolerance);\\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\\n    offset += stride;\\n    // add the first coordinate to the output\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\\n    // find the next coordinate that does not snap to the same value as the first\\n    // coordinate (P2)\\n    var x2, y2;\\n    do {\\n        x2 = snap(flatCoordinates[offset], tolerance);\\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\\n        offset += stride;\\n        if (offset == end) {\\n            // all coordinates snap to the same value, the line collapses to a point\\n            // push the last snapped value anyway to ensure that the output contains\\n            // at least two points\\n            // FIXME should we really return at least two points anyway?\\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n            return simplifiedOffset;\\n        }\\n    } while (x2 == x1 && y2 == y1);\\n    while (offset < end) {\\n        // snap the next coordinate (P3)\\n        var x3 = snap(flatCoordinates[offset], tolerance);\\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\\n        offset += stride;\\n        // skip P3 if it is equal to P2\\n        if (x3 == x2 && y3 == y2) {\\n            continue;\\n        }\\n        // calculate the delta between P1 and P2\\n        var dx1 = x2 - x1;\\n        var dy1 = y2 - y1;\\n        // calculate the delta between P3 and P1\\n        var dx2 = x3 - x1;\\n        var dy2 = y3 - y1;\\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\\n        // P1 in the same direction then P2 is on the straight line between P1 and\\n        // P3\\n        if ((dx1 * dy2 == dy1 * dx2) &&\\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\\n            // discard P2 and set P2 = P3\\n            x2 = x3;\\n            y2 = y3;\\n            continue;\\n        }\\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\\n        // and continue with P1 = P2 and P2 = P3\\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n        x1 = x2;\\n        y1 = y2;\\n        x2 = x3;\\n        y2 = y3;\\n    }\\n    // add the last point (P2)\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<number>} simplifiedEnds Simplified ends.\\n * @return {number} Simplified offset.\\n */\\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\\n        simplifiedEnds.push(simplifiedOffset);\\n        offset = end;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\\n * @return {number} Simplified offset.\\n */\\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        var simplifiedEnds = [];\\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\\n        simplifiedEndss.push(simplifiedEnds);\\n        offset = ends[ends.length - 1];\\n    }\\n    return simplifiedOffset;\\n}\\n//# sourceMappingURL=simplify.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/LinearRing\\n */\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { linearRing as linearRingArea } from './flat/area.js';\\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\\nimport { deflateCoordinates } from './flat/deflate.js';\\nimport { inflateCoordinates } from './flat/inflate.js';\\nimport { douglasPeucker } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\\n * on its own.\\n *\\n * @api\\n */\\nvar LinearRing = /** @class */ (function (_super) {\\n    __extends(LinearRing, _super);\\n    /**\\n     * @param {Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    function LinearRing(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<import(\\\"../coordinate.js\\\").Coordinate>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!LinearRing} Clone.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.clone = function () {\\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * Return the area of the linear ring on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    LinearRing.prototype.getArea = function () {\\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * Return the coordinates of the linear ring.\\n     * @return {Array<import(\\\"../coordinate.js\\\").Coordinate>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.getCoordinates = function () {\\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    LinearRing.prototype.getType = function () {\\n        return GeometryType.LINEAR_RING;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.intersectsExtent = function (extent) {\\n        return false;\\n    };\\n    /**\\n     * Set the coordinates of the linear ring.\\n     * @param {!Array<import(\\\"../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 1);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return LinearRing;\\n}(SimpleGeometry));\\nexport default LinearRing;\\n//# sourceMappingURL=LinearRing.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Point\\n */\\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { deflateCoordinate } from './flat/deflate.js';\\nimport { squaredDistance as squaredDx } from '../math.js';\\n/**\\n * @classdesc\\n * Point geometry.\\n *\\n * @api\\n */\\nvar Point = /** @class */ (function (_super) {\\n    __extends(Point, _super);\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinates Coordinates.\\n     * @param {import(\\\"./GeometryLayout.js\\\").default=} opt_layout Layout.\\n     */\\n    function Point(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        _this.setCoordinates(coordinates, opt_layout);\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!Point} Clone.\\n     * @override\\n     * @api\\n     */\\n    Point.prototype.clone = function () {\\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\\n        return point;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        var flatCoordinates = this.flatCoordinates;\\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            var stride = this.stride;\\n            for (var i = 0; i < stride; ++i) {\\n                closestPoint[i] = flatCoordinates[i];\\n            }\\n            closestPoint.length = stride;\\n            return squaredDistance;\\n        }\\n        else {\\n            return minSquaredDistance;\\n        }\\n    };\\n    /**\\n     * Return the coordinate of the point.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    Point.prototype.getCoordinates = function () {\\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Point.prototype.computeExtent = function (extent) {\\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.getType = function () {\\n        return GeometryType.POINT;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.intersectsExtent = function (extent) {\\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 0);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return Point;\\n}(SimpleGeometry));\\nexport default Point;\\n//# sourceMappingURL=Point.js.map\",\"/**\\n * @module ol/geom/flat/contains\\n */\\nimport { forEachCorner } from '../../extent.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} Contains extent.\\n */\\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\\n    var outside = forEachCorner(extent, \\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {boolean} Contains (x, y).\\n     */\\n    function (coordinate) {\\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\\n    });\\n    return !outside;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\\n    // http://geomalgorithms.com/a03-_inclusion.html\\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\\n    // This code may be freely used and modified for any purpose\\n    // providing that this copyright notice is included with it.\\n    // SoftSurfer makes no warranty for this code, and cannot be held\\n    // liable for any real or imagined damage resulting from its use.\\n    // Users of this code must verify correctness for their application.\\n    var wn = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        if (y1 <= y) {\\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\\n                wn++;\\n            }\\n        }\\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\\n            wn--;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return wn !== 0;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\\n    if (ends.length === 0) {\\n        return false;\\n    }\\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\\n        return false;\\n    }\\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\\n    if (endss.length === 0) {\\n        return false;\\n    }\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\\n            return true;\\n        }\\n        offset = ends[ends.length - 1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=contains.js.map\",\"/**\\n * @module ol/geom/flat/interiorpoint\\n */\\nimport { numberSafeCompareFunction } from '../../array.js';\\nimport { linearRingsContainsXY } from './contains.js';\\n/**\\n * Calculates a point that is likely to lie in the interior of the linear rings.\\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {Array<number>} flatCenters Flat centers.\\n * @param {number} flatCentersOffset Flat center offset.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\\n * length of the horizontal intersection that the point belongs to.\\n */\\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\\n    var i, ii, x, x1, x2, y1, y2;\\n    var y = flatCenters[flatCentersOffset + 1];\\n    /** @type {Array<number>} */\\n    var intersections = [];\\n    // Calculate intersections with the horizontal line\\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\\n        var end = ends[r];\\n        x1 = flatCoordinates[end - stride];\\n        y1 = flatCoordinates[end - stride + 1];\\n        for (i = offset; i < end; i += stride) {\\n            x2 = flatCoordinates[i];\\n            y2 = flatCoordinates[i + 1];\\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                intersections.push(x);\\n            }\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n    }\\n    // Find the longest segment of the horizontal line that has its center point\\n    // inside the linear ring.\\n    var pointX = NaN;\\n    var maxSegmentLength = -Infinity;\\n    intersections.sort(numberSafeCompareFunction);\\n    x1 = intersections[0];\\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\\n        x2 = intersections[i];\\n        var segmentLength = Math.abs(x2 - x1);\\n        if (segmentLength > maxSegmentLength) {\\n            x = (x1 + x2) / 2;\\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\\n                pointX = x;\\n                maxSegmentLength = segmentLength;\\n            }\\n        }\\n        x1 = x2;\\n    }\\n    if (isNaN(pointX)) {\\n        // There is no horizontal line that has its center point inside the linear\\n        // ring.  Use the center of the the linear ring's extent.\\n        pointX = flatCenters[flatCentersOffset];\\n    }\\n    if (opt_dest) {\\n        opt_dest.push(pointX, y, maxSegmentLength);\\n        return opt_dest;\\n    }\\n    else {\\n        return [pointX, y, maxSegmentLength];\\n    }\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {Array<number>} flatCenters Flat centers.\\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\\n * length of the horizontal intersection that the point belongs to.\\n */\\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\\n    var interiorPoints = [];\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\\n        offset = ends[ends.length - 1];\\n    }\\n    return interiorPoints;\\n}\\n//# sourceMappingURL=interiorpoint.js.map\",\"/**\\n * @module ol/geom/flat/intersectsextent\\n */\\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\\nimport { forEach as forEachSegment } from './segments.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\\n    if (!intersects(extent, coordinatesExtent)) {\\n        return false;\\n    }\\n    if (containsExtent(extent, coordinatesExtent)) {\\n        return true;\\n    }\\n    if (coordinatesExtent[0] >= extent[0] &&\\n        coordinatesExtent[2] <= extent[2]) {\\n        return true;\\n    }\\n    if (coordinatesExtent[1] >= extent[1] &&\\n        coordinatesExtent[3] <= extent[3]) {\\n        return true;\\n    }\\n    return forEachSegment(flatCoordinates, offset, end, stride, \\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} point1 Start point.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} point2 End point.\\n     * @return {boolean} `true` if the segment and the extent intersect,\\n     *     `false` otherwise.\\n     */\\n    function (point1, point2) {\\n        return intersectsSegment(extent, point1, point2);\\n    });\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\\n            return true;\\n        }\\n        offset = ends[i];\\n    }\\n    return false;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\\n        return true;\\n    }\\n    return false;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\\n        return false;\\n    }\\n    if (ends.length === 1) {\\n        return true;\\n    }\\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\\n                return false;\\n            }\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\\n            return true;\\n        }\\n        offset = ends[ends.length - 1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=intersectsextent.js.map\",\"/**\\n * @module ol/geom/flat/segments\\n */\\n/**\\n * This function calls `callback` for each segment of the flat coordinates\\n * array. If the callback returns a truthy value the function returns that\\n * value immediately. Otherwise the function returns `false`.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {function(import(\\\"../../coordinate.js\\\").Coordinate, import(\\\"../../coordinate.js\\\").Coordinate): T} callback Function\\n *     called for each segment.\\n * @return {T|boolean} Value.\\n * @template T\\n */\\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\\n    var point2 = [];\\n    var ret;\\n    for (; (offset + stride) < end; offset += stride) {\\n        point2[0] = flatCoordinates[offset + stride];\\n        point2[1] = flatCoordinates[offset + stride + 1];\\n        ret = callback(point1, point2);\\n        if (ret) {\\n            return ret;\\n        }\\n        point1[0] = point2[0];\\n        point1[1] = point2[1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=segments.js.map\",\"/**\\n * @module ol/geom/flat/reverse\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n */\\nexport function coordinates(flatCoordinates, offset, end, stride) {\\n    while (offset < end - stride) {\\n        for (var i = 0; i < stride; ++i) {\\n            var tmp = flatCoordinates[offset + i];\\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\\n            flatCoordinates[end - stride + i] = tmp;\\n        }\\n        offset += stride;\\n        end -= stride;\\n    }\\n}\\n//# sourceMappingURL=reverse.js.map\",\"/**\\n * @module ol/geom/flat/orient\\n */\\nimport { coordinates as reverseCoordinates } from './reverse.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {boolean} Is clockwise.\\n */\\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\\n    // http://tinyurl.com/clockwise-method\\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\\n    var edge = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        edge += (x2 - x1) * (y2 + y1);\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return edge > 0;\\n}\\n/**\\n * Determines if linear rings are oriented.  By default, left-hand orientation\\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\\n * To test for right-hand orientation, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Test for right-hand orientation\\n *     (counter-clockwise exterior ring and clockwise interior rings).\\n * @return {boolean} Rings are correctly oriented.\\n */\\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\\n    var right = opt_right !== undefined ? opt_right : false;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\\n        if (i === 0) {\\n            if ((right && isClockwise) || (!right && !isClockwise)) {\\n                return false;\\n            }\\n        }\\n        else {\\n            if ((right && !isClockwise) || (!right && isClockwise)) {\\n                return false;\\n            }\\n        }\\n        offset = end;\\n    }\\n    return true;\\n}\\n/**\\n * Determines if linear rings are oriented.  By default, left-hand orientation\\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\\n * To test for right-hand orientation, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Array of array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Test for right-hand orientation\\n *     (counter-clockwise exterior ring and clockwise interior rings).\\n * @return {boolean} Rings are correctly oriented.\\n */\\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\\n            return false;\\n        }\\n        if (ends.length) {\\n            offset = ends[ends.length - 1];\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * Orient coordinates in a flat array of linear rings.  By default, rings\\n * are oriented following the left-hand rule (clockwise for exterior and\\n * counter-clockwise for interior rings).  To orient according to the\\n * right-hand rule, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\\n * @return {number} End.\\n */\\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\\n    var right = opt_right !== undefined ? opt_right : false;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\\n        var reverse = i === 0 ?\\n            (right && isClockwise) || (!right && !isClockwise) :\\n            (right && !isClockwise) || (!right && isClockwise);\\n        if (reverse) {\\n            reverseCoordinates(flatCoordinates, offset, end, stride);\\n        }\\n        offset = end;\\n    }\\n    return offset;\\n}\\n/**\\n * Orient coordinates in a flat array of linear rings.  By default, rings\\n * are oriented following the left-hand rule (clockwise for exterior and\\n * counter-clockwise for interior rings).  To orient according to the\\n * right-hand rule, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Array of array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\\n * @return {number} End.\\n */\\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\\n    }\\n    return offset;\\n}\\n//# sourceMappingURL=orient.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Polygon\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport LinearRing from './LinearRing.js';\\nimport Point from './Point.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { offset as sphereOffset } from '../sphere.js';\\nimport { linearRings as linearRingsArea } from './flat/area.js';\\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\\nimport { linearRingsContainsXY } from './flat/contains.js';\\nimport { deflateCoordinatesArray } from './flat/deflate.js';\\nimport { inflateCoordinatesArray } from './flat/inflate.js';\\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\\nimport { quantizeArray } from './flat/simplify.js';\\nimport { modulo } from '../math.js';\\n/**\\n * @classdesc\\n * Polygon geometry.\\n *\\n * @api\\n */\\nvar Polygon = /** @class */ (function (_super) {\\n    __extends(Polygon, _super);\\n    /**\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>|!Array<number>} coordinates\\n     *     Array of linear rings that define the polygon. The first linear ring of the\\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\\n     *     an array of vertices' coordinates where the first coordinate and the last are\\n     *     equivalent. (For internal use, flat coordinates in combination with\\n     *     `opt_layout` and `opt_ends` are also accepted.)\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\\n     */\\n    function Polygon(coordinates, opt_layout, opt_ends) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        _this.ends_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.flatInteriorPointRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.flatInteriorPoint_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.orientedRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.orientedFlatCoordinates_ = null;\\n        if (opt_layout !== undefined && opt_ends) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n            _this.ends_ = opt_ends;\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed linear ring to this polygon.\\n     * @param {LinearRing} linearRing Linear ring.\\n     * @api\\n     */\\n    Polygon.prototype.appendLinearRing = function (linearRing) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\\n        }\\n        this.ends_.push(this.flatCoordinates.length);\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!Polygon} Clone.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.clone = function () {\\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.containsXY = function (x, y) {\\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\\n    };\\n    /**\\n     * Return the area of the polygon on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    Polygon.prototype.getArea = function () {\\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * Get the coordinate array for this geometry.  This array has the structure\\n     * of a GeoJSON coordinate array for polygons.\\n     *\\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\\n     *     If `false`, coordinates will be oriented according to the left-hand rule\\n     *     (clockwise for exterior and counter-clockwise for interior rings).\\n     *     By default, coordinate orientation will depend on how the geometry was\\n     *     constructed.\\n     * @return {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.getCoordinates = function (opt_right) {\\n        var flatCoordinates;\\n        if (opt_right !== undefined) {\\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\\n        }\\n        else {\\n            flatCoordinates = this.flatCoordinates;\\n        }\\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Ends.\\n     */\\n    Polygon.prototype.getEnds = function () {\\n        return this.ends_;\\n    };\\n    /**\\n     * @return {Array<number>} Interior point.\\n     */\\n    Polygon.prototype.getFlatInteriorPoint = function () {\\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\\n            var flatCenter = getCenter(this.getExtent());\\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\\n            this.flatInteriorPointRevision_ = this.getRevision();\\n        }\\n        return this.flatInteriorPoint_;\\n    };\\n    /**\\n     * Return an interior point of the polygon.\\n     * @return {Point} Interior point as XYM coordinate, where M is the\\n     * length of the horizontal intersection that the point belongs to.\\n     * @api\\n     */\\n    Polygon.prototype.getInteriorPoint = function () {\\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\\n    };\\n    /**\\n     * Return the number of rings of the polygon,  this includes the exterior\\n     * ring and any interior rings.\\n     *\\n     * @return {number} Number of rings.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRingCount = function () {\\n        return this.ends_.length;\\n    };\\n    /**\\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\\n     * given index is out of range.\\n     * The exterior linear ring is available at index `0` and the interior rings\\n     * at index `1` and beyond.\\n     *\\n     * @param {number} index Index.\\n     * @return {LinearRing} Linear ring.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRing = function (index) {\\n        if (index < 0 || this.ends_.length <= index) {\\n            return null;\\n        }\\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\\n    };\\n    /**\\n     * Return the linear rings of the polygon.\\n     * @return {Array<LinearRing>} Linear rings.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRings = function () {\\n        var layout = this.layout;\\n        var flatCoordinates = this.flatCoordinates;\\n        var ends = this.ends_;\\n        var linearRings = [];\\n        var offset = 0;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\\n            linearRings.push(linearRing);\\n            offset = end;\\n        }\\n        return linearRings;\\n    };\\n    /**\\n     * @return {Array<number>} Oriented flat coordinates.\\n     */\\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\\n        if (this.orientedRevision_ != this.getRevision()) {\\n            var flatCoordinates = this.flatCoordinates;\\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\\n                this.orientedFlatCoordinates_ = flatCoordinates;\\n            }\\n            else {\\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\\n                this.orientedFlatCoordinates_.length =\\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\\n            }\\n            this.orientedRevision_ = this.getRevision();\\n        }\\n        return this.orientedFlatCoordinates_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        var simplifiedEnds = [];\\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Polygon.prototype.getType = function () {\\n        return GeometryType.POLYGON;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Polygon.prototype.intersectsExtent = function (extent) {\\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the polygon.\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 2);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\\n        this.changed();\\n    };\\n    return Polygon;\\n}(SimpleGeometry));\\nexport default Polygon;\\n/**\\n * Create an approximation of a circle on the surface of a sphere.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} center Center (`[lon, lat]` in degrees).\\n * @param {number} radius The great-circle distance from the center to\\n *     the polygon vertices.\\n * @param {number=} opt_n Optional number of vertices for the resulting\\n *     polygon. Default is `32`.\\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\\n *     the Earth's mean radius using the WGS84 ellipsoid).\\n * @return {Polygon} The \\\"circular\\\" polygon.\\n * @api\\n */\\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\\n    var n = opt_n ? opt_n : 32;\\n    /** @type {Array<number>} */\\n    var flatCoordinates = [];\\n    for (var i = 0; i < n; ++i) {\\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\\n    }\\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\\n}\\n/**\\n * Create a polygon from an extent. The layout used is `XY`.\\n * @param {import(\\\"../extent.js\\\").Extent} extent The extent.\\n * @return {Polygon} The polygon.\\n * @api\\n */\\nexport function fromExtent(extent) {\\n    var minX = extent[0];\\n    var minY = extent[1];\\n    var maxX = extent[2];\\n    var maxY = extent[3];\\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\\n}\\n/**\\n * Create a regular polygon from a circle.\\n * @param {import(\\\"./Circle.js\\\").default} circle Circle geometry.\\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\\n *     radians. Default is 0.\\n * @return {Polygon} Polygon geometry.\\n * @api\\n */\\nexport function fromCircle(circle, opt_sides, opt_angle) {\\n    var sides = opt_sides ? opt_sides : 32;\\n    var stride = circle.getStride();\\n    var layout = circle.getLayout();\\n    var center = circle.getCenter();\\n    var arrayLength = stride * (sides + 1);\\n    var flatCoordinates = new Array(arrayLength);\\n    for (var i = 0; i < arrayLength; i += stride) {\\n        flatCoordinates[i] = 0;\\n        flatCoordinates[i + 1] = 0;\\n        for (var j = 2; j < stride; j++) {\\n            flatCoordinates[i + j] = center[j];\\n        }\\n    }\\n    var ends = [flatCoordinates.length];\\n    var polygon = new Polygon(flatCoordinates, layout, ends);\\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\\n    return polygon;\\n}\\n/**\\n * Modify the coordinates of a polygon to make it a regular polygon.\\n * @param {Polygon} polygon Polygon geometry.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} center Center of the regular polygon.\\n * @param {number} radius Radius of the regular polygon.\\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\\n *     radians. Default is 0.\\n */\\nexport function makeRegular(polygon, center, radius, opt_angle) {\\n    var flatCoordinates = polygon.getFlatCoordinates();\\n    var stride = polygon.getStride();\\n    var sides = flatCoordinates.length / stride - 1;\\n    var startAngle = opt_angle ? opt_angle : 0;\\n    for (var i = 0; i <= sides; ++i) {\\n        var offset = i * stride;\\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\\n    }\\n    polygon.changed();\\n}\\n//# sourceMappingURL=Polygon.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/View\\n */\\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\\nimport { getUid } from './util.js';\\nimport { VOID } from './functions.js';\\nimport { createExtent, none as centerNone } from './centerconstraint.js';\\nimport BaseObject from './Object.js';\\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\\nimport ViewHint from './ViewHint.js';\\nimport ViewProperty from './ViewProperty.js';\\nimport { linearFindNearest } from './array.js';\\nimport { assert } from './asserts.js';\\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\\nimport { inAndOut } from './easing.js';\\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\\nimport GeometryType from './geom/GeometryType.js';\\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\\nimport { clamp, modulo } from './math.js';\\nimport { assign } from './obj.js';\\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\\nimport Units from './proj/Units.js';\\nimport { equals } from './coordinate';\\nimport { easeOut } from './easing';\\nimport { createMinMaxResolution } from './resolutionconstraint';\\n/**\\n * An animation configuration\\n *\\n * @typedef {Object} Animation\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [sourceCenter]\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [targetCenter]\\n * @property {number} [sourceResolution]\\n * @property {number} [targetResolution]\\n * @property {number} [sourceRotation]\\n * @property {number} [targetRotation]\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [anchor]\\n * @property {number} start\\n * @property {number} duration\\n * @property {boolean} complete\\n * @property {function(number):number} easing\\n * @property {function(boolean)} callback\\n */\\n/**\\n * @typedef {Object} Constraints\\n * @property {import(\\\"./centerconstraint.js\\\").Type} center\\n * @property {import(\\\"./resolutionconstraint.js\\\").Type} resolution\\n * @property {import(\\\"./rotationconstraint.js\\\").Type} rotation\\n */\\n/**\\n * @typedef {Object} FitOptions\\n * @property {import(\\\"./size.js\\\").Size} [size] The size in pixels of the box to fit\\n * the extent into. Default is the current size of the first map in the DOM that\\n * uses this view, or `[100, 100]` if no such map is found.\\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\\n * cleared inside the view. Values in the array are top, right, bottom and left\\n * padding.\\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\\n * get the nearest extent instead of the closest that actually fits the view.\\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\\n * `minResolution` is given, this property is ignored.\\n * @property {number} [duration] The duration of the animation in milliseconds.\\n * By default, there is no animation to the target extent.\\n * @property {function(number):number} [easing] The easing function used during\\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\\n * The function will be called for each frame with a number representing a\\n * fraction of the animation's duration.  The function should return a number\\n * between 0 and 1 representing the progress toward the destination state.\\n * @property {function(boolean)} [callback] Function called when the view is in\\n * its final position. The callback will be called with `true` if the animation\\n * series completed on its own or `false` if it was cancelled.\\n */\\n/**\\n * @typedef {Object} ViewOptions\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [center] The initial center for\\n * the view. The coordinate system for the center is specified with the\\n * `projection` option. Layer sources will not be fetched if this is not set,\\n * but the center can be set later with {@link #setCenter}.\\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\\n * `false` means no constraint. `true` means no constraint, but snap to zero\\n * near zero. A number constrains the rotation to that number of values. For\\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\\n * @property {boolean} [enableRotation=true] Enable rotation.\\n * If `false`, a rotation constraint that always sets the rotation to zero is\\n * used. The `constrainRotation` option has no effect if `enableRotation` is\\n * `false`.\\n * @property {import(\\\"./extent.js\\\").Extent} [extent] The extent that constrains the\\n * view, in other words, nothing outside of this extent can be visible on the map.\\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\\n * constraint will only apply to the view center and not the whole extent.\\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\\n * of the given `extent`.\\n * @property {number} [maxResolution] The maximum resolution used to determine\\n * the resolution constraint. It is used together with `minResolution` (or\\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\\n * that the projection's validity extent fits in a 256x256 px tile. If the\\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\\n * to `40075016.68557849 / 256 = 156543.03392804097`.\\n * @property {number} [minResolution] The minimum resolution used to determine\\n * the resolution constraint.  It is used together with `maxResolution` (or\\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\\n * (the default) then `minResolution` defaults to\\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\\n * resolution constraint. It is used together with `minZoom` (or\\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\\n * provided, it is given precedence over `maxZoom`.\\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\\n * resolution constraint. It is used together with `maxZoom` (or\\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\\n * provided, it is given precedence over `minZoom`.\\n * @property {boolean} [multiWorld=false] No more than one world is visible.\\n * @property {boolean} [constrainResolution=false] If true, the view will always\\n * animate to the closest zoom level after an interaction; false means\\n * intermediary zoom levels are allowed.\\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\\n * the given resolution or zoom bounds.\\n * @property {import(\\\"./proj.js\\\").ProjectionLike} [projection='EPSG:3857'] The\\n * projection. The default is Spherical Mercator.\\n * @property {number} [resolution] The initial resolution for the view. The\\n * units are `projection` units per pixel (e.g. meters per pixel). An\\n * alternative to setting this is to set `zoom`. Layer sources will not be\\n * fetched if neither this nor `zoom` are defined, but they can be set later\\n * with {@link #setZoom} or {@link #setResolution}.\\n * @property {Array<number>} [resolutions] Resolutions to determine the\\n * resolution constraint. If set the `maxResolution`, `minResolution`,\\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\\n * @property {number} [rotation=0] The initial rotation for the view in radians\\n * (positive rotation clockwise, 0 means North).\\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\\n * level used to calculate the initial resolution for the view.\\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\\n * corresponding resolution.\\n */\\n/**\\n * @typedef {Object} AnimationOptions\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [center] The center of the view at the end of\\n * the animation.\\n * @property {number} [zoom] The zoom level of the view at the end of the\\n * animation. This takes precedence over `resolution`.\\n * @property {number} [resolution] The resolution of the view at the end\\n * of the animation.  If `zoom` is also provided, this option will be ignored.\\n * @property {number} [rotation] The rotation of the view at the end of\\n * the animation.\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [anchor] Optional anchor to remain fixed\\n * during a rotation or resolution animation.\\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\\n * @property {function(number):number} [easing] The easing function used\\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\\n * The function will be called for each frame with a number representing a\\n * fraction of the animation's duration.  The function should return a number\\n * between 0 and 1 representing the progress toward the destination state.\\n */\\n/**\\n * @typedef {Object} State\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} center\\n * @property {import(\\\"./proj/Projection.js\\\").default} projection\\n * @property {number} resolution\\n * @property {number} rotation\\n * @property {number} zoom\\n */\\n/**\\n * Default min zoom level for the map view.\\n * @type {number}\\n */\\nvar DEFAULT_MIN_ZOOM = 0;\\n/**\\n * @classdesc\\n * A View object represents a simple 2D view of the map.\\n *\\n * This is the object to act upon to change the center, resolution,\\n * and rotation of the map.\\n *\\n * ### The view states\\n *\\n * An View is determined by three states: `center`, `resolution`,\\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\\n * `getCenter` and `setCenter` for the `center` state.\\n *\\n * The `zoom` state is actually not saved on the view: all computations\\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\\n * methods are available, as well as `getResolutionForZoom` and\\n * `getZoomForResolution` to switch from one system to the other.\\n *\\n * A View has a `projection`. The projection determines the\\n * coordinate system of the center, and its units determine the units of the\\n * resolution (projection units per pixel). The default projection is\\n * Spherical Mercator (EPSG:3857).\\n *\\n * ### The constraints\\n *\\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\\n * states of the view, but any constraint defined in the constructor will\\n * be applied along the way.\\n *\\n * A View object can have a *resolution constraint*, a *rotation constraint*\\n * and a *center constraint*.\\n *\\n * The *resolution constraint* typically restricts min/max values and\\n * snaps to specific resolutions. It is determined by the following\\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\\n * If `resolutions` is set, the other three options are ignored. See\\n * documentation for each option for more information. By default, the view\\n * only has a min/max restriction and allow intermediary zoom levels when\\n * pinch-zooming for example.\\n *\\n * The *rotation constraint* snaps to specific angles. It is determined\\n * by the following options: `enableRotation` and `constrainRotation`.\\n * By default the rotation value is snapped to zero when approaching the\\n * horizontal.\\n *\\n * The *center constraint* is determined by the `extent` option. By\\n * default the view center is not constrained at all.\\n *\\n * ### Changing the view state\\n *\\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\\n * `setRotation` are subject to the above mentioned constraints. As such, it\\n * may sometimes not be possible to know in advance the resulting state of the\\n * View. For example, calling `setResolution(10)` does not guarantee that\\n * `getResolution()` will return `10`.\\n *\\n * A consequence of this is that, when applying a delta on the view state, one\\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\\n * rather than the corresponding setters. This will let view do its internal\\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\\n * argument which allows specifying an origin for the transformation.\\n *\\n * ### Interacting with the view\\n *\\n * View constraints are usually only applied when the view is *at rest*, meaning that\\n * no interaction or animation is ongoing. As such, if the user puts the view in a\\n * state that is not equivalent to a constrained one (e.g. rotating the view when\\n * the snap angle is 0), an animation will be triggered at the interaction end to\\n * put back the view to a stable state;\\n *\\n * @api\\n */\\nvar View = /** @class */ (function (_super) {\\n    __extends(View, _super);\\n    /**\\n     * @param {ViewOptions=} opt_options View options.\\n     */\\n    function View(opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = assign({}, opt_options);\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.hints_ = [0, 0];\\n        /**\\n         * @private\\n         * @type {Array<Array<Animation>>}\\n         */\\n        _this.animations_ = [];\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.updateAnimationKey_;\\n        /**\\n         * @private\\n         * @const\\n         * @type {import(\\\"./proj/Projection.js\\\").default}\\n         */\\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\\n        /**\\n         * @private\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate|undefined}\\n         */\\n        _this.targetCenter_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.targetResolution_;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.targetRotation_;\\n        _this.applyOptions_(options);\\n        return _this;\\n    }\\n    /**\\n     * Set up the view with the given options.\\n     * @param {ViewOptions} options View options.\\n     */\\n    View.prototype.applyOptions_ = function (options) {\\n        /**\\n         * @type {Object<string, *>}\\n         */\\n        var properties = {};\\n        var resolutionConstraintInfo = createResolutionConstraint(options);\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\\n        /**\\n         * @private\\n         * @type {Array<number>|undefined}\\n         */\\n        this.resolutions_ = options.resolutions;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\\n        var centerConstraint = createCenterConstraint(options);\\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\\n        var rotationConstraint = createRotationConstraint(options);\\n        /**\\n         * @private\\n         * @type {Constraints}\\n         */\\n        this.constraints_ = {\\n            center: centerConstraint,\\n            resolution: resolutionConstraint,\\n            rotation: rotationConstraint\\n        };\\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\\n        this.setCenter(options.center !== undefined ? options.center : null);\\n        if (options.resolution !== undefined) {\\n            this.setResolution(options.resolution);\\n        }\\n        else if (options.zoom !== undefined) {\\n            this.setZoom(options.zoom);\\n        }\\n        this.resolveConstraints(0);\\n        this.setProperties(properties);\\n        /**\\n         * @private\\n         * @type {ViewOptions}\\n         */\\n        this.options_ = options;\\n    };\\n    /**\\n     * Get an updated version of the view options used to construct the view.  The\\n     * current resolution (or zoom), center, and rotation are applied to any stored\\n     * options.  The provided options can be used to apply new min/max zoom or\\n     * resolution limits.\\n     * @param {ViewOptions} newOptions New options to be applied.\\n     * @return {ViewOptions} New options updated with the current view state.\\n     */\\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\\n        var options = assign({}, this.options_);\\n        // preserve resolution (or zoom)\\n        if (options.resolution !== undefined) {\\n            options.resolution = this.getResolution();\\n        }\\n        else {\\n            options.zoom = this.getZoom();\\n        }\\n        // preserve center\\n        options.center = this.getCenter();\\n        // preserve rotation\\n        options.rotation = this.getRotation();\\n        return assign({}, options, newOptions);\\n    };\\n    /**\\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\\n     * can be animated for smooth transitions between view states.  For example,\\n     * to animate the view to a new zoom level:\\n     *\\n     *     view.animate({zoom: view.getZoom() + 1});\\n     *\\n     * By default, the animation lasts one second and uses in-and-out easing.  You\\n     * can customize this behavior by including `duration` (in milliseconds) and\\n     * `easing` options (see {@link module:ol/easing}).\\n     *\\n     * To chain together multiple animations, call the method with multiple\\n     * animation objects.  For example, to first zoom and then pan:\\n     *\\n     *     view.animate({zoom: 10}, {center: [0, 0]});\\n     *\\n     * If you provide a function as the last argument to the animate method, it\\n     * will get called at the end of an animation series.  The callback will be\\n     * called with `true` if the animation series completed on its own or `false`\\n     * if it was cancelled.\\n     *\\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\\n     * (or another method that calls one of these).\\n     *\\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\\n     *     options.  Multiple animations can be run in series by passing multiple\\n     *     options objects.  To run multiple animations in parallel, call the method\\n     *     multiple times.  An optional callback can be provided as a final\\n     *     argument.  The callback will be called with a boolean indicating whether\\n     *     the animation completed without being cancelled.\\n     * @api\\n     */\\n    View.prototype.animate = function (var_args) {\\n        if (this.isDef() && !this.getAnimating()) {\\n            this.resolveConstraints(0);\\n        }\\n        this.animate_.apply(this, arguments);\\n    };\\n    /**\\n     * @private\\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\\n     */\\n    View.prototype.animate_ = function (var_args) {\\n        var animationCount = arguments.length;\\n        var callback;\\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\\n            callback = arguments[animationCount - 1];\\n            --animationCount;\\n        }\\n        if (!this.isDef()) {\\n            // if view properties are not yet set, shortcut to the final state\\n            var state = arguments[animationCount - 1];\\n            if (state.center) {\\n                this.setCenter(state.center);\\n            }\\n            if (state.zoom !== undefined) {\\n                this.setZoom(state.zoom);\\n            }\\n            if (state.rotation !== undefined) {\\n                this.setRotation(state.rotation);\\n            }\\n            if (callback) {\\n                animationCallback(callback, true);\\n            }\\n            return;\\n        }\\n        var start = Date.now();\\n        var center = this.targetCenter_.slice();\\n        var resolution = this.targetResolution_;\\n        var rotation = this.targetRotation_;\\n        var series = [];\\n        for (var i = 0; i < animationCount; ++i) {\\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\\n            var animation = {\\n                start: start,\\n                complete: false,\\n                anchor: options.anchor,\\n                duration: options.duration !== undefined ? options.duration : 1000,\\n                easing: options.easing || inAndOut,\\n                callback: callback\\n            };\\n            if (options.center) {\\n                animation.sourceCenter = center;\\n                animation.targetCenter = options.center.slice();\\n                center = animation.targetCenter;\\n            }\\n            if (options.zoom !== undefined) {\\n                animation.sourceResolution = resolution;\\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\\n                resolution = animation.targetResolution;\\n            }\\n            else if (options.resolution) {\\n                animation.sourceResolution = resolution;\\n                animation.targetResolution = options.resolution;\\n                resolution = animation.targetResolution;\\n            }\\n            if (options.rotation !== undefined) {\\n                animation.sourceRotation = rotation;\\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\\n                animation.targetRotation = rotation + delta;\\n                rotation = animation.targetRotation;\\n            }\\n            // check if animation is a no-op\\n            if (isNoopAnimation(animation)) {\\n                animation.complete = true;\\n                // we still push it onto the series for callback handling\\n            }\\n            else {\\n                start += animation.duration;\\n            }\\n            series.push(animation);\\n        }\\n        this.animations_.push(series);\\n        this.setHint(ViewHint.ANIMATING, 1);\\n        this.updateAnimations_();\\n    };\\n    /**\\n     * Determine if the view is being animated.\\n     * @return {boolean} The view is being animated.\\n     * @api\\n     */\\n    View.prototype.getAnimating = function () {\\n        return this.hints_[ViewHint.ANIMATING] > 0;\\n    };\\n    /**\\n     * Determine if the user is interacting with the view, such as panning or zooming.\\n     * @return {boolean} The view is being interacted with.\\n     * @api\\n     */\\n    View.prototype.getInteracting = function () {\\n        return this.hints_[ViewHint.INTERACTING] > 0;\\n    };\\n    /**\\n     * Cancel any ongoing animations.\\n     * @api\\n     */\\n    View.prototype.cancelAnimations = function () {\\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\\n            var series = this.animations_[i];\\n            if (series[0].callback) {\\n                animationCallback(series[0].callback, false);\\n            }\\n        }\\n        this.animations_.length = 0;\\n    };\\n    /**\\n     * Update all animations.\\n     */\\n    View.prototype.updateAnimations_ = function () {\\n        if (this.updateAnimationKey_ !== undefined) {\\n            cancelAnimationFrame(this.updateAnimationKey_);\\n            this.updateAnimationKey_ = undefined;\\n        }\\n        if (!this.getAnimating()) {\\n            return;\\n        }\\n        var now = Date.now();\\n        var more = false;\\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\\n            var series = this.animations_[i];\\n            var seriesComplete = true;\\n            for (var j = 0, jj = series.length; j < jj; ++j) {\\n                var animation = series[j];\\n                if (animation.complete) {\\n                    continue;\\n                }\\n                var elapsed = now - animation.start;\\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\\n                if (fraction >= 1) {\\n                    animation.complete = true;\\n                    fraction = 1;\\n                }\\n                else {\\n                    seriesComplete = false;\\n                }\\n                var progress = animation.easing(fraction);\\n                if (animation.sourceCenter) {\\n                    var x0 = animation.sourceCenter[0];\\n                    var y0 = animation.sourceCenter[1];\\n                    var x1 = animation.targetCenter[0];\\n                    var y1 = animation.targetCenter[1];\\n                    var x = x0 + progress * (x1 - x0);\\n                    var y = y0 + progress * (y1 - y0);\\n                    this.targetCenter_ = [x, y];\\n                }\\n                if (animation.sourceResolution && animation.targetResolution) {\\n                    var resolution = progress === 1 ?\\n                        animation.targetResolution :\\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\\n                    if (animation.anchor) {\\n                        var size = this.getSizeFromViewport_(this.getRotation());\\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\\n                    }\\n                    this.targetResolution_ = resolution;\\n                    this.applyTargetState_(true);\\n                }\\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\\n                    var rotation = progress === 1 ?\\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\\n                    if (animation.anchor) {\\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\\n                    }\\n                    this.targetRotation_ = rotation;\\n                }\\n                this.applyTargetState_(true);\\n                more = true;\\n                if (!animation.complete) {\\n                    break;\\n                }\\n            }\\n            if (seriesComplete) {\\n                this.animations_[i] = null;\\n                this.setHint(ViewHint.ANIMATING, -1);\\n                var callback = series[0].callback;\\n                if (callback) {\\n                    animationCallback(callback, true);\\n                }\\n            }\\n        }\\n        // prune completed series\\n        this.animations_ = this.animations_.filter(Boolean);\\n        if (more && this.updateAnimationKey_ === undefined) {\\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\\n        }\\n    };\\n    /**\\n     * @param {number} rotation Target rotation.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} anchor Rotation anchor.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center for rotation and anchor.\\n     */\\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\\n        var center;\\n        var currentCenter = this.getCenter();\\n        if (currentCenter !== undefined) {\\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\\n            rotateCoordinate(center, rotation - this.getRotation());\\n            addCoordinate(center, anchor);\\n        }\\n        return center;\\n    };\\n    /**\\n     * @param {number} resolution Target resolution.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} anchor Zoom anchor.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center for resolution and anchor.\\n     */\\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\\n        var center;\\n        var currentCenter = this.getCenter();\\n        var currentResolution = this.getResolution();\\n        if (currentCenter !== undefined && currentResolution !== undefined) {\\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\\n            center = [x, y];\\n        }\\n        return center;\\n    };\\n    /**\\n     * @private\\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\\n     * @return {import(\\\"./size.js\\\").Size} Viewport size or `[100, 100]` when no viewport is found.\\n     */\\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\\n        var size = [100, 100];\\n        var selector = '.ol-viewport[data-view=\\\"' + getUid(this) + '\\\"]';\\n        var element = document.querySelector(selector);\\n        if (element) {\\n            var metrics = getComputedStyle(element);\\n            size[0] = parseInt(metrics.width, 10);\\n            size[1] = parseInt(metrics.height, 10);\\n        }\\n        if (opt_rotation) {\\n            var w = size[0];\\n            var h = size[1];\\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\\n        }\\n        return size;\\n    };\\n    /**\\n     * Get the view center.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} The center of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getCenter = function () {\\n        return (\\n        /** @type {import(\\\"./coordinate.js\\\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\\n    };\\n    /**\\n     * @return {Constraints} Constraints.\\n     */\\n    View.prototype.getConstraints = function () {\\n        return this.constraints_;\\n    };\\n    /**\\n     * @param {Array<number>=} opt_hints Destination array.\\n     * @return {Array<number>} Hint.\\n     */\\n    View.prototype.getHints = function (opt_hints) {\\n        if (opt_hints !== undefined) {\\n            opt_hints[0] = this.hints_[0];\\n            opt_hints[1] = this.hints_[1];\\n            return opt_hints;\\n        }\\n        else {\\n            return this.hints_.slice();\\n        }\\n    };\\n    /**\\n     * Calculate the extent for the current view state and the passed size.\\n     * The size is the pixel dimensions of the box into which the calculated extent\\n     * should fit. In most cases you want to get the extent of the entire map,\\n     * that is `map.getSize()`.\\n     * @param {import(\\\"./size.js\\\").Size=} opt_size Box pixel size. If not provided, the size of the\\n     * first map that uses this view will be used.\\n     * @return {import(\\\"./extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    View.prototype.calculateExtent = function (opt_size) {\\n        var size = opt_size || this.getSizeFromViewport_();\\n        var center = /** @type {!import(\\\"./coordinate.js\\\").Coordinate} */ (this.getCenter());\\n        assert(center, 1); // The view center is not defined\\n        var resolution = /** @type {!number} */ (this.getResolution());\\n        assert(resolution !== undefined, 2); // The view resolution is not defined\\n        var rotation = /** @type {!number} */ (this.getRotation());\\n        assert(rotation !== undefined, 3); // The view rotation is not defined\\n        return getForViewAndSize(center, resolution, rotation, size);\\n    };\\n    /**\\n     * Get the maximum resolution of the view.\\n     * @return {number} The maximum resolution of the view.\\n     * @api\\n     */\\n    View.prototype.getMaxResolution = function () {\\n        return this.maxResolution_;\\n    };\\n    /**\\n     * Get the minimum resolution of the view.\\n     * @return {number} The minimum resolution of the view.\\n     * @api\\n     */\\n    View.prototype.getMinResolution = function () {\\n        return this.minResolution_;\\n    };\\n    /**\\n     * Get the maximum zoom level for the view.\\n     * @return {number} The maximum zoom level.\\n     * @api\\n     */\\n    View.prototype.getMaxZoom = function () {\\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\\n    };\\n    /**\\n     * Set a new maximum zoom level for the view.\\n     * @param {number} zoom The maximum zoom level.\\n     * @api\\n     */\\n    View.prototype.setMaxZoom = function (zoom) {\\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\\n    };\\n    /**\\n     * Get the minimum zoom level for the view.\\n     * @return {number} The minimum zoom level.\\n     * @api\\n     */\\n    View.prototype.getMinZoom = function () {\\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\\n    };\\n    /**\\n     * Set a new minimum zoom level for the view.\\n     * @param {number} zoom The minimum zoom level.\\n     * @api\\n     */\\n    View.prototype.setMinZoom = function (zoom) {\\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\\n    };\\n    /**\\n     * Set whether the view shoud allow intermediary zoom levels.\\n     * @param {boolean} enabled Whether the resolution is constrained.\\n     * @api\\n     */\\n    View.prototype.setConstrainResolution = function (enabled) {\\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\\n    };\\n    /**\\n     * Get the view projection.\\n     * @return {import(\\\"./proj/Projection.js\\\").default} The projection of the view.\\n     * @api\\n     */\\n    View.prototype.getProjection = function () {\\n        return this.projection_;\\n    };\\n    /**\\n     * Get the view resolution.\\n     * @return {number|undefined} The resolution of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getResolution = function () {\\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\\n    };\\n    /**\\n     * Get the resolutions for the view. This returns the array of resolutions\\n     * passed to the constructor of the View, or undefined if none were given.\\n     * @return {Array<number>|undefined} The resolutions of the view.\\n     * @api\\n     */\\n    View.prototype.getResolutions = function () {\\n        return this.resolutions_;\\n    };\\n    /**\\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {import(\\\"./size.js\\\").Size=} opt_size Box pixel size.\\n     * @return {number} The resolution at which the provided extent will render at\\n     *     the given size.\\n     * @api\\n     */\\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\\n        var size = opt_size || this.getSizeFromViewport_();\\n        var xResolution = getWidth(extent) / size[0];\\n        var yResolution = getHeight(extent) / size[1];\\n        return Math.max(xResolution, yResolution);\\n    };\\n    /**\\n     * Return a function that returns a value between 0 and 1 for a\\n     * resolution. Exponential scaling is assumed.\\n     * @param {number=} opt_power Power.\\n     * @return {function(number): number} Resolution for value function.\\n     */\\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\\n        var power = opt_power || 2;\\n        var maxResolution = this.maxResolution_;\\n        var minResolution = this.minResolution_;\\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\\n        return (\\n        /**\\n         * @param {number} value Value.\\n         * @return {number} Resolution.\\n         */\\n        function (value) {\\n            var resolution = maxResolution / Math.pow(power, value * max);\\n            return resolution;\\n        });\\n    };\\n    /**\\n     * Get the view rotation.\\n     * @return {number} The rotation of the view in radians.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getRotation = function () {\\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\\n    };\\n    /**\\n     * Return a function that returns a resolution for a value between\\n     * 0 and 1. Exponential scaling is assumed.\\n     * @param {number=} opt_power Power.\\n     * @return {function(number): number} Value for resolution function.\\n     */\\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\\n        var power = opt_power || 2;\\n        var maxResolution = this.maxResolution_;\\n        var minResolution = this.minResolution_;\\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\\n        return (\\n        /**\\n         * @param {number} resolution Resolution.\\n         * @return {number} Value.\\n         */\\n        function (resolution) {\\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\\n            return value;\\n        });\\n    };\\n    /**\\n     * @param {number} pixelRatio Pixel ratio for center rounding.\\n     * @return {State} View state.\\n     */\\n    View.prototype.getState = function (pixelRatio) {\\n        var center = /** @type {import(\\\"./coordinate.js\\\").Coordinate} */ (this.getCenter());\\n        var projection = this.getProjection();\\n        var resolution = /** @type {number} */ (this.getResolution());\\n        var rotation = this.getRotation();\\n        return {\\n            center: center.slice(0),\\n            projection: projection !== undefined ? projection : null,\\n            resolution: resolution,\\n            rotation: rotation,\\n            zoom: this.getZoom()\\n        };\\n    };\\n    /**\\n     * Get the current zoom level. This method may return non-integer zoom levels\\n     * if the view does not constrain the resolution, or if an interaction or\\n     * animation is underway.\\n     * @return {number|undefined} Zoom.\\n     * @api\\n     */\\n    View.prototype.getZoom = function () {\\n        var zoom;\\n        var resolution = this.getResolution();\\n        if (resolution !== undefined) {\\n            zoom = this.getZoomForResolution(resolution);\\n        }\\n        return zoom;\\n    };\\n    /**\\n     * Get the zoom level for a resolution.\\n     * @param {number} resolution The resolution.\\n     * @return {number|undefined} The zoom level for the provided resolution.\\n     * @api\\n     */\\n    View.prototype.getZoomForResolution = function (resolution) {\\n        var offset = this.minZoom_ || 0;\\n        var max, zoomFactor;\\n        if (this.resolutions_) {\\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\\n            offset = nearest;\\n            max = this.resolutions_[nearest];\\n            if (nearest == this.resolutions_.length - 1) {\\n                zoomFactor = 2;\\n            }\\n            else {\\n                zoomFactor = max / this.resolutions_[nearest + 1];\\n            }\\n        }\\n        else {\\n            max = this.maxResolution_;\\n            zoomFactor = this.zoomFactor_;\\n        }\\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\\n    };\\n    /**\\n     * Get the resolution for a zoom level.\\n     * @param {number} zoom Zoom level.\\n     * @return {number} The view resolution for the provided zoom level.\\n     * @api\\n     */\\n    View.prototype.getResolutionForZoom = function (zoom) {\\n        if (this.resolutions_) {\\n            if (this.resolutions_.length <= 1) {\\n                return 0;\\n            }\\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\\n        }\\n        else {\\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\\n        }\\n    };\\n    /**\\n     * Fit the given geometry or extent based on the given map size and border.\\n     * The size is pixel dimensions of the box to fit the extent into.\\n     * In most cases you will want to use the map size, that is `map.getSize()`.\\n     * Takes care of the map angle.\\n     * @param {import(\\\"./geom/SimpleGeometry.js\\\").default|import(\\\"./extent.js\\\").Extent} geometryOrExtent The geometry or\\n     *     extent to fit the view to.\\n     * @param {FitOptions=} opt_options Options.\\n     * @api\\n     */\\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\\n        var options = opt_options || {};\\n        var size = options.size;\\n        if (!size) {\\n            size = this.getSizeFromViewport_();\\n        }\\n        /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */\\n        var geometry;\\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\\n        if (Array.isArray(geometryOrExtent)) {\\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\\n            geometry = polygonFromExtent(geometryOrExtent);\\n        }\\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\\n            geometryOrExtent = geometryOrExtent.getExtent();\\n            geometry = polygonFromExtent(geometryOrExtent);\\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\\n        }\\n        else {\\n            geometry = geometryOrExtent;\\n        }\\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\\n        var nearest = options.nearest !== undefined ? options.nearest : false;\\n        var minResolution;\\n        if (options.minResolution !== undefined) {\\n            minResolution = options.minResolution;\\n        }\\n        else if (options.maxZoom !== undefined) {\\n            minResolution = this.getResolutionForZoom(options.maxZoom);\\n        }\\n        else {\\n            minResolution = 0;\\n        }\\n        var coords = geometry.getFlatCoordinates();\\n        // calculate rotated extent\\n        var rotation = this.getRotation();\\n        var cosAngle = Math.cos(-rotation);\\n        var sinAngle = Math.sin(-rotation);\\n        var minRotX = +Infinity;\\n        var minRotY = +Infinity;\\n        var maxRotX = -Infinity;\\n        var maxRotY = -Infinity;\\n        var stride = geometry.getStride();\\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\\n            minRotX = Math.min(minRotX, rotX);\\n            minRotY = Math.min(minRotY, rotY);\\n            maxRotX = Math.max(maxRotX, rotX);\\n            maxRotY = Math.max(maxRotY, rotY);\\n        }\\n        // calculate resolution\\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\\n        resolution = isNaN(resolution) ? minResolution :\\n            Math.max(resolution, minResolution);\\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\\n        // calculate center\\n        sinAngle = -sinAngle; // go back to original rotation\\n        var centerRotX = (minRotX + maxRotX) / 2;\\n        var centerRotY = (minRotY + maxRotY) / 2;\\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\\n        var center = [centerX, centerY];\\n        var callback = options.callback ? options.callback : VOID;\\n        if (options.duration !== undefined) {\\n            this.animate_({\\n                resolution: resolution,\\n                center: this.getConstrainedCenter(center, resolution),\\n                duration: options.duration,\\n                easing: options.easing\\n            }, callback);\\n        }\\n        else {\\n            this.targetResolution_ = resolution;\\n            this.targetCenter_ = center;\\n            this.applyTargetState_(false, true);\\n            animationCallback(callback, true);\\n        }\\n    };\\n    /**\\n     * Center on coordinate and view position.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"./size.js\\\").Size} size Box pixel size.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} position Position on the view to center on.\\n     * @api\\n     */\\n    View.prototype.centerOn = function (coordinate, size, position) {\\n        // calculate rotated position\\n        var rotation = this.getRotation();\\n        var cosAngle = Math.cos(-rotation);\\n        var sinAngle = Math.sin(-rotation);\\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\\n        var resolution = this.getResolution();\\n        rotX += (size[0] / 2 - position[0]) * resolution;\\n        rotY += (position[1] - size[1] / 2) * resolution;\\n        // go back to original angle\\n        sinAngle = -sinAngle; // go back to original rotation\\n        var centerX = rotX * cosAngle - rotY * sinAngle;\\n        var centerY = rotY * cosAngle + rotX * sinAngle;\\n        this.setCenter([centerX, centerY]);\\n    };\\n    /**\\n     * @return {boolean} Is defined.\\n     */\\n    View.prototype.isDef = function () {\\n        return !!this.getCenter() && this.getResolution() !== undefined;\\n    };\\n    /**\\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} deltaCoordinates Relative value to add.\\n     * @api\\n     */\\n    View.prototype.adjustCenter = function (deltaCoordinates) {\\n        var center = this.targetCenter_;\\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\\n    };\\n    /**\\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\\n     * constraint will apply.\\n     * @param {number} ratio The ratio to apply on the view resolution.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\\n        var isMoving = this.getAnimating() || this.getInteracting();\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\\n        if (opt_anchor !== undefined) {\\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\\n        }\\n        this.targetResolution_ *= ratio;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\\n     * constraint will apply.\\n     * @param {number} delta Relative value to add to the zoom level.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @api\\n     */\\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\\n    };\\n    /**\\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\\n     * constraint will apply.\\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The rotation center.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\\n        var isMoving = this.getAnimating() || this.getInteracting();\\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\\n        if (opt_anchor !== undefined) {\\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\\n        }\\n        this.targetRotation_ += delta;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Set the center of the current view. Any extent constraint will apply.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} center The center of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setCenter = function (center) {\\n        this.targetCenter_ = center;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * @param {ViewHint} hint Hint.\\n     * @param {number} delta Delta.\\n     * @return {number} New value.\\n     */\\n    View.prototype.setHint = function (hint, delta) {\\n        this.hints_[hint] += delta;\\n        this.changed();\\n        return this.hints_[hint];\\n    };\\n    /**\\n     * Set the resolution for this view. Any resolution constraint will apply.\\n     * @param {number|undefined} resolution The resolution of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setResolution = function (resolution) {\\n        this.targetResolution_ = resolution;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Set the rotation for this view. Any rotation constraint will apply.\\n     * @param {number} rotation The rotation of the view in radians.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setRotation = function (rotation) {\\n        this.targetRotation_ = rotation;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\\n     * @param {number} zoom Zoom level.\\n     * @api\\n     */\\n    View.prototype.setZoom = function (zoom) {\\n        this.setResolution(this.getResolutionForZoom(zoom));\\n    };\\n    /**\\n     * Recompute rotation/resolution/center based on target values.\\n     * Note: we have to compute rotation first, then resolution and center considering that\\n     * parameters can influence one another in case a view extent constraint is present.\\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\\n     * @private\\n     */\\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\\n        // compute rotation\\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\\n        var size = this.getSizeFromViewport_(newRotation);\\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\\n            this.set(ViewProperty.ROTATION, newRotation);\\n        }\\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\\n            this.set(ViewProperty.RESOLUTION, newResolution);\\n        }\\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\\n            this.set(ViewProperty.CENTER, newCenter);\\n        }\\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\\n            this.cancelAnimations();\\n        }\\n    };\\n    /**\\n     * If any constraints need to be applied, an animation will be triggered.\\n     * This is typically done on interaction end.\\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\\n     * without animation.\\n     * @param {number=} opt_duration The animation duration in ms.\\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     */\\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\\n        var duration = opt_duration !== undefined ? opt_duration : 200;\\n        var direction = opt_resolutionDirection || 0;\\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\\n        var size = this.getSizeFromViewport_(newRotation);\\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\\n        if (duration === 0) {\\n            this.targetResolution_ = newResolution;\\n            this.targetRotation_ = newRotation;\\n            this.targetCenter_ = newCenter;\\n            this.applyTargetState_();\\n            return;\\n        }\\n        if (this.getResolution() !== newResolution ||\\n            this.getRotation() !== newRotation ||\\n            !this.getCenter() ||\\n            !equals(this.getCenter(), newCenter)) {\\n            if (this.getAnimating()) {\\n                this.cancelAnimations();\\n            }\\n            this.animate_({\\n                rotation: newRotation,\\n                center: newCenter,\\n                resolution: newResolution,\\n                duration: duration,\\n                easing: easeOut,\\n                anchor: opt_anchor\\n            });\\n        }\\n    };\\n    /**\\n     * Notify the View that an interaction has started.\\n     * The view state will be resolved to a stable one if needed\\n     * (depending on its constraints).\\n     * @api\\n     */\\n    View.prototype.beginInteraction = function () {\\n        this.resolveConstraints(0);\\n        this.setHint(ViewHint.INTERACTING, 1);\\n    };\\n    /**\\n     * Notify the View that an interaction has ended. The view state will be resolved\\n     * to a stable one if needed (depending on its constraints).\\n     * @param {number=} opt_duration Animation duration in ms.\\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @api\\n     */\\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\\n        this.setHint(ViewHint.INTERACTING, -1);\\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\\n    };\\n    /**\\n     * Get a valid position for the view center according to the current constraints.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} targetCenter Target center position.\\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\\n     * This is useful to guess a valid center position at a different zoom level.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Valid center position.\\n     */\\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\\n    };\\n    /**\\n     * Get a valid zoom level according to the current view constraints.\\n     * @param {number|undefined} targetZoom Target zoom.\\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\\n     * the nearest available value.\\n     * @return {number|undefined} Valid zoom level.\\n     */\\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\\n        var targetRes = this.getResolutionForZoom(targetZoom);\\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\\n    };\\n    /**\\n     * Get a valid resolution according to the current view constraints.\\n     * @param {number|undefined} targetResolution Target resolution.\\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\\n     * the nearest available value.\\n     * @return {number|undefined} Valid resolution.\\n     */\\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\\n        var direction = opt_direction || 0;\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        return this.constraints_.resolution(targetResolution, direction, size);\\n    };\\n    return View;\\n}(BaseObject));\\n/**\\n * @param {Function} callback Callback.\\n * @param {*} returnValue Return value.\\n */\\nfunction animationCallback(callback, returnValue) {\\n    setTimeout(function () {\\n        callback(returnValue);\\n    }, 0);\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {import(\\\"./centerconstraint.js\\\").Type} The constraint.\\n */\\nexport function createCenterConstraint(options) {\\n    if (options.extent !== undefined) {\\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\\n    }\\n    else {\\n        return centerNone;\\n    }\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {{constraint: import(\\\"./resolutionconstraint.js\\\").Type, maxResolution: number,\\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\\n */\\nexport function createResolutionConstraint(options) {\\n    var resolutionConstraint;\\n    var maxResolution;\\n    var minResolution;\\n    // TODO: move these to be ol constants\\n    // see https://github.com/openlayers/openlayers/issues/2076\\n    var defaultMaxZoom = 28;\\n    var defaultZoomFactor = 2;\\n    var minZoom = options.minZoom !== undefined ?\\n        options.minZoom : DEFAULT_MIN_ZOOM;\\n    var maxZoom = options.maxZoom !== undefined ?\\n        options.maxZoom : defaultMaxZoom;\\n    var zoomFactor = options.zoomFactor !== undefined ?\\n        options.zoomFactor : defaultZoomFactor;\\n    var multiWorld = options.multiWorld !== undefined ?\\n        options.multiWorld : false;\\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\\n    if (options.resolutions !== undefined) {\\n        var resolutions = options.resolutions;\\n        maxResolution = resolutions[minZoom];\\n        minResolution = resolutions[maxZoom] !== undefined ?\\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\\n        if (options.constrainResolution) {\\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n        else {\\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n    }\\n    else {\\n        // calculate the default min and max resolution\\n        var projection = createProjection(options.projection, 'EPSG:3857');\\n        var extent = projection.getExtent();\\n        var size = !extent ?\\n            // use an extent that can fit the whole world if need be\\n            360 * METERS_PER_UNIT[Units.DEGREES] /\\n                projection.getMetersPerUnit() :\\n            Math.max(getWidth(extent), getHeight(extent));\\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\\n        // user provided maxResolution takes precedence\\n        maxResolution = options.maxResolution;\\n        if (maxResolution !== undefined) {\\n            minZoom = 0;\\n        }\\n        else {\\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\\n        }\\n        // user provided minResolution takes precedence\\n        minResolution = options.minResolution;\\n        if (minResolution === undefined) {\\n            if (options.maxZoom !== undefined) {\\n                if (options.maxResolution !== undefined) {\\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\\n                }\\n                else {\\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\\n                }\\n            }\\n            else {\\n                minResolution = defaultMinResolution;\\n            }\\n        }\\n        // given discrete zoom levels, minResolution may be different than provided\\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\\n        if (options.constrainResolution) {\\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n        else {\\n            var constrainOnlyCenter = options.constrainOnlyCenter;\\n            var extent_1 = options.extent;\\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\\n                constrainOnlyCenter = false;\\n                extent_1 = projection.getExtent();\\n            }\\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\\n        }\\n    }\\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {import(\\\"./rotationconstraint.js\\\").Type} Rotation constraint.\\n */\\nexport function createRotationConstraint(options) {\\n    var enableRotation = options.enableRotation !== undefined ?\\n        options.enableRotation : true;\\n    if (enableRotation) {\\n        var constrainRotation = options.constrainRotation;\\n        if (constrainRotation === undefined || constrainRotation === true) {\\n            return createSnapToZero();\\n        }\\n        else if (constrainRotation === false) {\\n            return rotationNone;\\n        }\\n        else if (typeof constrainRotation === 'number') {\\n            return createSnapToN(constrainRotation);\\n        }\\n        else {\\n            return rotationNone;\\n        }\\n    }\\n    else {\\n        return disable;\\n    }\\n}\\n/**\\n * Determine if an animation involves no view change.\\n * @param {Animation} animation The animation.\\n * @return {boolean} The animation involves no view change.\\n */\\nexport function isNoopAnimation(animation) {\\n    if (animation.sourceCenter && animation.targetCenter) {\\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\\n            return false;\\n        }\\n    }\\n    if (animation.sourceResolution !== animation.targetResolution) {\\n        return false;\\n    }\\n    if (animation.sourceRotation !== animation.targetRotation) {\\n        return false;\\n    }\\n    return true;\\n}\\nexport default View;\\n//# sourceMappingURL=View.js.map\",\"/**\\n * @module ol/dom\\n */\\n/**\\n * Create an html canvas element and returns its 2d context.\\n * @param {number=} opt_width Canvas width.\\n * @param {number=} opt_height Canvas height.\\n * @return {CanvasRenderingContext2D} The context.\\n */\\nexport function createCanvasContext2D(opt_width, opt_height) {\\n    var canvas = document.createElement('canvas');\\n    if (opt_width) {\\n        canvas.width = opt_width;\\n    }\\n    if (opt_height) {\\n        canvas.height = opt_height;\\n    }\\n    return canvas.getContext('2d');\\n}\\n/**\\n * Get the current computed width for the given element including margin,\\n * padding and border.\\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\\n * @param {!HTMLElement} element Element.\\n * @return {number} The width.\\n */\\nexport function outerWidth(element) {\\n    var width = element.offsetWidth;\\n    var style = getComputedStyle(element);\\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\\n    return width;\\n}\\n/**\\n * Get the current computed height for the given element including margin,\\n * padding and border.\\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\\n * @param {!HTMLElement} element Element.\\n * @return {number} The height.\\n */\\nexport function outerHeight(element) {\\n    var height = element.offsetHeight;\\n    var style = getComputedStyle(element);\\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\\n    return height;\\n}\\n/**\\n * @param {Node} newNode Node to replace old node\\n * @param {Node} oldNode The node to be replaced\\n */\\nexport function replaceNode(newNode, oldNode) {\\n    var parent = oldNode.parentNode;\\n    if (parent) {\\n        parent.replaceChild(newNode, oldNode);\\n    }\\n}\\n/**\\n * @param {Node} node The node to remove.\\n * @returns {Node} The node that was removed or null.\\n */\\nexport function removeNode(node) {\\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\\n}\\n/**\\n * @param {Node} node The node to remove the children from.\\n */\\nexport function removeChildren(node) {\\n    while (node.lastChild) {\\n        node.removeChild(node.lastChild);\\n    }\\n}\\n/**\\n * Transform the children of a parent node so they match the\\n * provided list of children.  This function aims to efficiently\\n * remove, add, and reorder child nodes while maintaining a simple\\n * implementation (it is not guaranteed to minimize DOM operations).\\n * @param {Node} node The parent node whose children need reworking.\\n * @param {Array<Node>} children The desired children.\\n */\\nexport function replaceChildren(node, children) {\\n    var oldChildren = node.childNodes;\\n    for (var i = 0; true; ++i) {\\n        var oldChild = oldChildren[i];\\n        var newChild = children[i];\\n        // check if our work is done\\n        if (!oldChild && !newChild) {\\n            break;\\n        }\\n        // check if children match\\n        if (oldChild === newChild) {\\n            continue;\\n        }\\n        // check if a new child needs to be added\\n        if (!oldChild) {\\n            node.appendChild(newChild);\\n            continue;\\n        }\\n        // check if an old child needs to be removed\\n        if (!newChild) {\\n            node.removeChild(oldChild);\\n            --i;\\n            continue;\\n        }\\n        // reorder\\n        node.insertBefore(newChild, oldChild);\\n    }\\n}\\n//# sourceMappingURL=dom.js.map\",\"/**\\n * @module ol/layer/Property\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    OPACITY: 'opacity',\\n    VISIBLE: 'visible',\\n    EXTENT: 'extent',\\n    Z_INDEX: 'zIndex',\\n    MAX_RESOLUTION: 'maxResolution',\\n    MIN_RESOLUTION: 'minResolution',\\n    SOURCE: 'source'\\n};\\n//# sourceMappingURL=Property.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Base\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport LayerProperty from './Property.js';\\nimport { clamp } from '../math.js';\\nimport { assign } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\\n * the options is set as a {@link module:ol/Object} property on the layer object, so\\n * is observable, and has get/set accessors.\\n *\\n * @api\\n */\\nvar BaseLayer = /** @class */ (function (_super) {\\n    __extends(BaseLayer, _super);\\n    /**\\n     * @param {Options} options Layer options.\\n     */\\n    function BaseLayer(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Object<string, *>}\\n         */\\n        var properties = assign({}, options);\\n        properties[LayerProperty.OPACITY] =\\n            options.opacity !== undefined ? options.opacity : 1;\\n        properties[LayerProperty.VISIBLE] =\\n            options.visible !== undefined ? options.visible : true;\\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\\n        properties[LayerProperty.MAX_RESOLUTION] =\\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\\n        properties[LayerProperty.MIN_RESOLUTION] =\\n            options.minResolution !== undefined ? options.minResolution : 0;\\n        /**\\n         * @type {string}\\n         * @private\\n         */\\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\\n        delete properties.className;\\n        _this.setProperties(properties);\\n        /**\\n         * @type {import(\\\"./Layer.js\\\").State}\\n         * @private\\n         */\\n        _this.state_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @return {string} CSS class name.\\n     */\\n    BaseLayer.prototype.getClassName = function () {\\n        return this.className_;\\n    };\\n    /**\\n     * @return {import(\\\"./Layer.js\\\").State} Layer state.\\n     */\\n    BaseLayer.prototype.getLayerState = function () {\\n        /** @type {import(\\\"./Layer.js\\\").State} */\\n        var state = this.state_ || /** @type {?} */ ({\\n            layer: this,\\n            managed: true\\n        });\\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\\n        state.sourceState = this.getSourceState();\\n        state.visible = this.getVisible();\\n        state.extent = this.getExtent();\\n        state.zIndex = this.getZIndex() || 0;\\n        state.maxResolution = this.getMaxResolution();\\n        state.minResolution = Math.max(this.getMinResolution(), 0);\\n        this.state_ = state;\\n        return state;\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"./Layer.js\\\").default>=} opt_array Array of layers (to be\\n     *     modified in place).\\n     * @return {Array<import(\\\"./Layer.js\\\").default>} Array of layers.\\n     */\\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"./Layer.js\\\").State>=} opt_states Optional list of layer\\n     *     states (to be modified in place).\\n     * @return {Array<import(\\\"./Layer.js\\\").State>} List of layer states.\\n     */\\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\\n        return abstract();\\n    };\\n    /**\\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\\n     * will be visible regardless of extent.\\n     * @return {import(\\\"../extent.js\\\").Extent|undefined} The layer extent.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getExtent = function () {\\n        return (\\n        /** @type {import(\\\"../extent.js\\\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\\n    };\\n    /**\\n     * Return the maximum resolution of the layer.\\n     * @return {number} The maximum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getMaxResolution = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\\n    };\\n    /**\\n     * Return the minimum resolution of the layer.\\n     * @return {number} The minimum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getMinResolution = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\\n    };\\n    /**\\n     * Return the opacity of the layer (between 0 and 1).\\n     * @return {number} The opacity of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getOpacity = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../source/State.js\\\").default} Source state.\\n     */\\n    BaseLayer.prototype.getSourceState = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Return the visibility of the layer (`true` or `false`).\\n     * @return {boolean} The visibility of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getVisible = function () {\\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\\n    };\\n    /**\\n     * Return the Z-index of the layer, which is used to order layers before\\n     * rendering. The default Z-index is 0.\\n     * @return {number} The Z-index of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getZIndex = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\\n    };\\n    /**\\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\\n     * will be visible at all extents.\\n     * @param {import(\\\"../extent.js\\\").Extent|undefined} extent The extent of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setExtent = function (extent) {\\n        this.set(LayerProperty.EXTENT, extent);\\n    };\\n    /**\\n     * Set the maximum resolution at which the layer is visible.\\n     * @param {number} maxResolution The maximum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\\n    };\\n    /**\\n     * Set the minimum resolution at which the layer is visible.\\n     * @param {number} minResolution The minimum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\\n    };\\n    /**\\n     * Set the opacity of the layer, allowed values range from 0 to 1.\\n     * @param {number} opacity The opacity of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setOpacity = function (opacity) {\\n        this.set(LayerProperty.OPACITY, opacity);\\n    };\\n    /**\\n     * Set the visibility of the layer (`true` or `false`).\\n     * @param {boolean} visible The visibility of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setVisible = function (visible) {\\n        this.set(LayerProperty.VISIBLE, visible);\\n    };\\n    /**\\n     * Set Z-index of the layer, which is used to order layers before rendering.\\n     * The default Z-index is 0.\\n     * @param {number} zindex The z-index of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setZIndex = function (zindex) {\\n        this.set(LayerProperty.Z_INDEX, zindex);\\n    };\\n    return BaseLayer;\\n}(BaseObject));\\nexport default BaseLayer;\\n//# sourceMappingURL=Base.js.map\",\"/**\\n * @module ol/source/State\\n */\\n/**\\n * @enum {string}\\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\\n */\\nexport default {\\n    UNDEFINED: 'undefined',\\n    LOADING: 'loading',\\n    READY: 'ready',\\n    ERROR: 'error'\\n};\\n//# sourceMappingURL=State.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Group\\n */\\nimport { getUid } from '../util.js';\\nimport Collection from '../Collection.js';\\nimport CollectionEventType from '../CollectionEventType.js';\\nimport { getChangeEventType } from '../Object.js';\\nimport ObjectEventType from '../ObjectEventType.js';\\nimport { assert } from '../asserts.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getIntersection } from '../extent.js';\\nimport BaseLayer from './Base.js';\\nimport { assign, clear } from '../obj.js';\\nimport SourceState from '../source/State.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {Array<import(\\\"./Base.js\\\").default>|import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} [layers] Child layers.\\n */\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    LAYERS: 'layers'\\n};\\n/**\\n * @classdesc\\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\\n *\\n * A generic `change` event is triggered when the group/Collection changes.\\n *\\n * @api\\n */\\nvar LayerGroup = /** @class */ (function (_super) {\\n    __extends(LayerGroup, _super);\\n    /**\\n     * @param {Options=} opt_options Layer options.\\n     */\\n    function LayerGroup(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        var baseOptions = /** @type {Options} */ (assign({}, options));\\n        delete baseOptions.layers;\\n        var layers = options.layers;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.layersListenerKeys_ = [];\\n        /**\\n         * @private\\n         * @type {Object<string, Array<import(\\\"../events.js\\\").EventsKey>>}\\n         */\\n        _this.listenerKeys_ = {};\\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\\n        if (layers) {\\n            if (Array.isArray(layers)) {\\n                layers = new Collection(layers.slice(), { unique: true });\\n            }\\n            else {\\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\\n            }\\n        }\\n        else {\\n            layers = new Collection(undefined, { unique: true });\\n        }\\n        _this.setLayers(layers);\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayerChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersChanged_ = function () {\\n        this.layersListenerKeys_.forEach(unlistenByKey);\\n        this.layersListenerKeys_.length = 0;\\n        var layers = this.getLayers();\\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\\n        for (var id in this.listenerKeys_) {\\n            this.listenerKeys_[id].forEach(unlistenByKey);\\n        }\\n        clear(this.listenerKeys_);\\n        var layersArray = layers.getArray();\\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\\n            var layer = layersArray[i];\\n            this.listenerKeys_[getUid(layer)] = [\\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\\n            ];\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @param {import(\\\"../Collection.js\\\").CollectionEvent} collectionEvent CollectionEvent.\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\\n        var layer = /** @type {import(\\\"./Base.js\\\").default} */ (collectionEvent.element);\\n        this.listenerKeys_[getUid(layer)] = [\\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\\n        ];\\n        this.changed();\\n    };\\n    /**\\n     * @param {import(\\\"../Collection.js\\\").CollectionEvent} collectionEvent CollectionEvent.\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\\n        var layer = /** @type {import(\\\"./Base.js\\\").default} */ (collectionEvent.element);\\n        var key = getUid(layer);\\n        this.listenerKeys_[key].forEach(unlistenByKey);\\n        delete this.listenerKeys_[key];\\n        this.changed();\\n    };\\n    /**\\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\\n     * in this group.\\n     * @return {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} Collection of\\n     *   {@link module:ol/layer/Base layers} that are part of this group.\\n     * @observable\\n     * @api\\n     */\\n    LayerGroup.prototype.getLayers = function () {\\n        return (\\n        /** @type {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} */ (this.get(Property.LAYERS)));\\n    };\\n    /**\\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\\n     * in this group.\\n     * @param {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} layers Collection of\\n     *   {@link module:ol/layer/Base layers} that are part of this group.\\n     * @observable\\n     * @api\\n     */\\n    LayerGroup.prototype.setLayers = function (layers) {\\n        this.set(Property.LAYERS, layers);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\\n        var array = opt_array !== undefined ? opt_array : [];\\n        this.getLayers().forEach(function (layer) {\\n            layer.getLayersArray(array);\\n        });\\n        return array;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\\n        var states = opt_states !== undefined ? opt_states : [];\\n        var pos = states.length;\\n        this.getLayers().forEach(function (layer) {\\n            layer.getLayerStatesArray(states);\\n        });\\n        var ownLayerState = this.getLayerState();\\n        for (var i = pos, ii = states.length; i < ii; i++) {\\n            var layerState = states[i];\\n            layerState.opacity *= ownLayerState.opacity;\\n            layerState.visible = layerState.visible && ownLayerState.visible;\\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\\n            if (ownLayerState.extent !== undefined) {\\n                if (layerState.extent !== undefined) {\\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\\n                }\\n                else {\\n                    layerState.extent = ownLayerState.extent;\\n                }\\n            }\\n        }\\n        return states;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getSourceState = function () {\\n        return SourceState.READY;\\n    };\\n    return LayerGroup;\\n}(BaseLayer));\\nexport default LayerGroup;\\n//# sourceMappingURL=Group.js.map\",\"/**\\n * @module ol/size\\n */\\n/**\\n * An array of numbers representing a size: `[width, height]`.\\n * @typedef {Array<number>} Size\\n * @api\\n */\\n/**\\n * Returns a buffered size.\\n * @param {Size} size Size.\\n * @param {number} num The amount by which to buffer.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} The buffered size.\\n */\\nexport function buffer(size, num, opt_size) {\\n    if (opt_size === undefined) {\\n        opt_size = [0, 0];\\n    }\\n    opt_size[0] = size[0] + 2 * num;\\n    opt_size[1] = size[1] + 2 * num;\\n    return opt_size;\\n}\\n/**\\n * Determines if a size has a positive area.\\n * @param {Size} size The size to test.\\n * @return {boolean} The size has a positive area.\\n */\\nexport function hasArea(size) {\\n    return size[0] > 0 && size[1] > 0;\\n}\\n/**\\n * Returns a size scaled by a ratio. The result will be an array of integers.\\n * @param {Size} size Size.\\n * @param {number} ratio Ratio.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} The scaled size.\\n */\\nexport function scale(size, ratio, opt_size) {\\n    if (opt_size === undefined) {\\n        opt_size = [0, 0];\\n    }\\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\\n    return opt_size;\\n}\\n/**\\n * Returns an `Size` array for the passed in number (meaning: square) or\\n * `Size` array.\\n * (meaning: non-square),\\n * @param {number|Size} size Width and height.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} Size.\\n * @api\\n */\\nexport function toSize(size, opt_size) {\\n    if (Array.isArray(size)) {\\n        return size;\\n    }\\n    else {\\n        if (opt_size === undefined) {\\n            opt_size = [size, size];\\n        }\\n        else {\\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\\n        }\\n        return opt_size;\\n    }\\n}\\n//# sourceMappingURL=size.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/PluggableMap\\n */\\nimport { getUid } from './util.js';\\nimport Collection from './Collection.js';\\nimport CollectionEventType from './CollectionEventType.js';\\nimport MapBrowserEvent from './MapBrowserEvent.js';\\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\\nimport MapBrowserEventType from './MapBrowserEventType.js';\\nimport MapEvent from './MapEvent.js';\\nimport MapEventType from './MapEventType.js';\\nimport MapProperty from './MapProperty.js';\\nimport RenderEventType from './render/EventType.js';\\nimport BaseObject, { getChangeEventType } from './Object.js';\\nimport ObjectEventType from './ObjectEventType.js';\\nimport TileQueue from './TileQueue.js';\\nimport View from './View.js';\\nimport ViewHint from './ViewHint.js';\\nimport { assert } from './asserts.js';\\nimport { removeNode } from './dom.js';\\nimport { listen, unlistenByKey, unlisten } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\\nimport { TRUE } from './functions.js';\\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\\nimport LayerGroup from './layer/Group.js';\\nimport { hasArea } from './size.js';\\nimport { DROP } from './structs/PriorityQueue.js';\\nimport { create as createTransform, apply as applyTransform } from './transform.js';\\n/**\\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\\n * be used in applications.\\n * @typedef {Object} FrameState\\n * @property {number} pixelRatio The pixel ratio of the frame.\\n * @property {number} time The time when rendering of the frame was requested.\\n * @property {import(\\\"./View.js\\\").State} viewState The state of the current view.\\n * @property {boolean} animate\\n * @property {import(\\\"./transform.js\\\").Transform} coordinateToPixelTransform\\n * @property {null|import(\\\"./extent.js\\\").Extent} extent\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} focus\\n * @property {number} index\\n * @property {Array<import(\\\"./layer/Layer.js\\\").State>} layerStatesArray\\n * @property {import(\\\"./transform.js\\\").Transform} pixelToCoordinateTransform\\n * @property {Array<PostRenderFunction>} postRenderFunctions\\n * @property {import(\\\"./size.js\\\").Size} size\\n * @property {!Object<string, boolean>} skippedFeatureUids\\n * @property {TileQueue} tileQueue\\n * @property {!Object<string, Object<string, boolean>>} usedTiles\\n * @property {Array<number>} viewHints\\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\\n */\\n/**\\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\\n */\\n/**\\n * @typedef {Object} AtPixelOptions\\n * @property {undefined|function(import(\\\"./layer/Layer.js\\\").default): boolean} [layerFilter] Layer filter\\n * function. The filter function will receive one argument, the\\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\\n * Only layers which are visible and for which this function returns `true`\\n * will be tested for features. By default, all visible layers will be tested.\\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\\n * inside the radius around the given position will be checked for features.\\n */\\n/**\\n * @typedef {Object} MapOptionsInternal\\n * @property {Collection<import(\\\"./control/Control.js\\\").default>} [controls]\\n * @property {Collection<import(\\\"./interaction/Interaction.js\\\").default>} [interactions]\\n * @property {HTMLElement|Document} keyboardEventTarget\\n * @property {Collection<import(\\\"./Overlay.js\\\").default>} overlays\\n * @property {Object<string, *>} values\\n */\\n/**\\n * Object literal with config options for the map.\\n * @typedef {Object} MapOptions\\n * @property {Collection<import(\\\"./control/Control.js\\\").default>|Array<import(\\\"./control/Control.js\\\").default>} [controls]\\n * Controls initially added to the map. If not specified,\\n * {@link module:ol/control~defaults} is used.\\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\\n * physical pixels and device-independent pixels (dips) on the device.\\n * @property {Collection<import(\\\"./interaction/Interaction.js\\\").default>|Array<import(\\\"./interaction/Interaction.js\\\").default>} [interactions]\\n * Interactions that are initially added to the map. If not specified,\\n * {@link module:ol/interaction~defaults} is used.\\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\\n * listen to keyboard events on. This determines when the `KeyboardPan` and\\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\\n * `document` the keyboard interactions will always trigger. If this option is\\n * not specified, the element the library listens to keyboard events on is the\\n * map target (i.e. the user-provided div for the map). If this is not\\n * `document`, the target element needs to be focused for key events to be\\n * emitted, requiring that the target element has a `tabindex` attribute.\\n * @property {Array<import(\\\"./layer/Base.js\\\").default>|Collection<import(\\\"./layer/Base.js\\\").default>|LayerGroup} [layers]\\n * Layers. If this is not defined, a map with no layers will be rendered. Note\\n * that layers are rendered in the order supplied, so if you want, for example,\\n * a vector layer to appear on top of a tile layer, it must come after the tile\\n * layer.\\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\\n * simultaneously.\\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\\n * cursor must move to be detected as a map move event instead of a click.\\n * Increasing this value can make it easier to click on the map.\\n * @property {Collection<import(\\\"./Overlay.js\\\").default>|Array<import(\\\"./Overlay.js\\\").default>} [overlays]\\n * Overlays initially added to the map. By default, no overlays are added.\\n * @property {HTMLElement|string} [target] The container for the map, either the\\n * element itself or the `id` of the element. If not specified at construction\\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\\n * rendered.\\n * @property {View} [view] The map's view.  No layer sources will be\\n * fetched unless this is specified at construction time or through\\n * {@link module:ol/Map~Map#setView}.\\n */\\n/**\\n * @fires import(\\\"./MapBrowserEvent.js\\\").MapBrowserEvent\\n * @fires import(\\\"./MapEvent.js\\\").MapEvent\\n * @fires import(\\\"./render/Event.js\\\").default#precompose\\n * @fires import(\\\"./render/Event.js\\\").default#postcompose\\n * @fires import(\\\"./render/Event.js\\\").default#rendercomplete\\n * @api\\n */\\nvar PluggableMap = /** @class */ (function (_super) {\\n    __extends(PluggableMap, _super);\\n    /**\\n     * @param {MapOptions} options Map options.\\n     */\\n    function PluggableMap(options) {\\n        var _this = _super.call(this) || this;\\n        var optionsInternal = createOptionsInternal(options);\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.animationDelayKey_;\\n        /**\\n         * @private\\n         */\\n        _this.animationDelay_ = function () {\\n            this.animationDelayKey_ = undefined;\\n            this.renderFrame_(Date.now());\\n        }.bind(_this);\\n        /**\\n         * @private\\n         * @type {import(\\\"./transform.js\\\").Transform}\\n         */\\n        _this.coordinateToPixelTransform_ = createTransform();\\n        /**\\n         * @private\\n         * @type {import(\\\"./transform.js\\\").Transform}\\n         */\\n        _this.pixelToCoordinateTransform_ = createTransform();\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.frameIndex_ = 0;\\n        /**\\n         * @private\\n         * @type {?FrameState}\\n         */\\n        _this.frameState_ = null;\\n        /**\\n         * The extent at the previous 'moveend' event.\\n         * @private\\n         * @type {import(\\\"./extent.js\\\").Extent}\\n         */\\n        _this.previousExtent_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.viewPropertyListenerKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.viewChangeListenerKey_ = null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.layerGroupPropertyListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.viewport_ = document.createElement('div');\\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\\n        _this.viewport_.style.position = 'relative';\\n        _this.viewport_.style.overflow = 'hidden';\\n        _this.viewport_.style.width = '100%';\\n        _this.viewport_.style.height = '100%';\\n        // prevent page zoom on IE >= 10 browsers\\n        _this.viewport_.style.msTouchAction = 'none';\\n        _this.viewport_.style.touchAction = 'none';\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.overlayContainer_ = document.createElement('div');\\n        _this.overlayContainer_.style.position = 'absolute';\\n        _this.overlayContainer_.style.zIndex = '0';\\n        _this.overlayContainer_.style.width = '100%';\\n        _this.overlayContainer_.style.height = '100%';\\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\\n        _this.viewport_.appendChild(_this.overlayContainer_);\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.overlayContainerStopEvent_ = document.createElement('div');\\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\\n        _this.overlayContainerStopEvent_.style.width = '100%';\\n        _this.overlayContainerStopEvent_.style.height = '100%';\\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\\n        /**\\n         * @private\\n         * @type {MapBrowserEventHandler}\\n         */\\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\\n        for (var key in MapBrowserEventType) {\\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\\n        }\\n        /**\\n         * @private\\n         * @type {HTMLElement|Document}\\n         */\\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.keyHandlerKeys_ = null;\\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\\n        /**\\n         * @type {Collection<import(\\\"./control/Control.js\\\").default>}\\n         * @protected\\n         */\\n        _this.controls = optionsInternal.controls || new Collection();\\n        /**\\n         * @type {Collection<import(\\\"./interaction/Interaction.js\\\").default>}\\n         * @protected\\n         */\\n        _this.interactions = optionsInternal.interactions || new Collection();\\n        /**\\n         * @type {Collection<import(\\\"./Overlay.js\\\").default>}\\n         * @private\\n         */\\n        _this.overlays_ = optionsInternal.overlays;\\n        /**\\n         * A lookup of overlays by id.\\n         * @private\\n         * @type {Object<string, import(\\\"./Overlay.js\\\").default>}\\n         */\\n        _this.overlayIdIndex_ = {};\\n        /**\\n         * @type {import(\\\"./renderer/Map.js\\\").default}\\n         * @private\\n         */\\n        _this.renderer_ = _this.createRenderer();\\n        /**\\n         * @type {function(Event): void|undefined}\\n         * @private\\n         */\\n        _this.handleResize_;\\n        /**\\n         * @private\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate}\\n         */\\n        _this.focus_ = null;\\n        /**\\n         * @private\\n         * @type {!Array<PostRenderFunction>}\\n         */\\n        _this.postRenderFunctions_ = [];\\n        /**\\n         * @private\\n         * @type {TileQueue}\\n         */\\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\\n        /**\\n         * Uids of features to skip at rendering time.\\n         * @type {Object<string, boolean>}\\n         * @private\\n         */\\n        _this.skippedFeatureUids_ = {};\\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\\n        // setProperties will trigger the rendering of the map if the map\\n        // is \\\"defined\\\" already.\\n        _this.setProperties(optionsInternal.values);\\n        _this.controls.forEach(\\n        /**\\n         * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n         * @this {PluggableMap}\\n         */\\n        (function (control) {\\n            control.setMap(this);\\n        }).bind(_this));\\n        listen(_this.controls, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(this);\\n        }, _this);\\n        listen(_this.controls, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(null);\\n        }, _this);\\n        _this.interactions.forEach(\\n        /**\\n         * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction.\\n         * @this {PluggableMap}\\n         */\\n        (function (interaction) {\\n            interaction.setMap(this);\\n        }).bind(_this));\\n        listen(_this.interactions, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(this);\\n        }, _this);\\n        listen(_this.interactions, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(null);\\n        }, _this);\\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\\n        listen(_this.overlays_, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            this.addOverlayInternal_(/** @type {import(\\\"./Overlay.js\\\").default} */ (event.element));\\n        }, _this);\\n        listen(_this.overlays_, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            var overlay = /** @type {import(\\\"./Overlay.js\\\").default} */ (event.element);\\n            var id = overlay.getId();\\n            if (id !== undefined) {\\n                delete this.overlayIdIndex_[id.toString()];\\n            }\\n            event.element.setMap(null);\\n        }, _this);\\n        return _this;\\n    }\\n    /**\\n     * @abstract\\n     * @return {import(\\\"./renderer/Map.js\\\").default} The map renderer\\n     */\\n    PluggableMap.prototype.createRenderer = function () {\\n        throw new Error('Use a map type that has a createRenderer method');\\n    };\\n    /**\\n     * Add the given control to the map.\\n     * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n     * @api\\n     */\\n    PluggableMap.prototype.addControl = function (control) {\\n        this.getControls().push(control);\\n    };\\n    /**\\n     * Add the given interaction to the map. If you want to add an interaction\\n     * at another point of the collection use `getInteraction()` and the methods\\n     * available on {@link module:ol/Collection~Collection}. This can be used to\\n     * stop the event propagation from the handleEvent function. The interactions\\n     * get to handle the events in the reverse order of this collection.\\n     * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction to add.\\n     * @api\\n     */\\n    PluggableMap.prototype.addInteraction = function (interaction) {\\n        this.getInteractions().push(interaction);\\n    };\\n    /**\\n     * Adds the given layer to the top of this map. If you want to add a layer\\n     * elsewhere in the stack, use `getLayers()` and the methods available on\\n     * {@link module:ol/Collection~Collection}.\\n     * @param {import(\\\"./layer/Base.js\\\").default} layer Layer.\\n     * @api\\n     */\\n    PluggableMap.prototype.addLayer = function (layer) {\\n        var layers = this.getLayerGroup().getLayers();\\n        layers.push(layer);\\n    };\\n    /**\\n     * Add the given overlay to the map.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @api\\n     */\\n    PluggableMap.prototype.addOverlay = function (overlay) {\\n        this.getOverlays().push(overlay);\\n    };\\n    /**\\n     * This deals with map's overlay collection changes.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @private\\n     */\\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\\n        var id = overlay.getId();\\n        if (id !== undefined) {\\n            this.overlayIdIndex_[id.toString()] = overlay;\\n        }\\n        overlay.setMap(this);\\n    };\\n    /**\\n     *\\n     * @inheritDoc\\n     */\\n    PluggableMap.prototype.disposeInternal = function () {\\n        this.mapBrowserEventHandler_.dispose();\\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\\n        if (this.handleResize_ !== undefined) {\\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\\n            this.handleResize_ = undefined;\\n        }\\n        if (this.animationDelayKey_) {\\n            cancelAnimationFrame(this.animationDelayKey_);\\n            this.animationDelayKey_ = undefined;\\n        }\\n        this.setTarget(null);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Detect features that intersect a pixel on the viewport, and execute a\\n     * callback with each intersecting feature. Layers included in the detection can\\n     * be configured through the `layerFilter` option in `opt_options`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {function(this: S, import(\\\"./Feature.js\\\").FeatureLike,\\n     *     import(\\\"./layer/Layer.js\\\").default): T} callback Feature callback. The callback will be\\n     *     called with two arguments. The first argument is one\\n     *     {@link module:ol/Feature feature} or\\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\\n     *     unmanaged layers. To stop detection, callback functions can return a\\n     *     truthy value.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {T|undefined} Callback result, i.e. the return value of last\\n     * callback execution, or the first truthy callback return value.\\n     * @template S,T\\n     * @api\\n     */\\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\\n        if (!this.frameState_) {\\n            return;\\n        }\\n        var coordinate = this.getCoordinateFromPixel(pixel);\\n        opt_options = opt_options !== undefined ? opt_options :\\n            /** @type {AtPixelOptions} */ ({});\\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        var layerFilter = opt_options.layerFilter !== undefined ?\\n            opt_options.layerFilter : TRUE;\\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\\n    };\\n    /**\\n     * Get all features that intersect a pixel on the viewport.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {Array<import(\\\"./Feature.js\\\").FeatureLike>} The detected features or\\n     * `null` if none were found.\\n     * @api\\n     */\\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\\n        var features = null;\\n        this.forEachFeatureAtPixel(pixel, function (feature) {\\n            if (!features) {\\n                features = [];\\n            }\\n            features.push(feature);\\n        }, opt_options);\\n        return features;\\n    };\\n    /**\\n     * Detect layers that have a color value at a pixel on the viewport, and\\n     * execute a callback with each matching layer. Layers included in the\\n     * detection can be configured through `opt_layerFilter`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {function(this: S, import(\\\"./layer/Layer.js\\\").default, (Uint8ClampedArray|Uint8Array)): T} callback\\n     *     Layer callback. This callback will receive two arguments: first is the\\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\\n     *     that do not currently support this argument. To stop detection, callback\\n     *     functions can return a truthy value.\\n     * @param {AtPixelOptions=} opt_options Configuration options.\\n     * @return {T|undefined} Callback result, i.e. the return value of last\\n     * callback execution, or the first truthy callback return value.\\n     * @template S,T\\n     * @api\\n     */\\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\\n        if (!this.frameState_) {\\n            return;\\n        }\\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\\n        var hitTolerance = options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        var layerFilter = options.layerFilter || TRUE;\\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\\n    };\\n    /**\\n     * Detect if features intersect a pixel on the viewport. Layers included in the\\n     * detection can be configured through `opt_layerFilter`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {boolean} Is there a feature at the given pixel?\\n     * @api\\n     */\\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\\n        if (!this.frameState_) {\\n            return false;\\n        }\\n        var coordinate = this.getCoordinateFromPixel(pixel);\\n        opt_options = opt_options !== undefined ? opt_options :\\n            /** @type {AtPixelOptions} */ ({});\\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\\n    };\\n    /**\\n     * Returns the coordinate in view projection for a browser event.\\n     * @param {Event} event Event.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate.\\n     * @api\\n     */\\n    PluggableMap.prototype.getEventCoordinate = function (event) {\\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\\n    };\\n    /**\\n     * Returns the map pixel position for a browser event relative to the viewport.\\n     * @param {Event|TouchEvent} event Event.\\n     * @return {import(\\\"./pixel.js\\\").Pixel} Pixel.\\n     * @api\\n     */\\n    PluggableMap.prototype.getEventPixel = function (event) {\\n        var viewportPosition = this.viewport_.getBoundingClientRect();\\n        var eventPosition = 'changedTouches' in event ?\\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\\n            /** @type {MouseEvent} */ (event);\\n        return [\\n            eventPosition.clientX - viewportPosition.left,\\n            eventPosition.clientY - viewportPosition.top\\n        ];\\n    };\\n    /**\\n     * Get the target in which this map is rendered.\\n     * Note that this returns what is entered as an option or in setTarget:\\n     * if that was an element, it returns an element; if a string, it returns that.\\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\\n     *     map is rendered in.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getTarget = function () {\\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\\n    };\\n    /**\\n     * Get the DOM element into which this map is rendered. In contrast to\\n     * `getTarget` this method always return an `Element`, or `null` if the\\n     * map has no target.\\n     * @return {HTMLElement} The element that the map is rendered in.\\n     * @api\\n     */\\n    PluggableMap.prototype.getTargetElement = function () {\\n        var target = this.getTarget();\\n        if (target !== undefined) {\\n            return typeof target === 'string' ? document.getElementById(target) : target;\\n        }\\n        else {\\n            return null;\\n        }\\n    };\\n    /**\\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\\n     * map view projection.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel position in the map viewport.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate} The coordinate for the pixel position.\\n     * @api\\n     */\\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\\n        var frameState = this.frameState_;\\n        if (!frameState) {\\n            return null;\\n        }\\n        else {\\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\\n        }\\n    };\\n    /**\\n     * Get the map controls. Modifying this collection changes the controls\\n     * associated with the map.\\n     * @return {Collection<import(\\\"./control/Control.js\\\").default>} Controls.\\n     * @api\\n     */\\n    PluggableMap.prototype.getControls = function () {\\n        return this.controls;\\n    };\\n    /**\\n     * Get the map overlays. Modifying this collection changes the overlays\\n     * associated with the map.\\n     * @return {Collection<import(\\\"./Overlay.js\\\").default>} Overlays.\\n     * @api\\n     */\\n    PluggableMap.prototype.getOverlays = function () {\\n        return this.overlays_;\\n    };\\n    /**\\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\\n     * Note that the index treats string and numeric identifiers as the same. So\\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\\n     * @param {string|number} id Overlay identifier.\\n     * @return {import(\\\"./Overlay.js\\\").default} Overlay.\\n     * @api\\n     */\\n    PluggableMap.prototype.getOverlayById = function (id) {\\n        var overlay = this.overlayIdIndex_[id.toString()];\\n        return overlay !== undefined ? overlay : null;\\n    };\\n    /**\\n     * Get the map interactions. Modifying this collection changes the interactions\\n     * associated with the map.\\n     *\\n     * Interactions are used for e.g. pan, zoom and rotate.\\n     * @return {Collection<import(\\\"./interaction/Interaction.js\\\").default>} Interactions.\\n     * @api\\n     */\\n    PluggableMap.prototype.getInteractions = function () {\\n        return this.interactions;\\n    };\\n    /**\\n     * Get the layergroup associated with this map.\\n     * @return {LayerGroup} A layer group containing the layers in this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getLayerGroup = function () {\\n        return (\\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\\n    };\\n    /**\\n     * Get the collection of layers associated with this map.\\n     * @return {!Collection<import(\\\"./layer/Base.js\\\").default>} Layers.\\n     * @api\\n     */\\n    PluggableMap.prototype.getLayers = function () {\\n        var layers = this.getLayerGroup().getLayers();\\n        return layers;\\n    };\\n    /**\\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\\n     * projection and returns the corresponding pixel.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate A map coordinate.\\n     * @return {import(\\\"./pixel.js\\\").Pixel} A pixel position in the map viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\\n        var frameState = this.frameState_;\\n        if (!frameState) {\\n            return null;\\n        }\\n        else {\\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\\n        }\\n    };\\n    /**\\n     * Get the map renderer.\\n     * @return {import(\\\"./renderer/Map.js\\\").default} Renderer\\n     */\\n    PluggableMap.prototype.getRenderer = function () {\\n        return this.renderer_;\\n    };\\n    /**\\n     * Get the size of this map.\\n     * @return {import(\\\"./size.js\\\").Size|undefined} The size in pixels of the map in the DOM.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getSize = function () {\\n        return (\\n        /** @type {import(\\\"./size.js\\\").Size|undefined} */ (this.get(MapProperty.SIZE)));\\n    };\\n    /**\\n     * Get the view associated with this map. A view manages properties such as\\n     * center and resolution.\\n     * @return {View} The view that controls this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getView = function () {\\n        return (\\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\\n    };\\n    /**\\n     * Get the element that serves as the map viewport.\\n     * @return {HTMLElement} Viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.getViewport = function () {\\n        return this.viewport_;\\n    };\\n    /**\\n     * Get the element that serves as the container for overlays.  Elements added to\\n     * this container will let mousedown and touchstart events through to the map,\\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\\n     * events.\\n     * @return {!HTMLElement} The map's overlay container.\\n     */\\n    PluggableMap.prototype.getOverlayContainer = function () {\\n        return this.overlayContainer_;\\n    };\\n    /**\\n     * Get the element that serves as a container for overlays that don't allow\\n     * event propagation. Elements added to this container won't let mousedown and\\n     * touchstart events through to the map, so clicks and gestures on an overlay\\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\\n     * @return {!HTMLElement} The map's overlay container that stops events.\\n     */\\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\\n        return this.overlayContainerStopEvent_;\\n    };\\n    /**\\n     * @param {import(\\\"./Tile.js\\\").default} tile Tile.\\n     * @param {string} tileSourceKey Tile source key.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} tileCenter Tile center.\\n     * @param {number} tileResolution Tile resolution.\\n     * @return {number} Tile priority.\\n     */\\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\\n        // are outside the visible extent.\\n        var frameState = this.frameState_;\\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\\n            return DROP;\\n        }\\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\\n            return DROP;\\n        }\\n        // Prioritize the highest zoom level tiles closest to the focus.\\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\\n        // Within a zoom level, tiles are prioritized by the distance in pixels\\n        // between the center of the tile and the focus.  The factor of 65536 means\\n        // that the prioritization should behave as desired for tiles up to\\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\\n        var deltaX = tileCenter[0] - frameState.focus[0];\\n        var deltaY = tileCenter[1] - frameState.focus[1];\\n        return 65536 * Math.log(tileResolution) +\\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\\n    };\\n    /**\\n     * @param {Event} browserEvent Browser event.\\n     * @param {string=} opt_type Type.\\n     */\\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\\n        var type = opt_type || browserEvent.type;\\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\\n        this.handleMapBrowserEvent(mapBrowserEvent);\\n    };\\n    /**\\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\\n     */\\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\\n        if (!this.frameState_) {\\n            // With no view defined, we cannot translate pixels into geographical\\n            // coordinates so interactions cannot be used.\\n            return;\\n        }\\n        var target = mapBrowserEvent.originalEvent.target;\\n        while (target instanceof HTMLElement) {\\n            if (target.parentElement === this.overlayContainerStopEvent_) {\\n                return;\\n            }\\n            target = target.parentElement;\\n        }\\n        this.focus_ = mapBrowserEvent.coordinate;\\n        mapBrowserEvent.frameState = this.frameState_;\\n        var interactionsArray = this.getInteractions().getArray();\\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\\n                var interaction = interactionsArray[i];\\n                if (!interaction.getActive()) {\\n                    continue;\\n                }\\n                var cont = interaction.handleEvent(mapBrowserEvent);\\n                if (!cont) {\\n                    break;\\n                }\\n            }\\n        }\\n    };\\n    /**\\n     * @protected\\n     */\\n    PluggableMap.prototype.handlePostRender = function () {\\n        var frameState = this.frameState_;\\n        // Manage the tile queue\\n        // Image loads are expensive and a limited resource, so try to use them\\n        // efficiently:\\n        // * When the view is static we allow a large number of parallel tile loads\\n        //   to complete the frame as quickly as possible.\\n        // * When animating or interacting, image loads can cause janks, so we reduce\\n        //   the maximum number of loads per frame and limit the number of parallel\\n        //   tile loads to remain reactive to view changes and to reduce the chance of\\n        //   loading tiles that will quickly disappear from view.\\n        var tileQueue = this.tileQueue_;\\n        if (!tileQueue.isEmpty()) {\\n            var maxTotalLoading = this.maxTilesLoading_;\\n            var maxNewLoads = maxTotalLoading;\\n            if (frameState) {\\n                var hints = frameState.viewHints;\\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\\n                }\\n            }\\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\\n                tileQueue.reprioritize(); // FIXME only call if view has changed\\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\\n            }\\n        }\\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\\n        }\\n        var postRenderFunctions = this.postRenderFunctions_;\\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\\n            postRenderFunctions[i](this, frameState);\\n        }\\n        postRenderFunctions.length = 0;\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleSizeChanged_ = function () {\\n        if (this.getView()) {\\n            this.getView().resolveConstraints(0);\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleTargetChanged_ = function () {\\n        // target may be undefined, null, a string or an Element.\\n        // If it's a string we convert it to an Element before proceeding.\\n        // If it's not now an Element we remove the viewport from the DOM.\\n        // If it's an Element we append the viewport element to it.\\n        var targetElement;\\n        if (this.getTarget()) {\\n            targetElement = this.getTargetElement();\\n        }\\n        if (this.keyHandlerKeys_) {\\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\\n                unlistenByKey(this.keyHandlerKeys_[i]);\\n            }\\n            this.keyHandlerKeys_ = null;\\n        }\\n        if (!targetElement) {\\n            this.renderer_.removeLayerRenderers();\\n            removeNode(this.viewport_);\\n            if (this.handleResize_ !== undefined) {\\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\\n                this.handleResize_ = undefined;\\n            }\\n        }\\n        else {\\n            targetElement.appendChild(this.viewport_);\\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\\n                targetElement : this.keyboardEventTarget_;\\n            this.keyHandlerKeys_ = [\\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\\n            ];\\n            if (!this.handleResize_) {\\n                this.handleResize_ = this.updateSize.bind(this);\\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\\n            }\\n        }\\n        this.updateSize();\\n        // updateSize calls setSize, so no need to call this.render\\n        // ourselves here.\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleTileChange_ = function () {\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleViewChanged_ = function () {\\n        if (this.viewPropertyListenerKey_) {\\n            unlistenByKey(this.viewPropertyListenerKey_);\\n            this.viewPropertyListenerKey_ = null;\\n        }\\n        if (this.viewChangeListenerKey_) {\\n            unlistenByKey(this.viewChangeListenerKey_);\\n            this.viewChangeListenerKey_ = null;\\n        }\\n        var view = this.getView();\\n        if (view) {\\n            this.viewport_.setAttribute('data-view', getUid(view));\\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\\n            view.resolveConstraints(0);\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\\n        if (this.layerGroupPropertyListenerKeys_) {\\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\\n            this.layerGroupPropertyListenerKeys_ = null;\\n        }\\n        var layerGroup = this.getLayerGroup();\\n        if (layerGroup) {\\n            this.layerGroupPropertyListenerKeys_ = [\\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\\n                listen(layerGroup, EventType.CHANGE, this.render, this)\\n            ];\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @return {boolean} Is rendered.\\n     */\\n    PluggableMap.prototype.isRendered = function () {\\n        return !!this.frameState_;\\n    };\\n    /**\\n     * Requests an immediate render in a synchronous manner.\\n     * @api\\n     */\\n    PluggableMap.prototype.renderSync = function () {\\n        if (this.animationDelayKey_) {\\n            cancelAnimationFrame(this.animationDelayKey_);\\n        }\\n        this.animationDelay_();\\n    };\\n    /**\\n     * Request a map rendering (at the next animation frame).\\n     * @api\\n     */\\n    PluggableMap.prototype.render = function () {\\n        if (this.animationDelayKey_ === undefined) {\\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\\n        }\\n    };\\n    /**\\n     * Remove the given control from the map.\\n     * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n     * @return {import(\\\"./control/Control.js\\\").default|undefined} The removed control (or undefined\\n     *     if the control was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeControl = function (control) {\\n        return this.getControls().remove(control);\\n    };\\n    /**\\n     * Remove the given interaction from the map.\\n     * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction to remove.\\n     * @return {import(\\\"./interaction/Interaction.js\\\").default|undefined} The removed interaction (or\\n     *     undefined if the interaction was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeInteraction = function (interaction) {\\n        return this.getInteractions().remove(interaction);\\n    };\\n    /**\\n     * Removes the given layer from the map.\\n     * @param {import(\\\"./layer/Base.js\\\").default} layer Layer.\\n     * @return {import(\\\"./layer/Base.js\\\").default|undefined} The removed layer (or undefined if the\\n     *     layer was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeLayer = function (layer) {\\n        var layers = this.getLayerGroup().getLayers();\\n        return layers.remove(layer);\\n    };\\n    /**\\n     * Remove the given overlay from the map.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @return {import(\\\"./Overlay.js\\\").default|undefined} The removed overlay (or undefined\\n     *     if the overlay was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeOverlay = function (overlay) {\\n        return this.getOverlays().remove(overlay);\\n    };\\n    /**\\n     * @param {number} time Time.\\n     * @private\\n     */\\n    PluggableMap.prototype.renderFrame_ = function (time) {\\n        var viewState;\\n        var size = this.getSize();\\n        var view = this.getView();\\n        var extent = createEmpty();\\n        var previousFrameState = this.frameState_;\\n        /** @type {?FrameState} */\\n        var frameState = null;\\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\\n            viewState = view.getState(this.pixelRatio_);\\n            frameState = /** @type {FrameState} */ ({\\n                animate: false,\\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\\n                extent: extent,\\n                focus: this.focus_ ? this.focus_ : viewState.center,\\n                index: this.frameIndex_++,\\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\\n                pixelRatio: this.pixelRatio_,\\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\\n                postRenderFunctions: [],\\n                size: size,\\n                skippedFeatureUids: this.skippedFeatureUids_,\\n                tileQueue: this.tileQueue_,\\n                time: time,\\n                usedTiles: {},\\n                viewState: viewState,\\n                viewHints: viewHints,\\n                wantedTiles: {}\\n            });\\n        }\\n        if (frameState) {\\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\\n        }\\n        this.frameState_ = frameState;\\n        this.renderer_.renderFrame(frameState);\\n        if (frameState) {\\n            if (frameState.animate) {\\n                this.render();\\n            }\\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\\n            if (previousFrameState) {\\n                var moveStart = !this.previousExtent_ ||\\n                    (!isEmpty(this.previousExtent_) &&\\n                        !equals(frameState.extent, this.previousExtent_));\\n                if (moveStart) {\\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\\n                }\\n            }\\n            var idle = this.previousExtent_ &&\\n                !frameState.viewHints[ViewHint.ANIMATING] &&\\n                !frameState.viewHints[ViewHint.INTERACTING] &&\\n                !equals(frameState.extent, this.previousExtent_);\\n            if (idle) {\\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\\n                clone(frameState.extent, this.previousExtent_);\\n            }\\n        }\\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\\n        setTimeout(this.handlePostRender.bind(this), 0);\\n    };\\n    /**\\n     * Sets the layergroup of this map.\\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\\n        this.set(MapProperty.LAYERGROUP, layerGroup);\\n    };\\n    /**\\n     * Set the size of this map.\\n     * @param {import(\\\"./size.js\\\").Size|undefined} size The size in pixels of the map in the DOM.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setSize = function (size) {\\n        this.set(MapProperty.SIZE, size);\\n    };\\n    /**\\n     * Set the target element to render this map into.\\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\\n     *     that the map is rendered in.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setTarget = function (target) {\\n        this.set(MapProperty.TARGET, target);\\n    };\\n    /**\\n     * Set the view for this map.\\n     * @param {View} view The view that controls this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setView = function (view) {\\n        this.set(MapProperty.VIEW, view);\\n    };\\n    /**\\n     * @param {import(\\\"./Feature.js\\\").default} feature Feature.\\n     */\\n    PluggableMap.prototype.skipFeature = function (feature) {\\n        this.skippedFeatureUids_[getUid(feature)] = true;\\n        this.render();\\n    };\\n    /**\\n     * Force a recalculation of the map viewport size.  This should be called when\\n     * third-party code changes the size of the map viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.updateSize = function () {\\n        var targetElement = this.getTargetElement();\\n        if (!targetElement) {\\n            this.setSize(undefined);\\n        }\\n        else {\\n            var computedStyle = getComputedStyle(targetElement);\\n            this.setSize([\\n                targetElement.offsetWidth -\\n                    parseFloat(computedStyle['borderLeftWidth']) -\\n                    parseFloat(computedStyle['paddingLeft']) -\\n                    parseFloat(computedStyle['paddingRight']) -\\n                    parseFloat(computedStyle['borderRightWidth']),\\n                targetElement.offsetHeight -\\n                    parseFloat(computedStyle['borderTopWidth']) -\\n                    parseFloat(computedStyle['paddingTop']) -\\n                    parseFloat(computedStyle['paddingBottom']) -\\n                    parseFloat(computedStyle['borderBottomWidth'])\\n            ]);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./Feature.js\\\").default} feature Feature.\\n     */\\n    PluggableMap.prototype.unskipFeature = function (feature) {\\n        delete this.skippedFeatureUids_[getUid(feature)];\\n        this.render();\\n    };\\n    return PluggableMap;\\n}(BaseObject));\\n/**\\n * @param {MapOptions} options Map options.\\n * @return {MapOptionsInternal} Internal map options.\\n */\\nfunction createOptionsInternal(options) {\\n    /**\\n     * @type {HTMLElement|Document}\\n     */\\n    var keyboardEventTarget = null;\\n    if (options.keyboardEventTarget !== undefined) {\\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\\n            document.getElementById(options.keyboardEventTarget) :\\n            options.keyboardEventTarget;\\n    }\\n    /**\\n     * @type {Object<string, *>}\\n     */\\n    var values = {};\\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\\n    values[MapProperty.LAYERGROUP] = layerGroup;\\n    values[MapProperty.TARGET] = options.target;\\n    values[MapProperty.VIEW] = options.view !== undefined ?\\n        options.view : new View();\\n    var controls;\\n    if (options.controls !== undefined) {\\n        if (Array.isArray(options.controls)) {\\n            controls = new Collection(options.controls.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            controls = /** @type {Collection} */ (options.controls);\\n        }\\n    }\\n    var interactions;\\n    if (options.interactions !== undefined) {\\n        if (Array.isArray(options.interactions)) {\\n            interactions = new Collection(options.interactions.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            interactions = /** @type {Collection} */ (options.interactions);\\n        }\\n    }\\n    var overlays;\\n    if (options.overlays !== undefined) {\\n        if (Array.isArray(options.overlays)) {\\n            overlays = new Collection(options.overlays.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            overlays = options.overlays;\\n        }\\n    }\\n    else {\\n        overlays = new Collection();\\n    }\\n    return {\\n        controls: controls,\\n        interactions: interactions,\\n        keyboardEventTarget: keyboardEventTarget,\\n        overlays: overlays,\\n        values: values\\n    };\\n}\\nexport default PluggableMap;\\n/**\\n * @param  {Array<import(\\\"./layer/Base.js\\\").default>} layers Layers.\\n * @return {boolean} Layers have sources that are still loading.\\n */\\nfunction getLoading(layers) {\\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\\n        var layer = layers[i];\\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\\n        }\\n        else {\\n            var source = /** @type {import(\\\"./layer/Layer.js\\\").default} */ (layer).getSource();\\n            if (source && source.loading) {\\n                return true;\\n            }\\n        }\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=PluggableMap.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Control\\n */\\nimport { VOID } from '../functions.js';\\nimport MapEventType from '../MapEventType.js';\\nimport BaseObject from '../Object.js';\\nimport { removeNode } from '../dom.js';\\nimport { listen, unlistenByKey } from '../events.js';\\n/**\\n * @typedef {Object} Options\\n * @property {HTMLElement} [element] The element is the control's\\n * container element. This only needs to be specified if you're developing\\n * a custom control.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when\\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\\n * callback.\\n * @property {HTMLElement|string} [target] Specify a target if you want\\n * the control to be rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A control is a visible widget with a DOM element in a fixed position on the\\n * screen. They can involve user input (buttons), or be informational only;\\n * the position is determined using CSS. By default these are placed in the\\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\\n * any outside DOM element.\\n *\\n * This is the base class for controls. You can use it for simple custom\\n * controls by creating the element with listeners, creating an instance:\\n * ```js\\n * var myControl = new Control({element: myElement});\\n * ```\\n * and then adding this to the map.\\n *\\n * The main advantage of having this as a control rather than a simple separate\\n * DOM element is that preventing propagation is handled for you. Controls\\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\\n *\\n * You can also extend this base for your own control class. See\\n * examples/custom-controls for an example of how to do this.\\n *\\n * @api\\n */\\nvar Control = /** @class */ (function (_super) {\\n    __extends(Control, _super);\\n    /**\\n     * @param {Options} options Control options.\\n     */\\n    function Control(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {HTMLElement}\\n         */\\n        _this.element = options.element ? options.element : null;\\n        /**\\n         * @private\\n         * @type {HTMLElement}\\n         */\\n        _this.target_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        /**\\n         * @protected\\n         * @type {!Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.listenerKeys = [];\\n        /**\\n         * @type {function(import(\\\"../MapEvent.js\\\").default): void}\\n         */\\n        _this.render = options.render ? options.render : VOID;\\n        if (options.target) {\\n            _this.setTarget(options.target);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Control.prototype.disposeInternal = function () {\\n        removeNode(this.element);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the map associated with this control.\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     * @api\\n     */\\n    Control.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Remove the control from its current map and attach it to the new map.\\n     * Subclasses may set up event handlers to get notified about changes to\\n     * the map here.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     * @api\\n     */\\n    Control.prototype.setMap = function (map) {\\n        if (this.map_) {\\n            removeNode(this.element);\\n        }\\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\\n            unlistenByKey(this.listenerKeys[i]);\\n        }\\n        this.listenerKeys.length = 0;\\n        this.map_ = map;\\n        if (this.map_) {\\n            var target = this.target_ ?\\n                this.target_ : map.getOverlayContainerStopEvent();\\n            target.appendChild(this.element);\\n            if (this.render !== VOID) {\\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\\n            }\\n            map.render();\\n        }\\n    };\\n    /**\\n     * This function is used to set a target element for the control. It has no\\n     * effect if it is called after the control has been added to the map (i.e.\\n     * after `setMap` is called on the control). If no `target` is set in the\\n     * options passed to the control constructor and if `setTarget` is not called\\n     * then the control is added to the map's overlay container.\\n     * @param {HTMLElement|string} target Target.\\n     * @api\\n     */\\n    Control.prototype.setTarget = function (target) {\\n        this.target_ = typeof target === 'string' ?\\n            document.getElementById(target) :\\n            target;\\n    };\\n    return Control;\\n}(BaseObject));\\nexport default Control;\\n//# sourceMappingURL=Control.js.map\",\"/**\\n * @module ol/css\\n */\\n/**\\n * The CSS class for hidden feature.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_HIDDEN = 'ol-hidden';\\n/**\\n * The CSS class that we'll give the DOM elements to have them selectable.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_SELECTABLE = 'ol-selectable';\\n/**\\n * The CSS class that we'll give the DOM elements to have them unselectable.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\\n/**\\n * The CSS class for unsupported feature.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\\n/**\\n * The CSS class for controls.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_CONTROL = 'ol-control';\\n/**\\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\\n * to those elements which usually can be expanded.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_COLLAPSED = 'ol-collapsed';\\n/**\\n * Get the list of font families from a font spec.  Note that this doesn't work\\n * for font families that have commas in them.\\n * @param {string} The CSS font property.\\n * @return {Object<string>} The font families (or null if the input spec is invalid).\\n */\\nexport var getFontFamilies = (function () {\\n    var style;\\n    var cache = {};\\n    return function (font) {\\n        if (!style) {\\n            style = document.createElement('div').style;\\n        }\\n        if (!(font in cache)) {\\n            style.font = font;\\n            var family = style.fontFamily;\\n            style.font = '';\\n            if (!family) {\\n                return null;\\n            }\\n            cache[font] = family.split(/,\\\\s?/);\\n        }\\n        return cache[font];\\n    };\\n})();\\n//# sourceMappingURL=css.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Layer\\n */\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getChangeEventType } from '../Object.js';\\nimport BaseLayer from './Base.js';\\nimport LayerProperty from './Property.js';\\nimport { assign } from '../obj.js';\\nimport RenderEventType from '../render/EventType.js';\\nimport SourceState from '../source/State.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {import(\\\"../source/Source.js\\\").default} [source] Source for this layer.  If not provided to the constructor,\\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\\n * construction.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Map.\\n */\\n/**\\n * @typedef {Object} State\\n * @property {import(\\\"./Base.js\\\").default} layer\\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\\n * @property {SourceState} sourceState\\n * @property {boolean} visible\\n * @property {boolean} managed\\n * @property {import(\\\"../extent.js\\\").Extent} [extent]\\n * @property {number} zIndex\\n * @property {number} maxResolution\\n * @property {number} minResolution\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * A visual representation of raster or vector map data.\\n * Layers group together those properties that pertain to how the data is to be\\n * displayed, irrespective of the source of that data.\\n *\\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\\n * internally. These unmanaged layers are associated with the map using\\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\\n *\\n * A generic `change` event is fired when the state of the source changes.\\n *\\n * @fires import(\\\"../render/Event.js\\\").RenderEvent#prerender\\n * @fires import(\\\"../render/Event.js\\\").RenderEvent#postrender\\n *\\n * @template {import(\\\"../source/Source.js\\\").default} SourceType\\n */\\nvar Layer = /** @class */ (function (_super) {\\n    __extends(Layer, _super);\\n    /**\\n     * @param {Options} options Layer options.\\n     */\\n    function Layer(options) {\\n        var _this = this;\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.source;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.mapPrecomposeKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.mapRenderKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.sourceChangeKey_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../renderer/Layer.js\\\").default}\\n         */\\n        _this.renderer_ = null;\\n        if (options.map) {\\n            _this.setMap(options.map);\\n        }\\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\\n        _this.setSource(source);\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Layer.prototype.getLayersArray = function (opt_array) {\\n        var array = opt_array ? opt_array : [];\\n        array.push(this);\\n        return array;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\\n        var states = opt_states ? opt_states : [];\\n        states.push(this.getLayerState());\\n        return states;\\n    };\\n    /**\\n     * Get the layer source.\\n     * @return {SourceType} The layer source (or `null` if not yet set).\\n     * @observable\\n     * @api\\n     */\\n    Layer.prototype.getSource = function () {\\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\\n    };\\n    /**\\n      * @inheritDoc\\n      */\\n    Layer.prototype.getSourceState = function () {\\n        var source = this.getSource();\\n        return !source ? SourceState.UNDEFINED : source.getState();\\n    };\\n    /**\\n     * @private\\n     */\\n    Layer.prototype.handleSourceChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    Layer.prototype.handleSourcePropertyChange_ = function () {\\n        if (this.sourceChangeKey_) {\\n            unlistenByKey(this.sourceChangeKey_);\\n            this.sourceChangeKey_ = null;\\n        }\\n        var source = this.getSource();\\n        if (source) {\\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * In charge to manage the rendering of the layer. One layer type is\\n     * bounded with one layer renderer.\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {HTMLElement} The rendered element.\\n     */\\n    Layer.prototype.render = function (frameState) {\\n        var layerRenderer = this.getRenderer();\\n        var layerState = this.getLayerState();\\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\\n            return layerRenderer.renderFrame(frameState, layerState);\\n        }\\n    };\\n    /**\\n     * Sets the layer to be rendered on top of other layers on a map. The map will\\n     * not manage this layer in its layers collection, and the callback in\\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\\n     * use `#setMap(null)`.\\n     *\\n     * To add the layer to a map and have it managed by the map, use\\n     * {@link module:ol/Map#addLayer} instead.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     * @api\\n     */\\n    Layer.prototype.setMap = function (map) {\\n        if (this.mapPrecomposeKey_) {\\n            unlistenByKey(this.mapPrecomposeKey_);\\n            this.mapPrecomposeKey_ = null;\\n        }\\n        if (!map) {\\n            this.changed();\\n        }\\n        if (this.mapRenderKey_) {\\n            unlistenByKey(this.mapRenderKey_);\\n            this.mapRenderKey_ = null;\\n        }\\n        if (map) {\\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\\n                var renderEvent = /** @type {import(\\\"../render/Event.js\\\").default} */ (evt);\\n                var layerState = this.getLayerState();\\n                layerState.managed = false;\\n                if (this.getZIndex() === undefined) {\\n                    layerState.zIndex = Infinity;\\n                }\\n                renderEvent.frameState.layerStatesArray.push(layerState);\\n            }, this);\\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * Set the layer source.\\n     * @param {SourceType} source The layer source.\\n     * @observable\\n     * @api\\n     */\\n    Layer.prototype.setSource = function (source) {\\n        this.set(LayerProperty.SOURCE, source);\\n    };\\n    /**\\n     * Get the renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} The layer renderer.\\n     */\\n    Layer.prototype.getRenderer = function () {\\n        if (!this.renderer_) {\\n            this.renderer_ = this.createRenderer();\\n        }\\n        return this.renderer_;\\n    };\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    Layer.prototype.createRenderer = function () {\\n        return null;\\n    };\\n    return Layer;\\n}(BaseLayer));\\n/**\\n * Return `true` if the layer is visible, and if the passed resolution is\\n * between the layer's minResolution and maxResolution. The comparison is\\n * inclusive for `minResolution` and exclusive for `maxResolution`.\\n * @param {State} layerState Layer state.\\n * @param {number} resolution Resolution.\\n * @return {boolean} The layer is visible at the given resolution.\\n */\\nexport function visibleAtResolution(layerState, resolution) {\\n    return layerState.visible && resolution >= layerState.minResolution &&\\n        resolution < layerState.maxResolution;\\n}\\nexport default Layer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Attribution\\n */\\nimport { equals } from '../array.js';\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\\nimport { removeChildren, replaceNode } from '../dom.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-attribution'] CSS class name.\\n * @property {HTMLElement|string} [target] Specify a target if you\\n * want the control to be rendered outside of the map's\\n * viewport.\\n * @property {boolean} [collapsible] Specify if attributions can\\n * be collapsed. If not specified, sources control this behavior with their\\n * `attributionsCollapsible` setting.\\n * @property {boolean} [collapsed=true] Specify if attributions should\\n * be collapsed at startup.\\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\\n * @property {string} [label='i'] Text label to use for the\\n * collapsed attributions button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\\n * for the expanded attributions button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when\\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\\n * callback.\\n */\\n/**\\n * @classdesc\\n * Control to show all the attributions associated with the layer sources\\n * in the map. This control is one of the default controls included in maps.\\n * By default it will show in the bottom right portion of the map, but this can\\n * be changed by using a css selector for `.ol-attribution`.\\n *\\n * @api\\n */\\nvar Attribution = /** @class */ (function (_super) {\\n    __extends(Attribution, _super);\\n    /**\\n     * @param {Options=} opt_options Attribution options.\\n     */\\n    function Attribution(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            render: options.render || render,\\n            target: options.target\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {HTMLElement}\\n         */\\n        _this.ulElement_ = document.createElement('ul');\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.collapsible_ = options.collapsible !== undefined ?\\n            options.collapsible : true;\\n        if (!_this.collapsible_) {\\n            _this.collapsed_ = false;\\n        }\\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\\\u00BB';\\n        if (typeof collapseLabel === 'string') {\\n            /**\\n             * @private\\n             * @type {HTMLElement}\\n             */\\n            _this.collapseLabel_ = document.createElement('span');\\n            _this.collapseLabel_.textContent = collapseLabel;\\n        }\\n        else {\\n            _this.collapseLabel_ = collapseLabel;\\n        }\\n        var label = options.label !== undefined ? options.label : 'i';\\n        if (typeof label === 'string') {\\n            /**\\n             * @private\\n             * @type {HTMLElement}\\n             */\\n            _this.label_ = document.createElement('span');\\n            _this.label_.textContent = label;\\n        }\\n        else {\\n            _this.label_ = label;\\n        }\\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\\n            _this.collapseLabel_ : _this.label_;\\n        var button = document.createElement('button');\\n        button.setAttribute('type', 'button');\\n        button.title = tipLabel;\\n        button.appendChild(activeLabel);\\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(_this.ulElement_);\\n        element.appendChild(button);\\n        /**\\n         * A list of currently rendered resolutions.\\n         * @type {Array<string>}\\n         * @private\\n         */\\n        _this.renderedAttributions_ = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderedVisible_ = true;\\n        return _this;\\n    }\\n    /**\\n     * Collect a list of visible attributions and set the collapsible state.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {Array<string>} Attributions.\\n     * @private\\n     */\\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\\n        /**\\n         * Used to determine if an attribution already exists.\\n         * @type {!Object<string, boolean>}\\n         */\\n        var lookup = {};\\n        /**\\n         * A list of visible attributions.\\n         * @type {Array<string>}\\n         */\\n        var visibleAttributions = [];\\n        var layerStatesArray = frameState.layerStatesArray;\\n        var resolution = frameState.viewState.resolution;\\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\\n            var layerState = layerStatesArray[i];\\n            if (!visibleAtResolution(layerState, resolution)) {\\n                continue;\\n            }\\n            var source = /** @type {import(\\\"../layer/Layer.js\\\").default} */ (layerState.layer).getSource();\\n            if (!source) {\\n                continue;\\n            }\\n            var attributionGetter = source.getAttributions();\\n            if (!attributionGetter) {\\n                continue;\\n            }\\n            var attributions = attributionGetter(frameState);\\n            if (!attributions) {\\n                continue;\\n            }\\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\\n                this.setCollapsible(false);\\n            }\\n            if (Array.isArray(attributions)) {\\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\\n                    if (!(attributions[j] in lookup)) {\\n                        visibleAttributions.push(attributions[j]);\\n                        lookup[attributions[j]] = true;\\n                    }\\n                }\\n            }\\n            else {\\n                if (!(attributions in lookup)) {\\n                    visibleAttributions.push(attributions);\\n                    lookup[attributions] = true;\\n                }\\n            }\\n        }\\n        return visibleAttributions;\\n    };\\n    /**\\n     * @private\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    Attribution.prototype.updateElement_ = function (frameState) {\\n        if (!frameState) {\\n            if (this.renderedVisible_) {\\n                this.element.style.display = 'none';\\n                this.renderedVisible_ = false;\\n            }\\n            return;\\n        }\\n        var attributions = this.collectSourceAttributions_(frameState);\\n        var visible = attributions.length > 0;\\n        if (this.renderedVisible_ != visible) {\\n            this.element.style.display = visible ? '' : 'none';\\n            this.renderedVisible_ = visible;\\n        }\\n        if (equals(attributions, this.renderedAttributions_)) {\\n            return;\\n        }\\n        removeChildren(this.ulElement_);\\n        // append the attributions\\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\\n            var element = document.createElement('li');\\n            element.innerHTML = attributions[i];\\n            this.ulElement_.appendChild(element);\\n        }\\n        this.renderedAttributions_ = attributions;\\n    };\\n    /**\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Attribution.prototype.handleClick_ = function (event) {\\n        event.preventDefault();\\n        this.handleToggle_();\\n    };\\n    /**\\n     * @private\\n     */\\n    Attribution.prototype.handleToggle_ = function () {\\n        this.element.classList.toggle(CLASS_COLLAPSED);\\n        if (this.collapsed_) {\\n            replaceNode(this.collapseLabel_, this.label_);\\n        }\\n        else {\\n            replaceNode(this.label_, this.collapseLabel_);\\n        }\\n        this.collapsed_ = !this.collapsed_;\\n    };\\n    /**\\n     * Return `true` if the attribution is collapsible, `false` otherwise.\\n     * @return {boolean} True if the widget is collapsible.\\n     * @api\\n     */\\n    Attribution.prototype.getCollapsible = function () {\\n        return this.collapsible_;\\n    };\\n    /**\\n     * Set whether the attribution should be collapsible.\\n     * @param {boolean} collapsible True if the widget is collapsible.\\n     * @api\\n     */\\n    Attribution.prototype.setCollapsible = function (collapsible) {\\n        if (this.collapsible_ === collapsible) {\\n            return;\\n        }\\n        this.collapsible_ = collapsible;\\n        this.element.classList.toggle('ol-uncollapsible');\\n        if (!collapsible && this.collapsed_) {\\n            this.handleToggle_();\\n        }\\n    };\\n    /**\\n     * Collapse or expand the attribution according to the passed parameter. Will\\n     * not do anything if the attribution isn't collapsible or if the current\\n     * collapsed state is already the one requested.\\n     * @param {boolean} collapsed True if the widget is collapsed.\\n     * @api\\n     */\\n    Attribution.prototype.setCollapsed = function (collapsed) {\\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\\n            return;\\n        }\\n        this.handleToggle_();\\n    };\\n    /**\\n     * Return `true` when the attribution is currently collapsed or `false`\\n     * otherwise.\\n     * @return {boolean} True if the widget is collapsed.\\n     * @api\\n     */\\n    Attribution.prototype.getCollapsed = function () {\\n        return this.collapsed_;\\n    };\\n    return Attribution;\\n}(Control));\\n/**\\n * Update the attribution element.\\n * @param {import(\\\"../MapEvent.js\\\").default} mapEvent Map event.\\n * @this {Attribution}\\n * @api\\n */\\nexport function render(mapEvent) {\\n    this.updateElement_(mapEvent.frameState);\\n}\\nexport default Attribution;\\n//# sourceMappingURL=Attribution.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Rotate\\n */\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\\nimport { easeOut } from '../easing.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-rotate'] CSS class name.\\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when the control should\\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\\n * @property {function()} [resetNorth] Function called when the control is clicked.\\n * This will override the default `resetNorth`.\\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\\n * rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A button control to reset rotation to 0.\\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\\n * selector is added to the button when the rotation is 0.\\n *\\n * @api\\n */\\nvar Rotate = /** @class */ (function (_super) {\\n    __extends(Rotate, _super);\\n    /**\\n     * @param {Options=} opt_options Rotate options.\\n     */\\n    function Rotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            render: options.render || render,\\n            target: options.target\\n        }) || this;\\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\\n        var label = options.label !== undefined ? options.label : '\\\\u21E7';\\n        /**\\n         * @type {HTMLElement}\\n         * @private\\n         */\\n        _this.label_ = null;\\n        if (typeof label === 'string') {\\n            _this.label_ = document.createElement('span');\\n            _this.label_.className = 'ol-compass';\\n            _this.label_.textContent = label;\\n        }\\n        else {\\n            _this.label_ = label;\\n            _this.label_.classList.add('ol-compass');\\n        }\\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\\n        var button = document.createElement('button');\\n        button.className = className + '-reset';\\n        button.setAttribute('type', 'button');\\n        button.title = tipLabel;\\n        button.appendChild(_this.label_);\\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(button);\\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.rotation_ = undefined;\\n        if (_this.autoHide_) {\\n            _this.element.classList.add(CLASS_HIDDEN);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Rotate.prototype.handleClick_ = function (event) {\\n        event.preventDefault();\\n        if (this.callResetNorth_ !== undefined) {\\n            this.callResetNorth_();\\n        }\\n        else {\\n            this.resetNorth_();\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    Rotate.prototype.resetNorth_ = function () {\\n        var map = this.getMap();\\n        var view = map.getView();\\n        if (!view) {\\n            // the map does not have a view, so we can't act\\n            // upon it\\n            return;\\n        }\\n        if (view.getRotation() !== undefined) {\\n            if (this.duration_ > 0) {\\n                view.animate({\\n                    rotation: 0,\\n                    duration: this.duration_,\\n                    easing: easeOut\\n                });\\n            }\\n            else {\\n                view.setRotation(0);\\n            }\\n        }\\n    };\\n    return Rotate;\\n}(Control));\\n/**\\n * Update the rotate control element.\\n * @param {import(\\\"../MapEvent.js\\\").default} mapEvent Map event.\\n * @this {Rotate}\\n * @api\\n */\\nexport function render(mapEvent) {\\n    var frameState = mapEvent.frameState;\\n    if (!frameState) {\\n        return;\\n    }\\n    var rotation = frameState.viewState.rotation;\\n    if (rotation != this.rotation_) {\\n        var transform = 'rotate(' + rotation + 'rad)';\\n        if (this.autoHide_) {\\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\\n            if (!contains && rotation === 0) {\\n                this.element.classList.add(CLASS_HIDDEN);\\n            }\\n            else if (contains && rotation !== 0) {\\n                this.element.classList.remove(CLASS_HIDDEN);\\n            }\\n        }\\n        this.label_.style.transform = transform;\\n    }\\n    this.rotation_ = rotation;\\n}\\nexport default Rotate;\\n//# sourceMappingURL=Rotate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Zoom\\n */\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\\nimport { easeOut } from '../easing.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {string} [className='ol-zoom'] CSS class name.\\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\\n * @property {number} [delta=1] The zoom delta applied on each click.\\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\\n * rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A control with 2 buttons, one for zoom in and one for zoom out.\\n * This control is one of the default controls of a map. To style this control\\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\\n *\\n * @api\\n */\\nvar Zoom = /** @class */ (function (_super) {\\n    __extends(Zoom, _super);\\n    /**\\n     * @param {Options=} opt_options Zoom options.\\n     */\\n    function Zoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            target: options.target\\n        }) || this;\\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\\n        var delta = options.delta !== undefined ? options.delta : 1;\\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\\\u2212';\\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\\n            options.zoomInTipLabel : 'Zoom in';\\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\\n            options.zoomOutTipLabel : 'Zoom out';\\n        var inElement = document.createElement('button');\\n        inElement.className = className + '-in';\\n        inElement.setAttribute('type', 'button');\\n        inElement.title = zoomInTipLabel;\\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\\n        var outElement = document.createElement('button');\\n        outElement.className = className + '-out';\\n        outElement.setAttribute('type', 'button');\\n        outElement.title = zoomOutTipLabel;\\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(inElement);\\n        element.appendChild(outElement);\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @param {number} delta Zoom delta.\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Zoom.prototype.handleClick_ = function (delta, event) {\\n        event.preventDefault();\\n        this.zoomByDelta_(delta);\\n    };\\n    /**\\n     * @param {number} delta Zoom delta.\\n     * @private\\n     */\\n    Zoom.prototype.zoomByDelta_ = function (delta) {\\n        var map = this.getMap();\\n        var view = map.getView();\\n        if (!view) {\\n            // the map does not have a view, so we can't act\\n            // upon it\\n            return;\\n        }\\n        var currentZoom = view.getZoom();\\n        if (currentZoom !== undefined) {\\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\\n            if (this.duration_ > 0) {\\n                if (view.getAnimating()) {\\n                    view.cancelAnimations();\\n                }\\n                view.animate({\\n                    zoom: newZoom,\\n                    duration: this.duration_,\\n                    easing: easeOut\\n                });\\n            }\\n            else {\\n                view.setZoom(newZoom);\\n            }\\n        }\\n    };\\n    return Zoom;\\n}(Control));\\nexport default Zoom;\\n//# sourceMappingURL=Zoom.js.map\",\"/**\\n * @module ol/Kinetic\\n */\\n/**\\n * @classdesc\\n * Implementation of inertial deceleration for map movement.\\n *\\n * @api\\n */\\nvar Kinetic = /** @class */ (function () {\\n    /**\\n     * @param {number} decay Rate of decay (must be negative).\\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\\n     * @param {number} delay Delay to consider to calculate the kinetic\\n     *     initial values (milliseconds).\\n     */\\n    function Kinetic(decay, minVelocity, delay) {\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.decay_ = decay;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minVelocity_ = minVelocity;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.delay_ = delay;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        this.points_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.angle_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.initialVelocity_ = 0;\\n    }\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    Kinetic.prototype.begin = function () {\\n        this.points_.length = 0;\\n        this.angle_ = 0;\\n        this.initialVelocity_ = 0;\\n    };\\n    /**\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     */\\n    Kinetic.prototype.update = function (x, y) {\\n        this.points_.push(x, y, Date.now());\\n    };\\n    /**\\n     * @return {boolean} Whether we should do kinetic animation.\\n     */\\n    Kinetic.prototype.end = function () {\\n        if (this.points_.length < 6) {\\n            // at least 2 points are required (i.e. there must be at least 6 elements\\n            // in the array)\\n            return false;\\n        }\\n        var delay = Date.now() - this.delay_;\\n        var lastIndex = this.points_.length - 3;\\n        if (this.points_[lastIndex + 2] < delay) {\\n            // the last tracked point is too old, which means that the user stopped\\n            // panning before releasing the map\\n            return false;\\n        }\\n        // get the first point which still falls into the delay time\\n        var firstIndex = lastIndex - 3;\\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\\n            firstIndex -= 3;\\n        }\\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\\n        // we don't want a duration of 0 (divide by zero)\\n        // we also make sure the user panned for a duration of at least one frame\\n        // (1/60s) to compute sane displacement values\\n        if (duration < 1000 / 60) {\\n            return false;\\n        }\\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\\n        this.angle_ = Math.atan2(dy, dx);\\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\\n        return this.initialVelocity_ > this.minVelocity_;\\n    };\\n    /**\\n     * @return {number} Total distance travelled (pixels).\\n     */\\n    Kinetic.prototype.getDistance = function () {\\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\\n    };\\n    /**\\n     * @return {number} Angle of the kinetic panning animation (radians).\\n     */\\n    Kinetic.prototype.getAngle = function () {\\n        return this.angle_;\\n    };\\n    return Kinetic;\\n}());\\nexport default Kinetic;\\n//# sourceMappingURL=Kinetic.js.map\",\"/**\\n * @module ol/interaction/Property\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    ACTIVE: 'active'\\n};\\n//# sourceMappingURL=Property.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/Interaction\\n */\\nimport BaseObject from '../Object.js';\\nimport { easeOut, linear } from '../easing.js';\\nimport InteractionProperty from './Property.js';\\n/**\\n * Object literal with config options for interactions.\\n * @typedef {Object} InteractionOptions\\n * @property {function(import(\\\"../MapBrowserEvent.js\\\").default):boolean} handleEvent\\n * Method called by the map to notify the interaction that a browser event was\\n * dispatched to the map. If the function returns a falsy value, propagation of\\n * the event to other interactions in the map's interactions chain will be\\n * prevented (this includes functions with no explicit return). The interactions\\n * are traversed in reverse order of the interactions collection of the map.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * User actions that change the state of the map. Some are similar to controls,\\n * but are not associated with a DOM element.\\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\\n * by a keyboard event not a button element event.\\n * Although interactions do not have a DOM element, some of them do render\\n * vectors and so are visible on the screen.\\n * @api\\n */\\nvar Interaction = /** @class */ (function (_super) {\\n    __extends(Interaction, _super);\\n    /**\\n     * @param {InteractionOptions} options Options.\\n     */\\n    function Interaction(options) {\\n        var _this = _super.call(this) || this;\\n        if (options.handleEvent) {\\n            _this.handleEvent = options.handleEvent;\\n        }\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        _this.setActive(true);\\n        return _this;\\n    }\\n    /**\\n     * Return whether the interaction is currently active.\\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\\n     * @observable\\n     * @api\\n     */\\n    Interaction.prototype.getActive = function () {\\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\\n    };\\n    /**\\n     * Get the map associated with this interaction.\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     * @api\\n     */\\n    Interaction.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n     * @return {boolean} `false` to stop event propagation.\\n     * @api\\n     */\\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\\n        return true;\\n    };\\n    /**\\n     * Activate or deactivate the interaction.\\n     * @param {boolean} active Active.\\n     * @observable\\n     * @api\\n     */\\n    Interaction.prototype.setActive = function (active) {\\n        this.set(InteractionProperty.ACTIVE, active);\\n    };\\n    /**\\n     * Remove the interaction from its current map and attach it to the new map.\\n     * Subclasses may set up event handlers to get notified about changes to\\n     * the map here.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    Interaction.prototype.setMap = function (map) {\\n        this.map_ = map;\\n    };\\n    return Interaction;\\n}(BaseObject));\\n/**\\n * @param {import(\\\"../View.js\\\").default} view View.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} delta Delta.\\n * @param {number=} opt_duration Duration.\\n */\\nexport function pan(view, delta, opt_duration) {\\n    var currentCenter = view.getCenter();\\n    if (currentCenter) {\\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\\n        view.animate_({\\n            duration: opt_duration !== undefined ? opt_duration : 250,\\n            easing: linear,\\n            center: view.getConstrainedCenter(center)\\n        });\\n    }\\n}\\n/**\\n * @param {import(\\\"../View.js\\\").default} view View.\\n * @param {number} delta Delta from previous zoom level.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_anchor Anchor coordinate.\\n * @param {number=} opt_duration Duration.\\n */\\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\\n    var currentZoom = view.getZoom();\\n    if (currentZoom === undefined) {\\n        return;\\n    }\\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\\n    var newResolution = view.getResolutionForZoom(newZoom);\\n    if (view.getAnimating()) {\\n        view.cancelAnimations();\\n    }\\n    view.animate({\\n        resolution: newResolution,\\n        anchor: opt_anchor,\\n        duration: opt_duration !== undefined ? opt_duration : 250,\\n        easing: easeOut\\n    });\\n}\\nexport default Interaction;\\n//# sourceMappingURL=Interaction.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DoubleClickZoom\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {number} [delta=1] The zoom delta applied on each double click.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom by double-clicking on the map.\\n * @api\\n */\\nvar DoubleClickZoom = /** @class */ (function (_super) {\\n    __extends(DoubleClickZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DoubleClickZoom(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.delta_ = options.delta ? options.delta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    return DoubleClickZoom;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\\n * doubleclick) and eventually zooms the map.\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {DoubleClickZoom}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\\n        var map = mapBrowserEvent.map;\\n        var anchor = mapBrowserEvent.coordinate;\\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\\n        var view = map.getView();\\n        zoomByDelta(view, delta, anchor, this.duration_);\\n        mapBrowserEvent.preventDefault();\\n        stopEvent = true;\\n    }\\n    return !stopEvent;\\n}\\nexport default DoubleClickZoom;\\n//# sourceMappingURL=DoubleClickZoom.js.map\",\"/**\\n * @module ol/events/condition\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport { assert } from '../asserts.js';\\nimport { TRUE, FALSE } from '../functions.js';\\nimport { WEBKIT, MAC } from '../has.js';\\n/**\\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\\n * `{boolean}`. If the condition is met, true should be returned.\\n *\\n * @typedef {function(this: ?, import(\\\"../MapBrowserEvent.js\\\").default): boolean} Condition\\n */\\n/**\\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\\n * additionally the shift-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the alt key is pressed.\\n * @api\\n */\\nexport var altKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\\n * (e.g. when additionally the platform-modifier-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the alt and shift keys are pressed.\\n * @api\\n */\\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if the map has the focus. This condition requires a map target\\n * element with a `tabindex` attribute, e.g. `<div id=\\\"map\\\" tabindex=\\\"1\\\">`.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} event Map browser event.\\n * @return {boolean} The map has the focus.\\n * @api\\n */\\nexport var focus = function (event) {\\n    return event.target.getTargetElement() === document.activeElement;\\n};\\n/**\\n * Return always true.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True.\\n * @api\\n */\\nexport var always = TRUE;\\n/**\\n * Return `true` if the event is a `click` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `click` event.\\n * @api\\n */\\nexport var click = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\\n};\\n/**\\n * Return `true` if the event has an \\\"action\\\"-producing mouse button.\\n *\\n * By definition, this includes left-click on windows/linux, and left-click\\n * without the ctrl key on Macs.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} The result.\\n */\\nexport var mouseActionButton = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\\n    return originalEvent.button == 0 &&\\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\\n};\\n/**\\n * Return always false.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} False.\\n * @api\\n */\\nexport var never = FALSE;\\n/**\\n * Return `true` if the browser event is a `pointermove` event, `false`\\n * otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the browser event is a `pointermove` event.\\n * @api\\n */\\nexport var pointerMove = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == 'pointermove';\\n};\\n/**\\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `singleclick` event.\\n * @api\\n */\\nexport var singleClick = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\\n};\\n/**\\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `dblclick` event.\\n * @api\\n */\\nexport var doubleClick = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\\n};\\n/**\\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\\n * pressed.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True only if there no modifier keys are pressed.\\n * @api\\n */\\nexport var noModifierKeys = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (!originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\\n * the shift-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the platform modifier key is pressed.\\n * @api\\n */\\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return !originalEvent.altKey &&\\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey;\\n};\\n/**\\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\\n * additionally the alt-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the shift key is pressed.\\n * @api\\n */\\nexport var shiftKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (!originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\\n * `<select>`- or `<textarea>`-element, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True only if the target element is not editable.\\n * @api\\n */\\nexport var targetNotEditable = function (mapBrowserEvent) {\\n    var target = mapBrowserEvent.originalEvent.target;\\n    var tagName = /** @type {Element} */ (target).tagName;\\n    return (tagName !== 'INPUT' &&\\n        tagName !== 'SELECT' &&\\n        tagName !== 'TEXTAREA');\\n};\\n/**\\n * Return `true` if the event originates from a mouse device.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a mouse device.\\n * @api\\n */\\nexport var mouseOnly = function (mapBrowserEvent) {\\n    var pointerEvent = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvent.pointerType == 'mouse';\\n};\\n/**\\n * Return `true` if the event originates from a touchable device.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a touchable device.\\n * @api\\n */\\nexport var touchOnly = function (mapBrowserEvent) {\\n    var pointerEvt = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvt.pointerType === 'touch';\\n};\\n/**\\n * Return `true` if the event originates from a digital pen.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a digital pen.\\n * @api\\n */\\nexport var penOnly = function (mapBrowserEvent) {\\n    var pointerEvt = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvt.pointerType === 'pen';\\n};\\n/**\\n * Return `true` if the event originates from a primary pointer in\\n * contact with the surface or if the left mouse button is pressed.\\n * See http://www.w3.org/TR/pointerevents/#button-states.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a primary pointer.\\n * @api\\n */\\nexport var primaryAction = function (mapBrowserEvent) {\\n    var pointerEvent = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\\n};\\n//# sourceMappingURL=condition.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/Pointer\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport Interaction from './Interaction.js';\\nimport { getValues } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default):boolean} [handleDownEvent]\\n * Function handling \\\"down\\\" events. If the function returns `true` then a drag\\n * sequence is started.\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default)} [handleDragEvent]\\n * Function handling \\\"drag\\\" events. This function is called on \\\"move\\\" events\\n * during a drag sequence.\\n * @property {function(import(\\\"../MapBrowserEvent.js\\\").default):boolean} [handleEvent]\\n * Method called by the map to notify the interaction that a browser event was\\n * dispatched to the map. The function may return `false` to prevent the\\n * propagation of the event to other interactions in the map's interactions\\n * chain.\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default)} [handleMoveEvent]\\n * Function handling \\\"move\\\" events. This function is called on \\\"move\\\" events,\\n * also during a drag sequence (so during a drag sequence both the\\n * `handleDragEvent` function and this function are called).\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default):boolean} [handleUpEvent]\\n *  Function handling \\\"up\\\" events. If the function returns `false` then the\\n * current drag sequence is stopped.\\n * @property {function(boolean):boolean} [stopDown]\\n * Should the down event be propagated to other interactions, or should be\\n * stopped?\\n */\\n/**\\n * @classdesc\\n * Base class that calls user-defined functions on `down`, `move` and `up`\\n * events. This class also manages \\\"drag sequences\\\".\\n *\\n * When the `handleDownEvent` user function returns `true` a drag sequence is\\n * started. During a drag sequence the `handleDragEvent` user function is\\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\\n * user function is called and returns `false`.\\n * @api\\n */\\nvar PointerInteraction = /** @class */ (function (_super) {\\n    __extends(PointerInteraction, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PointerInteraction(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, /** @type {import(\\\"./Interaction.js\\\").InteractionOptions} */ (options)) || this;\\n        if (options.handleDownEvent) {\\n            _this.handleDownEvent = options.handleDownEvent;\\n        }\\n        if (options.handleDragEvent) {\\n            _this.handleDragEvent = options.handleDragEvent;\\n        }\\n        if (options.handleMoveEvent) {\\n            _this.handleMoveEvent = options.handleMoveEvent;\\n        }\\n        if (options.handleUpEvent) {\\n            _this.handleUpEvent = options.handleUpEvent;\\n        }\\n        if (options.stopDown) {\\n            _this.stopDown = options.stopDown;\\n        }\\n        /**\\n         * @type {boolean}\\n         * @protected\\n         */\\n        _this.handlingDownUpSequence = false;\\n        /**\\n         * @type {!Object<string, import(\\\"../pointer/PointerEvent.js\\\").default>}\\n         * @private\\n         */\\n        _this.trackedPointers_ = {};\\n        /**\\n         * @type {Array<import(\\\"../pointer/PointerEvent.js\\\").default>}\\n         * @protected\\n         */\\n        _this.targetPointers = [];\\n        return _this;\\n    }\\n    /**\\n     * Handle pointer down events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @return {boolean} If the event was consumed.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        return false;\\n    };\\n    /**\\n     * Handle pointer drag events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\\n     * detected.\\n     * @override\\n     * @api\\n     */\\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\\n        if (!( /** @type {import(\\\"../MapBrowserPointerEvent.js\\\").default} */(mapBrowserEvent).pointerEvent)) {\\n            return true;\\n        }\\n        var stopEvent = false;\\n        this.updateTrackedPointers_(mapBrowserEvent);\\n        if (this.handlingDownUpSequence) {\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\\n                this.handleDragEvent(mapBrowserEvent);\\n            }\\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\\n            }\\n        }\\n        else {\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\\n                var handled = this.handleDownEvent(mapBrowserEvent);\\n                if (handled) {\\n                    mapBrowserEvent.preventDefault();\\n                }\\n                this.handlingDownUpSequence = handled;\\n                stopEvent = this.stopDown(handled);\\n            }\\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\\n                this.handleMoveEvent(mapBrowserEvent);\\n            }\\n        }\\n        return !stopEvent;\\n    };\\n    /**\\n     * Handle pointer move events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\\n    /**\\n     * Handle pointer up events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @return {boolean} If the event was consumed.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        return false;\\n    };\\n    /**\\n     * This function is used to determine if \\\"down\\\" events should be propagated\\n     * to other interactions or should be stopped.\\n     * @param {boolean} handled Was the event handled by the interaction?\\n     * @return {boolean} Should the `down` event be stopped?\\n     */\\n    PointerInteraction.prototype.stopDown = function (handled) {\\n        return handled;\\n    };\\n    /**\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @private\\n     */\\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\\n            var event_1 = mapBrowserEvent.pointerEvent;\\n            var id = event_1.pointerId.toString();\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\\n                delete this.trackedPointers_[id];\\n            }\\n            else if (mapBrowserEvent.type ==\\n                MapBrowserEventType.POINTERDOWN) {\\n                this.trackedPointers_[id] = event_1;\\n            }\\n            else if (id in this.trackedPointers_) {\\n                // update only when there was a pointerdown event for this pointer\\n                this.trackedPointers_[id] = event_1;\\n            }\\n            this.targetPointers = getValues(this.trackedPointers_);\\n        }\\n    };\\n    return PointerInteraction;\\n}(Interaction));\\n/**\\n * @param {Array<import(\\\"../pointer/PointerEvent.js\\\").default>} pointerEvents List of events.\\n * @return {import(\\\"../pixel.js\\\").Pixel} Centroid pixel.\\n */\\nexport function centroid(pointerEvents) {\\n    var length = pointerEvents.length;\\n    var clientX = 0;\\n    var clientY = 0;\\n    for (var i = 0; i < length; i++) {\\n        clientX += pointerEvents[i].clientX;\\n        clientY += pointerEvents[i].clientY;\\n    }\\n    return [clientX / length, clientY / length];\\n}\\n/**\\n * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\\n *     or pointerup event.\\n */\\nfunction isPointerDraggingEvent(mapBrowserEvent) {\\n    var type = mapBrowserEvent.type;\\n    return type === MapBrowserEventType.POINTERDOWN ||\\n        type === MapBrowserEventType.POINTERDRAG ||\\n        type === MapBrowserEventType.POINTERUP;\\n}\\nexport default PointerInteraction;\\n//# sourceMappingURL=Pointer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragPan\\n */\\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\\nimport { easeOut } from '../easing.js';\\nimport { noModifierKeys } from '../events/condition.js';\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~noModifierKeys}.\\n * @property {import(\\\"../Kinetic.js\\\").default} [kinetic] Kinetic inertia to apply to the pan.\\n */\\n/**\\n * @classdesc\\n * Allows the user to pan the map by dragging the map.\\n * @api\\n */\\nvar DragPan = /** @class */ (function (_super) {\\n    __extends(DragPan, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragPan(opt_options) {\\n        var _this = _super.call(this, {\\n            stopDown: FALSE\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../Kinetic.js\\\").default|undefined}\\n         */\\n        _this.kinetic_ = options.kinetic;\\n        /**\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.lastCentroid = null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.lastPointersCount_;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.panning_ = false;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.noKinetic_ = false;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var targetPointers = this.targetPointers;\\n        var centroid = centroidFromPointers(targetPointers);\\n        if (targetPointers.length == this.lastPointersCount_) {\\n            if (this.kinetic_) {\\n                this.kinetic_.update(centroid[0], centroid[1]);\\n            }\\n            if (this.lastCentroid) {\\n                var delta = [\\n                    this.lastCentroid[0] - centroid[0],\\n                    centroid[1] - this.lastCentroid[1]\\n                ];\\n                var map = mapBrowserEvent.map;\\n                var view = map.getView();\\n                scaleCoordinate(delta, view.getResolution());\\n                rotateCoordinate(delta, view.getRotation());\\n                view.adjustCenter(delta);\\n            }\\n        }\\n        else if (this.kinetic_) {\\n            // reset so we don't overestimate the kinetic energy after\\n            // after one finger down, tiny drag, second finger down\\n            this.kinetic_.begin();\\n        }\\n        this.lastCentroid = centroid;\\n        this.lastPointersCount_ = targetPointers.length;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (this.targetPointers.length === 0) {\\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\\n                var distance = this.kinetic_.getDistance();\\n                var angle = this.kinetic_.getAngle();\\n                var center = /** @type {!import(\\\"../coordinate.js\\\").Coordinate} */ (view.getCenter());\\n                var centerpx = map.getPixelFromCoordinate(center);\\n                var dest = map.getCoordinateFromPixel([\\n                    centerpx[0] - distance * Math.cos(angle),\\n                    centerpx[1] - distance * Math.sin(angle)\\n                ]);\\n                view.animate({\\n                    center: view.getConstrainedCenter(dest),\\n                    duration: 500,\\n                    easing: easeOut\\n                });\\n            }\\n            if (this.panning_) {\\n                this.panning_ = false;\\n                view.endInteraction();\\n            }\\n            return false;\\n        }\\n        else {\\n            if (this.kinetic_) {\\n                // reset so we don't overestimate the kinetic energy after\\n                // after one finger up, tiny drag, second finger up\\n                this.kinetic_.begin();\\n            }\\n            this.lastCentroid = null;\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            this.lastCentroid = null;\\n            // stop any current animation\\n            if (view.getAnimating()) {\\n                view.cancelAnimations();\\n            }\\n            if (!this.panning_) {\\n                this.panning_ = true;\\n                this.getMap().getView().beginInteraction();\\n            }\\n            if (this.kinetic_) {\\n                this.kinetic_.begin();\\n            }\\n            // No kinetic as soon as more than one pointer on the screen is\\n            // detected. This is to prevent nasty pans after pinch.\\n            this.noKinetic_ = this.targetPointers.length > 1;\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragPan;\\n}(PointerInteraction));\\nexport default DragPan;\\n//# sourceMappingURL=DragPan.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragRotate\\n */\\nimport { disable } from '../rotationconstraint.js';\\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an\\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n */\\n/**\\n * @classdesc\\n * Allows the user to rotate the map by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when the alt and shift keys are held down.\\n *\\n * This interaction is only supported for mouse devices.\\n * @api\\n */\\nvar DragRotate = /** @class */ (function (_super) {\\n    __extends(DragRotate, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragRotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            stopDown: FALSE\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastAngle_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return;\\n        }\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (view.getConstraints().rotation === disable) {\\n            return;\\n        }\\n        var size = map.getSize();\\n        var offset = mapBrowserEvent.pixel;\\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\\n        if (this.lastAngle_ !== undefined) {\\n            var delta = theta - this.lastAngle_;\\n            view.adjustRotation(-delta);\\n        }\\n        this.lastAngle_ = theta;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return true;\\n        }\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        view.endInteraction(this.duration_);\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return false;\\n        }\\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\\n            var map = mapBrowserEvent.map;\\n            map.getView().beginInteraction();\\n            this.lastAngle_ = undefined;\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragRotate;\\n}(PointerInteraction));\\nexport default DragRotate;\\n//# sourceMappingURL=DragRotate.js.map\",\"/**\\n * @module ol/render/Box\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport Disposable from '../Disposable.js';\\nimport Polygon from '../geom/Polygon.js';\\nvar RenderBox = /** @class */ (function (_super) {\\n    __extends(RenderBox, _super);\\n    /**\\n     * @param {string} className CSS class name.\\n     */\\n    function RenderBox(className) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {import(\\\"../geom/Polygon.js\\\").default}\\n         * @private\\n         */\\n        _this.geometry_ = null;\\n        /**\\n         * @type {HTMLDivElement}\\n         * @private\\n         */\\n        _this.element_ = document.createElement('div');\\n        _this.element_.style.position = 'absolute';\\n        _this.element_.className = 'ol-box ' + className;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.startPixel_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.endPixel_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    RenderBox.prototype.disposeInternal = function () {\\n        this.setMap(null);\\n    };\\n    /**\\n     * @private\\n     */\\n    RenderBox.prototype.render_ = function () {\\n        var startPixel = this.startPixel_;\\n        var endPixel = this.endPixel_;\\n        var px = 'px';\\n        var style = this.element_.style;\\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    RenderBox.prototype.setMap = function (map) {\\n        if (this.map_) {\\n            this.map_.getOverlayContainer().removeChild(this.element_);\\n            var style = this.element_.style;\\n            style.left = style.top = style.width = style.height = 'inherit';\\n        }\\n        this.map_ = map;\\n        if (this.map_) {\\n            this.map_.getOverlayContainer().appendChild(this.element_);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../pixel.js\\\").Pixel} startPixel Start pixel.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} endPixel End pixel.\\n     */\\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\\n        this.startPixel_ = startPixel;\\n        this.endPixel_ = endPixel;\\n        this.createOrUpdateGeometry();\\n        this.render_();\\n    };\\n    /**\\n     * Creates or updates the cached geometry.\\n     */\\n    RenderBox.prototype.createOrUpdateGeometry = function () {\\n        var startPixel = this.startPixel_;\\n        var endPixel = this.endPixel_;\\n        var pixels = [\\n            startPixel,\\n            [startPixel[0], endPixel[1]],\\n            endPixel,\\n            [endPixel[0], startPixel[1]]\\n        ];\\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\\n        // close the polygon\\n        coordinates[4] = coordinates[0].slice();\\n        if (!this.geometry_) {\\n            this.geometry_ = new Polygon([coordinates]);\\n        }\\n        else {\\n            this.geometry_.setCoordinates([coordinates]);\\n        }\\n    };\\n    /**\\n     * @return {import(\\\"../geom/Polygon.js\\\").default} Geometry.\\n     */\\n    RenderBox.prototype.getGeometry = function () {\\n        return this.geometry_;\\n    };\\n    return RenderBox;\\n}(Disposable));\\nexport default RenderBox;\\n//# sourceMappingURL=Box.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragBox\\n */\\n// FIXME draw drag box\\nimport Event from '../events/Event.js';\\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\\nimport { VOID } from '../functions.js';\\nimport PointerInteraction from './Pointer.js';\\nimport RenderBox from '../render/Box.js';\\n/**\\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\\n * true should be returned.\\n * @typedef {function(this: ?, import(\\\"../MapBrowserEvent.js\\\").default, import(\\\"../pixel.js\\\").Pixel, import(\\\"../pixel.js\\\").Pixel):boolean} EndCondition\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link ol/events/condition~always}.\\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\\n * `boxEndCondition` function.\\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\\n * Default is `true` if the area of the box is bigger than the `minArea` option.\\n * @property {function(this:DragBox, import(\\\"../MapBrowserEvent.js\\\").default)} [onBoxEnd] Code to execute just\\n * before `boxend` is fired.\\n */\\n/**\\n * @enum {string}\\n */\\nvar DragBoxEventType = {\\n    /**\\n     * Triggered upon drag box start.\\n     * @event DragBoxEvent#boxstart\\n     * @api\\n     */\\n    BOXSTART: 'boxstart',\\n    /**\\n     * Triggered on drag when box is active.\\n     * @event DragBoxEvent#boxdrag\\n     * @api\\n     */\\n    BOXDRAG: 'boxdrag',\\n    /**\\n     * Triggered upon drag box end.\\n     * @event DragBoxEvent#boxend\\n     * @api\\n     */\\n    BOXEND: 'boxend'\\n};\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\\n * this type.\\n */\\nvar DragBoxEvent = /** @class */ (function (_super) {\\n    __extends(DragBoxEvent, _super);\\n    /**\\n     * @param {string} type The event type.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate The event coordinate.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Originating event.\\n     */\\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The coordinate of the drag event.\\n         * @const\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         * @api\\n         */\\n        _this.coordinate = coordinate;\\n        /**\\n         * @const\\n         * @type {import(\\\"../MapBrowserEvent.js\\\").default}\\n         * @api\\n         */\\n        _this.mapBrowserEvent = mapBrowserEvent;\\n        return _this;\\n    }\\n    return DragBoxEvent;\\n}(Event));\\n/**\\n * @classdesc\\n * Allows the user to draw a vector box by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when the shift or other key is held down. This is used, for example,\\n * for zooming to a specific area of the map\\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\\n * {@link module:ol/interaction/DragRotateAndZoom}).\\n *\\n * This interaction is only supported for mouse devices.\\n *\\n * @fires DragBoxEvent\\n * @api\\n */\\nvar DragBox = /** @class */ (function (_super) {\\n    __extends(DragBox, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragBox(opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @type {import(\\\"../render/Box.js\\\").default}\\n         * @private\\n         */\\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\\n        /**\\n         * Function to execute just before `onboxend` is fired\\n         * @type {function(this:DragBox, import(\\\"../MapBrowserEvent.js\\\").default): void}\\n         * @private\\n         */\\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\\n        /**\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         * @private\\n         */\\n        _this.startPixel_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : always;\\n        /**\\n         * @private\\n         * @type {EndCondition}\\n         */\\n        _this.boxEndCondition_ = options.boxEndCondition ?\\n            options.boxEndCondition : _this.defaultBoxEndCondition;\\n        return _this;\\n    }\\n    /**\\n     * The default condition for determining whether the boxend event\\n     * should fire.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent The originating MapBrowserEvent\\n     *     leading to the box end.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} startPixel The starting pixel of the box.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} endPixel The end pixel of the box.\\n     * @return {boolean} Whether or not the boxend condition should be fired.\\n     */\\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\\n        var width = endPixel[0] - startPixel[0];\\n        var height = endPixel[1] - startPixel[1];\\n        return width * width + height * height >= this.minArea_;\\n    };\\n    /**\\n     * Returns geometry of last drawn box.\\n     * @return {import(\\\"../geom/Polygon.js\\\").default} Geometry.\\n     * @api\\n     */\\n    DragBox.prototype.getGeometry = function () {\\n        return this.box_.getGeometry();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return;\\n        }\\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return true;\\n        }\\n        this.box_.setMap(null);\\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\\n            this.onBoxEnd_(mapBrowserEvent);\\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return false;\\n        }\\n        if (mouseActionButton(mapBrowserEvent) &&\\n            this.condition_(mapBrowserEvent)) {\\n            this.startPixel_ = mapBrowserEvent.pixel;\\n            this.box_.setMap(mapBrowserEvent.map);\\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragBox;\\n}(PointerInteraction));\\nexport default DragBox;\\n//# sourceMappingURL=DragBox.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragZoom\\n */\\nimport { easeOut } from '../easing.js';\\nimport { shiftKeyOnly } from '../events/condition.js';\\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\\nimport DragBox from './DragBox.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\\n * box.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\\n * @property {number} [duration=200] Animation duration in milliseconds.\\n * @property {boolean} [out=false] Use interaction for zooming out.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when a key, shift by default, is held down.\\n *\\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\\n * your custom one configured with `className`.\\n * @api\\n */\\nvar DragZoom = /** @class */ (function (_super) {\\n    __extends(DragZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var condition = options.condition ? options.condition : shiftKeyOnly;\\n        _this = _super.call(this, {\\n            condition: condition,\\n            className: options.className || 'ol-dragzoom',\\n            onBoxEnd: onBoxEnd\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.out_ = options.out !== undefined ? options.out : false;\\n        return _this;\\n    }\\n    return DragZoom;\\n}(DragBox));\\n/**\\n * @this {DragZoom}\\n */\\nfunction onBoxEnd() {\\n    var map = this.getMap();\\n    var view = /** @type {!import(\\\"../View.js\\\").default} */ (map.getView());\\n    var size = /** @type {!import(\\\"../size.js\\\").Size} */ (map.getSize());\\n    var extent = this.getGeometry().getExtent();\\n    if (this.out_) {\\n        var mapExtent = view.calculateExtent(size);\\n        var boxPixelExtent = createOrUpdateFromCoordinates([\\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\\n            map.getPixelFromCoordinate(getTopRight(extent))\\n        ]);\\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\\n        scaleFromCenter(mapExtent, 1 / factor);\\n        extent = mapExtent;\\n    }\\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\\n    view.animate({\\n        resolution: resolution,\\n        center: center,\\n        duration: this.duration_,\\n        easing: easeOut\\n    });\\n}\\nexport default DragZoom;\\n//# sourceMappingURL=DragZoom.js.map\",\"/**\\n * @module ol/events/KeyCode\\n */\\n/**\\n * @enum {number}\\n * @const\\n */\\nexport default {\\n    LEFT: 37,\\n    UP: 38,\\n    RIGHT: 39,\\n    DOWN: 40\\n};\\n//# sourceMappingURL=KeyCode.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/KeyboardPan\\n */\\nimport { rotate as rotateCoordinate } from '../coordinate.js';\\nimport EventType from '../events/EventType.js';\\nimport KeyCode from '../events/KeyCode.js';\\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\\nimport Interaction, { pan } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~noModifierKeys} and\\n * {@link module:ol/events/condition~targetNotEditable}.\\n * @property {number} [duration=100] Animation duration in milliseconds.\\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\\n * press.\\n */\\n/**\\n * @classdesc\\n * Allows the user to pan the map using keyboard arrows.\\n * Note that, although this interaction is by default included in maps,\\n * the keys can only be used when browser focus is on the element to which\\n * the keyboard events are attached. By default, this is the map div,\\n * though you can change this with the `keyboardEventTarget` in\\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\\n * element, focus will have to be on, and returned to, this element if the keys\\n * are to function.\\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\\n * @api\\n */\\nvar KeyboardPan = /** @class */ (function (_super) {\\n    __extends(KeyboardPan, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function KeyboardPan(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Browser event.\\n         * @return {boolean} Combined condition result.\\n         */\\n        _this.defaultCondition_ = function (mapBrowserEvent) {\\n            return noModifierKeys(mapBrowserEvent) &&\\n                targetNotEditable(mapBrowserEvent);\\n        };\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition !== undefined ?\\n            options.condition : _this.defaultCondition_;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\\n            options.pixelDelta : 128;\\n        return _this;\\n    }\\n    return KeyboardPan;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\\n * pressed).\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {KeyboardPan}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\\n        var keyCode = keyEvent.keyCode;\\n        if (this.condition_(mapBrowserEvent) &&\\n            (keyCode == KeyCode.DOWN ||\\n                keyCode == KeyCode.LEFT ||\\n                keyCode == KeyCode.RIGHT ||\\n                keyCode == KeyCode.UP)) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\\n            var deltaX = 0, deltaY = 0;\\n            if (keyCode == KeyCode.DOWN) {\\n                deltaY = -mapUnitsDelta;\\n            }\\n            else if (keyCode == KeyCode.LEFT) {\\n                deltaX = -mapUnitsDelta;\\n            }\\n            else if (keyCode == KeyCode.RIGHT) {\\n                deltaX = mapUnitsDelta;\\n            }\\n            else {\\n                deltaY = mapUnitsDelta;\\n            }\\n            var delta = [deltaX, deltaY];\\n            rotateCoordinate(delta, view.getRotation());\\n            pan(view, delta, this.duration_);\\n            mapBrowserEvent.preventDefault();\\n            stopEvent = true;\\n        }\\n    }\\n    return !stopEvent;\\n}\\nexport default KeyboardPan;\\n//# sourceMappingURL=KeyboardPan.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/KeyboardZoom\\n */\\nimport EventType from '../events/EventType.js';\\nimport { targetNotEditable } from '../events/condition.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=100] Animation duration in milliseconds.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~targetNotEditable}.\\n * @property {number} [delta=1] The zoom level delta on each key press.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map using keyboard + and -.\\n * Note that, although this interaction is by default included in maps,\\n * the keys can only be used when browser focus is on the element to which\\n * the keyboard events are attached. By default, this is the map div,\\n * though you can change this with the `keyboardEventTarget` in\\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\\n * element, focus will have to be on, and returned to, this element if the keys\\n * are to function.\\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\\n * @api\\n */\\nvar KeyboardZoom = /** @class */ (function (_super) {\\n    __extends(KeyboardZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function KeyboardZoom(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.delta_ = options.delta ? options.delta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\\n        return _this;\\n    }\\n    return KeyboardZoom;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\\n * key pressed was '+' or '-').\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {KeyboardZoom}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\\n        mapBrowserEvent.type == EventType.KEYPRESS) {\\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\\n        var charCode = keyEvent.charCode;\\n        if (this.condition_(mapBrowserEvent) &&\\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\\n            var map = mapBrowserEvent.map;\\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\\n            var view = map.getView();\\n            zoomByDelta(view, delta, undefined, this.duration_);\\n            mapBrowserEvent.preventDefault();\\n            stopEvent = true;\\n        }\\n    }\\n    return !stopEvent;\\n}\\nexport default KeyboardZoom;\\n//# sourceMappingURL=KeyboardZoom.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/MouseWheelZoom\\n */\\nimport { always } from '../events/condition.js';\\nimport EventType from '../events/EventType.js';\\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\nimport { clamp } from '../math.js';\\n/**\\n * @enum {string}\\n */\\nexport var Mode = {\\n    TRACKPAD: 'trackpad',\\n    WHEEL: 'wheel'\\n};\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~always}.\\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\\n * location as the anchor. When set to `false`, zooming in and out will zoom to\\n * the center of the screen instead of zooming on the mouse's location.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by scrolling the mouse wheel.\\n * @api\\n */\\nvar MouseWheelZoom = /** @class */ (function (_super) {\\n    __extends(MouseWheelZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function MouseWheelZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, /** @type {import(\\\"./Interaction.js\\\").InteractionOptions} */ (options)) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.totalDelta_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.lastDelta_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : always;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.lastAnchor_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.startTime_ = undefined;\\n        /**\\n         * @private\\n         * @type {?}\\n         */\\n        _this.timeoutId_;\\n        /**\\n         * @private\\n         * @type {Mode|undefined}\\n         */\\n        _this.mode_ = undefined;\\n        /**\\n         * Trackpad events separated by this delay will be considered separate\\n         * interactions.\\n         * @type {number}\\n         */\\n        _this.trackpadEventGap_ = 400;\\n        /**\\n         * @type {?}\\n         */\\n        _this.trackpadTimeoutId_;\\n        /**\\n         * The number of delta values per zoom level\\n         * @private\\n         * @type {number}\\n         */\\n        _this.trackpadDeltaPerZoom_ = 300;\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    MouseWheelZoom.prototype.endInteraction_ = function () {\\n        this.trackpadTimeoutId_ = undefined;\\n        var view = this.getMap().getView();\\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\\n    };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\\n     * zooms the map.\\n     * @override\\n     */\\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\\n        if (!this.condition_(mapBrowserEvent)) {\\n            return true;\\n        }\\n        var type = mapBrowserEvent.type;\\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\\n            return true;\\n        }\\n        mapBrowserEvent.preventDefault();\\n        var map = mapBrowserEvent.map;\\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\\n        if (this.useAnchor_) {\\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\\n        }\\n        // Delta normalisation inspired by\\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\\n        var delta;\\n        if (mapBrowserEvent.type == EventType.WHEEL) {\\n            delta = wheelEvent.deltaY;\\n            if (FIREFOX &&\\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\\n                delta /= DEVICE_PIXEL_RATIO;\\n            }\\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\\n                delta *= 40;\\n            }\\n        }\\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\\n            delta = -wheelEvent.wheelDeltaY;\\n            if (SAFARI) {\\n                delta /= 3;\\n            }\\n        }\\n        if (delta === 0) {\\n            return false;\\n        }\\n        else {\\n            this.lastDelta_ = delta;\\n        }\\n        var now = Date.now();\\n        if (this.startTime_ === undefined) {\\n            this.startTime_ = now;\\n        }\\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\\n            this.mode_ = Math.abs(delta) < 4 ?\\n                Mode.TRACKPAD :\\n                Mode.WHEEL;\\n        }\\n        if (this.mode_ === Mode.TRACKPAD) {\\n            var view = map.getView();\\n            if (this.trackpadTimeoutId_) {\\n                clearTimeout(this.trackpadTimeoutId_);\\n            }\\n            else {\\n                view.beginInteraction();\\n            }\\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\\n            this.startTime_ = now;\\n            return false;\\n        }\\n        this.totalDelta_ += delta;\\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\\n        clearTimeout(this.timeoutId_);\\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\\n        return false;\\n    };\\n    /**\\n     * @private\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\\n        var view = map.getView();\\n        if (view.getAnimating()) {\\n            view.cancelAnimations();\\n        }\\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\\n        this.mode_ = undefined;\\n        this.totalDelta_ = 0;\\n        this.lastAnchor_ = null;\\n        this.startTime_ = undefined;\\n        this.timeoutId_ = undefined;\\n    };\\n    /**\\n     * Enable or disable using the mouse's location as an anchor when zooming\\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\\n     * to zoom to the center of the map\\n     * @api\\n     */\\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\\n        this.useAnchor_ = useAnchor;\\n        if (!useAnchor) {\\n            this.lastAnchor_ = null;\\n        }\\n    };\\n    return MouseWheelZoom;\\n}(Interaction));\\nexport default MouseWheelZoom;\\n//# sourceMappingURL=MouseWheelZoom.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/PinchRotate\\n */\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\nimport { disable } from '../rotationconstraint.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] The duration of the animation in\\n * milliseconds.\\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\\n */\\n/**\\n * @classdesc\\n * Allows the user to rotate the map by twisting with two fingers\\n * on a touch screen.\\n * @api\\n */\\nvar PinchRotate = /** @class */ (function (_super) {\\n    __extends(PinchRotate, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PinchRotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var pointerOptions = /** @type {import(\\\"./Pointer.js\\\").Options} */ (options);\\n        if (!pointerOptions.stopDown) {\\n            pointerOptions.stopDown = FALSE;\\n        }\\n        _this = _super.call(this, pointerOptions) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastAngle_ = undefined;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.rotating_ = false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.rotationDelta_ = 0.0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var rotationDelta = 0.0;\\n        var touch0 = this.targetPointers[0];\\n        var touch1 = this.targetPointers[1];\\n        // angle between touches\\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\\n        if (this.lastAngle_ !== undefined) {\\n            var delta = angle - this.lastAngle_;\\n            this.rotationDelta_ += delta;\\n            if (!this.rotating_ &&\\n                Math.abs(this.rotationDelta_) > this.threshold_) {\\n                this.rotating_ = true;\\n            }\\n            rotationDelta = delta;\\n        }\\n        this.lastAngle_ = angle;\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (view.getConstraints().rotation === disable) {\\n            return;\\n        }\\n        // rotate anchor point.\\n        // FIXME: should be the intersection point between the lines:\\n        //     touch0,touch1 and previousTouch0,previousTouch1\\n        var viewportPosition = map.getViewport().getBoundingClientRect();\\n        var centroid = centroidFromPointers(this.targetPointers);\\n        centroid[0] -= viewportPosition.left;\\n        centroid[1] -= viewportPosition.top;\\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\\n        // rotate\\n        if (this.rotating_) {\\n            map.render();\\n            view.adjustRotation(rotationDelta, this.anchor_);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length < 2) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            view.endInteraction(this.duration_);\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length >= 2) {\\n            var map = mapBrowserEvent.map;\\n            this.anchor_ = null;\\n            this.lastAngle_ = undefined;\\n            this.rotating_ = false;\\n            this.rotationDelta_ = 0.0;\\n            if (!this.handlingDownUpSequence) {\\n                map.getView().beginInteraction();\\n            }\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return PinchRotate;\\n}(PointerInteraction));\\nexport default PinchRotate;\\n//# sourceMappingURL=PinchRotate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/PinchZoom\\n */\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=400] Animation duration in milliseconds.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by pinching with two fingers\\n * on a touch screen.\\n * @api\\n */\\nvar PinchZoom = /** @class */ (function (_super) {\\n    __extends(PinchZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PinchZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var pointerOptions = /** @type {import(\\\"./Pointer.js\\\").Options} */ (options);\\n        if (!pointerOptions.stopDown) {\\n            pointerOptions.stopDown = FALSE;\\n        }\\n        _this = _super.call(this, pointerOptions) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastDistance_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.lastScaleDelta_ = 1;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var scaleDelta = 1.0;\\n        var touch0 = this.targetPointers[0];\\n        var touch1 = this.targetPointers[1];\\n        var dx = touch0.clientX - touch1.clientX;\\n        var dy = touch0.clientY - touch1.clientY;\\n        // distance between touches\\n        var distance = Math.sqrt(dx * dx + dy * dy);\\n        if (this.lastDistance_ !== undefined) {\\n            scaleDelta = this.lastDistance_ / distance;\\n        }\\n        this.lastDistance_ = distance;\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (scaleDelta != 1.0) {\\n            this.lastScaleDelta_ = scaleDelta;\\n        }\\n        // scale anchor point.\\n        var viewportPosition = map.getViewport().getBoundingClientRect();\\n        var centroid = centroidFromPointers(this.targetPointers);\\n        centroid[0] -= viewportPosition.left;\\n        centroid[1] -= viewportPosition.top;\\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\\n        // scale, bypass the resolution constraint\\n        map.render();\\n        view.adjustResolution(scaleDelta, this.anchor_);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length < 2) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\\n            view.endInteraction(this.duration_, direction);\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length >= 2) {\\n            var map = mapBrowserEvent.map;\\n            this.anchor_ = null;\\n            this.lastDistance_ = undefined;\\n            this.lastScaleDelta_ = 1;\\n            if (!this.handlingDownUpSequence) {\\n                map.getView().beginInteraction();\\n            }\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return PinchZoom;\\n}(PointerInteraction));\\nexport default PinchZoom;\\n//# sourceMappingURL=PinchZoom.js.map\",\"/**\\n * @module ol/render/Event\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport Event from '../events/Event.js';\\nvar RenderEvent = /** @class */ (function (_super) {\\n    __extends(RenderEvent, _super);\\n    /**\\n     * @param {import(\\\"./EventType.js\\\").default} type Type.\\n     * @param {import(\\\"../transform.js\\\").Transform=} opt_inversePixelTransform Transform for\\n     *     CSS pixels to rendered pixels.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\\n     * @param {?import(\\\"../webgl/Helper.js\\\").default=} opt_glContext WebGL Context.\\n     */\\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\\n         * to rendered pixels on this event's `context`.\\n         * @type {import(\\\"../transform.js\\\").Transform|undefined}\\n         * @api\\n         */\\n        _this.inversePixelTransform = opt_inversePixelTransform;\\n        /**\\n         * An object representing the current render frame state.\\n         * @type {import(\\\"../PluggableMap.js\\\").FrameState|undefined}\\n         * @api\\n         */\\n        _this.frameState = opt_frameState;\\n        /**\\n         * Canvas context. Only available when a Canvas renderer is used, null\\n         * otherwise.\\n         * @type {CanvasRenderingContext2D|null|undefined}\\n         * @api\\n         */\\n        _this.context = opt_context;\\n        /**\\n         * WebGL context. Only available when a WebGL renderer is used, null\\n         * otherwise.\\n         * @type {import(\\\"../webgl/Helper.js\\\").default|null|undefined}\\n         * @api\\n         */\\n        _this.glContext = opt_glContext;\\n        return _this;\\n    }\\n    return RenderEvent;\\n}(Event));\\nexport default RenderEvent;\\n//# sourceMappingURL=Event.js.map\",\"/**\\n * @module ol/color\\n */\\nimport { assert } from './asserts.js';\\nimport { clamp } from './math.js';\\n/**\\n * A color represented as a short array [red, green, blue, alpha].\\n * red, green, and blue should be integers in the range 0..255 inclusive.\\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\\n * given then `1` will be used.\\n * @typedef {Array<number>} Color\\n * @api\\n */\\n/**\\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\\n * @const\\n * @type {RegExp}\\n * @private\\n */\\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\\n/**\\n * Regular expression for matching potential named color style strings.\\n * @const\\n * @type {RegExp}\\n * @private\\n */\\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\\n/**\\n * Return the color as an rgba string.\\n * @param {Color|string} color Color.\\n * @return {string} Rgba string.\\n * @api\\n */\\nexport function asString(color) {\\n    if (typeof color === 'string') {\\n        return color;\\n    }\\n    else {\\n        return toString(color);\\n    }\\n}\\n/**\\n * Return named color as an rgba string.\\n * @param {string} color Named color.\\n * @return {string} Rgb string.\\n */\\nfunction fromNamed(color) {\\n    var el = document.createElement('div');\\n    el.style.color = color;\\n    if (el.style.color !== '') {\\n        document.body.appendChild(el);\\n        var rgb = getComputedStyle(el).color;\\n        document.body.removeChild(el);\\n        return rgb;\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * @param {string} s String.\\n * @return {Color} Color.\\n */\\nexport var fromString = (function () {\\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\\n    // semantics, whenever the cache grows too large we simply delete an\\n    // arbitrary 25% of the entries.\\n    /**\\n     * @const\\n     * @type {number}\\n     */\\n    var MAX_CACHE_SIZE = 1024;\\n    /**\\n     * @type {Object<string, Color>}\\n     */\\n    var cache = {};\\n    /**\\n     * @type {number}\\n     */\\n    var cacheSize = 0;\\n    return (\\n    /**\\n     * @param {string} s String.\\n     * @return {Color} Color.\\n     */\\n    function (s) {\\n        var color;\\n        if (cache.hasOwnProperty(s)) {\\n            color = cache[s];\\n        }\\n        else {\\n            if (cacheSize >= MAX_CACHE_SIZE) {\\n                var i = 0;\\n                for (var key in cache) {\\n                    if ((i++ & 3) === 0) {\\n                        delete cache[key];\\n                        --cacheSize;\\n                    }\\n                }\\n            }\\n            color = fromStringInternal_(s);\\n            cache[s] = color;\\n            ++cacheSize;\\n        }\\n        return color;\\n    });\\n})();\\n/**\\n * Return the color as an array. This function maintains a cache of calculated\\n * arrays which means the result should not be modified.\\n * @param {Color|string} color Color.\\n * @return {Color} Color.\\n * @api\\n */\\nexport function asArray(color) {\\n    if (Array.isArray(color)) {\\n        return color;\\n    }\\n    else {\\n        return fromString(color);\\n    }\\n}\\n/**\\n * @param {string} s String.\\n * @private\\n * @return {Color} Color.\\n */\\nfunction fromStringInternal_(s) {\\n    var r, g, b, a, color;\\n    if (NAMED_COLOR_RE_.exec(s)) {\\n        s = fromNamed(s);\\n    }\\n    if (HEX_COLOR_RE_.exec(s)) { // hex\\n        var n = s.length - 1; // number of hex digits\\n        var d = // number of digits per channel\\n         void 0; // number of digits per channel\\n        if (n <= 4) {\\n            d = 1;\\n        }\\n        else {\\n            d = 2;\\n        }\\n        var hasAlpha = n === 4 || n === 8;\\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\\n        if (hasAlpha) {\\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\\n        }\\n        else {\\n            a = 255;\\n        }\\n        if (d == 1) {\\n            r = (r << 4) + r;\\n            g = (g << 4) + g;\\n            b = (b << 4) + b;\\n            if (hasAlpha) {\\n                a = (a << 4) + a;\\n            }\\n        }\\n        color = [r, g, b, a / 255];\\n    }\\n    else if (s.indexOf('rgba(') == 0) { // rgba()\\n        color = s.slice(5, -1).split(',').map(Number);\\n        normalize(color);\\n    }\\n    else if (s.indexOf('rgb(') == 0) { // rgb()\\n        color = s.slice(4, -1).split(',').map(Number);\\n        color.push(1);\\n        normalize(color);\\n    }\\n    else {\\n        assert(false, 14); // Invalid color\\n    }\\n    return color;\\n}\\n/**\\n * TODO this function is only used in the test, we probably shouldn't export it\\n * @param {Color} color Color.\\n * @return {Color} Clamped color.\\n */\\nexport function normalize(color) {\\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\\n    color[3] = clamp(color[3], 0, 1);\\n    return color;\\n}\\n/**\\n * @param {Color} color Color.\\n * @return {string} String.\\n */\\nexport function toString(color) {\\n    var r = color[0];\\n    if (r != (r | 0)) {\\n        r = (r + 0.5) | 0;\\n    }\\n    var g = color[1];\\n    if (g != (g | 0)) {\\n        g = (g + 0.5) | 0;\\n    }\\n    var b = color[2];\\n    if (b != (b | 0)) {\\n        b = (b + 0.5) | 0;\\n    }\\n    var a = color[3] === undefined ? 1 : color[3];\\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\\n}\\n//# sourceMappingURL=color.js.map\",\"/**\\n * @module ol/style/IconImageCache\\n */\\nimport { asString } from '../color.js';\\n/**\\n * @classdesc\\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\\n */\\nvar IconImageCache = /** @class */ (function () {\\n    function IconImageCache() {\\n        /**\\n        * @type {!Object<string, import(\\\"./IconImage.js\\\").default>}\\n        * @private\\n        */\\n        this.cache_ = {};\\n        /**\\n        * @type {number}\\n        * @private\\n        */\\n        this.cacheSize_ = 0;\\n        /**\\n        * @type {number}\\n        * @private\\n        */\\n        this.maxCacheSize_ = 32;\\n    }\\n    /**\\n    * FIXME empty description for jsdoc\\n    */\\n    IconImageCache.prototype.clear = function () {\\n        this.cache_ = {};\\n        this.cacheSize_ = 0;\\n    };\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    IconImageCache.prototype.canExpireCache = function () {\\n        return this.cacheSize_ > this.maxCacheSize_;\\n    };\\n    /**\\n    * FIXME empty description for jsdoc\\n    */\\n    IconImageCache.prototype.expire = function () {\\n        if (this.canExpireCache()) {\\n            var i = 0;\\n            for (var key in this.cache_) {\\n                var iconImage = this.cache_[key];\\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\\n                    delete this.cache_[key];\\n                    --this.cacheSize_;\\n                }\\n            }\\n        }\\n    };\\n    /**\\n    * @param {string} src Src.\\n    * @param {?string} crossOrigin Cross origin.\\n    * @param {import(\\\"../color.js\\\").Color} color Color.\\n    * @return {import(\\\"./IconImage.js\\\").default} Icon image.\\n    */\\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\\n        var key = getKey(src, crossOrigin, color);\\n        return key in this.cache_ ? this.cache_[key] : null;\\n    };\\n    /**\\n    * @param {string} src Src.\\n    * @param {?string} crossOrigin Cross origin.\\n    * @param {import(\\\"../color.js\\\").Color} color Color.\\n    * @param {import(\\\"./IconImage.js\\\").default} iconImage Icon image.\\n    */\\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\\n        var key = getKey(src, crossOrigin, color);\\n        this.cache_[key] = iconImage;\\n        ++this.cacheSize_;\\n    };\\n    /**\\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\\n    * your map uses more than 32 different icon images and you are not caching icon\\n    * styles on the application level.\\n    * @param {number} maxCacheSize Cache max size.\\n    * @api\\n    */\\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\\n        this.maxCacheSize_ = maxCacheSize;\\n        this.expire();\\n    };\\n    return IconImageCache;\\n}());\\n/**\\n * @param {string} src Src.\\n * @param {?string} crossOrigin Cross origin.\\n * @param {import(\\\"../color.js\\\").Color} color Color.\\n * @return {string} Cache key.\\n */\\nfunction getKey(src, crossOrigin, color) {\\n    var colorString = color ? asString(color) : 'null';\\n    return crossOrigin + ':' + src + ':' + colorString;\\n}\\nexport default IconImageCache;\\n/**\\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\\n * {@link module:ol/style/Icon~Icon} images.\\n * @api\\n */\\nexport var shared = new IconImageCache();\\n//# sourceMappingURL=IconImageCache.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Map\\n */\\nimport { abstract, getUid } from '../util.js';\\nimport Disposable from '../Disposable.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getWidth } from '../extent.js';\\nimport { TRUE } from '../functions.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\\nimport { compose as composeTransform, makeInverse } from '../transform.js';\\n/**\\n * @abstract\\n */\\nvar MapRenderer = /** @class */ (function (_super) {\\n    __extends(MapRenderer, _super);\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    function MapRenderer(map) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = map;\\n        /**\\n         * @private\\n         * @type {!Object<string, import(\\\"./Layer.js\\\").default>}\\n         */\\n        _this.layerRenderers_ = {};\\n        /**\\n         * @private\\n         * @type {Object<string, import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.layerRendererListeners_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../render/EventType.js\\\").default} type Event type.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\\n        abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @protected\\n     */\\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\\n        var viewState = frameState.viewState;\\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\\n    };\\n    /**\\n     * Removes all layer renderers.\\n     */\\n    MapRenderer.prototype.removeLayerRenderers = function () {\\n        for (var key in this.layerRenderers_) {\\n            this.removeLayerRendererByKey_(key).dispose();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: S, import(\\\"../Feature.js\\\").FeatureLike,\\n     *     import(\\\"../layer/Layer.js\\\").default): T} callback Feature callback.\\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\\n     * @return {T|undefined} Callback result.\\n     * @template S,T,U\\n     */\\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\\n        var result;\\n        var viewState = frameState.viewState;\\n        var viewResolution = viewState.resolution;\\n        /**\\n         * @param {boolean} managed Managed layer.\\n         * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n         * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n         * @return {?} Callback result.\\n         */\\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\\n                return callback.call(thisArg, feature, managed ? layer : null);\\n            }\\n        }\\n        var projection = viewState.projection;\\n        var translatedCoordinate = coordinate;\\n        if (projection.canWrapX()) {\\n            var projectionExtent = projection.getExtent();\\n            var worldWidth = getWidth(projectionExtent);\\n            var x = coordinate[0];\\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\\n            }\\n        }\\n        var layerStates = frameState.layerStatesArray;\\n        var numLayers = layerStates.length;\\n        var i;\\n        for (i = numLayers - 1; i >= 0; --i) {\\n            var layerState = layerStates[i];\\n            var layer = /** @type {import(\\\"../layer/Layer.js\\\").default} */ (layerState.layer);\\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\\n                var layerRenderer = this.getLayerRenderer(layer);\\n                var source = layer.getSource();\\n                if (layerRenderer && source) {\\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\\n                }\\n                if (result) {\\n                    return result;\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: S, import(\\\"../layer/Layer.js\\\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\\n     *     callback.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @return {T|undefined} Callback result.\\n     * @template S,T,U\\n     */\\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\\n     * @return {boolean} Is there a feature at the given coordinate?\\n     * @template U\\n     */\\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\\n        return hasFeature !== undefined;\\n    };\\n    /**\\n     * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n     * @protected\\n     * @return {import(\\\"./Layer.js\\\").default} Layer renderer. May return null.\\n     */\\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\\n        var layerKey = getUid(layer);\\n        if (layerKey in this.layerRenderers_) {\\n            return this.layerRenderers_[layerKey];\\n        }\\n        var renderer = layer.getRenderer();\\n        if (!renderer) {\\n            return null;\\n        }\\n        this.layerRenderers_[layerKey] = renderer;\\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\\n        return renderer;\\n    };\\n    /**\\n     * @protected\\n     * @return {Object<string, import(\\\"./Layer.js\\\").default>} Layer renderers.\\n     */\\n    MapRenderer.prototype.getLayerRenderers = function () {\\n        return this.layerRenderers_;\\n    };\\n    /**\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     */\\n    MapRenderer.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Handle changes in a layer renderer.\\n     * @private\\n     */\\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\\n        this.map_.render();\\n    };\\n    /**\\n     * @param {string} layerKey Layer key.\\n     * @return {import(\\\"./Layer.js\\\").default} Layer renderer.\\n     * @private\\n     */\\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\\n        var layerRenderer = this.layerRenderers_[layerKey];\\n        delete this.layerRenderers_[layerKey];\\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\\n        delete this.layerRendererListeners_[layerKey];\\n        return layerRenderer;\\n    };\\n    /**\\n     * Render.\\n     * @abstract\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    MapRenderer.prototype.renderFrame = function (frameState) {\\n        abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\\n        if (iconImageCache.canExpireCache()) {\\n            frameState.postRenderFunctions.push(expireIconCache);\\n        }\\n    };\\n    /**\\n     * @param {!import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\\n        var _loop_1 = function (layerKey) {\\n            if (!(layerKey in layerStatesMap)) {\\n                frameState.postRenderFunctions.push(function () {\\n                    this.removeLayerRendererByKey_(layerKey).dispose();\\n                }.bind(this_1));\\n            }\\n        };\\n        var this_1 = this;\\n        for (var layerKey in this.layerRenderers_) {\\n            _loop_1(layerKey);\\n        }\\n    };\\n    return MapRenderer;\\n}(Disposable));\\n/**\\n * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n */\\nfunction expireIconCache(map, frameState) {\\n    iconImageCache.expire();\\n}\\n/**\\n * @param {Array<import(\\\"../layer/Layer.js\\\").State>} layerStatesArray Layer states array.\\n * @return {Object<string, import(\\\"../layer/Layer.js\\\").State>} States mapped by layer uid.\\n */\\nfunction getLayerStatesMap(layerStatesArray) {\\n    return layerStatesArray.reduce(function (acc, state) {\\n        acc[getUid(state.layer)] = state;\\n        return acc;\\n    }, {});\\n}\\nexport default MapRenderer;\\n//# sourceMappingURL=Map.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Composite\\n */\\nimport { CLASS_UNSELECTABLE } from '../css.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\nimport RenderEvent from '../render/Event.js';\\nimport RenderEventType from '../render/EventType.js';\\nimport MapRenderer from './Map.js';\\nimport SourceState from '../source/State.js';\\nimport { replaceChildren } from '../dom.js';\\n/**\\n * @classdesc\\n * Canvas map renderer.\\n * @api\\n */\\nvar CompositeMapRenderer = /** @class */ (function (_super) {\\n    __extends(CompositeMapRenderer, _super);\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    function CompositeMapRenderer(map) {\\n        var _this = _super.call(this, map) || this;\\n        /**\\n         * @private\\n         * @type {HTMLDivElement}\\n         */\\n        _this.element_ = document.createElement('div');\\n        var style = _this.element_.style;\\n        style.position = 'absolute';\\n        style.width = '100%';\\n        style.height = '100%';\\n        style.zIndex = '0';\\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\\n        var container = map.getViewport();\\n        container.insertBefore(_this.element_, container.firstChild || null);\\n        /**\\n         * @private\\n         * @type {Array<HTMLElement>}\\n         */\\n        _this.children_ = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderedVisible_ = true;\\n        return _this;\\n    }\\n    /**\\n     * @param {import(\\\"../render/EventType.js\\\").default} type Event type.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\\n        var map = this.getMap();\\n        if (map.hasListener(type)) {\\n            var event_1 = new RenderEvent(type, undefined, frameState);\\n            map.dispatchEvent(event_1);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\\n        if (!frameState) {\\n            if (this.renderedVisible_) {\\n                this.element_.style.display = 'none';\\n                this.renderedVisible_ = false;\\n            }\\n            return;\\n        }\\n        this.calculateMatrices2D(frameState);\\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\\n        var layerStatesArray = frameState.layerStatesArray;\\n        var viewResolution = frameState.viewState.resolution;\\n        this.children_.length = 0;\\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\\n            var layerState = layerStatesArray[i];\\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\\n                continue;\\n            }\\n            var layer = layerState.layer;\\n            var element = layer.render(frameState);\\n            if (element) {\\n                var zIndex = layerState.zIndex;\\n                if (zIndex !== element.style.zIndex) {\\n                    element.style.zIndex = zIndex;\\n                }\\n                this.children_.push(element);\\n            }\\n        }\\n        replaceChildren(this.element_, this.children_);\\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\\n        if (!this.renderedVisible_) {\\n            this.element_.style.display = '';\\n            this.renderedVisible_ = true;\\n        }\\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\\n        this.scheduleExpireIconCache(frameState);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\\n        var viewState = frameState.viewState;\\n        var viewResolution = viewState.resolution;\\n        var layerStates = frameState.layerStatesArray;\\n        var numLayers = layerStates.length;\\n        for (var i = numLayers - 1; i >= 0; --i) {\\n            var layerState = layerStates[i];\\n            var layer = layerState.layer;\\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\\n                var layerRenderer = this.getLayerRenderer(layer);\\n                if (!layerRenderer) {\\n                    continue;\\n                }\\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\\n                if (data) {\\n                    var result = callback(layer, data);\\n                    if (result) {\\n                        return result;\\n                    }\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    return CompositeMapRenderer;\\n}(MapRenderer));\\nexport default CompositeMapRenderer;\\n//# sourceMappingURL=Composite.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Map\\n */\\nimport PluggableMap from './PluggableMap.js';\\nimport { defaults as defaultControls } from './control/util.js';\\nimport { defaults as defaultInteractions } from './interaction.js';\\nimport { assign } from './obj.js';\\nimport CompositeMapRenderer from './renderer/Composite.js';\\n/**\\n * @classdesc\\n * The map is the core component of OpenLayers. For a map to render, a view,\\n * one or more layers, and a target container are needed:\\n *\\n *     import Map from 'ol/Map';\\n *     import View from 'ol/View';\\n *     import TileLayer from 'ol/layer/Tile';\\n *     import OSM from 'ol/source/OSM';\\n *\\n *     var map = new Map({\\n *       view: new View({\\n *         center: [0, 0],\\n *         zoom: 1\\n *       }),\\n *       layers: [\\n *         new TileLayer({\\n *           source: new OSM()\\n *         })\\n *       ],\\n *       target: 'map'\\n *     });\\n *\\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\\n * element with the id `map`.\\n *\\n * The constructor places a viewport container (with CSS class name\\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\\n * further elements within the viewport: one with CSS class name\\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\\n * itself is placed in a further element within the viewport.\\n *\\n * Layers are stored as a {@link module:ol/Collection~Collection} in\\n * layerGroups. A top-level group is provided by the library. This is what is\\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\\n * options are added to this group, and `addLayer` and `removeLayer` change the\\n * layer collection in the group. `getLayers` is a convenience function for\\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\\n * options or added with `addLayer` can be groups, which can contain further\\n * groups, and so on.\\n *\\n * @api\\n */\\nvar Map = /** @class */ (function (_super) {\\n    __extends(Map, _super);\\n    /**\\n     * @param {import(\\\"./PluggableMap.js\\\").MapOptions} options Map options.\\n     */\\n    function Map(options) {\\n        var _this = this;\\n        options = assign({}, options);\\n        if (!options.controls) {\\n            options.controls = defaultControls();\\n        }\\n        if (!options.interactions) {\\n            options.interactions = defaultInteractions();\\n        }\\n        _this = _super.call(this, options) || this;\\n        return _this;\\n    }\\n    Map.prototype.createRenderer = function () {\\n        return new CompositeMapRenderer(this);\\n    };\\n    return Map;\\n}(PluggableMap));\\nexport default Map;\\n//# sourceMappingURL=Map.js.map\",\"/**\\n * @module ol/control/util\\n */\\nimport Collection from '../Collection.js';\\nimport Attribution from './Attribution.js';\\nimport Rotate from './Rotate.js';\\nimport Zoom from './Zoom.js';\\n/**\\n * @typedef {Object} DefaultsOptions\\n * @property {boolean} [attribution=true] Include\\n * {@link module:ol/control/Attribution~Attribution}.\\n * @property {import(\\\"./Attribution.js\\\").Options} [attributionOptions]\\n * Options for {@link module:ol/control/Attribution~Attribution}.\\n * @property {boolean} [rotate=true] Include\\n * {@link module:ol/control/Rotate~Rotate}.\\n * @property {import(\\\"./Rotate.js\\\").Options} [rotateOptions] Options\\n * for {@link module:ol/control/Rotate~Rotate}.\\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\\n * @property {import(\\\"./Zoom.js\\\").Options} [zoomOptions] Options for\\n * {@link module:ol/control/Zoom~Zoom}.\\n * @api\\n */\\n/**\\n * Set of controls included in maps by default. Unless configured otherwise,\\n * this returns a collection containing an instance of each of the following\\n * controls:\\n * * {@link module:ol/control/Zoom~Zoom}\\n * * {@link module:ol/control/Rotate~Rotate}\\n * * {@link module:ol/control/Attribution~Attribution}\\n *\\n * @param {DefaultsOptions=} opt_options\\n * Defaults options.\\n * @return {Collection<import(\\\"./Control.js\\\").default>}\\n * Controls.\\n * @function module:ol/control.defaults\\n * @api\\n */\\nexport function defaults(opt_options) {\\n    var options = opt_options ? opt_options : {};\\n    var controls = new Collection();\\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\\n    if (zoomControl) {\\n        controls.push(new Zoom(options.zoomOptions));\\n    }\\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\\n    if (rotateControl) {\\n        controls.push(new Rotate(options.rotateOptions));\\n    }\\n    var attributionControl = options.attribution !== undefined ?\\n        options.attribution : true;\\n    if (attributionControl) {\\n        controls.push(new Attribution(options.attributionOptions));\\n    }\\n    return controls;\\n}\\n//# sourceMappingURL=util.js.map\",\"/**\\n * @module ol/interaction\\n */\\nimport Collection from './Collection.js';\\nimport Kinetic from './Kinetic.js';\\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\\nimport DragPan from './interaction/DragPan.js';\\nimport DragRotate from './interaction/DragRotate.js';\\nimport DragZoom from './interaction/DragZoom.js';\\nimport KeyboardPan from './interaction/KeyboardPan.js';\\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\\nimport PinchRotate from './interaction/PinchRotate.js';\\nimport PinchZoom from './interaction/PinchZoom.js';\\nimport { focus } from './events/condition.js';\\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\\nexport { default as DragBox } from './interaction/DragBox.js';\\nexport { default as DragPan } from './interaction/DragPan.js';\\nexport { default as DragRotate } from './interaction/DragRotate.js';\\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\\nexport { default as DragZoom } from './interaction/DragZoom.js';\\nexport { default as Draw } from './interaction/Draw.js';\\nexport { default as Extent } from './interaction/Extent.js';\\nexport { default as Interaction } from './interaction/Interaction.js';\\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\\nexport { default as Modify } from './interaction/Modify.js';\\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\\nexport { default as Pointer } from './interaction/Pointer.js';\\nexport { default as Select } from './interaction/Select.js';\\nexport { default as Snap } from './interaction/Snap.js';\\nexport { default as Translate } from './interaction/Translate.js';\\n/**\\n * @typedef {Object} DefaultsOptions\\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\\n * desired.\\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\\n * useful when page scroll is desired for maps that do not have the browser's\\n * focus.\\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\\n * desired.\\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\\n * @property {number} [zoomDuration] Duration of the zoom animation in\\n * milliseconds.\\n */\\n/**\\n * Set of interactions included in maps by default. Specific interactions can be\\n * excluded by setting the appropriate option to false in the constructor\\n * options, but the order of the interactions is fixed.  If you want to specify\\n * a different order for interactions, you will need to create your own\\n * {@link module:ol/interaction/Interaction} instances and insert\\n * them into a {@link module:ol/Collection} in the order you want\\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\\n * be of interest if the event propagation needs to be stopped at a point.\\n * The default set of interactions, in sequence, is:\\n * * {@link module:ol/interaction/DragRotate~DragRotate}\\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\\n * * {@link module:ol/interaction/DragPan~DragPan}\\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\\n * * {@link module:ol/interaction/DragZoom~DragZoom}\\n *\\n * @param {DefaultsOptions=} opt_options Defaults options.\\n * @return {import(\\\"./Collection.js\\\").default<import(\\\"./interaction/Interaction.js\\\").default>}\\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\\n * constructor's `interactions` option.\\n * @api\\n */\\nexport function defaults(opt_options) {\\n    var options = opt_options ? opt_options : {};\\n    var interactions = new Collection();\\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\\n        options.altShiftDragRotate : true;\\n    if (altShiftDragRotate) {\\n        interactions.push(new DragRotate());\\n    }\\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\\n        options.doubleClickZoom : true;\\n    if (doubleClickZoom) {\\n        interactions.push(new DoubleClickZoom({\\n            delta: options.zoomDelta,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\\n    if (dragPan) {\\n        interactions.push(new DragPan({\\n            condition: options.onFocusOnly ? focus : undefined,\\n            kinetic: kinetic\\n        }));\\n    }\\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\\n        true;\\n    if (pinchRotate) {\\n        interactions.push(new PinchRotate());\\n    }\\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\\n    if (pinchZoom) {\\n        interactions.push(new PinchZoom({\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\\n    if (keyboard) {\\n        interactions.push(new KeyboardPan());\\n        interactions.push(new KeyboardZoom({\\n            delta: options.zoomDelta,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\\n        options.mouseWheelZoom : true;\\n    if (mouseWheelZoom) {\\n        interactions.push(new MouseWheelZoom({\\n            condition: options.onFocusOnly ? focus : undefined,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\\n        options.shiftDragZoom : true;\\n    if (shiftDragZoom) {\\n        interactions.push(new DragZoom({\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    return interactions;\\n}\\n//# sourceMappingURL=interaction.js.map\",\"/**\\n * @module ol/layer/TileProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    PRELOAD: 'preload',\\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\\n};\\n//# sourceMappingURL=TileProperty.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/BaseTile\\n */\\nimport Layer from './Layer.js';\\nimport TileProperty from './TileProperty.js';\\nimport { assign } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\\n * means no preloading.\\n * @property {import(\\\"../source/Tile.js\\\").default} [source] Source for this layer.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Sets the layer as overlay on a map. The map will not manage\\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\\n * use {@link module:ol/Map#addLayer}.\\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\\n */\\n/**\\n * @classdesc\\n * For layer sources that provide pre-rendered, tiled images in grids that are\\n * organized by zoom levels for specific resolutions.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @extends {Layer<import(\\\"../source/Tile.js\\\").default>}\\n * @api\\n */\\nvar BaseTileLayer = /** @class */ (function (_super) {\\n    __extends(BaseTileLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Tile layer options.\\n     */\\n    function BaseTileLayer(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.preload;\\n        delete baseOptions.useInterimTilesOnError;\\n        _this = _super.call(this, baseOptions) || this;\\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\\n            options.useInterimTilesOnError : true);\\n        return _this;\\n    }\\n    /**\\n    * Return the level as number to which we will preload tiles up to.\\n    * @return {number} The level to preload tiles up to.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.getPreload = function () {\\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\\n    };\\n    /**\\n    * Set the level as number to which we will preload tiles up to.\\n    * @param {number} preload The level to preload tiles up to.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.setPreload = function (preload) {\\n        this.set(TileProperty.PRELOAD, preload);\\n    };\\n    /**\\n    * Whether we use interim tiles on error.\\n    * @return {boolean} Use interim tiles on error.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\\n    };\\n    /**\\n    * Set whether we use interim tiles on error.\\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\\n    };\\n    return BaseTileLayer;\\n}(Layer));\\nexport default BaseTileLayer;\\n//# sourceMappingURL=BaseTile.js.map\",\"/**\\n * @module ol/TileRange\\n */\\n/**\\n * A representation of a contiguous block of tiles.  A tile range is specified\\n * by its min/max tile coordinates and is inclusive of coordinates.\\n */\\nvar TileRange = /** @class */ (function () {\\n    /**\\n     * @param {number} minX Minimum X.\\n     * @param {number} maxX Maximum X.\\n     * @param {number} minY Minimum Y.\\n     * @param {number} maxY Maximum Y.\\n     */\\n    function TileRange(minX, maxX, minY, maxY) {\\n        /**\\n         * @type {number}\\n         */\\n        this.minX = minX;\\n        /**\\n         * @type {number}\\n         */\\n        this.maxX = maxX;\\n        /**\\n         * @type {number}\\n         */\\n        this.minY = minY;\\n        /**\\n         * @type {number}\\n         */\\n        this.maxY = maxY;\\n    }\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {boolean} Contains tile coordinate.\\n     */\\n    TileRange.prototype.contains = function (tileCoord) {\\n        return this.containsXY(tileCoord[1], tileCoord[2]);\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Contains.\\n     */\\n    TileRange.prototype.containsTileRange = function (tileRange) {\\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\\n    };\\n    /**\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @return {boolean} Contains coordinate.\\n     */\\n    TileRange.prototype.containsXY = function (x, y) {\\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Equals.\\n     */\\n    TileRange.prototype.equals = function (tileRange) {\\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     */\\n    TileRange.prototype.extend = function (tileRange) {\\n        if (tileRange.minX < this.minX) {\\n            this.minX = tileRange.minX;\\n        }\\n        if (tileRange.maxX > this.maxX) {\\n            this.maxX = tileRange.maxX;\\n        }\\n        if (tileRange.minY < this.minY) {\\n            this.minY = tileRange.minY;\\n        }\\n        if (tileRange.maxY > this.maxY) {\\n            this.maxY = tileRange.maxY;\\n        }\\n    };\\n    /**\\n     * @return {number} Height.\\n     */\\n    TileRange.prototype.getHeight = function () {\\n        return this.maxY - this.minY + 1;\\n    };\\n    /**\\n     * @return {import(\\\"./size.js\\\").Size} Size.\\n     */\\n    TileRange.prototype.getSize = function () {\\n        return [this.getWidth(), this.getHeight()];\\n    };\\n    /**\\n     * @return {number} Width.\\n     */\\n    TileRange.prototype.getWidth = function () {\\n        return this.maxX - this.minX + 1;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Intersects.\\n     */\\n    TileRange.prototype.intersects = function (tileRange) {\\n        return this.minX <= tileRange.maxX &&\\n            this.maxX >= tileRange.minX &&\\n            this.minY <= tileRange.maxY &&\\n            this.maxY >= tileRange.minY;\\n    };\\n    return TileRange;\\n}());\\n/**\\n * @param {number} minX Minimum X.\\n * @param {number} maxX Maximum X.\\n * @param {number} minY Minimum Y.\\n * @param {number} maxY Maximum Y.\\n * @param {TileRange=} tileRange TileRange.\\n * @return {TileRange} Tile range.\\n */\\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\\n    if (tileRange !== undefined) {\\n        tileRange.minX = minX;\\n        tileRange.maxX = maxX;\\n        tileRange.minY = minY;\\n        tileRange.maxY = maxY;\\n        return tileRange;\\n    }\\n    else {\\n        return new TileRange(minX, maxX, minY, maxY);\\n    }\\n}\\nexport default TileRange;\\n//# sourceMappingURL=TileRange.js.map\",\"/**\\n * @module ol/structs/LRUCache\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { assert } from '../asserts.js';\\nimport EventTarget from '../events/Target.js';\\nimport EventType from '../events/EventType.js';\\n/**\\n * @typedef {Object} Entry\\n * @property {string} key_\\n * @property {Object} newer\\n * @property {Object} older\\n * @property {*} value_\\n */\\n/**\\n * @classdesc\\n * Implements a Least-Recently-Used cache where the keys do not conflict with\\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\\n * items from the cache is the responsibility of the user.\\n *\\n * @fires import(\\\"../events/Event.js\\\").Event\\n * @template T\\n */\\nvar LRUCache = /** @class */ (function (_super) {\\n    __extends(LRUCache, _super);\\n    /**\\n     * @param {number=} opt_highWaterMark High water mark.\\n     */\\n    function LRUCache(opt_highWaterMark) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {number}\\n         */\\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.count_ = 0;\\n        /**\\n         * @private\\n         * @type {!Object<string, Entry>}\\n         */\\n        _this.entries_ = {};\\n        /**\\n         * @private\\n         * @type {?Entry}\\n         */\\n        _this.oldest_ = null;\\n        /**\\n         * @private\\n         * @type {?Entry}\\n         */\\n        _this.newest_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    LRUCache.prototype.canExpireCache = function () {\\n        return this.getCount() > this.highWaterMark;\\n    };\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    LRUCache.prototype.clear = function () {\\n        this.count_ = 0;\\n        this.entries_ = {};\\n        this.oldest_ = null;\\n        this.newest_ = null;\\n        this.dispatchEvent(EventType.CLEAR);\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @return {boolean} Contains key.\\n     */\\n    LRUCache.prototype.containsKey = function (key) {\\n        return this.entries_.hasOwnProperty(key);\\n    };\\n    /**\\n     * @param {function(T, string, LRUCache): ?} f The function\\n     *     to call for every entry from the oldest to the newer. This function takes\\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\\n     *     The return value is ignored.\\n     */\\n    LRUCache.prototype.forEach = function (f) {\\n        var entry = this.oldest_;\\n        while (entry) {\\n            f(entry.value_, entry.key_, this);\\n            entry = entry.newer;\\n        }\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {*=} opt_options Options (reserverd for subclasses).\\n     * @return {T} Value.\\n     */\\n    LRUCache.prototype.get = function (key, opt_options) {\\n        var entry = this.entries_[key];\\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\\n        if (entry === this.newest_) {\\n            return entry.value_;\\n        }\\n        else if (entry === this.oldest_) {\\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\\n            this.oldest_.older = null;\\n        }\\n        else {\\n            entry.newer.older = entry.older;\\n            entry.older.newer = entry.newer;\\n        }\\n        entry.newer = null;\\n        entry.older = this.newest_;\\n        this.newest_.newer = entry;\\n        this.newest_ = entry;\\n        return entry.value_;\\n    };\\n    /**\\n     * Remove an entry from the cache.\\n     * @param {string} key The entry key.\\n     * @return {T} The removed entry.\\n     */\\n    LRUCache.prototype.remove = function (key) {\\n        var entry = this.entries_[key];\\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\\n        if (entry === this.newest_) {\\n            this.newest_ = /** @type {Entry} */ (entry.older);\\n            if (this.newest_) {\\n                this.newest_.newer = null;\\n            }\\n        }\\n        else if (entry === this.oldest_) {\\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\\n            if (this.oldest_) {\\n                this.oldest_.older = null;\\n            }\\n        }\\n        else {\\n            entry.newer.older = entry.older;\\n            entry.older.newer = entry.newer;\\n        }\\n        delete this.entries_[key];\\n        --this.count_;\\n        return entry.value_;\\n    };\\n    /**\\n     * @return {number} Count.\\n     */\\n    LRUCache.prototype.getCount = function () {\\n        return this.count_;\\n    };\\n    /**\\n     * @return {Array<string>} Keys.\\n     */\\n    LRUCache.prototype.getKeys = function () {\\n        var keys = new Array(this.count_);\\n        var i = 0;\\n        var entry;\\n        for (entry = this.newest_; entry; entry = entry.older) {\\n            keys[i++] = entry.key_;\\n        }\\n        return keys;\\n    };\\n    /**\\n     * @return {Array<T>} Values.\\n     */\\n    LRUCache.prototype.getValues = function () {\\n        var values = new Array(this.count_);\\n        var i = 0;\\n        var entry;\\n        for (entry = this.newest_; entry; entry = entry.older) {\\n            values[i++] = entry.value_;\\n        }\\n        return values;\\n    };\\n    /**\\n     * @return {T} Last value.\\n     */\\n    LRUCache.prototype.peekLast = function () {\\n        return this.oldest_.value_;\\n    };\\n    /**\\n     * @return {string} Last key.\\n     */\\n    LRUCache.prototype.peekLastKey = function () {\\n        return this.oldest_.key_;\\n    };\\n    /**\\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\\n     * @return {string} The newest key.\\n     */\\n    LRUCache.prototype.peekFirstKey = function () {\\n        return this.newest_.key_;\\n    };\\n    /**\\n     * @return {T} value Value.\\n     */\\n    LRUCache.prototype.pop = function () {\\n        var entry = this.oldest_;\\n        delete this.entries_[entry.key_];\\n        if (entry.newer) {\\n            entry.newer.older = null;\\n        }\\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\\n        if (!this.oldest_) {\\n            this.newest_ = null;\\n        }\\n        --this.count_;\\n        return entry.value_;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {T} value Value.\\n     */\\n    LRUCache.prototype.replace = function (key, value) {\\n        this.get(key); // update `newest_`\\n        this.entries_[key].value_ = value;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {T} value Value.\\n     */\\n    LRUCache.prototype.set = function (key, value) {\\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\\n        var entry = {\\n            key_: key,\\n            newer: null,\\n            older: this.newest_,\\n            value_: value\\n        };\\n        if (!this.newest_) {\\n            this.oldest_ = entry;\\n        }\\n        else {\\n            this.newest_.newer = entry;\\n        }\\n        this.newest_ = entry;\\n        this.entries_[key] = entry;\\n        ++this.count_;\\n    };\\n    /**\\n     * Set a maximum number of entries for the cache.\\n     * @param {number} size Cache size.\\n     * @api\\n     */\\n    LRUCache.prototype.setSize = function (size) {\\n        this.highWaterMark = size;\\n    };\\n    return LRUCache;\\n}(EventTarget));\\nexport default LRUCache;\\n//# sourceMappingURL=LRUCache.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { getUid } from '../../util.js';\\nimport LRUCache from '../../structs/LRUCache.js';\\n/**\\n * @module ol/render/canvas/LabelCache\\n */\\n/**\\n * @classdesc\\n * Cache of pre-rendered labels.\\n * @fires import(\\\"../events/Event.js\\\").Event\\n */\\nvar LabelCache = /** @class */ (function (_super) {\\n    __extends(LabelCache, _super);\\n    /**\\n     * @inheritDoc\\n     */\\n    function LabelCache(opt_highWaterMark) {\\n        var _this = _super.call(this, opt_highWaterMark) || this;\\n        _this.consumers = {};\\n        return _this;\\n    }\\n    LabelCache.prototype.clear = function () {\\n        _super.prototype.clear.call(this);\\n        this.consumers = {};\\n    };\\n    /**\\n     * @override\\n     * @param {string} key Label key.\\n     * @param {import(\\\"./Executor.js\\\").default} consumer Label consumer.\\n     * @return {HTMLCanvasElement} Label.\\n     */\\n    LabelCache.prototype.get = function (key, consumer) {\\n        var canvas = _super.prototype.get.call(this, key);\\n        var consumerId = getUid(consumer);\\n        if (!(consumerId in this.consumers)) {\\n            this.consumers[consumerId] = {};\\n        }\\n        this.consumers[consumerId][key] = true;\\n        return canvas;\\n    };\\n    LabelCache.prototype.prune = function () {\\n        outer: while (this.canExpireCache()) {\\n            var key = this.peekLastKey();\\n            for (var consumerId in this.consumers) {\\n                if (key in this.consumers[consumerId]) {\\n                    break outer;\\n                }\\n            }\\n            var canvas = this.pop();\\n            canvas.width = canvas.height = 0;\\n            for (var consumerId in this.consumers) {\\n                delete this.consumers[consumerId][key];\\n            }\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./Executor.js\\\").default} consumer Label consumer.\\n     */\\n    LabelCache.prototype.release = function (consumer) {\\n        delete this.consumers[getUid(consumer)];\\n    };\\n    return LabelCache;\\n}(LRUCache));\\nexport default LabelCache;\\n//# sourceMappingURL=LabelCache.js.map\",\"/**\\n * @module ol/render/canvas\\n */\\nimport { getFontFamilies } from '../css.js';\\nimport { createCanvasContext2D } from '../dom.js';\\nimport { clear } from '../obj.js';\\nimport { create as createTransform } from '../transform.js';\\nimport LabelCache from './canvas/LabelCache.js';\\n/**\\n * @typedef {Object} FillState\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} fillStyle\\n */\\n/**\\n * @typedef {Object} FillStrokeState\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [currentFillStyle]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [currentStrokeStyle]\\n * @property {string} [currentLineCap]\\n * @property {Array<number>} currentLineDash\\n * @property {number} [currentLineDashOffset]\\n * @property {string} [currentLineJoin]\\n * @property {number} [currentLineWidth]\\n * @property {number} [currentMiterLimit]\\n * @property {number} [lastStroke]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [fillStyle]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [strokeStyle]\\n * @property {string} [lineCap]\\n * @property {Array<number>} lineDash\\n * @property {number} [lineDashOffset]\\n * @property {string} [lineJoin]\\n * @property {number} [lineWidth]\\n * @property {number} [miterLimit]\\n */\\n/**\\n * @typedef {Object} StrokeState\\n * @property {string} lineCap\\n * @property {Array<number>} lineDash\\n * @property {number} lineDashOffset\\n * @property {string} lineJoin\\n * @property {number} lineWidth\\n * @property {number} miterLimit\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} strokeStyle\\n */\\n/**\\n * @typedef {Object} TextState\\n * @property {string} font\\n * @property {string} [textAlign]\\n * @property {string} textBaseline\\n * @property {string} [placement]\\n * @property {number} [maxAngle]\\n * @property {boolean} [overflow]\\n * @property {import(\\\"../style/Fill.js\\\").default} [backgroundFill]\\n * @property {import(\\\"../style/Stroke.js\\\").default} [backgroundStroke]\\n * @property {number} [scale]\\n * @property {Array<number>} [padding]\\n */\\n/**\\n * Container for decluttered replay instructions that need to be rendered or\\n * omitted together, i.e. when styles render both an image and text, or for the\\n * characters that form text along lines. The basic elements of this array are\\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\\n * rendered extent of the group in pixel space. `count` is the number of styles\\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\\n * In addition to these four elements, declutter instruction arrays (i.e. the\\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\\n * @typedef {Array<*>} DeclutterGroup\\n */\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultFont = '10px sans-serif';\\n/**\\n * @const\\n * @type {import(\\\"../colorlike.js\\\").ColorLike}\\n */\\nexport var defaultFillStyle = '#000';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultLineCap = 'round';\\n/**\\n * @const\\n * @type {Array<number>}\\n */\\nexport var defaultLineDash = [];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultLineDashOffset = 0;\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultLineJoin = 'round';\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultMiterLimit = 10;\\n/**\\n * @const\\n * @type {import(\\\"../colorlike.js\\\").ColorLike}\\n */\\nexport var defaultStrokeStyle = '#000';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultTextAlign = 'center';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultTextBaseline = 'middle';\\n/**\\n * @const\\n * @type {Array<number>}\\n */\\nexport var defaultPadding = [0, 0, 0, 0];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultLineWidth = 1;\\n/**\\n * The label cache for text rendering. To change the default cache size of 2048\\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\\n * @type {LabelCache}\\n * @api\\n */\\nexport var labelCache = new LabelCache();\\n/**\\n * @type {!Object<string, number>}\\n */\\nexport var checkedFonts = {};\\n/**\\n * @type {CanvasRenderingContext2D}\\n */\\nvar measureContext = null;\\n/**\\n * @type {!Object<string, number>}\\n */\\nexport var textHeights = {};\\n/**\\n * Clears the label cache when a font becomes available.\\n * @param {string} fontSpec CSS font spec.\\n */\\nexport var checkFont = (function () {\\n    var retries = 60;\\n    var checked = checkedFonts;\\n    var size = '32px ';\\n    var referenceFonts = ['monospace', 'serif'];\\n    var len = referenceFonts.length;\\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\\\uF013';\\n    var interval, referenceWidth;\\n    function isAvailable(font) {\\n        var context = getMeasureContext();\\n        // Check weight ranges according to\\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\\n        for (var weight = 100; weight <= 700; weight += 300) {\\n            var fontWeight = weight + ' ';\\n            var available = true;\\n            for (var i = 0; i < len; ++i) {\\n                var referenceFont = referenceFonts[i];\\n                context.font = fontWeight + size + referenceFont;\\n                referenceWidth = context.measureText(text).width;\\n                if (font != referenceFont) {\\n                    context.font = fontWeight + size + font + ',' + referenceFont;\\n                    var width = context.measureText(text).width;\\n                    // If width and referenceWidth are the same, then the fallback was used\\n                    // instead of the font we wanted, so the font is not available.\\n                    available = available && width != referenceWidth;\\n                }\\n            }\\n            if (available) {\\n                // Consider font available when it is available in one weight range.\\n                //FIXME With this we miss rare corner cases, so we should consider\\n                //FIXME checking availability for each requested weight range.\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    function check() {\\n        var done = true;\\n        for (var font in checked) {\\n            if (checked[font] < retries) {\\n                if (isAvailable(font)) {\\n                    checked[font] = retries;\\n                    clear(textHeights);\\n                    // Make sure that loaded fonts are picked up by Safari\\n                    measureContext = null;\\n                    labelCache.clear();\\n                }\\n                else {\\n                    ++checked[font];\\n                    done = false;\\n                }\\n            }\\n        }\\n        if (done) {\\n            clearInterval(interval);\\n            interval = undefined;\\n        }\\n    }\\n    return function (fontSpec) {\\n        var fontFamilies = getFontFamilies(fontSpec);\\n        if (!fontFamilies) {\\n            return;\\n        }\\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\\n            var fontFamily = fontFamilies[i];\\n            if (!(fontFamily in checked)) {\\n                checked[fontFamily] = retries;\\n                if (!isAvailable(fontFamily)) {\\n                    checked[fontFamily] = 0;\\n                    if (interval === undefined) {\\n                        interval = setInterval(check, 32);\\n                    }\\n                }\\n            }\\n        }\\n    };\\n})();\\n/**\\n * @return {CanvasRenderingContext2D} Measure context.\\n */\\nfunction getMeasureContext() {\\n    if (!measureContext) {\\n        measureContext = createCanvasContext2D(1, 1);\\n    }\\n    return measureContext;\\n}\\n/**\\n * @param {string} font Font to use for measuring.\\n * @return {import(\\\"../size.js\\\").Size} Measurement.\\n */\\nexport var measureTextHeight = (function () {\\n    var div;\\n    var heights = textHeights;\\n    return function (font) {\\n        var height = heights[font];\\n        if (height == undefined) {\\n            if (!div) {\\n                div = document.createElement('div');\\n                div.innerHTML = 'M';\\n                div.style.margin = div.style.padding = '0 !important';\\n                div.style.position = 'absolute !important';\\n                div.style.left = '-99999px !important';\\n            }\\n            div.style.font = font;\\n            document.body.appendChild(div);\\n            height = heights[font] = div.offsetHeight;\\n            document.body.removeChild(div);\\n        }\\n        return height;\\n    };\\n})();\\n/**\\n * @param {string} font Font.\\n * @param {string} text Text.\\n * @return {number} Width.\\n */\\nexport function measureTextWidth(font, text) {\\n    var measureContext = getMeasureContext();\\n    if (font != measureContext.font) {\\n        measureContext.font = font;\\n    }\\n    return measureContext.measureText(text).width;\\n}\\n/**\\n * Measure text width using a cache.\\n * @param {string} font The font.\\n * @param {string} text The text to measure.\\n * @param {Object<string, number>} cache A lookup of cached widths by text.\\n * @returns {number} The text width.\\n */\\nexport function measureAndCacheTextWidth(font, text, cache) {\\n    if (text in cache) {\\n        return cache[text];\\n    }\\n    var width = cache[text] = measureTextWidth(font, text);\\n    return width;\\n}\\n/**\\n * @param {string} font Font to use for measuring.\\n * @param {Array<string>} lines Lines to measure.\\n * @param {Array<number>} widths Array will be populated with the widths of\\n * each line.\\n * @return {number} Width of the whole text.\\n */\\nexport function measureTextWidths(font, lines, widths) {\\n    var numLines = lines.length;\\n    var width = 0;\\n    for (var i = 0; i < numLines; ++i) {\\n        var currentWidth = measureTextWidth(font, lines[i]);\\n        width = Math.max(width, currentWidth);\\n        widths.push(currentWidth);\\n    }\\n    return width;\\n}\\n/**\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {number} rotation Rotation.\\n * @param {number} offsetX X offset.\\n * @param {number} offsetY Y offset.\\n */\\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\\n    if (rotation !== 0) {\\n        context.translate(offsetX, offsetY);\\n        context.rotate(rotation);\\n        context.translate(-offsetX, -offsetY);\\n    }\\n}\\nexport var resetTransform = createTransform();\\n/**\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {import(\\\"../transform.js\\\").Transform|null} transform Transform.\\n * @param {number} opacity Opacity.\\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\\n * @param {number} originX Origin X.\\n * @param {number} originY Origin Y.\\n * @param {number} w Width.\\n * @param {number} h Height.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {number} scale Scale.\\n */\\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\\n    var alpha;\\n    if (opacity != 1) {\\n        alpha = context.globalAlpha;\\n        context.globalAlpha = alpha * opacity;\\n    }\\n    if (transform) {\\n        context.setTransform.apply(context, transform);\\n    }\\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\\n    if (alpha) {\\n        context.globalAlpha = alpha;\\n    }\\n    if (transform) {\\n        context.setTransform.apply(context, resetTransform);\\n    }\\n}\\n//# sourceMappingURL=canvas.js.map\",\"/**\\n * @module ol/ImageState\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    IDLE: 0,\\n    LOADING: 1,\\n    LOADED: 2,\\n    ERROR: 3\\n};\\n//# sourceMappingURL=ImageState.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Layer\\n */\\nimport { abstract } from '../util.js';\\nimport ImageState from '../ImageState.js';\\nimport Observable from '../Observable.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport SourceState from '../source/State.js';\\nvar LayerRenderer = /** @class */ (function (_super) {\\n    __extends(LayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n     */\\n    function LayerRenderer(layer) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../layer/Layer.js\\\").default}\\n         */\\n        _this.layer_ = layer;\\n        return _this;\\n    }\\n    /**\\n     * Determine whether render should be called.\\n     * @abstract\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../layer/Layer.js\\\").State} layerState Layer state.\\n     * @return {boolean} Layer is ready to be rendered.\\n     */\\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        return abstract();\\n    };\\n    /**\\n     * Render the layer.\\n     * @abstract\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../layer/Layer.js\\\").State} layerState Layer state.\\n     * @return {HTMLElement} The rendered element.\\n     */\\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {Object<number, Object<string, import(\\\"../Tile.js\\\").default>>} tiles Lookup of loaded tiles by zoom level.\\n     * @param {number} zoom Zoom level.\\n     * @param {import(\\\"../Tile.js\\\").default} tile Tile.\\n     */\\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\\n        if (!tiles[zoom]) {\\n            tiles[zoom] = {};\\n        }\\n        tiles[zoom][tile.tileCoord.toString()] = tile;\\n    };\\n    /**\\n     * Create a function that adds loaded tiles to the tile lookup.\\n     * @param {import(\\\"../source/Tile.js\\\").default} source Tile source.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection of the tiles.\\n     * @param {Object<number, Object<string, import(\\\"../Tile.js\\\").default>>} tiles Lookup of loaded tiles by zoom level.\\n     * @return {function(number, import(\\\"../TileRange.js\\\").default):boolean} A function that can be\\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\\n     * @protected\\n     */\\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\\n        return (\\n        /**\\n         * @param {number} zoom Zoom level.\\n         * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n         * @return {boolean} The tile range is fully loaded.\\n         * @this {LayerRenderer}\\n         */\\n        function (zoom, tileRange) {\\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\\n        }).bind(this);\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(import(\\\"../Feature.js\\\").FeatureLike, import(\\\"../layer/Layer.js\\\").default): T} callback Feature callback.\\n     * @return {T|void} Callback result.\\n     * @template T\\n     */\\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\\n     *    location, null will be returned.  If there is data, but pixel values cannot be\\n     *    returned, and empty array will be returned.\\n     */\\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\\n        return abstract();\\n    };\\n    /**\\n     * @return {import(\\\"../layer/Layer.js\\\").default} Layer.\\n     */\\n    LayerRenderer.prototype.getLayer = function () {\\n        return this.layer_;\\n    };\\n    /**\\n     * Handle changes in image state.\\n     * @param {import(\\\"../events/Event.js\\\").default} event Image change event.\\n     * @private\\n     */\\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\\n        var image = /** @type {import(\\\"../Image.js\\\").default} */ (event.target);\\n        if (image.getState() === ImageState.LOADED) {\\n            this.renderIfReadyAndVisible();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {boolean} Is there a feature at the given coordinate?\\n     */\\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\\n        return false;\\n    };\\n    /**\\n     * Load the image if not already loaded, and register the image change\\n     * listener if needed.\\n     * @param {import(\\\"../ImageBase.js\\\").default} image Image.\\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\\n     * @protected\\n     */\\n    LayerRenderer.prototype.loadImage = function (image) {\\n        var imageState = image.getState();\\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\\n        }\\n        if (imageState == ImageState.IDLE) {\\n            image.load();\\n            imageState = image.getState();\\n        }\\n        return imageState == ImageState.LOADED;\\n    };\\n    /**\\n     * @protected\\n     */\\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\\n        var layer = this.getLayer();\\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\\n            layer.changed();\\n        }\\n    };\\n    return LayerRenderer;\\n}(Observable));\\nexport default LayerRenderer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/Layer\\n */\\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\\nimport { createCanvasContext2D } from '../../dom.js';\\nimport RenderEvent from '../../render/Event.js';\\nimport RenderEventType from '../../render/EventType.js';\\nimport { rotateAtOffset } from '../../render/canvas.js';\\nimport LayerRenderer from '../Layer.js';\\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\\n/**\\n * @abstract\\n */\\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Layer.js\\\").default} layer Layer.\\n     */\\n    function CanvasLayerRenderer(layer) {\\n        var _this = _super.call(this, layer) || this;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.renderedResolution;\\n        /**\\n         * A temporary transform.  The values in this transform should only be used in a\\n         * function that sets the values.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.tempTransform_ = createTransform();\\n        /**\\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\\n         * be set when rendering a frame and may be used by other functions after rendering.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.pixelTransform_ = createTransform();\\n        /**\\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\\n         * be set when rendering a frame and may be used by other functions after rendering.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.inversePixelTransform_ = createTransform();\\n        /**\\n         * @protected\\n         * @type {CanvasRenderingContext2D}\\n         */\\n        _this.context = createCanvasContext2D();\\n        var canvas = _this.context.canvas;\\n        canvas.style.position = 'absolute';\\n        canvas.style.transformOrigin = 'top left';\\n        canvas.className = _this.getLayer().getClassName();\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\\n        this.context.canvas.width = this.context.canvas.height = 0;\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Clip extent.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\\n        var pixelRatio = frameState.pixelRatio;\\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\\n        var rotation = frameState.viewState.rotation;\\n        var topLeft = getTopLeft(extent);\\n        var topRight = getTopRight(extent);\\n        var bottomRight = getBottomRight(extent);\\n        var bottomLeft = getBottomLeft(extent);\\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\\n        context.save();\\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\\n        context.beginPath();\\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\\n        context.clip();\\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Clip extent.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\\n        var topLeft = getTopLeft(extent);\\n        var topRight = getTopRight(extent);\\n        var bottomRight = getBottomRight(extent);\\n        var bottomLeft = getBottomLeft(extent);\\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\\n        var inverted = this.inversePixelTransform_;\\n        applyTransform(inverted, topLeft);\\n        applyTransform(inverted, topRight);\\n        applyTransform(inverted, bottomRight);\\n        applyTransform(inverted, bottomLeft);\\n        context.save();\\n        context.beginPath();\\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\\n        context.clip();\\n    };\\n    /**\\n     * @param {import(\\\"../../render/EventType.js\\\").default} type Event type.\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @private\\n     */\\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\\n        var layer = this.getLayer();\\n        if (layer.hasListener(type)) {\\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\\n            layer.dispatchEvent(event_1);\\n        }\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\\n    };\\n    /**\\n     * Creates a transform for rendering to an element that will be rotated after rendering.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} width Width of the rendered element (in pixels).\\n     * @param {number} height Height of the rendered element (in pixels).\\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\\n     * @protected\\n     * @return {!import(\\\"../../transform.js\\\").Transform} Transform.\\n     */\\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\\n        var viewState = frameState.viewState;\\n        var pixelRatio = frameState.pixelRatio;\\n        var dx1 = width / 2;\\n        var dy1 = height / 2;\\n        var sx = pixelRatio / viewState.resolution;\\n        var sy = -sx;\\n        var dx2 = -viewState.center[0] + offsetX;\\n        var dy2 = -viewState.center[1];\\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\\n    };\\n    /**\\n     * @param {import(\\\"../../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\\n     *    location, null will be returned.  If there is data, but pixel values cannot be\\n     *    returned, and empty array will be returned.\\n     */\\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\\n        var context = this.context;\\n        var data;\\n        try {\\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\\n        }\\n        catch (err) {\\n            if (err.name === 'SecurityError') {\\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\\n                return new Uint8Array();\\n            }\\n            return data;\\n        }\\n        if (data[3] === 0) {\\n            return null;\\n        }\\n        return data;\\n    };\\n    return CanvasLayerRenderer;\\n}(LayerRenderer));\\nexport default CanvasLayerRenderer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/TileLayer\\n */\\nimport { getUid } from '../../util.js';\\nimport TileRange from '../../TileRange.js';\\nimport TileState from '../../TileState.js';\\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\\nimport CanvasLayerRenderer from './Layer.js';\\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\\n/**\\n * @classdesc\\n * Canvas renderer for tile layers.\\n * @api\\n */\\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasTileLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Tile.js\\\").default|import(\\\"../../layer/VectorTile.js\\\").default} tileLayer Tile layer.\\n     */\\n    function CanvasTileLayerRenderer(tileLayer) {\\n        var _this = _super.call(this, tileLayer) || this;\\n        /**\\n         * Rendered extent has changed since the previous `renderFrame()` call\\n         * @type {boolean}\\n         */\\n        _this.extentChanged = true;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.renderedExtent_ = null;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.renderedRevision;\\n        /**\\n         * @protected\\n         * @type {!Array<import(\\\"../../Tile.js\\\").default>}\\n         */\\n        _this.renderedTiles = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.newTiles_ = false;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.tmpExtent = createEmpty();\\n        /**\\n         * @private\\n         * @type {import(\\\"../../TileRange.js\\\").default}\\n         */\\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.zDirection = 0;\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @return {boolean} Tile is drawable.\\n     */\\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileState = tile.getState();\\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\\n        return tileState == TileState.LOADED ||\\n            tileState == TileState.EMPTY ||\\n            tileState == TileState.ERROR && !useInterimTilesOnError;\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {!import(\\\"../../Tile.js\\\").default} Tile.\\n     */\\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\\n        var pixelRatio = frameState.pixelRatio;\\n        var projection = frameState.viewState.projection;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\\n        if (tile.getState() == TileState.ERROR) {\\n            if (!tileLayer.getUseInterimTilesOnError()) {\\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\\n                tile.setState(TileState.LOADED);\\n            }\\n            else if (tileLayer.getPreload() > 0) {\\n                // Preloaded tiles for lower resolutions might have finished loading.\\n                this.newTiles_ = true;\\n            }\\n        }\\n        if (!this.isDrawableTile(tile)) {\\n            tile = tile.getInterimTile();\\n        }\\n        return tile;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\\n        if (this.isDrawableTile(tile)) {\\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        return true;\\n    };\\n    /**\\n     * TODO: File a TypeScript issue about inheritDoc not being followed\\n     * all the way.  Without this explicit return type, the VectorTileLayer\\n     * renderFrame function does not pass.\\n     *\\n     * @inheritDoc\\n     * @returns {HTMLElement} The rendered element.\\n     */\\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        var context = this.context;\\n        var viewState = frameState.viewState;\\n        var projection = viewState.projection;\\n        var viewResolution = viewState.resolution;\\n        var viewCenter = viewState.center;\\n        var rotation = viewState.rotation;\\n        var pixelRatio = frameState.pixelRatio;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        var sourceRevision = tileSource.getRevision();\\n        var tileGrid = tileSource.getTileGridForProjection(projection);\\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\\n        var tileResolution = tileGrid.getResolution(z);\\n        var extent = frameState.extent;\\n        if (layerState.extent) {\\n            extent = getIntersection(extent, layerState.extent);\\n        }\\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\\n        // desired dimensions of the canvas in pixels\\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\\n        if (rotation) {\\n            var size = Math.round(Math.sqrt(width * width + height * height));\\n            width = height = size;\\n        }\\n        var dx = tileResolution * width / 2 / tilePixelRatio;\\n        var dy = tileResolution * height / 2 / tilePixelRatio;\\n        var canvasExtent = [\\n            viewCenter[0] - dx,\\n            viewCenter[1] - dy,\\n            viewCenter[0] + dx,\\n            viewCenter[1] + dy\\n        ];\\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n        /**\\n         * @type {Object<number, Object<string, import(\\\"../../Tile.js\\\").default>>}\\n         */\\n        var tilesToDrawByZ = {};\\n        tilesToDrawByZ[z] = {};\\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\\n        var tmpExtent = this.tmpExtent;\\n        var tmpTileRange = this.tmpTileRange_;\\n        this.newTiles_ = false;\\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                var tile = this.getTile(z, x, y, frameState);\\n                if (this.isDrawableTile(tile)) {\\n                    var uid = getUid(this);\\n                    if (tile.getState() == TileState.LOADED) {\\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\\n                        var inTransition = tile.inTransition(uid);\\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\\n                            this.newTiles_ = true;\\n                        }\\n                    }\\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\\n                        // don't look for alt tiles if alpha is 1\\n                        continue;\\n                    }\\n                }\\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\\n                var covered = false;\\n                if (childTileRange) {\\n                    covered = findLoadedTiles(z + 1, childTileRange);\\n                }\\n                if (!covered) {\\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\\n                }\\n            }\\n        }\\n        var canvas = context.canvas;\\n        var canvasScale = tileResolution / viewResolution;\\n        // set forward and inverse pixel transforms\\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\\n        // set scale transform for calculating tile positions on the canvas\\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\\n        if (canvas.width != width || canvas.height != height) {\\n            canvas.width = width;\\n            canvas.height = height;\\n        }\\n        else {\\n            context.clearRect(0, 0, width, height);\\n        }\\n        if (layerState.extent) {\\n            this.clipUnrotated(context, frameState, layerState.extent);\\n        }\\n        this.preRender(context, frameState);\\n        this.renderedTiles.length = 0;\\n        /** @type {Array<number>} */\\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\\n        zs.sort(function (a, b) {\\n            if (a === z) {\\n                return 1;\\n            }\\n            else if (b === z) {\\n                return -1;\\n            }\\n            else {\\n                return a > b ? 1 : a < b ? -1 : 0;\\n            }\\n        });\\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\\n            var currentZ = zs[i];\\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\\n            var currentResolution = tileGrid.getResolution(currentZ);\\n            var currentScale = currentResolution / tileResolution;\\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\\n            var origin_1 = applyTransform(this.tempTransform_, [\\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\\n            ]);\\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\\n            var tilesToDraw = tilesToDrawByZ[currentZ];\\n            for (var tileCoordKey in tilesToDraw) {\\n                var tile = tilesToDraw[tileCoordKey];\\n                var tileCoord = tile.tileCoord;\\n                // Calculate integer positions and sizes so that tiles align\\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\\n                var nextX = Math.round(floatX + dx_1);\\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\\n                var nextY = Math.round(floatY + dy_1);\\n                var x = Math.round(floatX);\\n                var y = Math.round(floatY);\\n                var w = nextX - x;\\n                var h = nextY - y;\\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\\n                this.renderedTiles.push(tile);\\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\\n            }\\n        }\\n        this.renderedRevision = sourceRevision;\\n        this.renderedResolution = tileResolution;\\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\\n        this.renderedExtent_ = canvasExtent;\\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\\n        this.updateCacheSize_(frameState, tileSource);\\n        this.scheduleExpireCache(frameState, tileSource);\\n        this.postRender(context, frameState);\\n        if (layerState.extent) {\\n            context.restore();\\n        }\\n        var opacity = layerState.opacity;\\n        if (opacity !== parseFloat(canvas.style.opacity)) {\\n            canvas.style.opacity = opacity;\\n        }\\n        var canvasTransform = transformToString(this.pixelTransform_);\\n        if (canvasTransform !== canvas.style.transform) {\\n            canvas.style.transform = canvasTransform;\\n        }\\n        return canvas;\\n    };\\n    /**\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} x Left of the tile.\\n     * @param {number} y Top of the tile.\\n     * @param {number} w Width of the tile.\\n     * @param {number} h Height of the tile.\\n     * @param {number} gutter Tile gutter.\\n     * @param {boolean} transition Apply an alpha transition.\\n     */\\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\\n        var image = this.getTileImage(tile);\\n        if (!image) {\\n            return;\\n        }\\n        var uid = getUid(this);\\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\\n            this.context.clearRect(x, y, w, h);\\n        }\\n        var alphaChanged = alpha !== this.context.globalAlpha;\\n        if (alphaChanged) {\\n            this.context.save();\\n            this.context.globalAlpha = alpha;\\n        }\\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\\n        if (alphaChanged) {\\n            this.context.restore();\\n        }\\n        if (alpha !== 1) {\\n            frameState.animate = true;\\n        }\\n        else if (transition) {\\n            tile.endTransition(uid);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.getImage = function () {\\n        var context = this.context;\\n        return context ? context.canvas : null;\\n    };\\n    /**\\n     * Get the image from a tile.\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\\n        return /** @type {import(\\\"../../ImageTile.js\\\").default} */ (tile).getImage();\\n    };\\n    /**\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\\n        if (tileSource.canExpireCache()) {\\n            /**\\n             * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n             * @param {import(\\\"../../PluggableMap.js\\\").default} map Map.\\n             * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n             */\\n            var postRenderFunction = function (tileSource, map, frameState) {\\n                var tileSourceKey = getUid(tileSource);\\n                if (tileSourceKey in frameState.usedTiles) {\\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\\n                }\\n            }.bind(null, tileSource);\\n            frameState.postRenderFunctions.push(\\n            /** @type {import(\\\"../../PluggableMap.js\\\").PostRenderFunction} */ (postRenderFunction));\\n        }\\n    };\\n    /**\\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @param {import('../../Tile.js').default} tile Tile.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\\n        // FIXME should we use tilesToDrawByZ instead?\\n        var tileSourceKey = getUid(tileSource);\\n        if (!(tileSourceKey in usedTiles)) {\\n            usedTiles[tileSourceKey] = {};\\n        }\\n        usedTiles[tileSourceKey][tile.getKey()] = true;\\n    };\\n    /**\\n     * Check if the cache is big enough, and increase its size if necessary.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @private\\n     */\\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\\n        var tileSourceKey = getUid(tileSource);\\n        var size = 0;\\n        if (tileSourceKey in frameState.usedTiles) {\\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\\n        }\\n        if (tileSourceKey in frameState.wantedTiles) {\\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\\n        }\\n        var tileCache = tileSource.tileCache;\\n        if (tileCache.highWaterMark < size) {\\n            tileCache.highWaterMark = size;\\n        }\\n    };\\n    /**\\n     * Manage tile pyramid.\\n     * This function performs a number of functions related to the tiles at the\\n     * current zoom and lower zoom levels:\\n     * - registers idle tiles in frameState.wantedTiles so that they are not\\n     *   discarded by the tile queue\\n     * - enqueues missing tiles\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @param {import(\\\"../../tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../../proj/Projection.js\\\").default} projection Projection.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n     * @param {number} currentZ Current Z.\\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\\n     * @param {function(import(\\\"../../Tile.js\\\").default)=} opt_tileCallback Tile callback.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\\n        var tileSourceKey = getUid(tileSource);\\n        if (!(tileSourceKey in frameState.wantedTiles)) {\\n            frameState.wantedTiles[tileSourceKey] = {};\\n        }\\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\\n        var tileQueue = frameState.tileQueue;\\n        var minZoom = tileGrid.getMinZoom();\\n        var tile, tileRange, tileResolution, x, y, z;\\n        for (z = minZoom; z <= currentZ; ++z) {\\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\\n            tileResolution = tileGrid.getResolution(z);\\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                    if (currentZ - z <= preload) {\\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\\n                        if (tile.getState() == TileState.IDLE) {\\n                            wantedTiles[tile.getKey()] = true;\\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\\n                                tileQueue.enqueue([tile, tileSourceKey,\\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\\n                            }\\n                        }\\n                        if (opt_tileCallback !== undefined) {\\n                            opt_tileCallback(tile);\\n                        }\\n                    }\\n                    else {\\n                        tileSource.useTile(z, x, y, projection);\\n                    }\\n                }\\n            }\\n        }\\n    };\\n    return CanvasTileLayerRenderer;\\n}(CanvasLayerRenderer));\\n/**\\n * @function\\n * @return {import(\\\"../../layer/Tile.js\\\").default|import(\\\"../../layer/VectorTile.js\\\").default}\\n */\\nCanvasTileLayerRenderer.prototype.getLayer;\\nexport default CanvasTileLayerRenderer;\\n//# sourceMappingURL=TileLayer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Tile\\n */\\nimport BaseTileLayer from './BaseTile.js';\\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\\n/**\\n * @typedef {import(\\\"./BaseTile.js\\\").Options} Options\\n */\\n/**\\n * @classdesc\\n * For layer sources that provide pre-rendered, tiled images in grids that are\\n * organized by zoom levels for specific resolutions.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @api\\n */\\nvar TileLayer = /** @class */ (function (_super) {\\n    __extends(TileLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Tile layer options.\\n     */\\n    function TileLayer(opt_options) {\\n        return _super.call(this, opt_options) || this;\\n    }\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    TileLayer.prototype.createRenderer = function () {\\n        return new CanvasTileLayerRenderer(this);\\n    };\\n    return TileLayer;\\n}(BaseTileLayer));\\nexport default TileLayer;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/reproj/common\\n */\\n/**\\n * Default maximum allowed threshold  (in pixels) for reprojection\\n * triangulation.\\n * @type {number}\\n */\\nexport var ERROR_THRESHOLD = 0.5;\\n/**\\n * Enable automatic reprojection of raster sources. Default is `true`.\\n * TODO: decide if we want to expose this as a build flag or remove it\\n * @type {boolean}\\n */\\nexport var ENABLE_RASTER_REPROJECTION = true;\\n//# sourceMappingURL=common.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Tile\\n */\\nimport TileState from './TileState.js';\\nimport { easeIn } from './easing.js';\\nimport EventTarget from './events/Target.js';\\nimport EventType from './events/EventType.js';\\nimport { abstract } from './util.js';\\n/**\\n * A function that takes an {@link module:ol/Tile} for the tile and a\\n * `{string}` for the url as arguments. The default is\\n * ```js\\n * source.setTileLoadFunction(function(tile, src) {\\n *   tile.getImage().src = src;\\n * });\\n * ```\\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\\n * error handling:\\n *\\n * ```js\\n * import TileState from 'ol/TileState';\\n *\\n * source.setTileLoadFunction(function(tile, src) {\\n *   var xhr = new XMLHttpRequest();\\n *   xhr.responseType = 'blob';\\n *   xhr.addEventListener('loadend', function (evt) {\\n *     var data = this.response;\\n *     if (data !== undefined) {\\n *       tile.getImage().src = URL.createObjectURL(data);\\n *     } else {\\n *       tile.setState(TileState.ERROR);\\n *     }\\n *   });\\n *   xhr.addEventListener('error', function () {\\n *     tile.setState(TileState.ERROR);\\n *   });\\n *   xhr.open('GET', src);\\n *   xhr.send();\\n * });\\n * ```\\n *\\n * @typedef {function(Tile, string): void} LoadFunction\\n * @api\\n */\\n/**\\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\\n * the url that provides a tile for a given tile coordinate.\\n *\\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\\n * coordinate, a `{number}` representing the pixel ratio and a\\n * {@link module:ol/proj/Projection} for the projection  as arguments\\n * and returns a `{string}` representing the tile URL, or undefined if no tile\\n * should be requested for the passed tile coordinate.\\n *\\n * @typedef {function(import(\\\"./tilecoord.js\\\").TileCoord, number,\\n *           import(\\\"./proj/Projection.js\\\").default): (string|undefined)} UrlFunction\\n * @api\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {number} [transition=250] A duration for tile opacity\\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\\n * @api\\n */\\n/**\\n * @classdesc\\n * Base class for tiles.\\n *\\n * @abstract\\n */\\nvar Tile = /** @class */ (function (_super) {\\n    __extends(Tile, _super);\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {TileState} state State.\\n     * @param {Options=} opt_options Tile options.\\n     */\\n    function Tile(tileCoord, state, opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @type {import(\\\"./tilecoord.js\\\").TileCoord}\\n         */\\n        _this.tileCoord = tileCoord;\\n        /**\\n         * @protected\\n         * @type {TileState}\\n         */\\n        _this.state = state;\\n        /**\\n         * An \\\"interim\\\" tile for this tile. The interim tile may be used while this\\n         * one is loading, for \\\"smooth\\\" transitions when changing params/dimensions\\n         * on the source.\\n         * @type {Tile}\\n         */\\n        _this.interimTile = null;\\n        /**\\n         * The tile is available at the highest possible resolution. Subclasses can\\n         * set this to `false` initially. Tile load listeners will not be\\n         * unregistered before this is set to `true` and a `#changed()` is called.\\n         * @type {boolean}\\n         */\\n        _this.hifi = true;\\n        /**\\n         * A key assigned to the tile. This is used by the tile source to determine\\n         * if this tile can effectively be used, or if a new tile should be created\\n         * and this one be used as an interim tile for this new tile.\\n         * @type {string}\\n         */\\n        _this.key = '';\\n        /**\\n         * The duration for the opacity transition.\\n         * @type {number}\\n         */\\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\\n        /**\\n         * Lookup of start times for rendering transitions.  If the start time is\\n         * equal to -1, the transition is complete.\\n         * @type {Object<string, number>}\\n         */\\n        _this.transitionStarts_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     */\\n    Tile.prototype.changed = function () {\\n        this.dispatchEvent(EventType.CHANGE);\\n    };\\n    /**\\n     * @return {string} Key.\\n     */\\n    Tile.prototype.getKey = function () {\\n        return this.key + '/' + this.tileCoord;\\n    };\\n    /**\\n     * Get the interim tile most suitable for rendering using the chain of interim\\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\\n     * such tile exists, the original tile is returned.\\n     * @return {!Tile} Best tile for rendering.\\n     */\\n    Tile.prototype.getInterimTile = function () {\\n        if (!this.interimTile) {\\n            //empty chain\\n            return this;\\n        }\\n        var tile = this.interimTile;\\n        // find the first loaded tile and return it. Since the chain is sorted in\\n        // decreasing order of creation time, there is no need to search the remainder\\n        // of the list (all those tiles correspond to older requests and will be\\n        // cleaned up by refreshInterimChain)\\n        do {\\n            if (tile.getState() == TileState.LOADED) {\\n                // Show tile immediately instead of fading it in after loading, because\\n                // the interim tile is in place already\\n                this.transition_ = 0;\\n                return tile;\\n            }\\n            tile = tile.interimTile;\\n        } while (tile);\\n        // we can not find a better tile\\n        return this;\\n    };\\n    /**\\n     * Goes through the chain of interim tiles and discards sections of the chain\\n     * that are no longer relevant.\\n     */\\n    Tile.prototype.refreshInterimChain = function () {\\n        if (!this.interimTile) {\\n            return;\\n        }\\n        var tile = this.interimTile;\\n        var prev = /** @type {Tile} */ (this);\\n        do {\\n            if (tile.getState() == TileState.LOADED) {\\n                //we have a loaded tile, we can discard the rest of the list\\n                //we would could abort any LOADING tile request\\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\\n                tile.interimTile = null;\\n                break;\\n            }\\n            else if (tile.getState() == TileState.LOADING) {\\n                //keep this LOADING tile any loaded tiles later in the chain are\\n                //older than this tile, so we're still interested in the request\\n                prev = tile;\\n            }\\n            else if (tile.getState() == TileState.IDLE) {\\n                //the head of the list is the most current tile, we don't need\\n                //to start any other requests for this chain\\n                prev.interimTile = tile.interimTile;\\n            }\\n            else {\\n                prev = tile;\\n            }\\n            tile = prev.interimTile;\\n        } while (tile);\\n    };\\n    /**\\n     * Get the tile coordinate for this tile.\\n     * @return {import(\\\"./tilecoord.js\\\").TileCoord} The tile coordinate.\\n     * @api\\n     */\\n    Tile.prototype.getTileCoord = function () {\\n        return this.tileCoord;\\n    };\\n    /**\\n     * @return {TileState} State.\\n     */\\n    Tile.prototype.getState = function () {\\n        return this.state;\\n    };\\n    /**\\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\\n     * the tile queue and will block other requests.\\n     * @param {TileState} state State.\\n     * @api\\n     */\\n    Tile.prototype.setState = function (state) {\\n        this.state = state;\\n        this.changed();\\n    };\\n    /**\\n     * Load the image or retry if loading previously failed.\\n     * Loading is taken care of by the tile queue, and calling this method is\\n     * only needed for preloading or for reloading in case of an error.\\n     * @abstract\\n     * @api\\n     */\\n    Tile.prototype.load = function () {\\n        abstract();\\n    };\\n    /**\\n     * Get the alpha value for rendering.\\n     * @param {string} id An id for the renderer.\\n     * @param {number} time The render frame time.\\n     * @return {number} A number between 0 and 1.\\n     */\\n    Tile.prototype.getAlpha = function (id, time) {\\n        if (!this.transition_) {\\n            return 1;\\n        }\\n        var start = this.transitionStarts_[id];\\n        if (!start) {\\n            start = time;\\n            this.transitionStarts_[id] = start;\\n        }\\n        else if (start === -1) {\\n            return 1;\\n        }\\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\\n        if (delta >= this.transition_) {\\n            return 1;\\n        }\\n        return easeIn(delta / this.transition_);\\n    };\\n    /**\\n     * Determine if a tile is in an alpha transition.  A tile is considered in\\n     * transition if tile.getAlpha() has not yet been called or has been called\\n     * and returned 1.\\n     * @param {string} id An id for the renderer.\\n     * @return {boolean} The tile is in transition.\\n     */\\n    Tile.prototype.inTransition = function (id) {\\n        if (!this.transition_) {\\n            return false;\\n        }\\n        return this.transitionStarts_[id] !== -1;\\n    };\\n    /**\\n     * Mark a transition as complete.\\n     * @param {string} id An id for the renderer.\\n     */\\n    Tile.prototype.endTransition = function (id) {\\n        if (this.transition_) {\\n            this.transitionStarts_[id] = -1;\\n        }\\n    };\\n    return Tile;\\n}(EventTarget));\\nexport default Tile;\\n//# sourceMappingURL=Tile.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/ImageTile\\n */\\nimport Tile from './Tile.js';\\nimport TileState from './TileState.js';\\nimport { createCanvasContext2D } from './dom.js';\\nimport { listenOnce, unlistenByKey } from './events.js';\\nimport EventType from './events/EventType.js';\\nvar ImageTile = /** @class */ (function (_super) {\\n    __extends(ImageTile, _super);\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {TileState} state State.\\n     * @param {string} src Image source URI.\\n     * @param {?string} crossOrigin Cross origin.\\n     * @param {import(\\\"./Tile.js\\\").LoadFunction} tileLoadFunction Tile load function.\\n     * @param {import(\\\"./Tile.js\\\").Options=} opt_options Tile options.\\n     */\\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\\n        /**\\n         * @private\\n         * @type {?string}\\n         */\\n        _this.crossOrigin_ = crossOrigin;\\n        /**\\n         * Image URI\\n         *\\n         * @private\\n         * @type {string}\\n         */\\n        _this.src_ = src;\\n        /**\\n         * @private\\n         * @type {HTMLImageElement|HTMLCanvasElement}\\n         */\\n        _this.image_ = new Image();\\n        if (crossOrigin !== null) {\\n            _this.image_.crossOrigin = crossOrigin;\\n        }\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.imageListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Tile.js\\\").LoadFunction}\\n         */\\n        _this.tileLoadFunction_ = tileLoadFunction;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    ImageTile.prototype.disposeInternal = function () {\\n        if (this.state == TileState.LOADING) {\\n            this.unlistenImage_();\\n            this.image_ = getBlankImage();\\n        }\\n        if (this.interimTile) {\\n            this.interimTile.dispose();\\n        }\\n        this.state = TileState.ABORT;\\n        this.changed();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\\n     * @api\\n     */\\n    ImageTile.prototype.getImage = function () {\\n        return this.image_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ImageTile.prototype.getKey = function () {\\n        return this.src_;\\n    };\\n    /**\\n     * Tracks loading or read errors.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.handleImageError_ = function () {\\n        this.state = TileState.ERROR;\\n        this.unlistenImage_();\\n        this.image_ = getBlankImage();\\n        this.changed();\\n    };\\n    /**\\n     * Tracks successful image load.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.handleImageLoad_ = function () {\\n        var image = /** @type {HTMLImageElement} */ (this.image_);\\n        if (image.naturalWidth && image.naturalHeight) {\\n            this.state = TileState.LOADED;\\n        }\\n        else {\\n            this.state = TileState.EMPTY;\\n        }\\n        this.unlistenImage_();\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    ImageTile.prototype.load = function () {\\n        if (this.state == TileState.ERROR) {\\n            this.state = TileState.IDLE;\\n            this.image_ = new Image();\\n            if (this.crossOrigin_ !== null) {\\n                this.image_.crossOrigin = this.crossOrigin_;\\n            }\\n        }\\n        if (this.state == TileState.IDLE) {\\n            this.state = TileState.LOADING;\\n            this.changed();\\n            this.imageListenerKeys_ = [\\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\\n            ];\\n            this.tileLoadFunction_(this, this.src_);\\n        }\\n    };\\n    /**\\n     * Discards event handlers which listen for load completion or errors.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.unlistenImage_ = function () {\\n        this.imageListenerKeys_.forEach(unlistenByKey);\\n        this.imageListenerKeys_ = null;\\n    };\\n    return ImageTile;\\n}(Tile));\\n/**\\n * Get a 1-pixel blank image.\\n * @return {HTMLCanvasElement} Blank image.\\n */\\nfunction getBlankImage() {\\n    var ctx = createCanvasContext2D(1, 1);\\n    ctx.fillStyle = 'rgba(0,0,0,0)';\\n    ctx.fillRect(0, 0, 1, 1);\\n    return ctx.canvas;\\n}\\nexport default ImageTile;\\n//# sourceMappingURL=ImageTile.js.map\",\"/**\\n * @module ol/tilecoord\\n */\\n/**\\n * An array of three numbers representing the location of a tile in a tile\\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\\n * @typedef {Array<number>} TileCoord\\n * @api\\n */\\n/**\\n * @param {number} z Z.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\\n * @return {TileCoord} Tile coordinate.\\n */\\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\\n    if (opt_tileCoord !== undefined) {\\n        opt_tileCoord[0] = z;\\n        opt_tileCoord[1] = x;\\n        opt_tileCoord[2] = y;\\n        return opt_tileCoord;\\n    }\\n    else {\\n        return [z, x, y];\\n    }\\n}\\n/**\\n * @param {number} z Z.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {string} Key.\\n */\\nexport function getKeyZXY(z, x, y) {\\n    return z + '/' + x + '/' + y;\\n}\\n/**\\n * Get the key for a tile coord.\\n * @param {TileCoord} tileCoord The tile coord.\\n * @return {string} Key.\\n */\\nexport function getKey(tileCoord) {\\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\\n}\\n/**\\n * Get a tile coord given a key.\\n * @param {string} key The tile coord key.\\n * @return {TileCoord} The tile coord.\\n */\\nexport function fromKey(key) {\\n    return key.split('/').map(Number);\\n}\\n/**\\n * @param {TileCoord} tileCoord Tile coord.\\n * @return {number} Hash.\\n */\\nexport function hash(tileCoord) {\\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\\n}\\n/**\\n * @param {TileCoord} tileCoord Tile coordinate.\\n * @param {!import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {boolean} Tile coordinate is within extent and zoom level range.\\n */\\nexport function withinExtentAndZ(tileCoord, tileGrid) {\\n    var z = tileCoord[0];\\n    var x = tileCoord[1];\\n    var y = tileCoord[2];\\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\\n        return false;\\n    }\\n    var extent = tileGrid.getExtent();\\n    var tileRange;\\n    if (!extent) {\\n        tileRange = tileGrid.getFullTileRange(z);\\n    }\\n    else {\\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n    }\\n    if (!tileRange) {\\n        return true;\\n    }\\n    else {\\n        return tileRange.containsXY(x, y);\\n    }\\n}\\n//# sourceMappingURL=tilecoord.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/TileCache\\n */\\nimport LRUCache from './structs/LRUCache.js';\\nimport { fromKey, getKey } from './tilecoord.js';\\nvar TileCache = /** @class */ (function (_super) {\\n    __extends(TileCache, _super);\\n    /**\\n     * @param {number=} opt_highWaterMark High water mark.\\n     */\\n    function TileCache(opt_highWaterMark) {\\n        return _super.call(this, opt_highWaterMark) || this;\\n    }\\n    /**\\n     * @param {!Object<string, import(\\\"./TileRange.js\\\").default>} usedTiles Used tiles.\\n     */\\n    TileCache.prototype.expireCache = function (usedTiles) {\\n        while (this.canExpireCache()) {\\n            var tile = this.peekLast();\\n            if (tile.getKey() in usedTiles) {\\n                break;\\n            }\\n            else {\\n                this.pop().dispose();\\n            }\\n        }\\n    };\\n    /**\\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\\n     */\\n    TileCache.prototype.pruneExceptNewestZ = function () {\\n        if (this.getCount() === 0) {\\n            return;\\n        }\\n        var key = this.peekFirstKey();\\n        var tileCoord = fromKey(key);\\n        var z = tileCoord[0];\\n        this.forEach(function (tile) {\\n            if (tile.tileCoord[0] !== z) {\\n                this.remove(getKey(tile.tileCoord));\\n                tile.dispose();\\n            }\\n        }.bind(this));\\n    };\\n    return TileCache;\\n}(LRUCache));\\nexport default TileCache;\\n//# sourceMappingURL=TileCache.js.map\",\"/**\\n * @module ol/reproj\\n */\\nimport { createCanvasContext2D } from './dom.js';\\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\\nimport { solveLinearSystem } from './math.js';\\nimport { getPointResolution, transform } from './proj.js';\\n/**\\n * Calculates ideal resolution to use from the source in order to achieve\\n * pixel mapping as close as possible to 1:1 during reprojection.\\n * The resolution is calculated regardless of what resolutions\\n * are actually available in the dataset (TileGrid, Image, ...).\\n *\\n * @param {import(\\\"./proj/Projection.js\\\").default} sourceProj Source projection.\\n * @param {import(\\\"./proj/Projection.js\\\").default} targetProj Target projection.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} targetCenter Target center.\\n * @param {number} targetResolution Target resolution.\\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\\n */\\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\\n    // calculate the ideal resolution of the source data\\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\\n    if (targetMetersPerUnit !== undefined) {\\n        sourceResolution *= targetMetersPerUnit;\\n    }\\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\\n    if (sourceMetersPerUnit !== undefined) {\\n        sourceResolution /= sourceMetersPerUnit;\\n    }\\n    // Based on the projection properties, the point resolution at the specified\\n    // coordinates may be slightly different. We need to reverse-compensate this\\n    // in order to achieve optimal results.\\n    var sourceExtent = sourceProj.getExtent();\\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\\n            sourceResolution;\\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\\n            sourceResolution /= compensationFactor;\\n        }\\n    }\\n    return sourceResolution;\\n}\\n/**\\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\\n * in order to mask gaps caused by antialiasing.\\n *\\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\\n * @param {number} x X coordinate of the point (in pixels).\\n * @param {number} y Y coordinate of the point (in pixels).\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} New point 1 px farther from the centroid.\\n */\\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\\n    var dX = x - centroidX;\\n    var dY = y - centroidY;\\n    var distance = Math.sqrt(dX * dX + dY * dY);\\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\\n}\\n/**\\n * Renders the source data into new canvas based on the triangulation.\\n *\\n * @param {number} width Width of the canvas.\\n * @param {number} height Height of the canvas.\\n * @param {number} pixelRatio Pixel ratio.\\n * @param {number} sourceResolution Source resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} sourceExtent Extent of the data source.\\n * @param {number} targetResolution Target resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} targetExtent Target extent.\\n * @param {import(\\\"./reproj/Triangulation.js\\\").default} triangulation\\n * Calculated triangulation.\\n * @param {Array<{extent: import(\\\"./extent.js\\\").Extent,\\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\\n * Array of sources.\\n * @param {number} gutter Gutter of the sources.\\n * @param {boolean=} opt_renderEdges Render reprojection edges.\\n * @return {HTMLCanvasElement} Canvas with reprojected data.\\n */\\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\\n    if (sources.length === 0) {\\n        return context.canvas;\\n    }\\n    context.scale(pixelRatio, pixelRatio);\\n    var sourceDataExtent = createEmpty();\\n    sources.forEach(function (src, i, arr) {\\n        extend(sourceDataExtent, src.extent);\\n    });\\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\\n    var stitchScale = pixelRatio / sourceResolution;\\n    sources.forEach(function (src, i, arr) {\\n        var xPos = src.extent[0] - sourceDataExtent[0];\\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\\n        var srcWidth = getWidth(src.extent);\\n        var srcHeight = getHeight(src.extent);\\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\\n    });\\n    var targetTopLeft = getTopLeft(targetExtent);\\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\\n        /* Calculate affine transform (src -> dst)\\n         * Resulting matrix can be used to transform coordinate\\n         * from `sourceProjection` to destination pixels.\\n         *\\n         * To optimize number of context calls and increase numerical stability,\\n         * we also do the following operations:\\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\\n         *\\n         * Src points: xi, yi\\n         * Dst points: ui, vi\\n         * Affine coefficients: aij\\n         *\\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\\n         */\\n        var source = triangle.source;\\n        var target = triangle.target;\\n        var x0 = source[0][0], y0 = source[0][1];\\n        var x1 = source[1][0], y1 = source[1][1];\\n        var x2 = source[2][0], y2 = source[2][1];\\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\\n        // Shift all the source points to improve numerical stability\\n        // of all the subsequent calculations. The [x0, y0] is used here.\\n        // This is also used to simplify the linear system.\\n        var sourceNumericalShiftX = x0;\\n        var sourceNumericalShiftY = y0;\\n        x0 = 0;\\n        y0 = 0;\\n        x1 -= sourceNumericalShiftX;\\n        y1 -= sourceNumericalShiftY;\\n        x2 -= sourceNumericalShiftX;\\n        y2 -= sourceNumericalShiftY;\\n        var augmentedMatrix = [\\n            [x1, y1, 0, 0, u1 - u0],\\n            [x2, y2, 0, 0, u2 - u0],\\n            [0, 0, x1, y1, v1 - v0],\\n            [0, 0, x2, y2, v2 - v0]\\n        ];\\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\\n        if (!affineCoefs) {\\n            return;\\n        }\\n        context.save();\\n        context.beginPath();\\n        var centroidX = (u0 + u1 + u2) / 3;\\n        var centroidY = (v0 + v1 + v2) / 3;\\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\\n        context.moveTo(p1[0], p1[1]);\\n        context.lineTo(p0[0], p0[1]);\\n        context.lineTo(p2[0], p2[1]);\\n        context.clip();\\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\\n        context.drawImage(stitchContext.canvas, 0, 0);\\n        context.restore();\\n    });\\n    if (opt_renderEdges) {\\n        context.save();\\n        context.strokeStyle = 'black';\\n        context.lineWidth = 1;\\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\\n            var target = triangle.target;\\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\\n            context.beginPath();\\n            context.moveTo(u1, v1);\\n            context.lineTo(u0, v0);\\n            context.lineTo(u2, v2);\\n            context.closePath();\\n            context.stroke();\\n        });\\n        context.restore();\\n    }\\n    return context.canvas;\\n}\\n//# sourceMappingURL=reproj.js.map\",\"/**\\n * @module ol/reproj/Triangulation\\n */\\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\\nimport { modulo } from '../math.js';\\nimport { getTransform } from '../proj.js';\\n/**\\n * Single triangle; consists of 3 source points and 3 target points.\\n * @typedef {Object} Triangle\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} source\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} target\\n */\\n/**\\n * Maximum number of subdivision steps during raster reprojection triangulation.\\n * Prevents high memory usage and large number of proj4 calls (for certain\\n * transformations and areas). At most `2*(2^this)` triangles are created for\\n * each triangulated extent (tile/image).\\n * @type {number}\\n */\\nvar MAX_SUBDIVISION = 10;\\n/**\\n * Maximum allowed size of triangle relative to world width. When transforming\\n * corners of world extent between certain projections, the resulting\\n * triangulation seems to have zero error and no subdivision is performed. If\\n * the triangle width is more than this (relative to world width; 0-1),\\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\\n * @type {number}\\n */\\nvar MAX_TRIANGLE_WIDTH = 0.25;\\n/**\\n * @classdesc\\n * Class containing triangulation of the given target extent.\\n * Used for determining source data and the reprojection itself.\\n */\\nvar Triangulation = /** @class */ (function () {\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} sourceProj Source projection.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} targetProj Target projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} targetExtent Target extent to triangulate.\\n     * @param {import(\\\"../extent.js\\\").Extent} maxSourceExtent Maximal source extent that can be used.\\n     * @param {number} errorThreshold Acceptable error (in source units).\\n     */\\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\\n        /**\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         * @private\\n         */\\n        this.sourceProj_ = sourceProj;\\n        /**\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         * @private\\n         */\\n        this.targetProj_ = targetProj;\\n        /** @type {!Object<string, import(\\\"../coordinate.js\\\").Coordinate>} */\\n        var transformInvCache = {};\\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\\n        /**\\n         * @param {import(\\\"../coordinate.js\\\").Coordinate} c A coordinate.\\n         * @return {import(\\\"../coordinate.js\\\").Coordinate} Transformed coordinate.\\n         * @private\\n         */\\n        this.transformInv_ = function (c) {\\n            var key = c[0] + '/' + c[1];\\n            if (!transformInvCache[key]) {\\n                transformInvCache[key] = transformInv(c);\\n            }\\n            return transformInvCache[key];\\n        };\\n        /**\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         * @private\\n         */\\n        this.maxSourceExtent_ = maxSourceExtent;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\\n        /**\\n         * @type {Array<Triangle>}\\n         * @private\\n         */\\n        this.triangles_ = [];\\n        /**\\n         * Indicates that the triangulation crosses edge of the source projection.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.wrapsXInSource_ = false;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\\n            !!maxSourceExtent &&\\n            !!this.sourceProj_.getExtent() &&\\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\\n        /**\\n         * @type {?number}\\n         * @private\\n         */\\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\\n            getWidth(this.sourceProj_.getExtent()) : null;\\n        /**\\n         * @type {?number}\\n         * @private\\n         */\\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\\n            getWidth(this.targetProj_.getExtent()) : null;\\n        var destinationTopLeft = getTopLeft(targetExtent);\\n        var destinationTopRight = getTopRight(targetExtent);\\n        var destinationBottomRight = getBottomRight(targetExtent);\\n        var destinationBottomLeft = getBottomLeft(targetExtent);\\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\\n        var sourceTopRight = this.transformInv_(destinationTopRight);\\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\\n        if (this.wrapsXInSource_) {\\n            var leftBound_1 = Infinity;\\n            this.triangles_.forEach(function (triangle, i, arr) {\\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\\n            });\\n            // Shift triangles to be as close to `leftBound` as possible\\n            // (if the distance is more than `worldWidth / 2` it can be closer.\\n            this.triangles_.forEach(function (triangle) {\\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\\n                        [triangle.source[1][0], triangle.source[1][1]],\\n                        [triangle.source[2][0], triangle.source[2][1]]];\\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\\n                    }\\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\\n                    }\\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\\n                    }\\n                    // Rarely (if the extent contains both the dateline and prime meridian)\\n                    // the shift can in turn break some triangles.\\n                    // Detect this here and don't shift in such cases.\\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\\n                        triangle.source = newTriangle;\\n                    }\\n                }\\n            }.bind(this));\\n        }\\n        transformInvCache = {};\\n    }\\n    /**\\n     * Adds triangle to the triangulation.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} a The target a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} b The target b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} c The target c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} aSrc The source a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} bSrc The source b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} cSrc The source c coordinate.\\n     * @private\\n     */\\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\\n        this.triangles_.push({\\n            source: [aSrc, bSrc, cSrc],\\n            target: [a, b, c]\\n        });\\n    };\\n    /**\\n     * Adds quad (points in clock-wise order) to the triangulation\\n     * (and reprojects the vertices) if valid.\\n     * Performs quad subdivision if needed to increase precision.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} a The target a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} b The target b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} c The target c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} d The target d coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} aSrc The source a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} bSrc The source b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} cSrc The source c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} dSrc The source d coordinate.\\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\\n     * @private\\n     */\\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\\n        var sourceCoverageX = this.sourceWorldWidth_ ?\\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\\n        // when the quad is wrapped in the source projection\\n        // it covers most of the projection extent, but not fully\\n        var wrapsX = this.sourceProj_.canWrapX() &&\\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\\n        var needsSubdivision = false;\\n        if (maxSubdivision > 0) {\\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\\n                    needsSubdivision;\\n            }\\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\\n                    needsSubdivision;\\n            }\\n        }\\n        if (!needsSubdivision && this.maxSourceExtent_) {\\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\\n                // whole quad outside source projection extent -> ignore\\n                return;\\n            }\\n        }\\n        if (!needsSubdivision) {\\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\\n                if (maxSubdivision > 0) {\\n                    needsSubdivision = true;\\n                }\\n                else {\\n                    return;\\n                }\\n            }\\n        }\\n        if (maxSubdivision > 0) {\\n            if (!needsSubdivision) {\\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\\n                var centerSrc = this.transformInv_(center);\\n                var dx = void 0;\\n                if (wrapsX) {\\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\\n                    dx = centerSrcEstimX -\\n                        modulo(centerSrc[0], sourceWorldWidth);\\n                }\\n                else {\\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\\n                }\\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\\n                var centerSrcErrorSquared = dx * dx + dy * dy;\\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\\n            }\\n            if (needsSubdivision) {\\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\\n                    // split horizontally (top & bottom)\\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\\n                    var bcSrc = this.transformInv_(bc);\\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\\n                    var daSrc = this.transformInv_(da);\\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\\n                }\\n                else {\\n                    // split vertically (left & right)\\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\\n                    var abSrc = this.transformInv_(ab);\\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\\n                    var cdSrc = this.transformInv_(cd);\\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\\n                }\\n                return;\\n            }\\n        }\\n        if (wrapsX) {\\n            if (!this.canWrapXInSource_) {\\n                return;\\n            }\\n            this.wrapsXInSource_ = true;\\n        }\\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\\n    };\\n    /**\\n     * Calculates extent of the 'source' coordinates from all the triangles.\\n     *\\n     * @return {import(\\\"../extent.js\\\").Extent} Calculated extent.\\n     */\\n    Triangulation.prototype.calculateSourceExtent = function () {\\n        var extent = createEmpty();\\n        this.triangles_.forEach(function (triangle, i, arr) {\\n            var src = triangle.source;\\n            extendCoordinate(extent, src[0]);\\n            extendCoordinate(extent, src[1]);\\n            extendCoordinate(extent, src[2]);\\n        });\\n        return extent;\\n    };\\n    /**\\n     * @return {Array<Triangle>} Array of the calculated triangles.\\n     */\\n    Triangulation.prototype.getTriangles = function () {\\n        return this.triangles_;\\n    };\\n    return Triangulation;\\n}());\\nexport default Triangulation;\\n//# sourceMappingURL=Triangulation.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/reproj/Tile\\n */\\nimport { ERROR_THRESHOLD } from './common.js';\\nimport Tile from '../Tile.js';\\nimport TileState from '../TileState.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getArea, getCenter, getIntersection } from '../extent.js';\\nimport { clamp } from '../math.js';\\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\\nimport Triangulation from './Triangulation.js';\\n/**\\n * @typedef {function(number, number, number, number) : import(\\\"../Tile.js\\\").default} FunctionType\\n */\\n/**\\n * @classdesc\\n * Class encapsulating single reprojected tile.\\n * See {@link module:ol/source/TileImage~TileImage}.\\n *\\n */\\nvar ReprojTile = /** @class */ (function (_super) {\\n    __extends(ReprojTile, _super);\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} sourceProj Source projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} sourceTileGrid Source tile grid.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} targetProj Target projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} targetTileGrid Target tile grid.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Coordinate of the tile.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {number} gutter Gutter of the source tiles.\\n     * @param {FunctionType} getTileFunction\\n     *     Function returning source tiles (z, x, y, pixelRatio).\\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\\n     */\\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = pixelRatio;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.gutter_ = gutter;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.canvas_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.sourceTileGrid_ = sourceTileGrid;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.targetTileGrid_ = targetTileGrid;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilecoord.js\\\").TileCoord}\\n         */\\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\\n        /**\\n         * @private\\n         * @type {!Array<import(\\\"../Tile.js\\\").default>}\\n         */\\n        _this.sourceTiles_ = [];\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.sourcesListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.sourceZ_ = 0;\\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\\n        var limitedTargetExtent = maxTargetExtent ?\\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\\n        if (getArea(limitedTargetExtent) === 0) {\\n            // Tile is completely outside range -> EMPTY\\n            // TODO: is it actually correct that the source even creates the tile ?\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        var sourceProjExtent = sourceProj.getExtent();\\n        if (sourceProjExtent) {\\n            if (!maxSourceExtent) {\\n                maxSourceExtent = sourceProjExtent;\\n            }\\n            else {\\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\\n            }\\n        }\\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\\n        var targetCenter = getCenter(limitedTargetExtent);\\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\\n            // invalid sourceResolution -> EMPTY\\n            // probably edges of the projections when no extent is defined\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\\n            opt_errorThreshold : ERROR_THRESHOLD;\\n        /**\\n         * @private\\n         * @type {!import(\\\"./Triangulation.js\\\").default}\\n         */\\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\\n        if (_this.triangulation_.getTriangles().length === 0) {\\n            // no valid triangles -> EMPTY\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\\n        if (maxSourceExtent) {\\n            if (sourceProj.canWrapX()) {\\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\\n            }\\n            else {\\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\\n            }\\n        }\\n        if (!getArea(sourceExtent)) {\\n            _this.state = TileState.EMPTY;\\n        }\\n        else {\\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\\n                    if (tile) {\\n                        _this.sourceTiles_.push(tile);\\n                    }\\n                }\\n            }\\n            if (_this.sourceTiles_.length === 0) {\\n                _this.state = TileState.EMPTY;\\n            }\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    ReprojTile.prototype.disposeInternal = function () {\\n        if (this.state == TileState.LOADING) {\\n            this.unlistenSources_();\\n        }\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the HTML Canvas element for this tile.\\n     * @return {HTMLCanvasElement} Canvas.\\n     */\\n    ReprojTile.prototype.getImage = function () {\\n        return this.canvas_;\\n    };\\n    /**\\n     * @private\\n     */\\n    ReprojTile.prototype.reproject_ = function () {\\n        var sources = [];\\n        this.sourceTiles_.forEach(function (tile, i, arr) {\\n            if (tile && tile.getState() == TileState.LOADED) {\\n                sources.push({\\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\\n                    image: tile.getImage()\\n                });\\n            }\\n        }.bind(this));\\n        this.sourceTiles_.length = 0;\\n        if (sources.length === 0) {\\n            this.state = TileState.ERROR;\\n        }\\n        else {\\n            var z = this.wrappedTileCoord_[0];\\n            var size = this.targetTileGrid_.getTileSize(z);\\n            var width = typeof size === 'number' ? size : size[0];\\n            var height = typeof size === 'number' ? size : size[1];\\n            var targetResolution = this.targetTileGrid_.getResolution(z);\\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\\n            this.state = TileState.LOADED;\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ReprojTile.prototype.load = function () {\\n        if (this.state == TileState.IDLE) {\\n            this.state = TileState.LOADING;\\n            this.changed();\\n            var leftToLoad_1 = 0;\\n            this.sourcesListenerKeys_ = [];\\n            this.sourceTiles_.forEach(function (tile, i, arr) {\\n                var state = tile.getState();\\n                if (state == TileState.IDLE || state == TileState.LOADING) {\\n                    leftToLoad_1++;\\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\\n                        var state = tile.getState();\\n                        if (state == TileState.LOADED ||\\n                            state == TileState.ERROR ||\\n                            state == TileState.EMPTY) {\\n                            unlistenByKey(sourceListenKey_1);\\n                            leftToLoad_1--;\\n                            if (leftToLoad_1 === 0) {\\n                                this.unlistenSources_();\\n                                this.reproject_();\\n                            }\\n                        }\\n                    }, this);\\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\\n                }\\n            }.bind(this));\\n            this.sourceTiles_.forEach(function (tile, i, arr) {\\n                var state = tile.getState();\\n                if (state == TileState.IDLE) {\\n                    tile.load();\\n                }\\n            });\\n            if (leftToLoad_1 === 0) {\\n                setTimeout(this.reproject_.bind(this), 0);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    ReprojTile.prototype.unlistenSources_ = function () {\\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\\n        this.sourcesListenerKeys_ = null;\\n    };\\n    return ReprojTile;\\n}(Tile));\\nexport default ReprojTile;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/tileurlfunction\\n */\\nimport { assert } from './asserts.js';\\nimport { modulo } from './math.js';\\nimport { hash as tileCoordHash } from './tilecoord.js';\\n/**\\n * @param {string} template Template.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTemplate(template, tileGrid) {\\n    var zRegEx = /\\\\{z\\\\}/g;\\n    var xRegEx = /\\\\{x\\\\}/g;\\n    var yRegEx = /\\\\{y\\\\}/g;\\n    var dashYRegEx = /\\\\{-y\\\\}/g;\\n    return (\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile Coordinate.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @return {string|undefined} Tile URL.\\n     */\\n    function (tileCoord, pixelRatio, projection) {\\n        if (!tileCoord) {\\n            return undefined;\\n        }\\n        else {\\n            return template.replace(zRegEx, tileCoord[0].toString())\\n                .replace(xRegEx, tileCoord[1].toString())\\n                .replace(yRegEx, tileCoord[2].toString())\\n                .replace(dashYRegEx, function () {\\n                var z = tileCoord[0];\\n                var range = tileGrid.getFullTileRange(z);\\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\\n                var y = range.getHeight() - tileCoord[2] - 1;\\n                return y.toString();\\n            });\\n        }\\n    });\\n}\\n/**\\n * @param {Array<string>} templates Templates.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTemplates(templates, tileGrid) {\\n    var len = templates.length;\\n    var tileUrlFunctions = new Array(len);\\n    for (var i = 0; i < len; ++i) {\\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\\n    }\\n    return createFromTileUrlFunctions(tileUrlFunctions);\\n}\\n/**\\n * @param {Array<import(\\\"./Tile.js\\\").UrlFunction>} tileUrlFunctions Tile URL Functions.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\\n    if (tileUrlFunctions.length === 1) {\\n        return tileUrlFunctions[0];\\n    }\\n    return (\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile Coordinate.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @return {string|undefined} Tile URL.\\n     */\\n    function (tileCoord, pixelRatio, projection) {\\n        if (!tileCoord) {\\n            return undefined;\\n        }\\n        else {\\n            var h = tileCoordHash(tileCoord);\\n            var index = modulo(h, tileUrlFunctions.length);\\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\\n        }\\n    });\\n}\\n/**\\n * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n * @param {number} pixelRatio Pixel ratio.\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {string|undefined} Tile URL.\\n */\\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\\n    return undefined;\\n}\\n/**\\n * @param {string} url URL.\\n * @return {Array<string>} Array of urls.\\n */\\nexport function expandUrl(url) {\\n    var urls = [];\\n    var match = /\\\\{([a-z])-([a-z])\\\\}/.exec(url);\\n    if (match) {\\n        // char range\\n        var startCharCode = match[1].charCodeAt(0);\\n        var stopCharCode = match[2].charCodeAt(0);\\n        var charCode = void 0;\\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\\n        }\\n        return urls;\\n    }\\n    match = match = /\\\\{(\\\\d+)-(\\\\d+)\\\\}/.exec(url);\\n    if (match) {\\n        // number range\\n        var stop_1 = parseInt(match[2], 10);\\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\\n            urls.push(url.replace(match[0], i.toString()));\\n        }\\n        return urls;\\n    }\\n    urls.push(url);\\n    return urls;\\n}\\n//# sourceMappingURL=tileurlfunction.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/Source\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport { get as getProjection } from '../proj.js';\\nimport SourceState from './State.js';\\n/**\\n * A function that returns a string or an array of strings representing source\\n * attributions.\\n *\\n * @typedef {function(import(\\\"../PluggableMap.js\\\").FrameState): (string|Array<string>)} Attribution\\n */\\n/**\\n * A type that can be used to provide attribution information for data sources.\\n *\\n * It represents either\\n * * a simple string (e.g. `'© Acme Inc.'`)\\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\\n *\\n * @typedef {string|Array<string>|Attribution} AttributionLike\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection] Projection. Default is the view projection.\\n * @property {SourceState} [state='ready']\\n * @property {boolean} [wrapX=false]\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\\n *\\n * A generic `change` event is triggered when the state of the source changes.\\n * @abstract\\n * @api\\n */\\nvar Source = /** @class */ (function (_super) {\\n    __extends(Source, _super);\\n    /**\\n     * @param {Options} options Source options.\\n     */\\n    function Source(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        _this.projection_ = getProjection(options.projection);\\n        /**\\n         * @private\\n         * @type {?Attribution}\\n         */\\n        _this.attributions_ = adaptAttributions(options.attributions);\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\\n            options.attributionsCollapsible : true;\\n        /**\\n         * This source is currently loading data. Sources that defer loading to the\\n         * map's tile queue never set this to `true`.\\n         * @type {boolean}\\n         */\\n        _this.loading = false;\\n        /**\\n         * @private\\n         * @type {SourceState}\\n         */\\n        _this.state_ = options.state !== undefined ?\\n            options.state : SourceState.READY;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\\n        return _this;\\n    }\\n    /**\\n     * Get the attribution function for the source.\\n     * @return {?Attribution} Attribution function.\\n     */\\n    Source.prototype.getAttributions = function () {\\n        return this.attributions_;\\n    };\\n    /**\\n     * @return {boolean} Attributions are collapsible.\\n     */\\n    Source.prototype.getAttributionsCollapsible = function () {\\n        return this.attributionsCollapsible_;\\n    };\\n    /**\\n     * Get the projection of the source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     * @api\\n     */\\n    Source.prototype.getProjection = function () {\\n        return this.projection_;\\n    };\\n    /**\\n     * @abstract\\n     * @return {Array<number>|undefined} Resolutions.\\n     */\\n    Source.prototype.getResolutions = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\\n     * @return {SourceState} State.\\n     * @api\\n     */\\n    Source.prototype.getState = function () {\\n        return this.state_;\\n    };\\n    /**\\n     * @return {boolean|undefined} Wrap X.\\n     */\\n    Source.prototype.getWrapX = function () {\\n        return this.wrapX_;\\n    };\\n    /**\\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\\n     * @api\\n     */\\n    Source.prototype.refresh = function () {\\n        this.changed();\\n    };\\n    /**\\n     * Set the attributions of the source.\\n     * @param {AttributionLike|undefined} attributions Attributions.\\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\\n     *     or `undefined`.\\n     * @api\\n     */\\n    Source.prototype.setAttributions = function (attributions) {\\n        this.attributions_ = adaptAttributions(attributions);\\n        this.changed();\\n    };\\n    /**\\n     * Set the state of the source.\\n     * @param {SourceState} state State.\\n     * @protected\\n     */\\n    Source.prototype.setState = function (state) {\\n        this.state_ = state;\\n        this.changed();\\n    };\\n    return Source;\\n}(BaseObject));\\n/**\\n * Turns the attributions option into an attributions function.\\n * @param {AttributionLike|undefined} attributionLike The attribution option.\\n * @return {?Attribution} An attribution function (or null).\\n */\\nfunction adaptAttributions(attributionLike) {\\n    if (!attributionLike) {\\n        return null;\\n    }\\n    if (Array.isArray(attributionLike)) {\\n        return function (frameState) {\\n            return attributionLike;\\n        };\\n    }\\n    if (typeof attributionLike === 'function') {\\n        return attributionLike;\\n    }\\n    return function (frameState) {\\n        return [attributionLike];\\n    };\\n}\\nexport default Source;\\n//# sourceMappingURL=Source.js.map\",\"/**\\n * @module ol/tilegrid/TileGrid\\n */\\nimport { DEFAULT_TILE_SIZE } from './common.js';\\nimport { assert } from '../asserts.js';\\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\\nimport { isSorted, linearFindNearest } from '../array.js';\\nimport { createOrUpdate, getTopLeft } from '../extent.js';\\nimport { clamp } from '../math.js';\\nimport { toSize } from '../size.js';\\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\\n/**\\n * @private\\n * @type {import(\\\"../tilecoord.js\\\").TileCoord}\\n */\\nvar tmpTileCoord = [0, 0, 0];\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] Extent for the tile grid. No tiles outside this\\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\\n * @property {number} [minZoom=0] Minimum zoom.\\n * @property {import(\\\"../coordinate.js\\\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\\n * specified, `extent` or `origins` must be provided.\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} [origins] Tile grid origins, i.e. where\\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\\n * `origin` must be provided.\\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\\n * array will have a length of `maxZoom + 1`.\\n * @property {Array<import(\\\"../size.js\\\").Size>} [sizes] Sizes.\\n * @property {number|import(\\\"../size.js\\\").Size} [tileSize] Tile size.\\n * Default is `[256, 256]`.\\n * @property {Array<import(\\\"../size.js\\\").Size>} [tileSizes] Tile sizes. If given, the array length\\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\\n * tile size.\\n */\\n/**\\n * @classdesc\\n * Base class for setting the grid pattern for sources accessing tiled-image\\n * servers.\\n * @api\\n */\\nvar TileGrid = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Tile grid options.\\n     */\\n    function TileGrid(options) {\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\\n        /**\\n         * @private\\n         * @type {!Array<number>}\\n         */\\n        this.resolutions_ = options.resolutions;\\n        assert(isSorted(this.resolutions_, function (a, b) {\\n            return b - a;\\n        }, true), 17); // `resolutions` must be sorted in descending order\\n        // check if we've got a consistent zoom factor and origin\\n        var zoomFactor;\\n        if (!options.origins) {\\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\\n                if (!zoomFactor) {\\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\\n                }\\n                else {\\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\\n                        zoomFactor = undefined;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.zoomFactor_ = zoomFactor;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        this.maxZoom = this.resolutions_.length - 1;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        this.origin_ = options.origin !== undefined ? options.origin : null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../coordinate.js\\\").Coordinate>}\\n         */\\n        this.origins_ = null;\\n        if (options.origins !== undefined) {\\n            this.origins_ = options.origins;\\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\\n        }\\n        var extent = options.extent;\\n        if (extent !== undefined &&\\n            !this.origin_ && !this.origins_) {\\n            this.origin_ = getTopLeft(extent);\\n        }\\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\\n        /**\\n         * @private\\n         * @type {Array<number|import(\\\"../size.js\\\").Size>}\\n         */\\n        this.tileSizes_ = null;\\n        if (options.tileSizes !== undefined) {\\n            this.tileSizes_ = options.tileSizes;\\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\\n        }\\n        /**\\n         * @private\\n         * @type {number|import(\\\"../size.js\\\").Size}\\n         */\\n        this.tileSize_ = options.tileSize !== undefined ?\\n            options.tileSize :\\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\\n        assert((!this.tileSize_ && this.tileSizes_) ||\\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\\n        /**\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.extent_ = extent !== undefined ? extent : null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../TileRange.js\\\").default>}\\n         */\\n        this.fullTileRanges_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        this.tmpSize_ = [0, 0];\\n        if (options.sizes !== undefined) {\\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\\n                return tileRange;\\n            }, this);\\n        }\\n        else if (extent) {\\n            this.calculateTileRanges_(extent);\\n        }\\n    }\\n    /**\\n     * Call a function with each tile coordinate for a given extent and zoom level.\\n     *\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} zoom Integer zoom level.\\n     * @param {function(import(\\\"../tilecoord.js\\\").TileCoord): void} callback Function called with each tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\\n                callback([zoom, i, j]);\\n            }\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {function(number, import(\\\"../TileRange.js\\\").default): boolean} callback Callback.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary import(\\\"../TileRange.js\\\").default object.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {boolean} Callback succeeded.\\n     */\\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\\n        var tileRange, x, y;\\n        var tileCoordExtent = null;\\n        var z = tileCoord[0] - 1;\\n        if (this.zoomFactor_ === 2) {\\n            x = tileCoord[1];\\n            y = tileCoord[2];\\n        }\\n        else {\\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\\n        }\\n        while (z >= this.minZoom) {\\n            if (this.zoomFactor_ === 2) {\\n                x = Math.floor(x / 2);\\n                y = Math.floor(y / 2);\\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\\n            }\\n            else {\\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\\n            }\\n            if (callback(z, tileRange)) {\\n                return true;\\n            }\\n            --z;\\n        }\\n        return false;\\n    };\\n    /**\\n     * Get the extent for this tile grid, if it was configured.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    TileGrid.prototype.getExtent = function () {\\n        return this.extent_;\\n    };\\n    /**\\n     * Get the maximum zoom level for the grid.\\n     * @return {number} Max zoom.\\n     * @api\\n     */\\n    TileGrid.prototype.getMaxZoom = function () {\\n        return this.maxZoom;\\n    };\\n    /**\\n     * Get the minimum zoom level for the grid.\\n     * @return {number} Min zoom.\\n     * @api\\n     */\\n    TileGrid.prototype.getMinZoom = function () {\\n        return this.minZoom;\\n    };\\n    /**\\n     * Get the origin for the grid at the given zoom level.\\n     * @param {number} z Integer zoom level.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Origin.\\n     * @api\\n     */\\n    TileGrid.prototype.getOrigin = function (z) {\\n        if (this.origin_) {\\n            return this.origin_;\\n        }\\n        else {\\n            return this.origins_[z];\\n        }\\n    };\\n    /**\\n     * Get the resolution for the given zoom level.\\n     * @param {number} z Integer zoom level.\\n     * @return {number} Resolution.\\n     * @api\\n     */\\n    TileGrid.prototype.getResolution = function (z) {\\n        return this.resolutions_[z];\\n    };\\n    /**\\n     * Get the list of resolutions for the tile grid.\\n     * @return {Array<number>} Resolutions.\\n     * @api\\n     */\\n    TileGrid.prototype.getResolutions = function () {\\n        return this.resolutions_;\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary import(\\\"../TileRange.js\\\").default object.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {import(\\\"../TileRange.js\\\").default} Tile range.\\n     */\\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\\n        if (tileCoord[0] < this.maxZoom) {\\n            if (this.zoomFactor_ === 2) {\\n                var minX = tileCoord[1] * 2;\\n                var minY = tileCoord[2] * 2;\\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\\n            }\\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\\n        }\\n        return null;\\n    };\\n    /**\\n     * Get the extent for a tile range.\\n     * @param {number} z Integer zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\\n        var origin = this.getOrigin(z);\\n        var resolution = this.getResolution(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n    };\\n    /**\\n     * Get a tile range for the given extent and integer zoom level.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} z Integer zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary tile range object.\\n     * @return {import(\\\"../TileRange.js\\\").default} Tile range.\\n     */\\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\\n        var tileCoord = tmpTileCoord;\\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\\n        var minX = tileCoord[1];\\n        var minY = tileCoord[2];\\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Tile center.\\n     */\\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\\n        var origin = this.getOrigin(tileCoord[0]);\\n        var resolution = this.getResolution(tileCoord[0]);\\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\\n        return [\\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\\n        ];\\n    };\\n    /**\\n     * Get the extent of a tile coordinate.\\n     *\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary extent object.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\\n        var origin = this.getOrigin(tileCoord[0]);\\n        var resolution = this.getResolution(tileCoord[0]);\\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\\n        var maxX = minX + tileSize[0] * resolution;\\n        var maxY = minY + tileSize[1] * resolution;\\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n    };\\n    /**\\n     * Get the tile coordinate for the given map coordinate and resolution.  This\\n     * method considers that coordinates that intersect tile boundaries should be\\n     * assigned the higher tile coordinate.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Destination import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\\n    };\\n    /**\\n     * Note that this method should not be called for resolutions that correspond\\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {number} resolution Resolution (for a non-integer zoom level).\\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\\n     *     intersections go to the higher tile coordinate, let edge intersections\\n     *     go to the lower tile coordinate.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Temporary import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @private\\n     */\\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\\n        var z = this.getZForResolution(resolution);\\n        var scale = resolution / this.getResolution(z);\\n        var origin = this.getOrigin(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\\n        if (reverseIntersectionPolicy) {\\n            tileCoordX = Math.ceil(tileCoordX) - 1;\\n            tileCoordY = Math.ceil(tileCoordY) - 1;\\n        }\\n        else {\\n            tileCoordX = Math.floor(tileCoordX);\\n            tileCoordY = Math.floor(tileCoordY);\\n        }\\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\\n    };\\n    /**\\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\\n     * they should have separate implementations.  This method is for integer zoom\\n     * levels.  The other method should only be called for resolutions corresponding\\n     * to non-integer zoom levels.\\n     * @param {number} x Map x coordinate.\\n     * @param {number} y Map y coordinate.\\n     * @param {number} z Integer zoom level.\\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\\n     *     intersections go to the higher tile coordinate, let edge intersections\\n     *     go to the lower tile coordinate.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Temporary import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @private\\n     */\\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\\n        var origin = this.getOrigin(z);\\n        var resolution = this.getResolution(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\\n        var tileCoordX = xFromOrigin / tileSize[0];\\n        var tileCoordY = yFromOrigin / tileSize[1];\\n        if (reverseIntersectionPolicy) {\\n            tileCoordX = Math.ceil(tileCoordX) - 1;\\n            tileCoordY = Math.ceil(tileCoordY) - 1;\\n        }\\n        else {\\n            tileCoordX = Math.floor(tileCoordX);\\n            tileCoordY = Math.floor(tileCoordY);\\n        }\\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\\n    };\\n    /**\\n     * Get a tile coordinate given a map coordinate and zoom level.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} z Zoom level.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Destination import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {number} Tile resolution.\\n     */\\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\\n        return this.resolutions_[tileCoord[0]];\\n    };\\n    /**\\n     * Get the tile size for a zoom level. The type of the return value matches the\\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\\n     * get an `import(\\\"../size.js\\\").Size`, run the result through `import(\\\"../size.js\\\").Size.toSize()`.\\n     * @param {number} z Z.\\n     * @return {number|import(\\\"../size.js\\\").Size} Tile size.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileSize = function (z) {\\n        if (this.tileSize_) {\\n            return this.tileSize_;\\n        }\\n        else {\\n            return this.tileSizes_[z];\\n        }\\n    };\\n    /**\\n     * @param {number} z Zoom level.\\n     * @return {import(\\\"../TileRange.js\\\").default} Extent tile range for the specified zoom level.\\n     */\\n    TileGrid.prototype.getFullTileRange = function (z) {\\n        if (!this.fullTileRanges_) {\\n            return null;\\n        }\\n        else {\\n            return this.fullTileRanges_[z];\\n        }\\n    };\\n    /**\\n     * @param {number} resolution Resolution.\\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\\n     *     higher resolution will be used. Default is 0.\\n     * @return {number} Z.\\n     * @api\\n     */\\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\\n        return clamp(z, this.minZoom, this.maxZoom);\\n    };\\n    /**\\n     * @param {!import(\\\"../extent.js\\\").Extent} extent Extent for this tile grid.\\n     * @private\\n     */\\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\\n        var length = this.resolutions_.length;\\n        var fullTileRanges = new Array(length);\\n        for (var z = this.minZoom; z < length; ++z) {\\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\\n        }\\n        this.fullTileRanges_ = fullTileRanges;\\n    };\\n    return TileGrid;\\n}());\\nexport default TileGrid;\\n//# sourceMappingURL=TileGrid.js.map\",\"/**\\n * @module ol/tilegrid\\n */\\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\\nimport { toSize } from './size.js';\\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\\nimport Corner from './extent/Corner.js';\\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\\nimport Units from './proj/Units.js';\\nimport TileGrid from './tilegrid/TileGrid.js';\\n/**\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {!TileGrid} Default tile grid for the\\n * passed projection.\\n */\\nexport function getForProjection(projection) {\\n    var tileGrid = projection.getDefaultTileGrid();\\n    if (!tileGrid) {\\n        tileGrid = createForProjection(projection);\\n        projection.setDefaultTileGrid(tileGrid);\\n    }\\n    return tileGrid;\\n}\\n/**\\n * @param {TileGrid} tileGrid Tile grid.\\n * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {import(\\\"./tilecoord.js\\\").TileCoord} Tile coordinate.\\n */\\nexport function wrapX(tileGrid, tileCoord, projection) {\\n    var z = tileCoord[0];\\n    var center = tileGrid.getTileCoordCenter(tileCoord);\\n    var projectionExtent = extentFromProjection(projection);\\n    if (!containsCoordinate(projectionExtent, center)) {\\n        var worldWidth = getWidth(projectionExtent);\\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\\n        center[0] += worldWidth * worldsAway;\\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\\n    }\\n    else {\\n        return tileCoord;\\n    }\\n}\\n/**\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\\n * @return {!TileGrid} TileGrid instance.\\n */\\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\\n    return new TileGrid({\\n        extent: extent,\\n        origin: getCorner(extent, corner),\\n        resolutions: resolutions,\\n        tileSize: opt_tileSize\\n    });\\n}\\n/**\\n * @typedef {Object} XYZOptions\\n * @property {import(\\\"./extent.js\\\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\\n * @property {number} [minZoom=0] Minimum zoom.\\n * @property {number|import(\\\"./size.js\\\").Size} [tileSize=[256, 256]] Tile size in pixels.\\n */\\n/**\\n * Creates a tile grid with a standard XYZ tiling scheme.\\n * @param {XYZOptions=} opt_options Tile grid options.\\n * @return {!TileGrid} Tile grid instance.\\n * @api\\n */\\nexport function createXYZ(opt_options) {\\n    /** @type {XYZOptions} */\\n    var xyzOptions = opt_options || {};\\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\\n    /** @type {import(\\\"./tilegrid/TileGrid.js\\\").Options} */\\n    var gridOptions = {\\n        extent: extent,\\n        minZoom: xyzOptions.minZoom,\\n        tileSize: xyzOptions.tileSize,\\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\\n    };\\n    return new TileGrid(gridOptions);\\n}\\n/**\\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @return {!Array<number>} Resolutions array.\\n */\\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\\n    var maxZoom = opt_maxZoom !== undefined ?\\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\\n    var height = getHeight(extent);\\n    var width = getWidth(extent);\\n    var tileSize = toSize(opt_tileSize !== undefined ?\\n        opt_tileSize : DEFAULT_TILE_SIZE);\\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\\n    var length = maxZoom + 1;\\n    var resolutions = new Array(length);\\n    for (var z = 0; z < length; ++z) {\\n        resolutions[z] = maxResolution / Math.pow(2, z);\\n    }\\n    return resolutions;\\n}\\n/**\\n * @param {import(\\\"./proj.js\\\").ProjectionLike} projection Projection.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\\n * @return {!TileGrid} TileGrid instance.\\n */\\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\\n    var extent = extentFromProjection(projection);\\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\\n}\\n/**\\n * Generate a tile grid extent from a projection.  If the projection has an\\n * extent, it is used.  If not, a global extent is assumed.\\n * @param {import(\\\"./proj.js\\\").ProjectionLike} projection Projection.\\n * @return {import(\\\"./extent.js\\\").Extent} Extent.\\n */\\nexport function extentFromProjection(projection) {\\n    projection = getProjection(projection);\\n    var extent = projection.getExtent();\\n    if (!extent) {\\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\\n        extent = createOrUpdate(-half, -half, half, half);\\n    }\\n    return extent;\\n}\\n//# sourceMappingURL=tilegrid.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/Tile\\n */\\nimport { abstract } from '../util.js';\\nimport TileCache from '../TileCache.js';\\nimport TileState from '../TileState.js';\\nimport Event from '../events/Event.js';\\nimport { equivalent } from '../proj.js';\\nimport { toSize, scale as scaleSize } from '../size.js';\\nimport Source from './Source.js';\\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize]\\n * @property {boolean} [opaque]\\n * @property {number} [tilePixelRatio]\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection]\\n * @property {import(\\\"./State.js\\\").default} [state]\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid]\\n * @property {boolean} [wrapX=true]\\n * @property {number} [transition]\\n * @property {string} [key]\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for sources providing images divided into a tile grid.\\n * @abstract\\n * @api\\n */\\nvar TileSource = /** @class */ (function (_super) {\\n    __extends(TileSource, _super);\\n    /**\\n     * @param {Options} options SourceTile source options.\\n     */\\n    function TileSource(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            attributionsCollapsible: options.attributionsCollapsible,\\n            projection: options.projection,\\n            state: options.state,\\n            wrapX: options.wrapX\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\\n            options.tilePixelRatio : 1;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\\n        var cacheSize = options.cacheSize;\\n        if (cacheSize === undefined) {\\n            var tileSize = [256, 256];\\n            var tileGrid = options.tileGrid;\\n            if (tileGrid) {\\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\\n            }\\n            var canUseScreen = 'screen' in self;\\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\\n        }\\n        /**\\n         * @protected\\n         * @type {import(\\\"../TileCache.js\\\").default}\\n         */\\n        _this.tileCache = new TileCache(cacheSize);\\n        /**\\n         * @protected\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.tmpSize = [0, 0];\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.key_ = options.key || '';\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").Options}\\n         */\\n        _this.tileOptions = { transition: options.transition };\\n        /**\\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\\n         * by a renderer if the views resolution does not match any resolution of the tile source.\\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\\n         * will be used. If -1, the nearest higher resolution will be used.\\n         * @type {number=}\\n         */\\n        _this.zDirection;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    TileSource.prototype.canExpireCache = function () {\\n        return this.tileCache.canExpireCache();\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {!Object<string, import(\\\"../TileRange.js\\\").default>} usedTiles Used tiles.\\n     */\\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\\n        var tileCache = this.getTileCacheForProjection(projection);\\n        if (tileCache) {\\n            tileCache.expireCache(usedTiles);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {number} z Zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n     * @param {function(import(\\\"../Tile.js\\\").default):(boolean|void)} callback Called with each\\n     *     loaded tile.  If the callback returns `false`, the tile will not be\\n     *     considered loaded.\\n     * @return {boolean} The tile range is fully covered with loaded tiles.\\n     */\\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\\n        var tileCache = this.getTileCacheForProjection(projection);\\n        if (!tileCache) {\\n            return false;\\n        }\\n        var covered = true;\\n        var tile, tileCoordKey, loaded;\\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                tileCoordKey = getKeyZXY(z, x, y);\\n                loaded = false;\\n                if (tileCache.containsKey(tileCoordKey)) {\\n                    tile = /** @type {!import(\\\"../Tile.js\\\").default} */ (tileCache.get(tileCoordKey));\\n                    loaded = tile.getState() === TileState.LOADED;\\n                    if (loaded) {\\n                        loaded = (callback(tile) !== false);\\n                    }\\n                }\\n                if (!loaded) {\\n                    covered = false;\\n                }\\n            }\\n        }\\n        return covered;\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {number} Gutter.\\n     */\\n    TileSource.prototype.getGutterForProjection = function (projection) {\\n        return 0;\\n    };\\n    /**\\n     * Return the key to be used for all tiles in the source.\\n     * @return {string} The key for all tiles.\\n     * @protected\\n     */\\n    TileSource.prototype.getKey = function () {\\n        return this.key_;\\n    };\\n    /**\\n     * Set the value to be used as the key for all tiles in the source.\\n     * @param {string} key The key for tiles.\\n     * @protected\\n     */\\n    TileSource.prototype.setKey = function (key) {\\n        if (this.key_ !== key) {\\n            this.key_ = key;\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {boolean} Opaque.\\n     */\\n    TileSource.prototype.getOpaque = function (projection) {\\n        return this.opaque_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileSource.prototype.getResolutions = function () {\\n        return this.tileGrid.getResolutions();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     */\\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\\n        return abstract();\\n    };\\n    /**\\n     * Return the tile grid of the tile source.\\n     * @return {import(\\\"../tilegrid/TileGrid.js\\\").default} Tile grid.\\n     * @api\\n     */\\n    TileSource.prototype.getTileGrid = function () {\\n        return this.tileGrid;\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../tilegrid/TileGrid.js\\\").default} Tile grid.\\n     */\\n    TileSource.prototype.getTileGridForProjection = function (projection) {\\n        if (!this.tileGrid) {\\n            return getTileGridForProjection(projection);\\n        }\\n        else {\\n            return this.tileGrid;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {import(\\\"../TileCache.js\\\").default} Tile cache.\\n     * @protected\\n     */\\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\\n        var thisProj = this.getProjection();\\n        if (thisProj && !equivalent(thisProj, projection)) {\\n            return null;\\n        }\\n        else {\\n            return this.tileCache;\\n        }\\n    };\\n    /**\\n     * Get the tile pixel ratio for this source. Subclasses may override this\\n     * method, which is meant to return a supported pixel ratio that matches the\\n     * provided `pixelRatio` as close as possible.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {number} Tile pixel ratio.\\n     */\\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\\n        return this.tilePixelRatio_;\\n    };\\n    /**\\n     * @param {number} z Z.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {import(\\\"../size.js\\\").Size} Tile size.\\n     */\\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\\n        var tileGrid = this.getTileGridForProjection(projection);\\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\\n        if (tilePixelRatio == 1) {\\n            return tileSize;\\n        }\\n        else {\\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\\n        }\\n    };\\n    /**\\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\\n     * is outside the resolution and extent range of the tile grid, `null` will be\\n     * returned.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../proj/Projection.js\\\").default=} opt_projection Projection.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\\n     *     null if no tile URL should be created for the passed `tileCoord`.\\n     */\\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\\n        var projection = opt_projection !== undefined ?\\n            opt_projection : this.getProjection();\\n        var tileGrid = this.getTileGridForProjection(projection);\\n        if (this.getWrapX() && projection.isGlobal()) {\\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\\n        }\\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\\n    };\\n    /**\\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\\n     * @api\\n     */\\n    TileSource.prototype.clear = function () {\\n        this.tileCache.clear();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileSource.prototype.refresh = function () {\\n        this.clear();\\n        _super.prototype.refresh.call(this);\\n    };\\n    /**\\n     * Marks a tile coord as being used, without triggering a load.\\n     * @abstract\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     */\\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\\n    return TileSource;\\n}(Source));\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\\n * type.\\n */\\nvar TileSourceEvent = /** @class */ (function (_super) {\\n    __extends(TileSourceEvent, _super);\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../Tile.js\\\").default} tile The tile.\\n     */\\n    function TileSourceEvent(type, tile) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The tile related to the event.\\n         * @type {import(\\\"../Tile.js\\\").default}\\n         * @api\\n         */\\n        _this.tile = tile;\\n        return _this;\\n    }\\n    return TileSourceEvent;\\n}(Event));\\nexport { TileSourceEvent };\\nexport default TileSource;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/source/TileEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a tile starts loading.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\\n     * @api\\n     */\\n    TILELOADSTART: 'tileloadstart',\\n    /**\\n     * Triggered when a tile finishes loading, either when its data is loaded,\\n     * or when loading was aborted because the tile is no longer needed.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\\n     * @api\\n     */\\n    TILELOADEND: 'tileloadend',\\n    /**\\n     * Triggered if tile loading results in an error.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\\n     * @api\\n     */\\n    TILELOADERROR: 'tileloaderror'\\n};\\n//# sourceMappingURL=TileEventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/UrlTile\\n */\\nimport { getUid } from '../util.js';\\nimport TileState from '../TileState.js';\\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\\nimport TileSource, { TileSourceEvent } from './Tile.js';\\nimport TileEventType from './TileEventType.js';\\nimport { getKeyZXY } from '../tilecoord.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize]\\n * @property {boolean} [opaque]\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection]\\n * @property {import(\\\"./State.js\\\").default} [state]\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid]\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} tileLoadFunction\\n * @property {number} [tilePixelRatio]\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction]\\n * @property {string} [url]\\n * @property {Array<string>} [urls]\\n * @property {boolean} [wrapX=true]\\n * @property {number} [transition]\\n * @property {string} [key]\\n */\\n/**\\n * @classdesc\\n * Base class for sources providing tiles divided into a tile grid over http.\\n *\\n * @fires import(\\\"./Tile.js\\\").TileSourceEvent\\n */\\nvar UrlTile = /** @class */ (function (_super) {\\n    __extends(UrlTile, _super);\\n    /**\\n     * @param {Options} options Image tile options.\\n     */\\n    function UrlTile(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            opaque: options.opaque,\\n            projection: options.projection,\\n            state: options.state,\\n            tileGrid: options.tileGrid,\\n            tilePixelRatio: options.tilePixelRatio,\\n            wrapX: options.wrapX,\\n            transition: options.transition,\\n            key: options.key,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").LoadFunction}\\n         */\\n        _this.tileLoadFunction = options.tileLoadFunction;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").UrlFunction}\\n         */\\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\\n        /**\\n         * @protected\\n         * @type {!Array<string>|null}\\n         */\\n        _this.urls = null;\\n        if (options.urls) {\\n            _this.setUrls(options.urls);\\n        }\\n        else if (options.url) {\\n            _this.setUrl(options.url);\\n        }\\n        /**\\n         * @private\\n         * @type {!Object<string, boolean>}\\n         */\\n        _this.tileLoadingKeys_ = {};\\n        return _this;\\n    }\\n    /**\\n     * Return the tile load function of the source.\\n     * @return {import(\\\"../Tile.js\\\").LoadFunction} TileLoadFunction\\n     * @api\\n     */\\n    UrlTile.prototype.getTileLoadFunction = function () {\\n        return this.tileLoadFunction;\\n    };\\n    /**\\n     * Return the tile URL function of the source.\\n     * @return {import(\\\"../Tile.js\\\").UrlFunction} TileUrlFunction\\n     * @api\\n     */\\n    UrlTile.prototype.getTileUrlFunction = function () {\\n        return this.tileUrlFunction;\\n    };\\n    /**\\n     * Return the URLs used for this source.\\n     * When a tileUrlFunction is used instead of url or urls,\\n     * null will be returned.\\n     * @return {!Array<string>|null} URLs.\\n     * @api\\n     */\\n    UrlTile.prototype.getUrls = function () {\\n        return this.urls;\\n    };\\n    /**\\n     * Handle tile change events.\\n     * @param {import(\\\"../events/Event.js\\\").default} event Event.\\n     * @protected\\n     */\\n    UrlTile.prototype.handleTileChange = function (event) {\\n        var tile = /** @type {import(\\\"../Tile.js\\\").default} */ (event.target);\\n        var uid = getUid(tile);\\n        var tileState = tile.getState();\\n        var type;\\n        if (tileState == TileState.LOADING) {\\n            this.tileLoadingKeys_[uid] = true;\\n            type = TileEventType.TILELOADSTART;\\n        }\\n        else if (uid in this.tileLoadingKeys_) {\\n            delete this.tileLoadingKeys_[uid];\\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\\n                    TileEventType.TILELOADEND : undefined;\\n        }\\n        if (type != undefined) {\\n            this.dispatchEvent(new TileSourceEvent(type, tile));\\n        }\\n    };\\n    /**\\n     * Set the tile load function of the source.\\n     * @param {import(\\\"../Tile.js\\\").LoadFunction} tileLoadFunction Tile load function.\\n     * @api\\n     */\\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\\n        this.tileCache.clear();\\n        this.tileLoadFunction = tileLoadFunction;\\n        this.changed();\\n    };\\n    /**\\n     * Set the tile URL function of the source.\\n     * @param {import(\\\"../Tile.js\\\").UrlFunction} tileUrlFunction Tile URL function.\\n     * @param {string=} key Optional new tile key for the source.\\n     * @api\\n     */\\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\\n        this.tileUrlFunction = tileUrlFunction;\\n        this.tileCache.pruneExceptNewestZ();\\n        if (typeof key !== 'undefined') {\\n            this.setKey(key);\\n        }\\n        else {\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * Set the URL to use for requests.\\n     * @param {string} url URL.\\n     * @api\\n     */\\n    UrlTile.prototype.setUrl = function (url) {\\n        var urls = this.urls = expandUrl(url);\\n        this.setUrls(urls);\\n    };\\n    /**\\n     * Set the URLs to use for requests.\\n     * @param {Array<string>} urls URLs.\\n     * @api\\n     */\\n    UrlTile.prototype.setUrls = function (urls) {\\n        this.urls = urls;\\n        var key = urls.join('\\\\n');\\n        if (this.generateTileUrlFunction_) {\\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\\n        }\\n        else {\\n            this.setKey(key);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    UrlTile.prototype.useTile = function (z, x, y) {\\n        var tileCoordKey = getKeyZXY(z, x, y);\\n        if (this.tileCache.containsKey(tileCoordKey)) {\\n            this.tileCache.get(tileCoordKey);\\n        }\\n    };\\n    return UrlTile;\\n}(TileSource));\\nexport default UrlTile;\\n//# sourceMappingURL=UrlTile.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/TileImage\\n */\\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\\nimport { getUid } from '../util.js';\\nimport ImageTile from '../ImageTile.js';\\nimport TileCache from '../TileCache.js';\\nimport TileState from '../TileState.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { equivalent, get as getProjection } from '../proj.js';\\nimport ReprojTile from '../reproj/Tile.js';\\nimport UrlTile from './UrlTile.js';\\nimport { getKey, getKeyZXY } from '../tilecoord.js';\\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {boolean} [opaque=true] Whether the layer is opaque.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection] Projection. Default is the view projection.\\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\\n * Higher values can increase reprojection performance, but decrease precision.\\n * @property {import(\\\"./State.js\\\").default} [state] Source state.\\n * @property {typeof import(\\\"../ImageTile.js\\\").default} [tileClass] Class used to instantiate image tiles.\\n * Default is {@link module:ol/ImageTile~ImageTile}.\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid] Tile grid.\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\\n * ```js\\n * function(imageTile, src) {\\n *   imageTile.getImage().src = src;\\n * };\\n * ```\\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\\n * service advertizes 256px by 256px tiles but actually sends 512px\\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\\n * should be set to `2`.\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\\n * used instead of defining each one separately in the `urls` option.\\n * @property {Array<string>} [urls] An array of URL templates.\\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\\n * request out-of-bounds tiles from the server. When set to `false`, only one\\n * world will be rendered. When set to `true`, tiles will be requested for one\\n * world only, but they will be wrapped horizontally to render multiple worlds.\\n * @property {number} [transition] Duration of the opacity transition for rendering.\\n * To disable the opacity transition, pass `transition: 0`.\\n * @property {string} [key] Optional tile key for proper cache fetching\\n */\\n/**\\n * @classdesc\\n * Base class for sources providing images divided into a tile grid.\\n *\\n * @fires import(\\\"./Tile.js\\\").TileSourceEvent\\n * @api\\n */\\nvar TileImage = /** @class */ (function (_super) {\\n    __extends(TileImage, _super);\\n    /**\\n     * @param {!Options} options Image tile options.\\n     */\\n    function TileImage(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            opaque: options.opaque,\\n            projection: options.projection,\\n            state: options.state,\\n            tileGrid: options.tileGrid,\\n            tileLoadFunction: options.tileLoadFunction ?\\n                options.tileLoadFunction : defaultTileLoadFunction,\\n            tilePixelRatio: options.tilePixelRatio,\\n            tileUrlFunction: options.tileUrlFunction,\\n            url: options.url,\\n            urls: options.urls,\\n            wrapX: options.wrapX,\\n            transition: options.transition,\\n            key: options.key,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        /**\\n         * @protected\\n         * @type {?string}\\n         */\\n        _this.crossOrigin =\\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\\n        /**\\n         * @protected\\n         * @type {typeof ImageTile}\\n         */\\n        _this.tileClass = options.tileClass !== undefined ?\\n            options.tileClass : ImageTile;\\n        /**\\n         * @protected\\n         * @type {!Object<string, TileCache>}\\n         */\\n        _this.tileCacheForProjection = {};\\n        /**\\n         * @protected\\n         * @type {!Object<string, import(\\\"../tilegrid/TileGrid.js\\\").default>}\\n         */\\n        _this.tileGridForProjection = {};\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderReprojectionEdges_ = false;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.canExpireCache = function () {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.canExpireCache.call(this);\\n        }\\n        if (this.tileCache.canExpireCache()) {\\n            return true;\\n        }\\n        else {\\n            for (var key in this.tileCacheForProjection) {\\n                if (this.tileCacheForProjection[key].canExpireCache()) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            _super.prototype.expireCache.call(this, projection, usedTiles);\\n            return;\\n        }\\n        var usedTileCache = this.getTileCacheForProjection(projection);\\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\\n        for (var id in this.tileCacheForProjection) {\\n            var tileCache = this.tileCacheForProjection[id];\\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getGutterForProjection = function (projection) {\\n        if (ENABLE_RASTER_REPROJECTION &&\\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\\n            return 0;\\n        }\\n        else {\\n            return this.getGutter();\\n        }\\n    };\\n    /**\\n     * @return {number} Gutter.\\n     */\\n    TileImage.prototype.getGutter = function () {\\n        return 0;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getOpaque = function (projection) {\\n        if (ENABLE_RASTER_REPROJECTION &&\\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\\n            return false;\\n        }\\n        else {\\n            return _super.prototype.getOpaque.call(this, projection);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTileGridForProjection = function (projection) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.getTileGridForProjection.call(this, projection);\\n        }\\n        var thisProj = this.getProjection();\\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\\n            return this.tileGrid;\\n        }\\n        else {\\n            var projKey = getUid(projection);\\n            if (!(projKey in this.tileGridForProjection)) {\\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\\n            }\\n            return (\\n            /** @type {!import(\\\"../tilegrid/TileGrid.js\\\").default} */ (this.tileGridForProjection[projKey]));\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\\n        }\\n        var thisProj = this.getProjection();\\n        if (!thisProj || equivalent(thisProj, projection)) {\\n            return this.tileCache;\\n        }\\n        else {\\n            var projKey = getUid(projection);\\n            if (!(projKey in this.tileCacheForProjection)) {\\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\\n            }\\n            return this.tileCacheForProjection[projKey];\\n        }\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {string} key The key set on the tile.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     * @private\\n     */\\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\\n        var tileCoord = [z, x, y];\\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\\n        var tileUrl = urlTileCoord ?\\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\\n        tile.key = key;\\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\\n        return tile;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\\n        var sourceProjection = /** @type {!import(\\\"../proj/Projection.js\\\").default} */ (this.getProjection());\\n        if (!ENABLE_RASTER_REPROJECTION ||\\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\\n        }\\n        else {\\n            var cache = this.getTileCacheForProjection(projection);\\n            var tileCoord = [z, x, y];\\n            var tile = void 0;\\n            var tileCoordKey = getKey(tileCoord);\\n            if (cache.containsKey(tileCoordKey)) {\\n                tile = /** @type {!import(\\\"../Tile.js\\\").default} */ (cache.get(tileCoordKey));\\n            }\\n            var key = this.getKey();\\n            if (tile && tile.key == key) {\\n                return tile;\\n            }\\n            else {\\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\\n                var targetTileGrid = this.getTileGridForProjection(projection);\\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\\n                newTile.key = key;\\n                if (tile) {\\n                    newTile.interimTile = tile;\\n                    newTile.refreshInterimChain();\\n                    cache.replace(tileCoordKey, newTile);\\n                }\\n                else {\\n                    cache.set(tileCoordKey, newTile);\\n                }\\n                return newTile;\\n            }\\n        }\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {!import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     * @protected\\n     */\\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\\n        var tile = null;\\n        var tileCoordKey = getKeyZXY(z, x, y);\\n        var key = this.getKey();\\n        if (!this.tileCache.containsKey(tileCoordKey)) {\\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\\n            this.tileCache.set(tileCoordKey, tile);\\n        }\\n        else {\\n            tile = this.tileCache.get(tileCoordKey);\\n            if (tile.key != key) {\\n                // The source's params changed. If the tile has an interim tile and if we\\n                // can use it then we use it. Otherwise we create a new tile.  In both\\n                // cases we attempt to assign an interim tile to the new tile.\\n                var interimTile = tile;\\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\\n                //make the new tile the head of the list,\\n                if (interimTile.getState() == TileState.IDLE) {\\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\\n                    tile.interimTile = interimTile.interimTile;\\n                }\\n                else {\\n                    tile.interimTile = interimTile;\\n                }\\n                tile.refreshInterimChain();\\n                this.tileCache.replace(tileCoordKey, tile);\\n            }\\n        }\\n        return tile;\\n    };\\n    /**\\n     * Sets whether to render reprojection edges or not (usually for debugging).\\n     * @param {boolean} render Render the edges.\\n     * @api\\n     */\\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\\n        if (!ENABLE_RASTER_REPROJECTION ||\\n            this.renderReprojectionEdges_ == render) {\\n            return;\\n        }\\n        this.renderReprojectionEdges_ = render;\\n        for (var id in this.tileCacheForProjection) {\\n            this.tileCacheForProjection[id].clear();\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Sets the tile grid to use when reprojecting the tiles to the given\\n     * projection instead of the default tile grid for the projection.\\n     *\\n     * This can be useful when the default tile grid cannot be created\\n     * (e.g. projection has no extent defined) or\\n     * for optimization reasons (custom tile size, resolutions, ...).\\n     *\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} projection Projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} tilegrid Tile grid to use for the projection.\\n     * @api\\n     */\\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\\n        if (ENABLE_RASTER_REPROJECTION) {\\n            var proj = getProjection(projection);\\n            if (proj) {\\n                var projKey = getUid(proj);\\n                if (!(projKey in this.tileGridForProjection)) {\\n                    this.tileGridForProjection[projKey] = tilegrid;\\n                }\\n            }\\n        }\\n    };\\n    return TileImage;\\n}(UrlTile));\\n/**\\n * @param {ImageTile} imageTile Image tile.\\n * @param {string} src Source.\\n */\\nfunction defaultTileLoadFunction(imageTile, src) {\\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\\n}\\nexport default TileImage;\\n//# sourceMappingURL=TileImage.js.map\",\"/**\\n * @module ol/source/XYZ\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport TileImage from './TileImage.js';\\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {boolean} [opaque=true] Whether the layer is opaque.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection='EPSG:3857'] Projection.\\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\\n * Higher values can increase reprojection performance, but decrease precision.\\n * @property {number} [maxZoom=18] Optional max zoom level.\\n * @property {number} [minZoom=0] Optional min zoom level.\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid] Tile grid.\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\\n * ```js\\n * function(imageTile, src) {\\n *   imageTile.getImage().src = src;\\n * };\\n * ```\\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\\n * should be set to `2`.\\n * @property {number|import(\\\"../size.js\\\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction] Optional function to get\\n * tile URL given a tile coordinate and the projection.\\n * Required if url or urls are not provided.\\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\\n * may be used instead of defining each one separately in the `urls` option.\\n * @property {Array<string>} [urls] An array of URL templates.\\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\\n * @property {number} [transition] Duration of the opacity transition for rendering.\\n * To disable the opacity transition, pass `transition: 0`.\\n */\\n/**\\n * @classdesc\\n * Layer source for tile data with URLs in a set XYZ format that are\\n * defined in a URL template. By default, this follows the widely-used\\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\\n * using the `{-y}` placeholder in the URL template, so long as the\\n * source does not have a custom tile grid. In this case,\\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\\n * such as:\\n *\\n *  tileUrlFunction: function(coordinate) {\\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\\n *        coordinate[1] + '/' + coordinate[2] + '.png';\\n *    }\\n *\\n * @api\\n */\\nvar XYZ = /** @class */ (function (_super) {\\n    __extends(XYZ, _super);\\n    /**\\n     * @param {Options=} opt_options XYZ options.\\n     */\\n    function XYZ(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        var projection = options.projection !== undefined ?\\n            options.projection : 'EPSG:3857';\\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\\n            createXYZ({\\n                extent: extentFromProjection(projection),\\n                maxZoom: options.maxZoom,\\n                minZoom: options.minZoom,\\n                tileSize: options.tileSize\\n            });\\n        _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            crossOrigin: options.crossOrigin,\\n            opaque: options.opaque,\\n            projection: projection,\\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\\n            tileGrid: tileGrid,\\n            tileLoadFunction: options.tileLoadFunction,\\n            tilePixelRatio: options.tilePixelRatio,\\n            tileUrlFunction: options.tileUrlFunction,\\n            url: options.url,\\n            urls: options.urls,\\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\\n            transition: options.transition,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        return _this;\\n    }\\n    return XYZ;\\n}(TileImage));\\nexport default XYZ;\\n//# sourceMappingURL=XYZ.js.map\",\"import 'ol/ol.css';\\nimport {Map, View} from 'ol';\\nimport TileLayer from 'ol/layer/Tile';\\nimport XYZSource from 'ol/source/XYZ';\\nimport {fromLonLat} from 'ol/proj';\\n\\nnew Map({\\n  target: 'map-container',\\n  layers: [\\n    new TileLayer({\\n      source: new XYZSource({\\n        url: 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg'\\n      })\\n    })\\n  ],\\n  view: new View({\\n    center: fromLonLat([120.491633,-1.0716013]),\\n    zoom: 5\\n  })\\n});\"]}","code":"!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=14)}([,,,,,,,,,function(t,e,n){var i=n(10);\"string\"==typeof i&&(i=[[t.i,i,\"\"]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(12)(i,o);i.locals&&(t.exports=i.locals)},function(t,e,n){(t.exports=n(11)(!1)).push([t.i,'.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \" \";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n',\"\"])},function(t,e,n){\"use strict\";t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||\"\",i=t[3];if(!i)return n;if(e&&\"function\"==typeof btoa){var o=(s=i,\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+\" */\"),r=i.sources.map(function(t){return\"/*# sourceURL=\"+i.sourceRoot+t+\" */\"});return[n].concat(r).concat([o]).join(\"\\n\")}var s;return[n].join(\"\\n\")}(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n}).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var i={},o=0;o<this.length;o++){var r=this[o][0];null!=r&&(i[r]=!0)}for(o=0;o<t.length;o++){var s=t[o];null!=s[0]&&i[s[0]]||(n&&!s[2]?s[2]=n:n&&(s[2]=\"(\"+s[2]+\") and (\"+n+\")\"),e.push(s))}},e}},function(t,e,n){var i,o,r={},s=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=i.apply(this,arguments)),o}),a=function(t){var e={};return function(t,n){if(\"function\"==typeof t)return t();if(void 0===e[t]){var i=function(t,e){return e?e.querySelector(t):document.querySelector(t)}.call(this,t,n);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}}(),u=null,l=0,c=[],h=n(13);function p(t,e){for(var n=0;n<t.length;n++){var i=t[n],o=r[i.id];if(o){o.refs++;for(var s=0;s<o.parts.length;s++)o.parts[s](i.parts[s]);for(;s<i.parts.length;s++)o.parts.push(g(i.parts[s],e))}else{var a=[];for(s=0;s<i.parts.length;s++)a.push(g(i.parts[s],e));r[i.id]={id:i.id,refs:1,parts:a}}}}function f(t,e){for(var n=[],i={},o=0;o<t.length;o++){var r=t[o],s=e.base?r[0]+e.base:r[0],a={css:r[1],media:r[2],sourceMap:r[3]};i[s]?i[s].parts.push(a):n.push(i[s]={id:s,parts:[a]})}return n}function d(t,e){var n=a(t.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var i=c[c.length-1];if(\"top\"===t.insertAt)i?i.nextSibling?n.insertBefore(e,i.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),c.push(e);else if(\"bottom\"===t.insertAt)n.appendChild(e);else{if(\"object\"!=typeof t.insertAt||!t.insertAt.before)throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");var o=a(t.insertAt.before,n);n.insertBefore(e,o)}}function _(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=c.indexOf(t);e>=0&&c.splice(e,1)}function v(t){var e=document.createElement(\"style\");if(void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),void 0===t.attrs.nonce){var i=function(){0;return n.nc}();i&&(t.attrs.nonce=i)}return y(e,t.attrs),d(t,e),e}function y(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function g(t,e){var n,i,o,r;if(e.transform&&t.css){if(!(r=\"function\"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=r}if(e.singleton){var s=l++;n=u||(u=v(e)),i=b.bind(null,n,s,!1),o=b.bind(null,n,s,!0)}else t.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=function(t){var e=document.createElement(\"link\");return void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),t.attrs.rel=\"stylesheet\",y(e,t.attrs),d(t,e),e}(e),i=function(t,e,n){var i=n.css,o=n.sourceMap,r=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||r)&&(i=h(i));o&&(i+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\");var s=new Blob([i],{type:\"text/css\"}),a=t.href;t.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}.bind(null,n,e),o=function(){_(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(e),i=function(t,e){var n=e.css,i=e.media;i&&t.setAttribute(\"media\",i);if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){_(n)});return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else o()}}t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");(e=e||{}).attrs=\"object\"==typeof e.attrs?e.attrs:{},e.singleton||\"boolean\"==typeof e.singleton||(e.singleton=s()),e.insertInto||(e.insertInto=\"head\"),e.insertAt||(e.insertAt=\"bottom\");var n=f(t,e);return p(n,e),function(t){for(var i=[],o=0;o<n.length;o++){var s=n[o];(a=r[s.id]).refs--,i.push(a)}t&&p(f(t,e),e);for(o=0;o<i.length;o++){var a;if(0===(a=i[o]).refs){for(var u=0;u<a.parts.length;u++)a.parts[u]();delete r[a.id]}}}};var m,E=(m=[],function(t,e){return m[t]=e,m.filter(Boolean).join(\"\\n\")});function b(t,e,n,i){var o=n?\"\":i.css;if(t.styleSheet)t.styleSheet.cssText=E(e,o);else{var r=document.createTextNode(o),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(r,s[e]):t.appendChild(r)}}},function(t,e){t.exports=function(t){var e=\"undefined\"!=typeof window&&window.location;if(!e)throw new Error(\"fixUrls requires window.location\");if(!t||\"string\"!=typeof t)return t;var n=e.protocol+\"//\"+e.host,i=n+e.pathname.replace(/\\/[^\\/]*$/,\"/\");return t.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(t,e){var o,r=e.trim().replace(/^\"(.*)\"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(r)?t:(o=0===r.indexOf(\"//\")?r:0===r.indexOf(\"/\")?n+r:i+r.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(o)+\")\")})}},function(t,e,n){\"use strict\";n.r(e);n(9);function i(){return function(){throw new Error(\"Unimplemented abstract method.\")}()}var o=0;function r(t){return t.ol_uid||(t.ol_uid=String(++o))}var s,a=\"6.0.0-beta.6\",u=(s=function(t,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}s(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),l=function(t){function e(e){var n=this,i=\"Assertion failed. See https://openlayers.org/en/\"+(\"latest\"===a?a:\"v\"+a.split(\"-\")[0])+\"/doc/errors/#\"+e+\" for details.\";return(n=t.call(this,i)||this).code=e,n.name=\"AssertionError\",n.message=i,n}return u(e,t),e}(Error),c={ADD:\"add\",REMOVE:\"remove\"},h=\"propertychange\",p=\"function\"==typeof Object.assign?Object.assign:function(t,e){if(null==t)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(t),i=1,o=arguments.length;i<o;++i){var r=arguments[i];if(null!=r)for(var s in r)r.hasOwnProperty(s)&&(n[s]=r[s])}return n};function f(t){for(var e in t)delete t[e]}var d=\"function\"==typeof Object.values?Object.values:function(t){var e=[];for(var n in t)e.push(t[n]);return e};function _(t,e,n,i){for(var o,r=0,s=t.length;r<s;++r)if((o=t[r]).listener===e&&o.bindTo===n)return i&&(o.deleteIndex=r),o}function v(t,e){var n=y(t);return n?n[e]:void 0}function y(t,e){var n=t.ol_lm;return!n&&e&&(n=t.ol_lm={}),n}function g(t,e){var n=v(t,e);if(n){for(var i=0,o=n.length;i<o;++i)t.removeEventListener(e,n[i].boundListener),f(n[i]);n.length=0;var r=y(t);r&&(delete r[e],0===Object.keys(r).length&&function(t){delete t.ol_lm}(t))}}function m(t,e,n,i,o){var r=y(t,!0),s=r[e];s||(s=r[e]=[]);var a=_(s,n,i,!1);return a?o||(a.callOnce=!1):(a={bindTo:i,callOnce:!!o,listener:n,target:t,type:e},t.addEventListener(e,function(t){var e=function(e){var n=t.listener,i=t.bindTo||t.target;return t.callOnce&&T(t),n.call(i,e)};return t.boundListener=e,e}(a)),s.push(a)),a}function E(t,e,n,i){return m(t,e,n,i,!0)}function b(t,e,n,i){var o=v(t,e);if(o){var r=_(o,n,i,!0);r&&T(r)}}function T(t){if(t&&t.target){t.target.removeEventListener(t.type,t.boundListener);var e=v(t.target,t.type);if(e){var n=\"deleteIndex\"in t?t.deleteIndex:e.indexOf(t);-1!==n&&e.splice(n,1),0===e.length&&g(t.target,t.type)}f(t)}}var w=function(){function t(){this.disposed_=!1}return t.prototype.dispose=function(){this.disposed_||(this.disposed_=!0,this.disposeInternal())},t.prototype.disposeInternal=function(){},t}();function C(){return!0}function x(){return!1}function O(){}var R=function(){function t(t){this.propagationStopped,this.type=t,this.target=null}return t.prototype.preventDefault=function(){this.propagationStopped=!0},t.prototype.stopPropagation=function(){this.propagationStopped=!0},t}(),P=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),S=function(t){function e(){var e=t.call(this)||this;return e.pendingRemovals_={},e.dispatching_={},e.listeners_={},e}return P(e,t),e.prototype.addEventListener=function(t,e){var n=this.listeners_[t];n||(n=this.listeners_[t]=[]),-1===n.indexOf(e)&&n.push(e)},e.prototype.dispatchEvent=function(t){var e=\"string\"==typeof t?new R(t):t,n=e.type;e.target=this;var i,o=this.listeners_[n];if(o){n in this.dispatching_||(this.dispatching_[n]=0,this.pendingRemovals_[n]=0),++this.dispatching_[n];for(var r=0,s=o.length;r<s;++r)if(!1===o[r].call(this,e)||e.propagationStopped){i=!1;break}if(--this.dispatching_[n],0===this.dispatching_[n]){var a=this.pendingRemovals_[n];for(delete this.pendingRemovals_[n];a--;)this.removeEventListener(n,O);delete this.dispatching_[n]}return i}},e.prototype.disposeInternal=function(){!function(t){var e=y(t);if(e)for(var n in e)g(t,n)}(this)},e.prototype.getListeners=function(t){return this.listeners_[t]},e.prototype.hasListener=function(t){return t?t in this.listeners_:Object.keys(this.listeners_).length>0},e.prototype.removeEventListener=function(t,e){var n=this.listeners_[t];if(n){var i=n.indexOf(e);t in this.pendingRemovals_?(n[i]=O,++this.pendingRemovals_[t]):(n.splice(i,1),0===n.length&&delete this.listeners_[t])}},e}(w),M={CHANGE:\"change\",CLEAR:\"clear\",CONTEXTMENU:\"contextmenu\",CLICK:\"click\",DBLCLICK:\"dblclick\",DRAGENTER:\"dragenter\",DRAGOVER:\"dragover\",DROP:\"drop\",ERROR:\"error\",KEYDOWN:\"keydown\",KEYPRESS:\"keypress\",LOAD:\"load\",MOUSEDOWN:\"mousedown\",MOUSEMOVE:\"mousemove\",MOUSEOUT:\"mouseout\",MOUSEUP:\"mouseup\",MOUSEWHEEL:\"mousewheel\",MSPOINTERDOWN:\"MSPointerDown\",RESIZE:\"resize\",TOUCHSTART:\"touchstart\",TOUCHMOVE:\"touchmove\",TOUCHEND:\"touchend\",WHEEL:\"wheel\"},L=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var A=function(t){function e(){var e=t.call(this)||this;return e.revision_=0,e}return L(e,t),e.prototype.changed=function(){++this.revision_,this.dispatchEvent(M.CHANGE)},e.prototype.getRevision=function(){return this.revision_},e.prototype.on=function(t,e){if(Array.isArray(t)){for(var n=t.length,i=new Array(n),o=0;o<n;++o)i[o]=m(this,t[o],e);return i}return m(this,t,e)},e.prototype.once=function(t,e){if(Array.isArray(t)){for(var n=t.length,i=new Array(n),o=0;o<n;++o)i[o]=E(this,t[o],e);return i}return E(this,t,e)},e.prototype.un=function(t,e){if(Array.isArray(t))for(var n=0,i=t.length;n<i;++n)b(this,t[n],e);else b(this,t,e)},e}(S),I=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),F=function(t){function e(e,n,i){var o=t.call(this,e)||this;return o.key=n,o.oldValue=i,o}return I(e,t),e}(R),D=function(t){function e(e){var n=t.call(this)||this;return r(n),n.values_={},void 0!==e&&n.setProperties(e),n}return I(e,t),e.prototype.get=function(t){var e;return this.values_.hasOwnProperty(t)&&(e=this.values_[t]),e},e.prototype.getKeys=function(){return Object.keys(this.values_)},e.prototype.getProperties=function(){return p({},this.values_)},e.prototype.notify=function(t,e){var n;n=N(t),this.dispatchEvent(new F(n,t,e)),n=h,this.dispatchEvent(new F(n,t,e))},e.prototype.set=function(t,e,n){if(n)this.values_[t]=e;else{var i=this.values_[t];this.values_[t]=e,i!==e&&this.notify(t,i)}},e.prototype.setProperties=function(t,e){for(var n in t)this.set(n,t[n],e)},e.prototype.unset=function(t,e){if(t in this.values_){var n=this.values_[t];delete this.values_[t],e||this.notify(t,n)}},e}(A),j={};function N(t){return j.hasOwnProperty(t)?j[t]:j[t]=\"change:\"+t}var k=D,z=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),G=\"length\",K=function(t){function e(e,n,i){var o=t.call(this,e)||this;return o.element=n,o.index=i,o}return z(e,t),e}(R),U=function(t){function e(e,n){var i=t.call(this)||this,o=n||{};if(i.unique_=!!o.unique,i.array_=e||[],i.unique_)for(var r=0,s=i.array_.length;r<s;++r)i.assertUnique_(i.array_[r],r);return i.updateLength_(),i}return z(e,t),e.prototype.clear=function(){for(;this.getLength()>0;)this.pop()},e.prototype.extend=function(t){for(var e=0,n=t.length;e<n;++e)this.push(t[e]);return this},e.prototype.forEach=function(t){for(var e=this.array_,n=0,i=e.length;n<i;++n)t(e[n],n,e)},e.prototype.getArray=function(){return this.array_},e.prototype.item=function(t){return this.array_[t]},e.prototype.getLength=function(){return this.get(G)},e.prototype.insertAt=function(t,e){this.unique_&&this.assertUnique_(e),this.array_.splice(t,0,e),this.updateLength_(),this.dispatchEvent(new K(c.ADD,e,t))},e.prototype.pop=function(){return this.removeAt(this.getLength()-1)},e.prototype.push=function(t){this.unique_&&this.assertUnique_(t);var e=this.getLength();return this.insertAt(e,t),this.getLength()},e.prototype.remove=function(t){for(var e=this.array_,n=0,i=e.length;n<i;++n)if(e[n]===t)return this.removeAt(n)},e.prototype.removeAt=function(t){var e=this.array_[t];return this.array_.splice(t,1),this.updateLength_(),this.dispatchEvent(new K(c.REMOVE,e,t)),e},e.prototype.setAt=function(t,e){var n=this.getLength();if(t<n){this.unique_&&this.assertUnique_(e,t);var i=this.array_[t];this.array_[t]=e,this.dispatchEvent(new K(c.REMOVE,i,t)),this.dispatchEvent(new K(c.ADD,e,t))}else{for(var o=n;o<t;++o)this.insertAt(o,void 0);this.insertAt(t,e)}},e.prototype.updateLength_=function(){this.set(G,this.array_.length)},e.prototype.assertUnique_=function(t,e){for(var n=0,i=this.array_.length;n<i;++n)if(this.array_[n]===t&&n!==e)throw new l(58)},e}(k),X=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Y=function(t){function e(e,n,i){var o=t.call(this,e)||this;return o.map=n,o.frameState=void 0!==i?i:null,o}return X(e,t),e}(R),Z=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),W=function(t){function e(e,n,i,o,r){var s=t.call(this,e,n,r)||this;return s.originalEvent=i,s.pixel=n.getEventPixel(i),s.coordinate=n.getCoordinateFromPixel(s.pixel),s.dragging=void 0!==o&&o,s}return Z(e,t),e.prototype.preventDefault=function(){t.prototype.preventDefault.call(this),this.originalEvent.preventDefault()},e.prototype.stopPropagation=function(){t.prototype.stopPropagation.call(this),this.originalEvent.stopPropagation()},e}(Y),V=\"undefined\"!=typeof navigator?navigator.userAgent.toLowerCase():\"\",H=-1!==V.indexOf(\"firefox\"),B=-1!==V.indexOf(\"safari\")&&-1==V.indexOf(\"chrom\"),q=-1!==V.indexOf(\"webkit\")&&-1==V.indexOf(\"edge\"),Q=-1!==V.indexOf(\"macintosh\"),$=window.devicePixelRatio||1,J=(navigator,\"ontouchstart\"in window),tt=\"PointerEvent\"in window,et=!!navigator.msPointerEnabled,nt={SINGLECLICK:\"singleclick\",CLICK:M.CLICK,DBLCLICK:M.DBLCLICK,POINTERDRAG:\"pointerdrag\",POINTERMOVE:\"pointermove\",POINTERDOWN:\"pointerdown\",POINTERUP:\"pointerup\",POINTEROVER:\"pointerover\",POINTEROUT:\"pointerout\",POINTERENTER:\"pointerenter\",POINTERLEAVE:\"pointerleave\",POINTERCANCEL:\"pointercancel\"},it=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ot=function(t){function e(e,n,i,o,r){var s=t.call(this,e,n,i.originalEvent,o,r)||this;return s.pointerEvent=i,s}return it(e,t),e}(W),rt={POINTERMOVE:\"pointermove\",POINTERDOWN:\"pointerdown\",POINTERUP:\"pointerup\",POINTEROVER:\"pointerover\",POINTEROUT:\"pointerout\",POINTERENTER:\"pointerenter\",POINTERLEAVE:\"pointerleave\",POINTERCANCEL:\"pointercancel\"},st=function(){function t(t,e){this.dispatcher=t,this.mapping_=e}return t.prototype.getEvents=function(){return Object.keys(this.mapping_)},t.prototype.getHandlerForEvent=function(t){return this.mapping_[t]},t}(),at=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ut=1,lt=\"mouse\";function ct(t){if(!this.isEventSimulatedFromTouch_(t)){ut.toString()in this.pointerMap&&this.cancel(t);var e=_t(t,this.dispatcher);this.pointerMap[ut.toString()]=t,this.dispatcher.down(e,t)}}function ht(t){if(!this.isEventSimulatedFromTouch_(t)){var e=_t(t,this.dispatcher);this.dispatcher.move(e,t)}}function pt(t){if(!this.isEventSimulatedFromTouch_(t)){var e=this.pointerMap[ut.toString()];if(e&&e.button===t.button){var n=_t(t,this.dispatcher);this.dispatcher.up(n,t),this.cleanupMouse()}}}function ft(t){if(!this.isEventSimulatedFromTouch_(t)){var e=_t(t,this.dispatcher);this.dispatcher.enterOver(e,t)}}function dt(t){if(!this.isEventSimulatedFromTouch_(t)){var e=_t(t,this.dispatcher);this.dispatcher.leaveOut(e,t)}}function _t(t,e){var n=e.cloneEvent(t,t),i=n.preventDefault;return n.preventDefault=function(){t.preventDefault(),i()},n.pointerId=ut,n.isPrimary=!0,n.pointerType=lt,n}var vt=function(t){function e(e){var n=this,i={mousedown:ct,mousemove:ht,mouseup:pt,mouseover:ft,mouseout:dt};return(n=t.call(this,e,i)||this).pointerMap=e.pointerMap,n.lastTouches=[],n}return at(e,t),e.prototype.isEventSimulatedFromTouch_=function(t){for(var e=this.lastTouches,n=t.clientX,i=t.clientY,o=0,r=e.length,s=void 0;o<r&&(s=e[o]);o++){var a=Math.abs(n-s[0]),u=Math.abs(i-s[1]);if(a<=25&&u<=25)return!0}return!1},e.prototype.cancel=function(t){var e=_t(t,this.dispatcher);this.dispatcher.cancel(e,t),this.cleanupMouse()},e.prototype.cleanupMouse=function(){delete this.pointerMap[ut.toString()]},e}(st),yt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),gt=[\"\",\"unavailable\",\"touch\",\"pen\",\"mouse\"];function mt(t){this.pointerMap[t.pointerId.toString()]=t;var e=this.prepareEvent_(t);this.dispatcher.down(e,t)}function Et(t){var e=this.prepareEvent_(t);this.dispatcher.move(e,t)}function bt(t){var e=this.prepareEvent_(t);this.dispatcher.up(e,t),this.cleanup(t.pointerId)}function Tt(t){var e=this.prepareEvent_(t);this.dispatcher.leaveOut(e,t)}function wt(t){var e=this.prepareEvent_(t);this.dispatcher.enterOver(e,t)}function Ct(t){var e=this.prepareEvent_(t);this.dispatcher.cancel(e,t),this.cleanup(t.pointerId)}function xt(t){var e=this.dispatcher.makeEvent(\"lostpointercapture\",t,t);this.dispatcher.dispatchEvent(e)}function Ot(t){var e=this.dispatcher.makeEvent(\"gotpointercapture\",t,t);this.dispatcher.dispatchEvent(e)}var Rt=function(t){function e(e){var n=this,i={MSPointerDown:mt,MSPointerMove:Et,MSPointerUp:bt,MSPointerOut:Tt,MSPointerOver:wt,MSPointerCancel:Ct,MSGotPointerCapture:Ot,MSLostPointerCapture:xt};return(n=t.call(this,e,i)||this).pointerMap=e.pointerMap,n}return yt(e,t),e.prototype.prepareEvent_=function(t){var e=t;return\"number\"==typeof t.pointerType&&((e=this.dispatcher.cloneEvent(t,t)).pointerType=gt[t.pointerType]),e},e.prototype.cleanup=function(t){delete this.pointerMap[t.toString()]},e}(st),Pt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function St(t){this.dispatcher.fireNativeEvent(t)}function Mt(t){this.dispatcher.fireNativeEvent(t)}function Lt(t){this.dispatcher.fireNativeEvent(t)}function At(t){this.dispatcher.fireNativeEvent(t)}function It(t){this.dispatcher.fireNativeEvent(t)}function Ft(t){this.dispatcher.fireNativeEvent(t)}function Dt(t){this.dispatcher.fireNativeEvent(t)}function jt(t){this.dispatcher.fireNativeEvent(t)}var Nt=function(t){function e(e){var n={pointerdown:St,pointermove:Mt,pointerup:Lt,pointerout:At,pointerover:It,pointercancel:Ft,gotpointercapture:jt,lostpointercapture:Dt};return t.call(this,e,n)||this}return Pt(e,t),e}(st),kt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),zt=!1,Gt=function(t){function e(e,n,i){var o=t.call(this,e)||this;o.originalEvent=n;var r=i||{};return o.buttons=function(t){var e;if(t.buttons||zt)e=t.buttons;else switch(t.which){case 1:e=1;break;case 2:e=4;break;case 3:e=2;break;default:e=0}return e}(r),o.pressure=function(t,e){var n=0;n=t.pressure?t.pressure:e?.5:0;return n}(r,o.buttons),o.bubbles=\"bubbles\"in r&&r.bubbles,o.cancelable=\"cancelable\"in r&&r.cancelable,o.view=\"view\"in r?r.view:null,o.detail=\"detail\"in r?r.detail:null,o.screenX=\"screenX\"in r?r.screenX:0,o.screenY=\"screenY\"in r?r.screenY:0,o.clientX=\"clientX\"in r?r.clientX:0,o.clientY=\"clientY\"in r?r.clientY:0,o.ctrlKey=\"ctrlKey\"in r&&r.ctrlKey,o.altKey=\"altKey\"in r&&r.altKey,o.shiftKey=\"shiftKey\"in r&&r.shiftKey,o.metaKey=\"metaKey\"in r&&r.metaKey,o.button=\"button\"in r?r.button:0,o.relatedTarget=\"relatedTarget\"in r?r.relatedTarget:null,o.pointerId=\"pointerId\"in r?r.pointerId:0,o.width=\"width\"in r?r.width:0,o.height=\"height\"in r?r.height:0,o.tiltX=\"tiltX\"in r?r.tiltX:0,o.tiltY=\"tiltY\"in r?r.tiltY:0,o.pointerType=\"pointerType\"in r?r.pointerType:\"\",o.hwTimestamp=\"hwTimestamp\"in r?r.hwTimestamp:0,o.isPrimary=\"isPrimary\"in r&&r.isPrimary,n.preventDefault&&(o.preventDefault=function(){n.preventDefault()}),o}return kt(e,t),e}(R);!function(){try{var t=new MouseEvent(\"click\",{buttons:1});zt=1===t.buttons}catch(t){}}();var Kt=Gt;function Ut(t,e){return t>e?1:t<e?-1:0}function Xt(t,e,n){var i=t.length;if(t[0]<=e)return 0;if(e<=t[i-1])return i-1;var o=void 0;if(n>0){for(o=1;o<i;++o)if(t[o]<e)return o-1}else if(n<0){for(o=1;o<i;++o)if(t[o]<=e)return o}else for(o=1;o<i;++o){if(t[o]==e)return o;if(t[o]<e)return t[o-1]-e<e-t[o]?o-1:o}return i-1}function Yt(t,e){for(var n=Array.isArray(e)?e:[e],i=n.length,o=0;o<i;o++)t[t.length]=n[o]}var Zt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Wt(t){this.vacuumTouches_(t),this.setPrimaryTouch_(t.changedTouches[0]),this.dedupSynthMouse_(t),this.clickCount_++,this.processTouches_(t,this.overDown_)}function Vt(t){this.processTouches_(t,this.moveOverOut_)}function Ht(t){this.dedupSynthMouse_(t),this.processTouches_(t,this.upOut_)}function Bt(t){this.processTouches_(t,this.cancelOut_)}var qt=function(t){function e(e,n){var i=this,o={touchstart:Wt,touchmove:Vt,touchend:Ht,touchcancel:Bt};return(i=t.call(this,e,o)||this).pointerMap=e.pointerMap,i.mouseSource=n,i.firstTouchId_=void 0,i.clickCount_=0,i.resetId_,i.dedupTimeout_=2500,i}return Zt(e,t),e.prototype.isPrimaryTouch_=function(t){return this.firstTouchId_===t.identifier},e.prototype.setPrimaryTouch_=function(t){var e=Object.keys(this.pointerMap).length;(0===e||1===e&&ut.toString()in this.pointerMap)&&(this.firstTouchId_=t.identifier,this.cancelResetClickCount_())},e.prototype.removePrimaryPointer_=function(t){t.isPrimary&&(this.firstTouchId_=void 0,this.resetClickCount_())},e.prototype.resetClickCount_=function(){this.resetId_=setTimeout(this.resetClickCountHandler_.bind(this),200)},e.prototype.resetClickCountHandler_=function(){this.clickCount_=0,this.resetId_=void 0},e.prototype.cancelResetClickCount_=function(){void 0!==this.resetId_&&clearTimeout(this.resetId_)},e.prototype.touchToPointer_=function(t,e){var n=this.dispatcher.cloneEvent(t,e);return n.pointerId=e.identifier+2,n.bubbles=!0,n.cancelable=!0,n.detail=this.clickCount_,n.button=0,n.buttons=1,n.width=e.radiusX||0,n.height=e.radiusY||0,n.pressure=e.force||.5,n.isPrimary=this.isPrimaryTouch_(e),n.pointerType=\"touch\",n.clientX=e.clientX,n.clientY=e.clientY,n.screenX=e.screenX,n.screenY=e.screenY,n},e.prototype.processTouches_=function(t,e){var n=Array.prototype.slice.call(t.changedTouches),i=n.length;function o(){t.preventDefault()}for(var r=0;r<i;++r){var s=this.touchToPointer_(t,n[r]);s.preventDefault=o,e.call(this,t,s)}},e.prototype.findTouch_=function(t,e){for(var n=t.length,i=0;i<n;i++){if(t[i].identifier===e)return!0}return!1},e.prototype.vacuumTouches_=function(t){var e=t.touches,n=Object.keys(this.pointerMap),i=n.length;if(i>=e.length){for(var o=[],r=0;r<i;++r){var s=Number(n[r]),a=this.pointerMap[s];s==ut||this.findTouch_(e,s-2)||o.push(a.out)}for(r=0;r<o.length;++r)this.cancelOut_(t,o[r])}},e.prototype.overDown_=function(t,e){this.pointerMap[e.pointerId]={target:e.target,out:e,outTarget:e.target},this.dispatcher.over(e,t),this.dispatcher.enter(e,t),this.dispatcher.down(e,t)},e.prototype.moveOverOut_=function(t,e){var n=e,i=this.pointerMap[n.pointerId];if(i){var o=i.out,r=i.outTarget;this.dispatcher.move(n,t),o&&r!==n.target&&(o.relatedTarget=n.target,n.relatedTarget=r,o.target=r,n.target?(this.dispatcher.leaveOut(o,t),this.dispatcher.enterOver(n,t)):(n.target=r,n.relatedTarget=null,this.cancelOut_(t,n))),i.out=n,i.outTarget=n.target}},e.prototype.upOut_=function(t,e){this.dispatcher.up(e,t),this.dispatcher.out(e,t),this.dispatcher.leave(e,t),this.cleanUpPointer_(e)},e.prototype.cancelOut_=function(t,e){this.dispatcher.cancel(e,t),this.dispatcher.out(e,t),this.dispatcher.leave(e,t),this.cleanUpPointer_(e)},e.prototype.cleanUpPointer_=function(t){delete this.pointerMap[t.pointerId],this.removePrimaryPointer_(t)},e.prototype.dedupSynthMouse_=function(t){var e=this.mouseSource.lastTouches,n=t.changedTouches[0];if(this.isPrimaryTouch_(n)){var i=[n.clientX,n.clientY];e.push(i),setTimeout(function(){var t,n,o;n=i,o=(t=e).indexOf(n),o>-1&&t.splice(o,1)},this.dedupTimeout_)}},e}(st),Qt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),$t=[[\"bubbles\",!1],[\"cancelable\",!1],[\"view\",null],[\"detail\",null],[\"screenX\",0],[\"screenY\",0],[\"clientX\",0],[\"clientY\",0],[\"ctrlKey\",!1],[\"altKey\",!1],[\"shiftKey\",!1],[\"metaKey\",!1],[\"button\",0],[\"relatedTarget\",null],[\"buttons\",0],[\"pointerId\",0],[\"width\",0],[\"height\",0],[\"pressure\",0],[\"tiltX\",0],[\"tiltY\",0],[\"pointerType\",\"\"],[\"hwTimestamp\",0],[\"isPrimary\",!1],[\"type\",\"\"],[\"target\",null],[\"currentTarget\",null],[\"which\",0]],Jt=function(t){function e(e){var n=t.call(this)||this;return n.element_=e,n.pointerMap={},n.eventMap_={},n.eventSourceList_=[],n.registerSources(),n}return Qt(e,t),e.prototype.registerSources=function(){if(tt)this.registerSource(\"native\",new Nt(this));else if(et)this.registerSource(\"ms\",new Rt(this));else{var t=new vt(this);this.registerSource(\"mouse\",t),J&&this.registerSource(\"touch\",new qt(this,t))}this.register_()},e.prototype.registerSource=function(t,e){var n=e,i=n.getEvents();i&&(i.forEach(function(t){var e=n.getHandlerForEvent(t);e&&(this.eventMap_[t]=e.bind(n))}.bind(this)),this.eventSourceList_.push(n))},e.prototype.register_=function(){for(var t=this.eventSourceList_.length,e=0;e<t;e++){var n=this.eventSourceList_[e];this.addEvents_(n.getEvents())}},e.prototype.unregister_=function(){for(var t=this.eventSourceList_.length,e=0;e<t;e++){var n=this.eventSourceList_[e];this.removeEvents_(n.getEvents())}},e.prototype.eventHandler_=function(t){var e=t.type,n=this.eventMap_[e];n&&n(t)},e.prototype.addEvents_=function(t){t.forEach(function(t){m(this.element_,t,this.eventHandler_,this)}.bind(this))},e.prototype.removeEvents_=function(t){t.forEach(function(t){b(this.element_,t,this.eventHandler_,this)}.bind(this))},e.prototype.cloneEvent=function(t,e){for(var n={},i=0,o=$t.length;i<o;i++){var r=$t[i][0];n[r]=t[r]||e[r]||$t[i][1]}return n},e.prototype.down=function(t,e){this.fireEvent(rt.POINTERDOWN,t,e)},e.prototype.move=function(t,e){this.fireEvent(rt.POINTERMOVE,t,e)},e.prototype.up=function(t,e){this.fireEvent(rt.POINTERUP,t,e)},e.prototype.enter=function(t,e){t.bubbles=!1,this.fireEvent(rt.POINTERENTER,t,e)},e.prototype.leave=function(t,e){t.bubbles=!1,this.fireEvent(rt.POINTERLEAVE,t,e)},e.prototype.over=function(t,e){t.bubbles=!0,this.fireEvent(rt.POINTEROVER,t,e)},e.prototype.out=function(t,e){t.bubbles=!0,this.fireEvent(rt.POINTEROUT,t,e)},e.prototype.cancel=function(t,e){this.fireEvent(rt.POINTERCANCEL,t,e)},e.prototype.leaveOut=function(t,e){this.out(t,e),this.contains_(t.target,t.relatedTarget)||this.leave(t,e)},e.prototype.enterOver=function(t,e){this.over(t,e),this.contains_(t.target,t.relatedTarget)||this.enter(t,e)},e.prototype.contains_=function(t,e){return!(!t||!e)&&t.contains(e)},e.prototype.makeEvent=function(t,e,n){return new Kt(t,n,e)},e.prototype.fireEvent=function(t,e,n){var i=this.makeEvent(t,e,n);this.dispatchEvent(i)},e.prototype.fireNativeEvent=function(t){var e=this.makeEvent(t.type,t,t);this.dispatchEvent(e)},e.prototype.wrapMouseEvent=function(t,e){return this.makeEvent(t,_t(e,this),e)},e.prototype.disposeInternal=function(){this.unregister_(),t.prototype.disposeInternal.call(this)},e}(S),te=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ee=function(t){function e(e,n){var i=t.call(this)||this;i.map_=e,i.clickTimeoutId_,i.dragging_=!1,i.dragListenerKeys_=[],i.moveTolerance_=n?n*$:$,i.down_=null;var o=i.map_.getViewport();return i.activePointers_=0,i.trackedTouches_={},i.pointerEventHandler_=new Jt(o),i.documentPointerEventHandler_=null,i.pointerdownListenerKey_=m(i.pointerEventHandler_,rt.POINTERDOWN,i.handlePointerDown_,i),i.relayedListenerKey_=m(i.pointerEventHandler_,rt.POINTERMOVE,i.relayEvent_,i),i}return te(e,t),e.prototype.emulateClick_=function(t){var e=new ot(nt.CLICK,this.map_,t);this.dispatchEvent(e),void 0!==this.clickTimeoutId_?(clearTimeout(this.clickTimeoutId_),this.clickTimeoutId_=void 0,e=new ot(nt.DBLCLICK,this.map_,t),this.dispatchEvent(e)):this.clickTimeoutId_=setTimeout(function(){this.clickTimeoutId_=void 0;var e=new ot(nt.SINGLECLICK,this.map_,t);this.dispatchEvent(e)}.bind(this),250)},e.prototype.updateActivePointers_=function(t){var e=t;e.type==nt.POINTERUP||e.type==nt.POINTERCANCEL?delete this.trackedTouches_[e.pointerId]:e.type==nt.POINTERDOWN&&(this.trackedTouches_[e.pointerId]=!0),this.activePointers_=Object.keys(this.trackedTouches_).length},e.prototype.handlePointerUp_=function(t){this.updateActivePointers_(t);var e=new ot(nt.POINTERUP,this.map_,t);this.dispatchEvent(e),e.propagationStopped||this.dragging_||!this.isMouseActionButton_(t)||this.emulateClick_(this.down_),0===this.activePointers_&&(this.dragListenerKeys_.forEach(T),this.dragListenerKeys_.length=0,this.dragging_=!1,this.down_=null,this.documentPointerEventHandler_.dispose(),this.documentPointerEventHandler_=null)},e.prototype.isMouseActionButton_=function(t){return 0===t.button},e.prototype.handlePointerDown_=function(t){this.updateActivePointers_(t);var e=new ot(nt.POINTERDOWN,this.map_,t);this.dispatchEvent(e),this.down_=t,0===this.dragListenerKeys_.length&&(this.documentPointerEventHandler_=new Jt(document),this.dragListenerKeys_.push(m(this.documentPointerEventHandler_,nt.POINTERMOVE,this.handlePointerMove_,this),m(this.documentPointerEventHandler_,nt.POINTERUP,this.handlePointerUp_,this),m(this.pointerEventHandler_,nt.POINTERCANCEL,this.handlePointerUp_,this)))},e.prototype.handlePointerMove_=function(t){if(this.isMoving_(t)){this.dragging_=!0;var e=new ot(nt.POINTERDRAG,this.map_,t,this.dragging_);this.dispatchEvent(e)}t.preventDefault()},e.prototype.relayEvent_=function(t){var e=!(!this.down_||!this.isMoving_(t));this.dispatchEvent(new ot(t.type,this.map_,t,e))},e.prototype.isMoving_=function(t){return this.dragging_||Math.abs(t.clientX-this.down_.clientX)>this.moveTolerance_||Math.abs(t.clientY-this.down_.clientY)>this.moveTolerance_},e.prototype.disposeInternal=function(){this.relayedListenerKey_&&(T(this.relayedListenerKey_),this.relayedListenerKey_=null),this.pointerdownListenerKey_&&(T(this.pointerdownListenerKey_),this.pointerdownListenerKey_=null),this.dragListenerKeys_.forEach(T),this.dragListenerKeys_.length=0,this.documentPointerEventHandler_&&(this.documentPointerEventHandler_.dispose(),this.documentPointerEventHandler_=null),this.pointerEventHandler_&&(this.pointerEventHandler_.dispose(),this.pointerEventHandler_=null),t.prototype.disposeInternal.call(this)},e}(S),ne=\"postrender\",ie=\"movestart\",oe=\"moveend\",re={LAYERGROUP:\"layergroup\",SIZE:\"size\",TARGET:\"target\",VIEW:\"view\"},se=\"prerender\",ae=\"postrender\",ue=\"precompose\",le=\"postcompose\",ce=\"rendercomplete\",he={IDLE:0,LOADING:1,LOADED:2,ERROR:3,EMPTY:4,ABORT:5};function pe(t,e){if(!t)throw new l(e)}var fe=function(){function t(t,e){this.priorityFunction_=t,this.keyFunction_=e,this.elements_=[],this.priorities_=[],this.queuedElements_={}}return t.prototype.clear=function(){this.elements_.length=0,this.priorities_.length=0,f(this.queuedElements_)},t.prototype.dequeue=function(){var t=this.elements_,e=this.priorities_,n=t[0];1==t.length?(t.length=0,e.length=0):(t[0]=t.pop(),e[0]=e.pop(),this.siftUp_(0));var i=this.keyFunction_(n);return delete this.queuedElements_[i],n},t.prototype.enqueue=function(t){pe(!(this.keyFunction_(t)in this.queuedElements_),31);var e=this.priorityFunction_(t);return e!=1/0&&(this.elements_.push(t),this.priorities_.push(e),this.queuedElements_[this.keyFunction_(t)]=!0,this.siftDown_(0,this.elements_.length-1),!0)},t.prototype.getCount=function(){return this.elements_.length},t.prototype.getLeftChildIndex_=function(t){return 2*t+1},t.prototype.getRightChildIndex_=function(t){return 2*t+2},t.prototype.getParentIndex_=function(t){return t-1>>1},t.prototype.heapify_=function(){var t;for(t=(this.elements_.length>>1)-1;t>=0;t--)this.siftUp_(t)},t.prototype.isEmpty=function(){return 0===this.elements_.length},t.prototype.isKeyQueued=function(t){return t in this.queuedElements_},t.prototype.isQueued=function(t){return this.isKeyQueued(this.keyFunction_(t))},t.prototype.siftUp_=function(t){for(var e=this.elements_,n=this.priorities_,i=e.length,o=e[t],r=n[t],s=t;t<i>>1;){var a=this.getLeftChildIndex_(t),u=this.getRightChildIndex_(t),l=u<i&&n[u]<n[a]?u:a;e[t]=e[l],n[t]=n[l],t=l}e[t]=o,n[t]=r,this.siftDown_(s,t)},t.prototype.siftDown_=function(t,e){for(var n=this.elements_,i=this.priorities_,o=n[e],r=i[e];e>t;){var s=this.getParentIndex_(e);if(!(i[s]>r))break;n[e]=n[s],i[e]=i[s],e=s}n[e]=o,i[e]=r},t.prototype.reprioritize=function(){var t,e,n,i=this.priorityFunction_,o=this.elements_,r=this.priorities_,s=0,a=o.length;for(e=0;e<a;++e)(n=i(t=o[e]))==1/0?delete this.queuedElements_[this.keyFunction_(t)]:(r[s]=n,o[s++]=t);o.length=s,r.length=s,this.heapify_()},t}(),de=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_e=function(t){function e(e,n){var i=t.call(this,function(t){return e.apply(null,t)},function(t){return t[0].getKey()})||this;return i.tileChangeCallback_=n,i.tilesLoading_=0,i.tilesLoadingKeys_={},i}return de(e,t),e.prototype.enqueue=function(e){var n=t.prototype.enqueue.call(this,e);n&&m(e[0],M.CHANGE,this.handleTileChange,this);return n},e.prototype.getTilesLoading=function(){return this.tilesLoading_},e.prototype.handleTileChange=function(t){var e=t.target,n=e.getState();if(e.hifi&&n===he.LOADED||n===he.ERROR||n===he.EMPTY||n===he.ABORT){b(e,M.CHANGE,this.handleTileChange,this);var i=e.getKey();i in this.tilesLoadingKeys_&&(delete this.tilesLoadingKeys_[i],--this.tilesLoading_),this.tileChangeCallback_()}},e.prototype.loadMoreTiles=function(t,e){for(var n,i,o,r=0,s=!1;this.tilesLoading_<t&&r<e&&this.getCount()>0;)o=(i=this.dequeue()[0]).getKey(),(n=i.getState())===he.ABORT?s=!0:n!==he.IDLE||o in this.tilesLoadingKeys_||(this.tilesLoadingKeys_[o]=!0,++this.tilesLoading_,++r,i.load());0===r&&s&&this.tileChangeCallback_()},e}(fe),ve=42,ye=256;function ge(t,e,n){return Math.min(Math.max(t,e),n)}var me=\"cosh\"in Math?Math.cosh:function(t){var e=Math.exp(t);return(e+1/e)/2};function Ee(t,e,n,i,o,r){var s=o-n,a=r-i;if(0!==s||0!==a){var u=((t-n)*s+(e-i)*a)/(s*s+a*a);u>1?(n=o,i=r):u>0&&(n+=s*u,i+=a*u)}return be(t,e,n,i)}function be(t,e,n,i){var o=n-t,r=i-e;return o*o+r*r}function Te(t){return t*Math.PI/180}function we(t,e){var n=t%e;return n*e<0?n+e:n}function Ce(t,e,n){return t+n*(e-t)}function xe(t){return t}var Oe={BOTTOM_LEFT:\"bottom-left\",BOTTOM_RIGHT:\"bottom-right\",TOP_LEFT:\"top-left\",TOP_RIGHT:\"top-right\"},Re={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16};function Pe(t){for(var e=Ie(),n=0,i=t.length;n<i;++n)Ne(e,t[n]);return e}function Se(t,e,n){var i,o;return(i=e<t[0]?t[0]-e:t[2]<e?e-t[2]:0)*i+(o=n<t[1]?t[1]-n:t[3]<n?n-t[3]:0)*o}function Me(t,e){return Le(t,e[0],e[1])}function Le(t,e,n){return t[0]<=e&&e<=t[2]&&t[1]<=n&&n<=t[3]}function Ae(t,e){var n=t[0],i=t[1],o=t[2],r=t[3],s=e[0],a=e[1],u=Re.UNKNOWN;return s<n?u|=Re.LEFT:s>o&&(u|=Re.RIGHT),a<i?u|=Re.BELOW:a>r&&(u|=Re.ABOVE),u===Re.UNKNOWN&&(u=Re.INTERSECTING),u}function Ie(){return[1/0,1/0,-1/0,-1/0]}function Fe(t,e,n,i,o){return o?(o[0]=t,o[1]=e,o[2]=n,o[3]=i,o):[t,e,n,i]}function De(t){return Fe(1/0,1/0,-1/0,-1/0,t)}function je(t,e){return t[0]==e[0]&&t[2]==e[2]&&t[1]==e[1]&&t[3]==e[3]}function Ne(t,e){e[0]<t[0]&&(t[0]=e[0]),e[0]>t[2]&&(t[2]=e[0]),e[1]<t[1]&&(t[1]=e[1]),e[1]>t[3]&&(t[3]=e[1])}function ke(t,e){for(var n=0,i=e.length;n<i;++n)Ne(t,e[n]);return t}function ze(t,e,n,i,o){for(;n<i;n+=o)Ge(t,e[n],e[n+1]);return t}function Ge(t,e,n){t[0]=Math.min(t[0],e),t[1]=Math.min(t[1],n),t[2]=Math.max(t[2],e),t[3]=Math.max(t[3],n)}function Ke(t){var e=0;return Je(t)||(e=Qe(t)*Ve(t)),e}function Ue(t){return[t[0],t[1]]}function Xe(t){return[t[2],t[1]]}function Ye(t){return[(t[0]+t[2])/2,(t[1]+t[3])/2]}function Ze(t,e){var n;return e===Oe.BOTTOM_LEFT?n=Ue(t):e===Oe.BOTTOM_RIGHT?n=Xe(t):e===Oe.TOP_LEFT?n=Be(t):e===Oe.TOP_RIGHT?n=qe(t):pe(!1,13),n}function We(t,e,n,i,o){var r=e*i[0]/2,s=e*i[1]/2,a=Math.cos(n),u=Math.sin(n),l=r*a,c=r*u,h=s*a,p=s*u,f=t[0],d=t[1],_=f-l+p,v=f-l-p,y=f+l-p,g=f+l+p,m=d-c-h,E=d-c+h,b=d+c+h,T=d+c-h;return Fe(Math.min(_,v,y,g),Math.min(m,E,b,T),Math.max(_,v,y,g),Math.max(m,E,b,T),o)}function Ve(t){return t[3]-t[1]}function He(t,e,n){var i=n||[1/0,1/0,-1/0,-1/0];return $e(t,e)?(t[0]>e[0]?i[0]=t[0]:i[0]=e[0],t[1]>e[1]?i[1]=t[1]:i[1]=e[1],t[2]<e[2]?i[2]=t[2]:i[2]=e[2],t[3]<e[3]?i[3]=t[3]:i[3]=e[3]):De(i),i}function Be(t){return[t[0],t[3]]}function qe(t){return[t[2],t[3]]}function Qe(t){return t[2]-t[0]}function $e(t,e){return t[0]<=e[2]&&t[2]>=e[0]&&t[1]<=e[3]&&t[3]>=e[1]}function Je(t){return t[2]<t[0]||t[3]<t[1]}function tn(t,e,n){var i=Qe(e)/n[0],o=Ve(e)/n[1];return Math.min(t,Math.min(i,o))}function en(t,e,n){var i=Math.min(t,e);return i*=Math.log(1+50*Math.max(0,t/e-1))/50+1,n&&(i=Math.max(i,n),i/=Math.log(1+50*Math.max(0,n/t-1))/50+1),ge(i,n/2,2*e)}function nn(t,e,n,i){return function(o,r,s,a){if(void 0!==o){var u=i?tn(t,i,s):t;return(void 0===n||n)&&a?en(o,u,e):ge(o,e,u)}}}function on(t){return void 0!==t?0:void 0}function rn(t){return void 0!==t?t:void 0}var sn=0,an=1,un=\"center\",ln=\"resolution\",cn=\"rotation\";function hn(t,e){for(var n=!0,i=t.length-1;i>=0;--i)if(t[i]!=e[i]){n=!1;break}return n}function pn(t,e){var n=Math.cos(e),i=Math.sin(e),o=t[0]*n-t[1]*i,r=t[1]*n+t[0]*i;return t[0]=o,t[1]=r,t}function fn(t){return Math.pow(t,3)}function dn(t){return 1-fn(1-t)}function _n(t){return 3*t*t-2*t*t*t}function vn(t){return t}var yn={POINT:\"Point\",LINE_STRING:\"LineString\",LINEAR_RING:\"LinearRing\",POLYGON:\"Polygon\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\",GEOMETRY_COLLECTION:\"GeometryCollection\",CIRCLE:\"Circle\"},gn={XY:\"XY\",XYZ:\"XYZ\",XYM:\"XYM\",XYZM:\"XYZM\"};function mn(t,e,n,i,o,r){for(var s=r||[],a=0,u=e;u<n;u+=i){var l=t[u],c=t[u+1];s[a++]=o[0]*l+o[2]*c+o[4],s[a++]=o[1]*l+o[3]*c+o[5]}return r&&s.length!=a&&(s.length=a),s}\n/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\nvar En=6371008.8;function bn(t,e,n){var i=n||En,o=Te(t[1]),r=Te(e[1]),s=(r-o)/2,a=Te(e[0]-t[0])/2,u=Math.sin(s)*Math.sin(s)+Math.sin(a)*Math.sin(a)*Math.cos(o)*Math.cos(r);return 2*i*Math.atan2(Math.sqrt(u),Math.sqrt(1-u))}var Tn={DEGREES:\"degrees\",FEET:\"ft\",METERS:\"m\",PIXELS:\"pixels\",TILE_PIXELS:\"tile-pixels\",USFEET:\"us-ft\"},wn={};wn[Tn.DEGREES]=2*Math.PI*6370997/360,wn[Tn.FEET]=.3048,wn[Tn.METERS]=1,wn[Tn.USFEET]=1200/3937;var Cn=Tn,xn=function(){function t(t){this.code_=t.code,this.units_=t.units,this.extent_=void 0!==t.extent?t.extent:null,this.worldExtent_=void 0!==t.worldExtent?t.worldExtent:null,this.axisOrientation_=void 0!==t.axisOrientation?t.axisOrientation:\"enu\",this.global_=void 0!==t.global&&t.global,this.canWrapX_=!(!this.global_||!this.extent_),this.getPointResolutionFunc_=t.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=t.metersPerUnit}return t.prototype.canWrapX=function(){return this.canWrapX_},t.prototype.getCode=function(){return this.code_},t.prototype.getExtent=function(){return this.extent_},t.prototype.getUnits=function(){return this.units_},t.prototype.getMetersPerUnit=function(){return this.metersPerUnit_||wn[this.units_]},t.prototype.getWorldExtent=function(){return this.worldExtent_},t.prototype.getAxisOrientation=function(){return this.axisOrientation_},t.prototype.isGlobal=function(){return this.global_},t.prototype.setGlobal=function(t){this.global_=t,this.canWrapX_=!(!t||!this.extent_)},t.prototype.getDefaultTileGrid=function(){return this.defaultTileGrid_},t.prototype.setDefaultTileGrid=function(t){this.defaultTileGrid_=t},t.prototype.setExtent=function(t){this.extent_=t,this.canWrapX_=!(!this.global_||!t)},t.prototype.setWorldExtent=function(t){this.worldExtent_=t},t.prototype.setGetPointResolution=function(t){this.getPointResolutionFunc_=t},t.prototype.getPointResolutionFunc=function(){return this.getPointResolutionFunc_},t}(),On=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Rn=6378137,Pn=Math.PI*Rn,Sn=[-Pn,-Pn,Pn,Pn],Mn=[-180,-85,180,85],Ln=function(t){function e(e){return t.call(this,{code:e,units:Cn.METERS,extent:Sn,global:!0,worldExtent:Mn,getPointResolution:function(t,e){return t/me(e[1]/Rn)}})||this}return On(e,t),e}(xn),An=[new Ln(\"EPSG:3857\"),new Ln(\"EPSG:102100\"),new Ln(\"EPSG:102113\"),new Ln(\"EPSG:900913\"),new Ln(\"urn:ogc:def:crs:EPSG:6.18:3:3857\"),new Ln(\"urn:ogc:def:crs:EPSG::3857\"),new Ln(\"http://www.opengis.net/gml/srs/epsg.xml#3857\")];function In(t,e,n){var i=t.length,o=n>1?n:2,r=e;void 0===r&&(r=o>2?t.slice():new Array(i));for(var s=Pn,a=0;a<i;a+=o){r[a]=s*t[a]/180;var u=Rn*Math.log(Math.tan(Math.PI*(+t[a+1]+90)/360));u>s?u=s:u<-s&&(u=-s),r[a+1]=u}return r}function Fn(t,e,n){var i=t.length,o=n>1?n:2,r=e;void 0===r&&(r=o>2?t.slice():new Array(i));for(var s=0;s<i;s+=o)r[s]=180*t[s]/Pn,r[s+1]=360*Math.atan(Math.exp(t[s+1]/Rn))/Math.PI-90;return r}var Dn=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),jn=[-180,-90,180,90],Nn=6378137*Math.PI/180,kn=function(t){function e(e,n){return t.call(this,{code:e,units:Cn.DEGREES,extent:jn,axisOrientation:n,global:!0,metersPerUnit:Nn,worldExtent:jn})||this}return Dn(e,t),e}(xn),zn=[new kn(\"CRS:84\"),new kn(\"EPSG:4326\",\"neu\"),new kn(\"urn:ogc:def:crs:EPSG::4326\",\"neu\"),new kn(\"urn:ogc:def:crs:EPSG:6.6:4326\",\"neu\"),new kn(\"urn:ogc:def:crs:OGC:1.3:CRS84\"),new kn(\"urn:ogc:def:crs:OGC:2:84\"),new kn(\"http://www.opengis.net/gml/srs/epsg.xml#4326\",\"neu\"),new kn(\"urn:x-ogc:def:crs:EPSG:4326\",\"neu\")],Gn={};var Kn,Un,Xn,Yn={};function Zn(t,e,n){var i=t.getCode(),o=e.getCode();i in Yn||(Yn[i]={}),Yn[i][o]=n}function Wn(t,e,n){var i;if(void 0!==e){for(var o=0,r=t.length;o<r;++o)e[o]=t[o];i=e}else i=t.slice();return i}function Vn(t,e,n){if(void 0!==e&&t!==e){for(var i=0,o=t.length;i<o;++i)e[i]=t[i];t=e}return t}function Hn(t){!function(t,e){Gn[t]=e}(t.getCode(),t),Zn(t,t,Wn)}function Bn(t){return\"string\"==typeof t?Gn[t]||null:t||null}function qn(t,e,n,i){var o,r=(t=Bn(t)).getPointResolutionFunc();if(r)o=r(e,n),i&&i!==t.getUnits()&&(s=t.getMetersPerUnit())&&(o=o*s/wn[i]);else if(t.getUnits()==Cn.DEGREES&&!i||i==Cn.DEGREES)o=e;else{var s,a=ti(t,Bn(\"EPSG:4326\")),u=[n[0]-e/2,n[1],n[0]+e/2,n[1],n[0],n[1]-e/2,n[0],n[1]+e/2];o=(bn((u=a(u,u,2)).slice(0,2),u.slice(2,4))+bn(u.slice(4,6),u.slice(6,8)))/2,void 0!==(s=i?wn[i]:t.getMetersPerUnit())&&(o/=s)}return o}function Qn(t){!function(t){t.forEach(Hn)}(t),t.forEach(function(e){t.forEach(function(t){e!==t&&Zn(e,t,Wn)})})}function $n(t,e){return t?\"string\"==typeof t?Bn(t):t:Bn(e)}function Jn(t,e){if(t===e)return!0;var n=t.getUnits()===e.getUnits();return t.getCode()===e.getCode()?n:ti(t,e)===Wn&&n}function ti(t,e){var n=function(t,e){var n;return t in Yn&&e in Yn[t]&&(n=Yn[t][e]),n}(t.getCode(),e.getCode());return n||(n=Vn),n}function ei(t,e){return ti(Bn(t),Bn(e))}function ni(t,e,n){return ei(e,n)(t,void 0,t.length)}Qn(An),Qn(zn),Kn=An,Un=In,Xn=Fn,zn.forEach(function(t){Kn.forEach(function(e){Zn(t,e,Un),Zn(e,t,Xn)})});new Array(6);function ii(t,e){var n=e[0],i=e[1];return e[0]=t[0]*n+t[2]*i+t[4],e[1]=t[1]*n+t[3]*i+t[5],e}function oi(t,e,n,i,o,r,s,a){var u=Math.sin(r),l=Math.cos(r);return t[0]=i*l,t[1]=o*u,t[2]=-i*u,t[3]=o*l,t[4]=s*i*l-a*i*u+e,t[5]=s*o*u+a*o*l+n,t}function ri(t,e){var n,i=(n=e)[0]*n[3]-n[1]*n[2];pe(0!==i,32);var o=e[0],r=e[1],s=e[2],a=e[3],u=e[4],l=e[5];return t[0]=a/i,t[1]=-r/i,t[2]=-s/i,t[3]=o/i,t[4]=(s*l-a*u)/i,t[5]=-(o*l-r*u)/i,t}var si=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ai=[1,0,0,1,0,0],ui=function(t){function e(){var e=t.call(this)||this;return e.extent_=[1/0,1/0,-1/0,-1/0],e.extentRevision_=-1,e.simplifiedGeometryCache={},e.simplifiedGeometryMaxMinSquaredTolerance=0,e.simplifiedGeometryRevision=0,e}return si(e,t),e.prototype.clone=function(){return i()},e.prototype.closestPointXY=function(t,e,n,o){return i()},e.prototype.containsXY=function(t,e){var n=this.getClosestPoint([t,e]);return n[0]===t&&n[1]===e},e.prototype.getClosestPoint=function(t,e){var n=e||[NaN,NaN];return this.closestPointXY(t[0],t[1],n,1/0),n},e.prototype.intersectsCoordinate=function(t){return this.containsXY(t[0],t[1])},e.prototype.computeExtent=function(t){return i()},e.prototype.getExtent=function(t){return this.extentRevision_!=this.getRevision()&&(this.extent_=this.computeExtent(this.extent_),this.extentRevision_=this.getRevision()),function(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t}(this.extent_,t)},e.prototype.rotate=function(t,e){i()},e.prototype.scale=function(t,e,n){i()},e.prototype.simplify=function(t){return this.getSimplifiedGeometry(t*t)},e.prototype.getSimplifiedGeometry=function(t){return i()},e.prototype.getType=function(){return i()},e.prototype.applyTransform=function(t){i()},e.prototype.intersectsExtent=function(t){return i()},e.prototype.translate=function(t,e){i()},e.prototype.transform=function(t,e){var n=Bn(t),i=n.getUnits()==Cn.TILE_PIXELS?function(t,i,o){var r=n.getExtent(),s=n.getWorldExtent(),a=Ve(s)/Ve(r);return oi(ai,s[0],s[3],a,-a,0,0,0),mn(t,0,t.length,o,ai,i),ei(n,e)(t,i,o)}:ei(n,e);return this.applyTransform(i),this},e}(k),li=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function ci(t){var e;return t==gn.XY?e=2:t==gn.XYZ||t==gn.XYM?e=3:t==gn.XYZM&&(e=4),e}var hi=function(t){function e(){var e=t.call(this)||this;return e.layout=gn.XY,e.stride=2,e.flatCoordinates=null,e}return li(e,t),e.prototype.computeExtent=function(t){return e=this.flatCoordinates,n=0,i=this.flatCoordinates.length,o=this.stride,ze(De(t),e,n,i,o);var e,n,i,o},e.prototype.getCoordinates=function(){return i()},e.prototype.getFirstCoordinate=function(){return this.flatCoordinates.slice(0,this.stride)},e.prototype.getFlatCoordinates=function(){return this.flatCoordinates},e.prototype.getLastCoordinate=function(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)},e.prototype.getLayout=function(){return this.layout},e.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!=this.getRevision()&&(f(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;var e=t.toString();if(this.simplifiedGeometryCache.hasOwnProperty(e))return this.simplifiedGeometryCache[e];var n=this.getSimplifiedGeometryInternal(t);return n.getFlatCoordinates().length<this.flatCoordinates.length?(this.simplifiedGeometryCache[e]=n,n):(this.simplifiedGeometryMaxMinSquaredTolerance=t,this)},e.prototype.getSimplifiedGeometryInternal=function(t){return this},e.prototype.getStride=function(){return this.stride},e.prototype.setFlatCoordinates=function(t,e){this.stride=ci(t),this.layout=t,this.flatCoordinates=e},e.prototype.setCoordinates=function(t,e){i()},e.prototype.setLayout=function(t,e,n){var i;if(t)i=ci(t);else{for(var o=0;o<n;++o){if(0===e.length)return this.layout=gn.XY,void(this.stride=2);e=e[0]}t=function(t){var e;2==t?e=gn.XY:3==t?e=gn.XYZ:4==t&&(e=gn.XYZM);return e}(i=e.length)}this.layout=t,this.stride=i},e.prototype.applyTransform=function(t){this.flatCoordinates&&(t(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())},e.prototype.rotate=function(t,e){var n=this.getFlatCoordinates();if(n){var i=this.getStride();!function(t,e,n,i,o,r,s){for(var a=s||[],u=Math.cos(o),l=Math.sin(o),c=r[0],h=r[1],p=0,f=e;f<n;f+=i){var d=t[f]-c,_=t[f+1]-h;a[p++]=c+d*u-_*l,a[p++]=h+d*l+_*u;for(var v=f+2;v<f+i;++v)a[p++]=t[v]}s&&a.length!=p&&(a.length=p)}(n,0,n.length,i,t,e,n),this.changed()}},e.prototype.scale=function(t,e,n){var i=e;void 0===i&&(i=t);var o=n;o||(o=Ye(this.getExtent()));var r=this.getFlatCoordinates();if(r){var s=this.getStride();!function(t,e,n,i,o,r,s,a){for(var u=a||[],l=s[0],c=s[1],h=0,p=e;p<n;p+=i){var f=t[p]-l,d=t[p+1]-c;u[h++]=l+o*f,u[h++]=c+r*d;for(var _=p+2;_<p+i;++_)u[h++]=t[_]}a&&u.length!=h&&(u.length=h)}(r,0,r.length,s,t,i,o,r),this.changed()}},e.prototype.translate=function(t,e){var n=this.getFlatCoordinates();if(n){var i=this.getStride();!function(t,e,n,i,o,r,s){for(var a=s||[],u=0,l=e;l<n;l+=i){a[u++]=t[l]+o,a[u++]=t[l+1]+r;for(var c=l+2;c<l+i;++c)a[u++]=t[c]}s&&a.length!=u&&(a.length=u)}(n,0,n.length,i,t,e,n),this.changed()}},e}(ui);function pi(t,e,n,i){for(var o=0,r=t[n-i],s=t[n-i+1];e<n;e+=i){var a=t[e],u=t[e+1];o+=s*a-r*u,r=a,s=u}return o/2}function fi(t,e,n,i){for(var o=0,r=0,s=n.length;r<s;++r){var a=n[r];o+=pi(t,e,a,i),e=a}return o}function di(t,e,n,i,o,r,s){var a,u=t[e],l=t[e+1],c=t[n]-u,h=t[n+1]-l;if(0===c&&0===h)a=e;else{var p=((o-u)*c+(r-l)*h)/(c*c+h*h);if(p>1)a=n;else{if(p>0){for(var f=0;f<i;++f)s[f]=Ce(t[e+f],t[n+f],p);return void(s.length=i)}a=e}}for(f=0;f<i;++f)s[f]=t[a+f];s.length=i}function _i(t,e,n,i,o){var r=t[e],s=t[e+1];for(e+=i;e<n;e+=i){var a=t[e],u=t[e+1],l=be(r,s,a,u);l>o&&(o=l),r=a,s=u}return o}function vi(t,e,n,i,o){for(var r=0,s=n.length;r<s;++r){var a=n[r];o=_i(t,e,a,i,o),e=a}return o}function yi(t,e,n,i,o,r,s,a,u,l,c){if(e==n)return l;var h,p;if(0===o){if((p=be(s,a,t[e],t[e+1]))<l){for(h=0;h<i;++h)u[h]=t[e+h];return u.length=i,p}return l}for(var f=c||[NaN,NaN],d=e+i;d<n;)if(di(t,d-i,d,i,s,a,f),(p=be(s,a,f[0],f[1]))<l){for(l=p,h=0;h<i;++h)u[h]=f[h];u.length=i,d+=i}else d+=i*Math.max((Math.sqrt(p)-Math.sqrt(l))/o|0,1);if(r&&(di(t,n-i,e,i,s,a,f),(p=be(s,a,f[0],f[1]))<l)){for(l=p,h=0;h<i;++h)u[h]=f[h];u.length=i}return l}function gi(t,e,n,i,o,r,s,a,u,l,c){for(var h=c||[NaN,NaN],p=0,f=n.length;p<f;++p){var d=n[p];l=yi(t,e,d,i,o,r,s,a,u,l,h),e=d}return l}function mi(t,e,n,i){for(var o=0,r=n.length;o<r;++o)for(var s=n[o],a=0;a<i;++a)t[e++]=s[a];return e}function Ei(t,e,n,i,o){for(var r=o||[],s=0,a=0,u=n.length;a<u;++a){var l=mi(t,e,n[a],i);r[s++]=l,e=l}return r.length=s,r}function bi(t,e,n,i,o){for(var r=void 0!==o?o:[],s=0,a=e;a<n;a+=i)r[s++]=t.slice(a,a+i);return r.length=s,r}function Ti(t,e,n,i,o){for(var r=void 0!==o?o:[],s=0,a=0,u=n.length;a<u;++a){var l=n[a];r[s++]=bi(t,e,l,i,r[s]),e=l}return r.length=s,r}function wi(t,e,n,i,o,r,s){var a=(n-e)/i;if(a<3){for(;e<n;e+=i)r[s++]=t[e],r[s++]=t[e+1];return s}var u=new Array(a);u[0]=1,u[a-1]=1;for(var l=[e,n-i],c=0;l.length>0;){for(var h=l.pop(),p=l.pop(),f=0,d=t[p],_=t[p+1],v=t[h],y=t[h+1],g=p+i;g<h;g+=i){var m=Ee(t[g],t[g+1],d,_,v,y);m>f&&(c=g,f=m)}f>o&&(u[(c-e)/i]=1,p+i<c&&l.push(p,c),c+i<h&&l.push(c,h))}for(g=0;g<a;++g)u[g]&&(r[s++]=t[e+g*i],r[s++]=t[e+g*i+1]);return s}function Ci(t,e){return e*Math.round(t/e)}function xi(t,e,n,i,o,r,s){if(e==n)return s;var a,u,l=Ci(t[e],o),c=Ci(t[e+1],o);e+=i,r[s++]=l,r[s++]=c;do{if(a=Ci(t[e],o),u=Ci(t[e+1],o),(e+=i)==n)return r[s++]=a,r[s++]=u,s}while(a==l&&u==c);for(;e<n;){var h=Ci(t[e],o),p=Ci(t[e+1],o);if(e+=i,h!=a||p!=u){var f=a-l,d=u-c,_=h-l,v=p-c;f*v==d*_&&(f<0&&_<f||f==_||f>0&&_>f)&&(d<0&&v<d||d==v||d>0&&v>d)?(a=h,u=p):(r[s++]=a,r[s++]=u,l=a,c=u,a=h,u=p)}}return r[s++]=a,r[s++]=u,s}function Oi(t,e,n,i,o,r,s,a){for(var u=0,l=n.length;u<l;++u){var c=n[u];s=xi(t,e,c,i,o,r,s),a.push(s),e=c}return s}var Ri=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Pi=function(t){function e(e,n){var i=t.call(this)||this;return i.maxDelta_=-1,i.maxDeltaRevision_=-1,void 0===n||Array.isArray(e[0])?i.setCoordinates(e,n):i.setFlatCoordinates(n,e),i}return Ri(e,t),e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){return i<Se(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(_i(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),yi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.getArea=function(){return pi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getCoordinates=function(){return bi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[];return n.length=wi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n,0),new e(n,gn.XY)},e.prototype.getType=function(){return yn.LINEAR_RING},e.prototype.intersectsExtent=function(t){return!1},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=mi(this.flatCoordinates,0,t,this.stride),this.changed()},e}(hi),Si=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Mi=function(t){function e(e,n){var i=t.call(this)||this;return i.setCoordinates(e,n),i}return Si(e,t),e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){var o=this.flatCoordinates,r=be(t,e,o[0],o[1]);if(r<i){for(var s=this.stride,a=0;a<s;++a)n[a]=o[a];return n.length=s,r}return i},e.prototype.getCoordinates=function(){return this.flatCoordinates?this.flatCoordinates.slice():[]},e.prototype.computeExtent=function(t){return e=this.flatCoordinates,n=t,i=e[0],o=e[1],Fe(i,o,i,o,n);var e,n,i,o},e.prototype.getType=function(){return yn.POINT},e.prototype.intersectsExtent=function(t){return Le(t,this.flatCoordinates[0],this.flatCoordinates[1])},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=function(t,e,n,i){for(var o=0,r=n.length;o<r;++o)t[e++]=n[o];return e}(this.flatCoordinates,0,t,this.stride),this.changed()},e}(hi);function Li(t,e,n,i,o){return!function(t,e){var n;return(n=e(Ue(t)))?n:(n=e(Xe(t)))?n:(n=e(qe(t)))?n:(n=e(Be(t)))||!1}(o,function(o){return!Ai(t,e,n,i,o[0],o[1])})}function Ai(t,e,n,i,o,r){for(var s=0,a=t[n-i],u=t[n-i+1];e<n;e+=i){var l=t[e],c=t[e+1];u<=r?c>r&&(l-a)*(r-u)-(o-a)*(c-u)>0&&s++:c<=r&&(l-a)*(r-u)-(o-a)*(c-u)<0&&s--,a=l,u=c}return 0!==s}function Ii(t,e,n,i,o,r){if(0===n.length)return!1;if(!Ai(t,e,n[0],i,o,r))return!1;for(var s=1,a=n.length;s<a;++s)if(Ai(t,n[s-1],n[s],i,o,r))return!1;return!0}function Fi(t,e,n,i,o,r,s){for(var a,u,l,c,h,p,f,d=o[r+1],_=[],v=0,y=n.length;v<y;++v){var g=n[v];for(c=t[g-i],p=t[g-i+1],a=e;a<g;a+=i)h=t[a],f=t[a+1],(d<=p&&f<=d||p<=d&&d<=f)&&(l=(d-p)/(f-p)*(h-c)+c,_.push(l)),c=h,p=f}var m=NaN,E=-1/0;for(_.sort(Ut),c=_[0],a=1,u=_.length;a<u;++a){h=_[a];var b=Math.abs(h-c);b>E&&Ii(t,e,n,i,l=(c+h)/2,d)&&(m=l,E=b),c=h}return isNaN(m)&&(m=o[r]),s?(s.push(m,d,E),s):[m,d,E]}function Di(t,e,n,i,o){var r,s,a=ze([1/0,1/0,-1/0,-1/0],t,e,n,i);return!!$e(o,a)&&(s=a,(r=o)[0]<=s[0]&&s[2]<=r[2]&&r[1]<=s[1]&&s[3]<=r[3]||(a[0]>=o[0]&&a[2]<=o[2]||(a[1]>=o[1]&&a[3]<=o[3]||function(t,e,n,i,o){for(var r,s=[t[e],t[e+1]],a=[];e+i<n;e+=i){if(a[0]=t[e+i],a[1]=t[e+i+1],r=o(s,a))return r;s[0]=a[0],s[1]=a[1]}return!1}(t,e,n,i,function(t,e){return function(t,e,n){var i=!1,o=Ae(t,e),r=Ae(t,n);if(o===Re.INTERSECTING||r===Re.INTERSECTING)i=!0;else{var s=t[0],a=t[1],u=t[2],l=t[3],c=e[0],h=e[1],p=n[0],f=n[1],d=(f-h)/(p-c),_=void 0,v=void 0;r&Re.ABOVE&&!(o&Re.ABOVE)&&(i=(_=p-(f-l)/d)>=s&&_<=u),i||!(r&Re.RIGHT)||o&Re.RIGHT||(i=(v=f-(p-u)*d)>=a&&v<=l),i||!(r&Re.BELOW)||o&Re.BELOW||(i=(_=p-(f-a)/d)>=s&&_<=u),i||!(r&Re.LEFT)||o&Re.LEFT||(i=(v=f-(p-s)*d)>=a&&v<=l)}return i}(o,t,e)}))))}function ji(t,e,n,i,o){if(!function(t,e,n,i,o){return!!(Di(t,e,n,i,o)||Ai(t,e,n,i,o[0],o[1])||Ai(t,e,n,i,o[0],o[3])||Ai(t,e,n,i,o[2],o[1])||Ai(t,e,n,i,o[2],o[3]))}(t,e,n[0],i,o))return!1;if(1===n.length)return!0;for(var r=1,s=n.length;r<s;++r)if(Li(t,n[r-1],n[r],i,o)&&!Di(t,n[r-1],n[r],i,o))return!1;return!0}function Ni(t,e,n,i){for(;e<n-i;){for(var o=0;o<i;++o){var r=t[e+o];t[e+o]=t[n-i+o],t[n-i+o]=r}e+=i,n-=i}}function ki(t,e,n,i){for(var o=0,r=t[n-i],s=t[n-i+1];e<n;e+=i){var a=t[e],u=t[e+1];o+=(a-r)*(u+s),r=a,s=u}return o>0}function zi(t,e,n,i,o){for(var r=void 0!==o&&o,s=0,a=n.length;s<a;++s){var u=n[s],l=ki(t,e,u,i);if(0===s){if(r&&l||!r&&!l)return!1}else if(r&&!l||!r&&l)return!1;e=u}return!0}function Gi(t,e,n,i,o){for(var r=void 0!==o&&o,s=0,a=n.length;s<a;++s){var u=n[s],l=ki(t,e,u,i);(0===s?r&&l||!r&&!l:r&&!l||!r&&l)&&Ni(t,e,u,i),e=u}return e}var Ki=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ui=function(t){function e(e,n,i){var o=t.call(this)||this;return o.ends_=[],o.flatInteriorPointRevision_=-1,o.flatInteriorPoint_=null,o.maxDelta_=-1,o.maxDeltaRevision_=-1,o.orientedRevision_=-1,o.orientedFlatCoordinates_=null,void 0!==n&&i?(o.setFlatCoordinates(n,e),o.ends_=i):o.setCoordinates(e,n),o}return Ki(e,t),e.prototype.appendLinearRing=function(t){this.flatCoordinates?Yt(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice())},e.prototype.closestPointXY=function(t,e,n,i){return i<Se(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(vi(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),gi(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.containsXY=function(t,e){return Ii(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,e)},e.prototype.getArea=function(){return fi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)},e.prototype.getCoordinates=function(t){var e;return void 0!==t?Gi(e=this.getOrientedFlatCoordinates().slice(),0,this.ends_,this.stride,t):e=this.flatCoordinates,Ti(e,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getFlatInteriorPoint=function(){if(this.flatInteriorPointRevision_!=this.getRevision()){var t=Ye(this.getExtent());this.flatInteriorPoint_=Fi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_},e.prototype.getInteriorPoint=function(){return new Mi(this.getFlatInteriorPoint(),gn.XYM)},e.prototype.getLinearRingCount=function(){return this.ends_.length},e.prototype.getLinearRing=function(t){return t<0||this.ends_.length<=t?null:new Pi(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLinearRings=function(){for(var t=this.layout,e=this.flatCoordinates,n=this.ends_,i=[],o=0,r=0,s=n.length;r<s;++r){var a=n[r],u=new Pi(e.slice(o,a),t);i.push(u),o=a}return i},e.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;zi(t,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=Gi(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[],i=[];return n.length=Oi(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(t),n,0,i),new e(n,gn.XY,i)},e.prototype.getType=function(){return yn.POLYGON},e.prototype.intersectsExtent=function(t){return ji(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var n=Ei(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===n.length?0:n[n.length-1],this.changed()},e}(hi),Xi=Ui;function Yi(t){var e=t[0],n=t[1],i=t[2],o=t[3],r=[e,n,e,o,i,o,i,n,e,n];return new Ui(r,gn.XY,[r.length])}var Zi=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Wi=0;function Vi(t,e){setTimeout(function(){t(e)},0)}function Hi(t){return!(t.sourceCenter&&t.targetCenter&&!hn(t.sourceCenter,t.targetCenter))&&(t.sourceResolution===t.targetResolution&&t.sourceRotation===t.targetRotation)}var Bi=function(t){function e(e){var n=t.call(this)||this,i=p({},e);return n.hints_=[0,0],n.animations_=[],n.updateAnimationKey_,n.projection_=$n(i.projection,\"EPSG:3857\"),n.targetCenter_=null,n.targetResolution_,n.targetRotation_,n.applyOptions_(i),n}return Zi(e,t),e.prototype.applyOptions_=function(t){var e=function(t){var e,n,i,o=void 0!==t.minZoom?t.minZoom:Wi,r=void 0!==t.maxZoom?t.maxZoom:28,s=void 0!==t.zoomFactor?t.zoomFactor:2,a=void 0!==t.multiWorld&&t.multiWorld,u=void 0===t.smoothResolutionConstraint||t.smoothResolutionConstraint;if(void 0!==t.resolutions){var l=t.resolutions;n=l[o],i=void 0!==l[r]?l[r]:l[l.length-1],e=t.constrainResolution?function(t,e,n){return function(i,o,r,s){if(void 0!==i){var a=t[0],u=t[t.length-1],l=n?tn(a,n,r):a;if(s)return void 0===e||e?en(i,l,u):ge(i,u,l);var c=Math.min(l,i),h=Math.floor(Xt(t,c,o));return t[h]}}}(l,u,!t.constrainOnlyCenter&&t.extent):nn(n,i,u,!t.constrainOnlyCenter&&t.extent)}else{var c=$n(t.projection,\"EPSG:3857\"),h=c.getExtent(),p=h?Math.max(Qe(h),Ve(h)):360*wn[Cn.DEGREES]/c.getMetersPerUnit(),f=p/ye/Math.pow(2,Wi),d=f/Math.pow(2,28-Wi);if(void 0!==(n=t.maxResolution)?o=0:n=f/Math.pow(s,o),void 0===(i=t.minResolution)&&(i=void 0!==t.maxZoom?void 0!==t.maxResolution?n/Math.pow(s,r):f/Math.pow(s,r):d),r=o+Math.floor(Math.log(n/i)/Math.log(s)),i=n/Math.pow(s,r-o),t.constrainResolution)e=function(t,e,n,i,o){return function(r,s,a,u){if(void 0!==r){var l=o?tn(e,o,a):e,c=void 0!==n?n:0;if(u)return void 0===i||i?en(r,l,c):ge(r,c,l);var h=-s*(.5-1e-9)+.5,p=Math.min(l,r),f=Math.floor(Math.log(e/p)/Math.log(t)+h);return ge(e/Math.pow(t,f),c,l)}}}(s,n,i,u,!t.constrainOnlyCenter&&t.extent);else{var _=t.constrainOnlyCenter,v=t.extent;a||v||!c.isGlobal()||(_=!1,v=c.getExtent()),e=nn(n,i,u,!_&&v)}}return{constraint:e,maxResolution:n,minResolution:i,minZoom:o,zoomFactor:s}}(t);this.maxResolution_=e.maxResolution,this.minResolution_=e.minResolution,this.zoomFactor_=e.zoomFactor,this.resolutions_=t.resolutions,this.minZoom_=e.minZoom;var n=function(t){return void 0!==t.extent?(e=t.extent,n=t.constrainOnlyCenter,i=void 0===t.smoothExtentConstraint||t.smoothExtentConstraint,function(t,o,r,s){if(t){var a=n?0:r[0]*o,u=n?0:r[1]*o,l=e[0]+a/2,c=e[2]-a/2,h=e[1]+u/2,p=e[3]-u/2;l>c&&(l=c=(c+l)/2),h>p&&(h=p=(p+h)/2);var f=ge(t[0],l,c),d=ge(t[1],h,p),_=30*o;return s&&i&&(f+=-_*Math.log(1+Math.max(0,l-t[0])/_)+_*Math.log(1+Math.max(0,t[0]-c)/_),d+=-_*Math.log(1+Math.max(0,h-t[1])/_)+_*Math.log(1+Math.max(0,t[1]-p)/_)),[f,d]}}):xe;var e,n,i}(t),i=e.constraint,o=function(t){if(void 0===t.enableRotation||t.enableRotation){var e=t.constrainRotation;return void 0===e||!0===e?(r=o||Te(5),function(t,e){return e?t:void 0!==t?Math.abs(t)<=r?0:t:void 0}):!1===e?rn:\"number\"==typeof e?(n=e,i=2*Math.PI/n,function(t,e){return e?t:void 0!==t?t=Math.floor(t/i+.5)*i:void 0}):rn}return on;var n,i;var o,r}(t);this.constraints_={center:n,resolution:i,rotation:o},this.setRotation(void 0!==t.rotation?t.rotation:0),this.setCenter(void 0!==t.center?t.center:null),void 0!==t.resolution?this.setResolution(t.resolution):void 0!==t.zoom&&this.setZoom(t.zoom),this.resolveConstraints(0),this.setProperties({}),this.options_=t},e.prototype.getUpdatedOptions_=function(t){var e=p({},this.options_);return void 0!==e.resolution?e.resolution=this.getResolution():e.zoom=this.getZoom(),e.center=this.getCenter(),e.rotation=this.getRotation(),p({},e,t)},e.prototype.animate=function(t){this.isDef()&&!this.getAnimating()&&this.resolveConstraints(0),this.animate_.apply(this,arguments)},e.prototype.animate_=function(t){var e,n=arguments.length;if(n>1&&\"function\"==typeof arguments[n-1]&&(e=arguments[n-1],--n),!this.isDef()){var i=arguments[n-1];return i.center&&this.setCenter(i.center),void 0!==i.zoom&&this.setZoom(i.zoom),void 0!==i.rotation&&this.setRotation(i.rotation),void(e&&Vi(e,!0))}for(var o=Date.now(),r=this.targetCenter_.slice(),s=this.targetResolution_,a=this.targetRotation_,u=[],l=0;l<n;++l){var c=arguments[l],h={start:o,complete:!1,anchor:c.anchor,duration:void 0!==c.duration?c.duration:1e3,easing:c.easing||_n,callback:e};if(c.center&&(h.sourceCenter=r,h.targetCenter=c.center.slice(),r=h.targetCenter),void 0!==c.zoom?(h.sourceResolution=s,h.targetResolution=this.getResolutionForZoom(c.zoom),s=h.targetResolution):c.resolution&&(h.sourceResolution=s,h.targetResolution=c.resolution,s=h.targetResolution),void 0!==c.rotation){h.sourceRotation=a;var p=we(c.rotation-a+Math.PI,2*Math.PI)-Math.PI;h.targetRotation=a+p,a=h.targetRotation}Hi(h)?h.complete=!0:o+=h.duration,u.push(h)}this.animations_.push(u),this.setHint(sn,1),this.updateAnimations_()},e.prototype.getAnimating=function(){return this.hints_[sn]>0},e.prototype.getInteracting=function(){return this.hints_[an]>0},e.prototype.cancelAnimations=function(){this.setHint(sn,-this.hints_[sn]);for(var t=0,e=this.animations_.length;t<e;++t){var n=this.animations_[t];n[0].callback&&Vi(n[0].callback,!1)}this.animations_.length=0},e.prototype.updateAnimations_=function(){if(void 0!==this.updateAnimationKey_&&(cancelAnimationFrame(this.updateAnimationKey_),this.updateAnimationKey_=void 0),this.getAnimating()){for(var t=Date.now(),e=!1,n=this.animations_.length-1;n>=0;--n){for(var i=this.animations_[n],o=!0,r=0,s=i.length;r<s;++r){var a=i[r];if(!a.complete){var u=t-a.start,l=a.duration>0?u/a.duration:1;l>=1?(a.complete=!0,l=1):o=!1;var c=a.easing(l);if(a.sourceCenter){var h=a.sourceCenter[0],p=a.sourceCenter[1],f=h+c*(a.targetCenter[0]-h),d=p+c*(a.targetCenter[1]-p);this.targetCenter_=[f,d]}if(a.sourceResolution&&a.targetResolution){var _=1===c?a.targetResolution:a.sourceResolution+c*(a.targetResolution-a.sourceResolution);if(a.anchor){var v=this.getSizeFromViewport_(this.getRotation()),y=this.constraints_.resolution(_,0,v,!0);this.targetCenter_=this.calculateCenterZoom(y,a.anchor)}this.targetResolution_=_,this.applyTargetState_(!0)}if(void 0!==a.sourceRotation&&void 0!==a.targetRotation){var g=1===c?we(a.targetRotation+Math.PI,2*Math.PI)-Math.PI:a.sourceRotation+c*(a.targetRotation-a.sourceRotation);if(a.anchor){var m=this.constraints_.rotation(g,!0);this.targetCenter_=this.calculateCenterRotate(m,a.anchor)}this.targetRotation_=g}if(this.applyTargetState_(!0),e=!0,!a.complete)break}}if(o){this.animations_[n]=null,this.setHint(sn,-1);var E=i[0].callback;E&&Vi(E,!0)}}this.animations_=this.animations_.filter(Boolean),e&&void 0===this.updateAnimationKey_&&(this.updateAnimationKey_=requestAnimationFrame(this.updateAnimations_.bind(this)))}},e.prototype.calculateCenterRotate=function(t,e){var n,i,o,r=this.getCenter();return void 0!==r&&(pn(n=[r[0]-e[0],r[1]-e[1]],t-this.getRotation()),o=e,(i=n)[0]+=+o[0],i[1]+=+o[1]),n},e.prototype.calculateCenterZoom=function(t,e){var n,i=this.getCenter(),o=this.getResolution();void 0!==i&&void 0!==o&&(n=[e[0]-t*(e[0]-i[0])/o,e[1]-t*(e[1]-i[1])/o]);return n},e.prototype.getSizeFromViewport_=function(t){var e=[100,100],n='.ol-viewport[data-view=\"'+r(this)+'\"]',i=document.querySelector(n);if(i){var o=getComputedStyle(i);e[0]=parseInt(o.width,10),e[1]=parseInt(o.height,10)}if(t){var s=e[0],a=e[1];e[0]=Math.abs(s*Math.cos(t))+Math.abs(a*Math.sin(t)),e[1]=Math.abs(s*Math.sin(t))+Math.abs(a*Math.cos(t))}return e},e.prototype.getCenter=function(){return this.get(un)},e.prototype.getConstraints=function(){return this.constraints_},e.prototype.getHints=function(t){return void 0!==t?(t[0]=this.hints_[0],t[1]=this.hints_[1],t):this.hints_.slice()},e.prototype.calculateExtent=function(t){var e=t||this.getSizeFromViewport_(),n=this.getCenter();pe(n,1);var i=this.getResolution();pe(void 0!==i,2);var o=this.getRotation();return pe(void 0!==o,3),We(n,i,o,e)},e.prototype.getMaxResolution=function(){return this.maxResolution_},e.prototype.getMinResolution=function(){return this.minResolution_},e.prototype.getMaxZoom=function(){return this.getZoomForResolution(this.minResolution_)},e.prototype.setMaxZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({maxZoom:t}))},e.prototype.getMinZoom=function(){return this.getZoomForResolution(this.maxResolution_)},e.prototype.setMinZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({minZoom:t}))},e.prototype.setConstrainResolution=function(t){this.applyOptions_(this.getUpdatedOptions_({constrainResolution:t}))},e.prototype.getProjection=function(){return this.projection_},e.prototype.getResolution=function(){return this.get(ln)},e.prototype.getResolutions=function(){return this.resolutions_},e.prototype.getResolutionForExtent=function(t,e){var n=e||this.getSizeFromViewport_(),i=Qe(t)/n[0],o=Ve(t)/n[1];return Math.max(i,o)},e.prototype.getResolutionForValueFunction=function(t){var e=t||2,n=this.maxResolution_,i=this.minResolution_,o=Math.log(n/i)/Math.log(e);return function(t){return n/Math.pow(e,t*o)}},e.prototype.getRotation=function(){return this.get(cn)},e.prototype.getValueForResolutionFunction=function(t){var e=t||2,n=this.maxResolution_,i=this.minResolution_,o=Math.log(n/i)/Math.log(e);return function(t){return Math.log(n/t)/Math.log(e)/o}},e.prototype.getState=function(t){var e=this.getCenter(),n=this.getProjection(),i=this.getResolution(),o=this.getRotation();return{center:e.slice(0),projection:void 0!==n?n:null,resolution:i,rotation:o,zoom:this.getZoom()}},e.prototype.getZoom=function(){var t,e=this.getResolution();return void 0!==e&&(t=this.getZoomForResolution(e)),t},e.prototype.getZoomForResolution=function(t){var e,n,i=this.minZoom_||0;if(this.resolutions_){var o=Xt(this.resolutions_,t,1);i=o,e=this.resolutions_[o],n=o==this.resolutions_.length-1?2:e/this.resolutions_[o+1]}else e=this.maxResolution_,n=this.zoomFactor_;return i+Math.log(e/t)/Math.log(n)},e.prototype.getResolutionForZoom=function(t){if(this.resolutions_){if(this.resolutions_.length<=1)return 0;var e=ge(Math.floor(t),0,this.resolutions_.length-2),n=this.resolutions_[e]/this.resolutions_[e+1];return this.resolutions_[e]/Math.pow(n,ge(t-e,0,1))}return this.maxResolution_/Math.pow(this.zoomFactor_,t-this.minZoom_)},e.prototype.fit=function(t,e){var n,i=e||{},o=i.size;o||(o=this.getSizeFromViewport_()),pe(Array.isArray(t)||\"function\"==typeof t.getSimplifiedGeometry,24),Array.isArray(t)?(pe(!Je(t),25),n=Yi(t)):t.getType()===yn.CIRCLE?(n=Yi(t=t.getExtent())).rotate(this.getRotation(),Ye(t)):n=t;var r,s=void 0!==i.padding?i.padding:[0,0,0,0],a=void 0!==i.nearest&&i.nearest;r=void 0!==i.minResolution?i.minResolution:void 0!==i.maxZoom?this.getResolutionForZoom(i.maxZoom):0;for(var u=n.getFlatCoordinates(),l=this.getRotation(),c=Math.cos(-l),h=Math.sin(-l),p=1/0,f=1/0,d=-1/0,_=-1/0,v=n.getStride(),y=0,g=u.length;y<g;y+=v){var m=u[y]*c-u[y+1]*h,E=u[y]*h+u[y+1]*c;p=Math.min(p,m),f=Math.min(f,E),d=Math.max(d,m),_=Math.max(_,E)}var b=this.getResolutionForExtent([p,f,d,_],[o[0]-s[1]-s[3],o[1]-s[0]-s[2]]);b=isNaN(b)?r:Math.max(b,r),b=this.getConstrainedResolution(b,a?0:1),h=-h;var T=(p+d)/2,w=(f+_)/2,C=[(T+=(s[1]-s[3])/2*b)*c-(w+=(s[0]-s[2])/2*b)*h,w*c+T*h],x=i.callback?i.callback:O;void 0!==i.duration?this.animate_({resolution:b,center:this.getConstrainedCenter(C,b),duration:i.duration,easing:i.easing},x):(this.targetResolution_=b,this.targetCenter_=C,this.applyTargetState_(!1,!0),Vi(x,!0))},e.prototype.centerOn=function(t,e,n){var i=this.getRotation(),o=Math.cos(-i),r=Math.sin(-i),s=t[0]*o-t[1]*r,a=t[1]*o+t[0]*r,u=this.getResolution(),l=(s+=(e[0]/2-n[0])*u)*o-(a+=(n[1]-e[1]/2)*u)*(r=-r),c=a*o+s*r;this.setCenter([l,c])},e.prototype.isDef=function(){return!!this.getCenter()&&void 0!==this.getResolution()},e.prototype.adjustCenter=function(t){var e=this.targetCenter_;this.setCenter([e[0]+t[0],e[1]+t[1]])},e.prototype.adjustResolution=function(t,e){var n=this.getAnimating()||this.getInteracting(),i=this.getSizeFromViewport_(this.getRotation()),o=this.constraints_.resolution(this.targetResolution_*t,0,i,n);void 0!==e&&(this.targetCenter_=this.calculateCenterZoom(o,e)),this.targetResolution_*=t,this.applyTargetState_()},e.prototype.adjustZoom=function(t,e){this.adjustResolution(Math.pow(this.zoomFactor_,-t),e)},e.prototype.adjustRotation=function(t,e){var n=this.getAnimating()||this.getInteracting(),i=this.constraints_.rotation(this.targetRotation_+t,n);void 0!==e&&(this.targetCenter_=this.calculateCenterRotate(i,e)),this.targetRotation_+=t,this.applyTargetState_()},e.prototype.setCenter=function(t){this.targetCenter_=t,this.applyTargetState_()},e.prototype.setHint=function(t,e){return this.hints_[t]+=e,this.changed(),this.hints_[t]},e.prototype.setResolution=function(t){this.targetResolution_=t,this.applyTargetState_()},e.prototype.setRotation=function(t){this.targetRotation_=t,this.applyTargetState_()},e.prototype.setZoom=function(t){this.setResolution(this.getResolutionForZoom(t))},e.prototype.applyTargetState_=function(t,e){var n=this.getAnimating()||this.getInteracting()||e,i=this.constraints_.rotation(this.targetRotation_,n),o=this.getSizeFromViewport_(i),r=this.constraints_.resolution(this.targetResolution_,0,o,n),s=this.constraints_.center(this.targetCenter_,r,o,n);this.get(cn)!==i&&this.set(cn,i),this.get(ln)!==r&&this.set(ln,r),this.get(un)&&hn(this.get(un),s)||this.set(un,s),this.getAnimating()&&!t&&this.cancelAnimations()},e.prototype.resolveConstraints=function(t,e,n){var i=void 0!==t?t:200,o=e||0,r=this.constraints_.rotation(this.targetRotation_),s=this.getSizeFromViewport_(r),a=this.constraints_.resolution(this.targetResolution_,o,s),u=this.constraints_.center(this.targetCenter_,a,s);if(0===i)return this.targetResolution_=a,this.targetRotation_=r,this.targetCenter_=u,void this.applyTargetState_();this.getResolution()===a&&this.getRotation()===r&&this.getCenter()&&hn(this.getCenter(),u)||(this.getAnimating()&&this.cancelAnimations(),this.animate_({rotation:r,center:u,resolution:a,duration:i,easing:dn,anchor:n}))},e.prototype.beginInteraction=function(){this.resolveConstraints(0),this.setHint(an,1)},e.prototype.endInteraction=function(t,e,n){this.setHint(an,-1),this.resolveConstraints(t,e,n)},e.prototype.getConstrainedCenter=function(t,e){var n=this.getSizeFromViewport_(this.getRotation());return this.constraints_.center(t,e||this.getResolution(),n)},e.prototype.getConstrainedZoom=function(t,e){var n=this.getResolutionForZoom(t);return this.getZoomForResolution(this.getConstrainedResolution(n))},e.prototype.getConstrainedResolution=function(t,e){var n=e||0,i=this.getSizeFromViewport_(this.getRotation());return this.constraints_.resolution(t,n,i)},e}(k);function qi(t,e){var n=document.createElement(\"canvas\");return t&&(n.width=t),e&&(n.height=e),n.getContext(\"2d\")}function Qi(t,e){var n=e.parentNode;n&&n.replaceChild(t,e)}function $i(t){return t&&t.parentNode?t.parentNode.removeChild(t):null}var Ji={OPACITY:\"opacity\",VISIBLE:\"visible\",EXTENT:\"extent\",Z_INDEX:\"zIndex\",MAX_RESOLUTION:\"maxResolution\",MIN_RESOLUTION:\"minResolution\",SOURCE:\"source\"},to=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),eo=function(t){function e(e){var n=t.call(this)||this,i=p({},e);return i[Ji.OPACITY]=void 0!==e.opacity?e.opacity:1,i[Ji.VISIBLE]=void 0===e.visible||e.visible,i[Ji.Z_INDEX]=e.zIndex,i[Ji.MAX_RESOLUTION]=void 0!==e.maxResolution?e.maxResolution:1/0,i[Ji.MIN_RESOLUTION]=void 0!==e.minResolution?e.minResolution:0,n.className_=void 0!==i.className?e.className:\"ol-layer\",delete i.className,n.setProperties(i),n.state_=null,n}return to(e,t),e.prototype.getClassName=function(){return this.className_},e.prototype.getLayerState=function(){var t=this.state_||{layer:this,managed:!0};return t.opacity=ge(Math.round(100*this.getOpacity())/100,0,1),t.sourceState=this.getSourceState(),t.visible=this.getVisible(),t.extent=this.getExtent(),t.zIndex=this.getZIndex()||0,t.maxResolution=this.getMaxResolution(),t.minResolution=Math.max(this.getMinResolution(),0),this.state_=t,t},e.prototype.getLayersArray=function(t){return i()},e.prototype.getLayerStatesArray=function(t){return i()},e.prototype.getExtent=function(){return this.get(Ji.EXTENT)},e.prototype.getMaxResolution=function(){return this.get(Ji.MAX_RESOLUTION)},e.prototype.getMinResolution=function(){return this.get(Ji.MIN_RESOLUTION)},e.prototype.getOpacity=function(){return this.get(Ji.OPACITY)},e.prototype.getSourceState=function(){return i()},e.prototype.getVisible=function(){return this.get(Ji.VISIBLE)},e.prototype.getZIndex=function(){return this.get(Ji.Z_INDEX)},e.prototype.setExtent=function(t){this.set(Ji.EXTENT,t)},e.prototype.setMaxResolution=function(t){this.set(Ji.MAX_RESOLUTION,t)},e.prototype.setMinResolution=function(t){this.set(Ji.MIN_RESOLUTION,t)},e.prototype.setOpacity=function(t){this.set(Ji.OPACITY,t)},e.prototype.setVisible=function(t){this.set(Ji.VISIBLE,t)},e.prototype.setZIndex=function(t){this.set(Ji.Z_INDEX,t)},e}(k),no={UNDEFINED:\"undefined\",LOADING:\"loading\",READY:\"ready\",ERROR:\"error\"},io=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),oo={LAYERS:\"layers\"},ro=function(t){function e(e){var n=this,i=e||{},o=p({},i);delete o.layers;var r=i.layers;return(n=t.call(this,o)||this).layersListenerKeys_=[],n.listenerKeys_={},m(n,N(oo.LAYERS),n.handleLayersChanged_,n),r?Array.isArray(r)?r=new U(r.slice(),{unique:!0}):pe(\"function\"==typeof r.getArray,43):r=new U(void 0,{unique:!0}),n.setLayers(r),n}return io(e,t),e.prototype.handleLayerChange_=function(){this.changed()},e.prototype.handleLayersChanged_=function(){this.layersListenerKeys_.forEach(T),this.layersListenerKeys_.length=0;var t=this.getLayers();for(var e in this.layersListenerKeys_.push(m(t,c.ADD,this.handleLayersAdd_,this),m(t,c.REMOVE,this.handleLayersRemove_,this)),this.listenerKeys_)this.listenerKeys_[e].forEach(T);f(this.listenerKeys_);for(var n=t.getArray(),i=0,o=n.length;i<o;i++){var s=n[i];this.listenerKeys_[r(s)]=[m(s,h,this.handleLayerChange_,this),m(s,M.CHANGE,this.handleLayerChange_,this)]}this.changed()},e.prototype.handleLayersAdd_=function(t){var e=t.element;this.listenerKeys_[r(e)]=[m(e,h,this.handleLayerChange_,this),m(e,M.CHANGE,this.handleLayerChange_,this)],this.changed()},e.prototype.handleLayersRemove_=function(t){var e=r(t.element);this.listenerKeys_[e].forEach(T),delete this.listenerKeys_[e],this.changed()},e.prototype.getLayers=function(){return this.get(oo.LAYERS)},e.prototype.setLayers=function(t){this.set(oo.LAYERS,t)},e.prototype.getLayersArray=function(t){var e=void 0!==t?t:[];return this.getLayers().forEach(function(t){t.getLayersArray(e)}),e},e.prototype.getLayerStatesArray=function(t){var e=void 0!==t?t:[],n=e.length;this.getLayers().forEach(function(t){t.getLayerStatesArray(e)});for(var i=this.getLayerState(),o=n,r=e.length;o<r;o++){var s=e[o];s.opacity*=i.opacity,s.visible=s.visible&&i.visible,s.maxResolution=Math.min(s.maxResolution,i.maxResolution),s.minResolution=Math.max(s.minResolution,i.minResolution),void 0!==i.extent&&(void 0!==s.extent?s.extent=He(s.extent,i.extent):s.extent=i.extent)}return e},e.prototype.getSourceState=function(){return no.READY},e}(eo);function so(t,e){return Array.isArray(t)?t:(void 0===e?e=[t,t]:e[0]=e[1]=t,e)}var ao=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var uo=function(t){function e(e){var n=t.call(this)||this,i=function(t){var e=null;void 0!==t.keyboardEventTarget&&(e=\"string\"==typeof t.keyboardEventTarget?document.getElementById(t.keyboardEventTarget):t.keyboardEventTarget);var n,i,o,r={},s=t.layers&&\"function\"==typeof t.layers.getLayers?t.layers:new ro({layers:t.layers});r[re.LAYERGROUP]=s,r[re.TARGET]=t.target,r[re.VIEW]=void 0!==t.view?t.view:new Bi,void 0!==t.controls&&(Array.isArray(t.controls)?n=new U(t.controls.slice()):(pe(\"function\"==typeof t.controls.getArray,47),n=t.controls));void 0!==t.interactions&&(Array.isArray(t.interactions)?i=new U(t.interactions.slice()):(pe(\"function\"==typeof t.interactions.getArray,48),i=t.interactions));void 0!==t.overlays?Array.isArray(t.overlays)?o=new U(t.overlays.slice()):(pe(\"function\"==typeof t.overlays.getArray,49),o=t.overlays):o=new U;return{controls:n,interactions:i,keyboardEventTarget:e,overlays:o,values:r}}(e);for(var o in n.maxTilesLoading_=void 0!==e.maxTilesLoading?e.maxTilesLoading:16,n.pixelRatio_=void 0!==e.pixelRatio?e.pixelRatio:$,n.animationDelayKey_,n.animationDelay_=function(){this.animationDelayKey_=void 0,this.renderFrame_(Date.now())}.bind(n),n.coordinateToPixelTransform_=[1,0,0,1,0,0],n.pixelToCoordinateTransform_=[1,0,0,1,0,0],n.frameIndex_=0,n.frameState_=null,n.previousExtent_=null,n.viewPropertyListenerKey_=null,n.viewChangeListenerKey_=null,n.layerGroupPropertyListenerKeys_=null,n.viewport_=document.createElement(\"div\"),n.viewport_.className=\"ol-viewport\"+(J?\" ol-touch\":\"\"),n.viewport_.style.position=\"relative\",n.viewport_.style.overflow=\"hidden\",n.viewport_.style.width=\"100%\",n.viewport_.style.height=\"100%\",n.viewport_.style.msTouchAction=\"none\",n.viewport_.style.touchAction=\"none\",n.overlayContainer_=document.createElement(\"div\"),n.overlayContainer_.style.position=\"absolute\",n.overlayContainer_.style.zIndex=\"0\",n.overlayContainer_.style.width=\"100%\",n.overlayContainer_.style.height=\"100%\",n.overlayContainer_.className=\"ol-overlaycontainer\",n.viewport_.appendChild(n.overlayContainer_),n.overlayContainerStopEvent_=document.createElement(\"div\"),n.overlayContainerStopEvent_.style.position=\"absolute\",n.overlayContainerStopEvent_.style.zIndex=\"0\",n.overlayContainerStopEvent_.style.width=\"100%\",n.overlayContainerStopEvent_.style.height=\"100%\",n.overlayContainerStopEvent_.className=\"ol-overlaycontainer-stopevent\",n.viewport_.appendChild(n.overlayContainerStopEvent_),n.mapBrowserEventHandler_=new ee(n,e.moveTolerance),nt)m(n.mapBrowserEventHandler_,nt[o],n.handleMapBrowserEvent,n);return n.keyboardEventTarget_=i.keyboardEventTarget,n.keyHandlerKeys_=null,m(n.viewport_,M.CONTEXTMENU,n.handleBrowserEvent,n),m(n.viewport_,M.WHEEL,n.handleBrowserEvent,n),m(n.viewport_,M.MOUSEWHEEL,n.handleBrowserEvent,n),n.controls=i.controls||new U,n.interactions=i.interactions||new U,n.overlays_=i.overlays,n.overlayIdIndex_={},n.renderer_=n.createRenderer(),n.handleResize_,n.focus_=null,n.postRenderFunctions_=[],n.tileQueue_=new _e(n.getTilePriority.bind(n),n.handleTileChange_.bind(n)),n.skippedFeatureUids_={},m(n,N(re.LAYERGROUP),n.handleLayerGroupChanged_,n),m(n,N(re.VIEW),n.handleViewChanged_,n),m(n,N(re.SIZE),n.handleSizeChanged_,n),m(n,N(re.TARGET),n.handleTargetChanged_,n),n.setProperties(i.values),n.controls.forEach(function(t){t.setMap(this)}.bind(n)),m(n.controls,c.ADD,function(t){t.element.setMap(this)},n),m(n.controls,c.REMOVE,function(t){t.element.setMap(null)},n),n.interactions.forEach(function(t){t.setMap(this)}.bind(n)),m(n.interactions,c.ADD,function(t){t.element.setMap(this)},n),m(n.interactions,c.REMOVE,function(t){t.element.setMap(null)},n),n.overlays_.forEach(n.addOverlayInternal_.bind(n)),m(n.overlays_,c.ADD,function(t){this.addOverlayInternal_(t.element)},n),m(n.overlays_,c.REMOVE,function(t){var e=t.element.getId();void 0!==e&&delete this.overlayIdIndex_[e.toString()],t.element.setMap(null)},n),n}return ao(e,t),e.prototype.createRenderer=function(){throw new Error(\"Use a map type that has a createRenderer method\")},e.prototype.addControl=function(t){this.getControls().push(t)},e.prototype.addInteraction=function(t){this.getInteractions().push(t)},e.prototype.addLayer=function(t){this.getLayerGroup().getLayers().push(t)},e.prototype.addOverlay=function(t){this.getOverlays().push(t)},e.prototype.addOverlayInternal_=function(t){var e=t.getId();void 0!==e&&(this.overlayIdIndex_[e.toString()]=t),t.setMap(this)},e.prototype.disposeInternal=function(){this.mapBrowserEventHandler_.dispose(),b(this.viewport_,M.CONTEXTMENU,this.handleBrowserEvent,this),b(this.viewport_,M.WHEEL,this.handleBrowserEvent,this),b(this.viewport_,M.MOUSEWHEEL,this.handleBrowserEvent,this),void 0!==this.handleResize_&&(removeEventListener(M.RESIZE,this.handleResize_,!1),this.handleResize_=void 0),this.animationDelayKey_&&(cancelAnimationFrame(this.animationDelayKey_),this.animationDelayKey_=void 0),this.setTarget(null),t.prototype.disposeInternal.call(this)},e.prototype.forEachFeatureAtPixel=function(t,e,n){if(this.frameState_){var i=this.getCoordinateFromPixel(t),o=void 0!==(n=void 0!==n?n:{}).hitTolerance?n.hitTolerance*this.frameState_.pixelRatio:0,r=void 0!==n.layerFilter?n.layerFilter:C;return this.renderer_.forEachFeatureAtCoordinate(i,this.frameState_,o,e,null,r,null)}},e.prototype.getFeaturesAtPixel=function(t,e){var n=null;return this.forEachFeatureAtPixel(t,function(t){n||(n=[]),n.push(t)},e),n},e.prototype.forEachLayerAtPixel=function(t,e,n){if(this.frameState_){var i=n||{},o=void 0!==i.hitTolerance?n.hitTolerance*this.frameState_.pixelRatio:0,r=i.layerFilter||C;return this.renderer_.forEachLayerAtPixel(t,this.frameState_,o,e,r)}},e.prototype.hasFeatureAtPixel=function(t,e){if(!this.frameState_)return!1;var n=this.getCoordinateFromPixel(t),i=void 0!==(e=void 0!==e?e:{}).layerFilter?e.layerFilter:C,o=void 0!==e.hitTolerance?e.hitTolerance*this.frameState_.pixelRatio:0;return this.renderer_.hasFeatureAtCoordinate(n,this.frameState_,o,i,null)},e.prototype.getEventCoordinate=function(t){return this.getCoordinateFromPixel(this.getEventPixel(t))},e.prototype.getEventPixel=function(t){var e=this.viewport_.getBoundingClientRect(),n=\"changedTouches\"in t?t.changedTouches[0]:t;return[n.clientX-e.left,n.clientY-e.top]},e.prototype.getTarget=function(){return this.get(re.TARGET)},e.prototype.getTargetElement=function(){var t=this.getTarget();return void 0!==t?\"string\"==typeof t?document.getElementById(t):t:null},e.prototype.getCoordinateFromPixel=function(t){var e=this.frameState_;return e?ii(e.pixelToCoordinateTransform,t.slice()):null},e.prototype.getControls=function(){return this.controls},e.prototype.getOverlays=function(){return this.overlays_},e.prototype.getOverlayById=function(t){var e=this.overlayIdIndex_[t.toString()];return void 0!==e?e:null},e.prototype.getInteractions=function(){return this.interactions},e.prototype.getLayerGroup=function(){return this.get(re.LAYERGROUP)},e.prototype.getLayers=function(){return this.getLayerGroup().getLayers()},e.prototype.getPixelFromCoordinate=function(t){var e=this.frameState_;return e?ii(e.coordinateToPixelTransform,t.slice(0,2)):null},e.prototype.getRenderer=function(){return this.renderer_},e.prototype.getSize=function(){return this.get(re.SIZE)},e.prototype.getView=function(){return this.get(re.VIEW)},e.prototype.getViewport=function(){return this.viewport_},e.prototype.getOverlayContainer=function(){return this.overlayContainer_},e.prototype.getOverlayContainerStopEvent=function(){return this.overlayContainerStopEvent_},e.prototype.getTilePriority=function(t,e,n,i){var o=this.frameState_;if(!(o&&e in o.wantedTiles))return 1/0;if(!o.wantedTiles[e][t.getKey()])return 1/0;var r=n[0]-o.focus[0],s=n[1]-o.focus[1];return 65536*Math.log(i)+Math.sqrt(r*r+s*s)/i},e.prototype.handleBrowserEvent=function(t,e){var n=e||t.type,i=new W(n,this,t);this.handleMapBrowserEvent(i)},e.prototype.handleMapBrowserEvent=function(t){if(this.frameState_){for(var e=t.originalEvent.target;e instanceof HTMLElement;){if(e.parentElement===this.overlayContainerStopEvent_)return;e=e.parentElement}this.focus_=t.coordinate,t.frameState=this.frameState_;var n=this.getInteractions().getArray();if(!1!==this.dispatchEvent(t))for(var i=n.length-1;i>=0;i--){var o=n[i];if(o.getActive())if(!o.handleEvent(t))break}}},e.prototype.handlePostRender=function(){var t=this.frameState_,e=this.tileQueue_;if(!e.isEmpty()){var n=this.maxTilesLoading_,i=n;if(t){var o=t.viewHints;if(o[sn]||o[an]){var r=Date.now()-t.time>8;n=r?0:8,i=r?0:2}}e.getTilesLoading()<n&&(e.reprioritize(),e.loadMoreTiles(n,i))}!t||!this.hasListener(ce)||t.animate||this.tileQueue_.getTilesLoading()||function t(e){for(var n=0,i=e.length;n<i;++n){var o=e[n];if(\"function\"==typeof o.getLayers)return t(o.getLayers().getArray());var r=o.getSource();if(r&&r.loading)return!0}return!1}(this.getLayers().getArray())||this.renderer_.dispatchRenderEvent(ce,t);for(var s=this.postRenderFunctions_,a=0,u=s.length;a<u;++a)s[a](this,t);s.length=0},e.prototype.handleSizeChanged_=function(){this.getView()&&this.getView().resolveConstraints(0),this.render()},e.prototype.handleTargetChanged_=function(){var t;if(this.getTarget()&&(t=this.getTargetElement()),this.keyHandlerKeys_){for(var e=0,n=this.keyHandlerKeys_.length;e<n;++e)T(this.keyHandlerKeys_[e]);this.keyHandlerKeys_=null}if(t){t.appendChild(this.viewport_);var i=this.keyboardEventTarget_?this.keyboardEventTarget_:t;this.keyHandlerKeys_=[m(i,M.KEYDOWN,this.handleBrowserEvent,this),m(i,M.KEYPRESS,this.handleBrowserEvent,this)],this.handleResize_||(this.handleResize_=this.updateSize.bind(this),addEventListener(M.RESIZE,this.handleResize_,!1))}else this.renderer_.removeLayerRenderers(),$i(this.viewport_),void 0!==this.handleResize_&&(removeEventListener(M.RESIZE,this.handleResize_,!1),this.handleResize_=void 0);this.updateSize()},e.prototype.handleTileChange_=function(){this.render()},e.prototype.handleViewPropertyChanged_=function(){this.render()},e.prototype.handleViewChanged_=function(){this.viewPropertyListenerKey_&&(T(this.viewPropertyListenerKey_),this.viewPropertyListenerKey_=null),this.viewChangeListenerKey_&&(T(this.viewChangeListenerKey_),this.viewChangeListenerKey_=null);var t=this.getView();t&&(this.viewport_.setAttribute(\"data-view\",r(t)),this.viewPropertyListenerKey_=m(t,h,this.handleViewPropertyChanged_,this),this.viewChangeListenerKey_=m(t,M.CHANGE,this.handleViewPropertyChanged_,this),t.resolveConstraints(0)),this.render()},e.prototype.handleLayerGroupChanged_=function(){this.layerGroupPropertyListenerKeys_&&(this.layerGroupPropertyListenerKeys_.forEach(T),this.layerGroupPropertyListenerKeys_=null);var t=this.getLayerGroup();t&&(this.layerGroupPropertyListenerKeys_=[m(t,h,this.render,this),m(t,M.CHANGE,this.render,this)]),this.render()},e.prototype.isRendered=function(){return!!this.frameState_},e.prototype.renderSync=function(){this.animationDelayKey_&&cancelAnimationFrame(this.animationDelayKey_),this.animationDelay_()},e.prototype.render=function(){void 0===this.animationDelayKey_&&(this.animationDelayKey_=requestAnimationFrame(this.animationDelay_))},e.prototype.removeControl=function(t){return this.getControls().remove(t)},e.prototype.removeInteraction=function(t){return this.getInteractions().remove(t)},e.prototype.removeLayer=function(t){return this.getLayerGroup().getLayers().remove(t)},e.prototype.removeOverlay=function(t){return this.getOverlays().remove(t)},e.prototype.renderFrame_=function(t){var e,n=this.getSize(),i=this.getView(),o=[1/0,1/0,-1/0,-1/0],r=this.frameState_,s=null;if(void 0!==n&&function(t){return t[0]>0&&t[1]>0}(n)&&i&&i.isDef()){var a=i.getHints(this.frameState_?this.frameState_.viewHints:void 0);e=i.getState(this.pixelRatio_),s={animate:!1,coordinateToPixelTransform:this.coordinateToPixelTransform_,extent:o,focus:this.focus_?this.focus_:e.center,index:this.frameIndex_++,layerStatesArray:this.getLayerGroup().getLayerStatesArray(),pixelRatio:this.pixelRatio_,pixelToCoordinateTransform:this.pixelToCoordinateTransform_,postRenderFunctions:[],size:n,skippedFeatureUids:this.skippedFeatureUids_,tileQueue:this.tileQueue_,time:t,usedTiles:{},viewState:e,viewHints:a,wantedTiles:{}}}if(s&&(s.extent=We(e.center,e.resolution,e.rotation,s.size,o)),this.frameState_=s,this.renderer_.renderFrame(s),s){if(s.animate&&this.render(),Array.prototype.push.apply(this.postRenderFunctions_,s.postRenderFunctions),r)(!this.previousExtent_||!Je(this.previousExtent_)&&!je(s.extent,this.previousExtent_))&&(this.dispatchEvent(new Y(ie,this,r)),this.previousExtent_=De(this.previousExtent_));this.previousExtent_&&!s.viewHints[sn]&&!s.viewHints[an]&&!je(s.extent,this.previousExtent_)&&(this.dispatchEvent(new Y(oe,this,s)),function(t,e){e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]):t.slice()}(s.extent,this.previousExtent_))}this.dispatchEvent(new Y(ne,this,s)),setTimeout(this.handlePostRender.bind(this),0)},e.prototype.setLayerGroup=function(t){this.set(re.LAYERGROUP,t)},e.prototype.setSize=function(t){this.set(re.SIZE,t)},e.prototype.setTarget=function(t){this.set(re.TARGET,t)},e.prototype.setView=function(t){this.set(re.VIEW,t)},e.prototype.skipFeature=function(t){this.skippedFeatureUids_[r(t)]=!0,this.render()},e.prototype.updateSize=function(){var t=this.getTargetElement();if(t){var e=getComputedStyle(t);this.setSize([t.offsetWidth-parseFloat(e.borderLeftWidth)-parseFloat(e.paddingLeft)-parseFloat(e.paddingRight)-parseFloat(e.borderRightWidth),t.offsetHeight-parseFloat(e.borderTopWidth)-parseFloat(e.paddingTop)-parseFloat(e.paddingBottom)-parseFloat(e.borderBottomWidth)])}else this.setSize(void 0)},e.prototype.unskipFeature=function(t){delete this.skippedFeatureUids_[r(t)],this.render()},e}(k);var lo,co,ho=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),po=function(t){function e(e){var n=t.call(this)||this;return n.element=e.element?e.element:null,n.target_=null,n.map_=null,n.listenerKeys=[],n.render=e.render?e.render:O,e.target&&n.setTarget(e.target),n}return ho(e,t),e.prototype.disposeInternal=function(){$i(this.element),t.prototype.disposeInternal.call(this)},e.prototype.getMap=function(){return this.map_},e.prototype.setMap=function(t){this.map_&&$i(this.element);for(var e=0,n=this.listenerKeys.length;e<n;++e)T(this.listenerKeys[e]);(this.listenerKeys.length=0,this.map_=t,this.map_)&&((this.target_?this.target_:t.getOverlayContainerStopEvent()).appendChild(this.element),this.render!==O&&this.listenerKeys.push(m(t,ne,this.render,this)),t.render())},e.prototype.setTarget=function(t){this.target_=\"string\"==typeof t?document.getElementById(t):t},e}(k),fo=\"ol-hidden\",_o=\"ol-unselectable\",vo=\"ol-control\",yo=\"ol-collapsed\",go=(co={},function(t){if(lo||(lo=document.createElement(\"div\").style),!(t in co)){lo.font=t;var e=lo.fontFamily;if(lo.font=\"\",!e)return null;co[t]=e.split(/,\\s?/)}return co[t]}),mo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Eo(t,e){return t.visible&&e>=t.minResolution&&e<t.maxResolution}var bo=function(t){function e(e){var n=this,i=p({},e);delete i.source,(n=t.call(this,i)||this).mapPrecomposeKey_=null,n.mapRenderKey_=null,n.sourceChangeKey_=null,n.renderer_=null,e.map&&n.setMap(e.map),m(n,N(Ji.SOURCE),n.handleSourcePropertyChange_,n);var o=e.source?e.source:null;return n.setSource(o),n}return mo(e,t),e.prototype.getLayersArray=function(t){var e=t||[];return e.push(this),e},e.prototype.getLayerStatesArray=function(t){var e=t||[];return e.push(this.getLayerState()),e},e.prototype.getSource=function(){return this.get(Ji.SOURCE)||null},e.prototype.getSourceState=function(){var t=this.getSource();return t?t.getState():no.UNDEFINED},e.prototype.handleSourceChange_=function(){this.changed()},e.prototype.handleSourcePropertyChange_=function(){this.sourceChangeKey_&&(T(this.sourceChangeKey_),this.sourceChangeKey_=null);var t=this.getSource();t&&(this.sourceChangeKey_=m(t,M.CHANGE,this.handleSourceChange_,this)),this.changed()},e.prototype.render=function(t){var e=this.getRenderer(),n=this.getLayerState();if(e.prepareFrame(t,n))return e.renderFrame(t,n)},e.prototype.setMap=function(t){this.mapPrecomposeKey_&&(T(this.mapPrecomposeKey_),this.mapPrecomposeKey_=null),t||this.changed(),this.mapRenderKey_&&(T(this.mapRenderKey_),this.mapRenderKey_=null),t&&(this.mapPrecomposeKey_=m(t,ue,function(t){var e=t,n=this.getLayerState();n.managed=!1,void 0===this.getZIndex()&&(n.zIndex=1/0),e.frameState.layerStatesArray.push(n)},this),this.mapRenderKey_=m(this,M.CHANGE,t.render,t),this.changed())},e.prototype.setSource=function(t){this.set(Ji.SOURCE,t)},e.prototype.getRenderer=function(){return this.renderer_||(this.renderer_=this.createRenderer()),this.renderer_},e.prototype.createRenderer=function(){return null},e}(eo),To=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function wo(t){this.updateElement_(t.frameState)}var Co=function(t){function e(e){var n=this,i=e||{};(n=t.call(this,{element:document.createElement(\"div\"),render:i.render||wo,target:i.target})||this).ulElement_=document.createElement(\"ul\"),n.collapsed_=void 0===i.collapsed||i.collapsed,n.overrideCollapsible_=void 0!==i.collapsible,n.collapsible_=void 0===i.collapsible||i.collapsible,n.collapsible_||(n.collapsed_=!1);var o=void 0!==i.className?i.className:\"ol-attribution\",r=void 0!==i.tipLabel?i.tipLabel:\"Attributions\",s=void 0!==i.collapseLabel?i.collapseLabel:\"»\";\"string\"==typeof s?(n.collapseLabel_=document.createElement(\"span\"),n.collapseLabel_.textContent=s):n.collapseLabel_=s;var a=void 0!==i.label?i.label:\"i\";\"string\"==typeof a?(n.label_=document.createElement(\"span\"),n.label_.textContent=a):n.label_=a;var u=n.collapsible_&&!n.collapsed_?n.collapseLabel_:n.label_,l=document.createElement(\"button\");l.setAttribute(\"type\",\"button\"),l.title=r,l.appendChild(u),m(l,M.CLICK,n.handleClick_,n);var c=o+\" \"+_o+\" \"+vo+(n.collapsed_&&n.collapsible_?\" \"+yo:\"\")+(n.collapsible_?\"\":\" ol-uncollapsible\"),h=n.element;return h.className=c,h.appendChild(n.ulElement_),h.appendChild(l),n.renderedAttributions_=[],n.renderedVisible_=!0,n}return To(e,t),e.prototype.collectSourceAttributions_=function(t){for(var e={},n=[],i=t.layerStatesArray,o=t.viewState.resolution,r=0,s=i.length;r<s;++r){var a=i[r];if(Eo(a,o)){var u=a.layer.getSource();if(u){var l=u.getAttributions();if(l){var c=l(t);if(c)if(this.overrideCollapsible_||!1!==u.getAttributionsCollapsible()||this.setCollapsible(!1),Array.isArray(c))for(var h=0,p=c.length;h<p;++h)c[h]in e||(n.push(c[h]),e[c[h]]=!0);else c in e||(n.push(c),e[c]=!0)}}}}return n},e.prototype.updateElement_=function(t){if(t){var e=this.collectSourceAttributions_(t),n=e.length>0;if(this.renderedVisible_!=n&&(this.element.style.display=n?\"\":\"none\",this.renderedVisible_=n),!function(t,e){var n=t.length;if(n!==e.length)return!1;for(var i=0;i<n;i++)if(t[i]!==e[i])return!1;return!0}(e,this.renderedAttributions_)){!function(t){for(;t.lastChild;)t.removeChild(t.lastChild)}(this.ulElement_);for(var i=0,o=e.length;i<o;++i){var r=document.createElement(\"li\");r.innerHTML=e[i],this.ulElement_.appendChild(r)}this.renderedAttributions_=e}}else this.renderedVisible_&&(this.element.style.display=\"none\",this.renderedVisible_=!1)},e.prototype.handleClick_=function(t){t.preventDefault(),this.handleToggle_()},e.prototype.handleToggle_=function(){this.element.classList.toggle(yo),this.collapsed_?Qi(this.collapseLabel_,this.label_):Qi(this.label_,this.collapseLabel_),this.collapsed_=!this.collapsed_},e.prototype.getCollapsible=function(){return this.collapsible_},e.prototype.setCollapsible=function(t){this.collapsible_!==t&&(this.collapsible_=t,this.element.classList.toggle(\"ol-uncollapsible\"),!t&&this.collapsed_&&this.handleToggle_())},e.prototype.setCollapsed=function(t){this.collapsible_&&this.collapsed_!==t&&this.handleToggle_()},e.prototype.getCollapsed=function(){return this.collapsed_},e}(po),xo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Oo(t){var e=t.frameState;if(e){var n=e.viewState.rotation;if(n!=this.rotation_){var i=\"rotate(\"+n+\"rad)\";if(this.autoHide_){var o=this.element.classList.contains(fo);o||0!==n?o&&0!==n&&this.element.classList.remove(fo):this.element.classList.add(fo)}this.label_.style.transform=i}this.rotation_=n}}var Ro=function(t){function e(e){var n=this,i=e||{};n=t.call(this,{element:document.createElement(\"div\"),render:i.render||Oo,target:i.target})||this;var o=void 0!==i.className?i.className:\"ol-rotate\",r=void 0!==i.label?i.label:\"⇧\";n.label_=null,\"string\"==typeof r?(n.label_=document.createElement(\"span\"),n.label_.className=\"ol-compass\",n.label_.textContent=r):(n.label_=r,n.label_.classList.add(\"ol-compass\"));var s=i.tipLabel?i.tipLabel:\"Reset rotation\",a=document.createElement(\"button\");a.className=o+\"-reset\",a.setAttribute(\"type\",\"button\"),a.title=s,a.appendChild(n.label_),m(a,M.CLICK,n.handleClick_,n);var u=o+\" \"+_o+\" \"+vo,l=n.element;return l.className=u,l.appendChild(a),n.callResetNorth_=i.resetNorth?i.resetNorth:void 0,n.duration_=void 0!==i.duration?i.duration:250,n.autoHide_=void 0===i.autoHide||i.autoHide,n.rotation_=void 0,n.autoHide_&&n.element.classList.add(fo),n}return xo(e,t),e.prototype.handleClick_=function(t){t.preventDefault(),void 0!==this.callResetNorth_?this.callResetNorth_():this.resetNorth_()},e.prototype.resetNorth_=function(){var t=this.getMap().getView();t&&void 0!==t.getRotation()&&(this.duration_>0?t.animate({rotation:0,duration:this.duration_,easing:dn}):t.setRotation(0))},e}(po),Po=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),So=function(t){function e(e){var n=this,i=e||{};n=t.call(this,{element:document.createElement(\"div\"),target:i.target})||this;var o=void 0!==i.className?i.className:\"ol-zoom\",r=void 0!==i.delta?i.delta:1,s=void 0!==i.zoomInLabel?i.zoomInLabel:\"+\",a=void 0!==i.zoomOutLabel?i.zoomOutLabel:\"−\",u=void 0!==i.zoomInTipLabel?i.zoomInTipLabel:\"Zoom in\",l=void 0!==i.zoomOutTipLabel?i.zoomOutTipLabel:\"Zoom out\",c=document.createElement(\"button\");c.className=o+\"-in\",c.setAttribute(\"type\",\"button\"),c.title=u,c.appendChild(\"string\"==typeof s?document.createTextNode(s):s),m(c,M.CLICK,n.handleClick_.bind(n,r));var h=document.createElement(\"button\");h.className=o+\"-out\",h.setAttribute(\"type\",\"button\"),h.title=l,h.appendChild(\"string\"==typeof a?document.createTextNode(a):a),m(h,M.CLICK,n.handleClick_.bind(n,-r));var p=o+\" \"+_o+\" \"+vo,f=n.element;return f.className=p,f.appendChild(c),f.appendChild(h),n.duration_=void 0!==i.duration?i.duration:250,n}return Po(e,t),e.prototype.handleClick_=function(t,e){e.preventDefault(),this.zoomByDelta_(t)},e.prototype.zoomByDelta_=function(t){var e=this.getMap().getView();if(e){var n=e.getZoom();if(void 0!==n){var i=e.getConstrainedZoom(n+t);this.duration_>0?(e.getAnimating()&&e.cancelAnimations(),e.animate({zoom:i,duration:this.duration_,easing:dn})):e.setZoom(i)}}},e}(po);var Mo=function(){function t(t,e,n){this.decay_=t,this.minVelocity_=e,this.delay_=n,this.points_=[],this.angle_=0,this.initialVelocity_=0}return t.prototype.begin=function(){this.points_.length=0,this.angle_=0,this.initialVelocity_=0},t.prototype.update=function(t,e){this.points_.push(t,e,Date.now())},t.prototype.end=function(){if(this.points_.length<6)return!1;var t=Date.now()-this.delay_,e=this.points_.length-3;if(this.points_[e+2]<t)return!1;for(var n=e-3;n>0&&this.points_[n+2]>t;)n-=3;var i=this.points_[e+2]-this.points_[n+2];if(i<1e3/60)return!1;var o=this.points_[e]-this.points_[n],r=this.points_[e+1]-this.points_[n+1];return this.angle_=Math.atan2(r,o),this.initialVelocity_=Math.sqrt(o*o+r*r)/i,this.initialVelocity_>this.minVelocity_},t.prototype.getDistance=function(){return(this.minVelocity_-this.initialVelocity_)/this.decay_},t.prototype.getAngle=function(){return this.angle_},t}(),Lo=\"active\",Ao=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Io(t,e,n,i){var o=t.getZoom();if(void 0!==o){var r=t.getConstrainedZoom(o+e),s=t.getResolutionForZoom(r);t.getAnimating()&&t.cancelAnimations(),t.animate({resolution:s,anchor:n,duration:void 0!==i?i:250,easing:dn})}}var Fo=function(t){function e(e){var n=t.call(this)||this;return e.handleEvent&&(n.handleEvent=e.handleEvent),n.map_=null,n.setActive(!0),n}return Ao(e,t),e.prototype.getActive=function(){return this.get(Lo)},e.prototype.getMap=function(){return this.map_},e.prototype.handleEvent=function(t){return!0},e.prototype.setActive=function(t){this.set(Lo,t)},e.prototype.setMap=function(t){this.map_=t},e}(k),Do=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function jo(t){var e=!1;if(t.type==nt.DBLCLICK){var n=t.originalEvent,i=t.map,o=t.coordinate,r=n.shiftKey?-this.delta_:this.delta_;Io(i.getView(),r,o,this.duration_),t.preventDefault(),e=!0}return!e}var No=function(t){function e(e){var n=t.call(this,{handleEvent:jo})||this,i=e||{};return n.delta_=i.delta?i.delta:1,n.duration_=void 0!==i.duration?i.duration:250,n}return Do(e,t),e}(Fo),ko=function(t){var e=t.originalEvent;return e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},zo=function(t){return t.target.getTargetElement()===document.activeElement},Go=C,Ko=function(t){var e=t.originalEvent;return 0==e.button&&!(q&&Q&&e.ctrlKey)},Uo=function(t){var e=t.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&!e.shiftKey},Xo=function(t){var e=t.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},Yo=function(t){var e=t.originalEvent.target.tagName;return\"INPUT\"!==e&&\"SELECT\"!==e&&\"TEXTAREA\"!==e},Zo=function(t){var e=t.pointerEvent;return pe(void 0!==e,56),\"mouse\"==e.pointerType},Wo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Vo(t){for(var e=t.length,n=0,i=0,o=0;o<e;o++)n+=t[o].clientX,i+=t[o].clientY;return[n/e,i/e]}var Ho=function(t){function e(e){var n=this,i=e||{};return n=t.call(this,i)||this,i.handleDownEvent&&(n.handleDownEvent=i.handleDownEvent),i.handleDragEvent&&(n.handleDragEvent=i.handleDragEvent),i.handleMoveEvent&&(n.handleMoveEvent=i.handleMoveEvent),i.handleUpEvent&&(n.handleUpEvent=i.handleUpEvent),i.stopDown&&(n.stopDown=i.stopDown),n.handlingDownUpSequence=!1,n.trackedPointers_={},n.targetPointers=[],n}return Wo(e,t),e.prototype.handleDownEvent=function(t){return!1},e.prototype.handleDragEvent=function(t){},e.prototype.handleEvent=function(t){if(!t.pointerEvent)return!0;var e=!1;if(this.updateTrackedPointers_(t),this.handlingDownUpSequence){if(t.type==nt.POINTERDRAG)this.handleDragEvent(t);else if(t.type==nt.POINTERUP){var n=this.handleUpEvent(t);this.handlingDownUpSequence=n&&this.targetPointers.length>0}}else if(t.type==nt.POINTERDOWN){var i=this.handleDownEvent(t);i&&t.preventDefault(),this.handlingDownUpSequence=i,e=this.stopDown(i)}else t.type==nt.POINTERMOVE&&this.handleMoveEvent(t);return!e},e.prototype.handleMoveEvent=function(t){},e.prototype.handleUpEvent=function(t){return!1},e.prototype.stopDown=function(t){return t},e.prototype.updateTrackedPointers_=function(t){if(function(t){var e=t.type;return e===nt.POINTERDOWN||e===nt.POINTERDRAG||e===nt.POINTERUP}(t)){var e=t.pointerEvent,n=e.pointerId.toString();t.type==nt.POINTERUP?delete this.trackedPointers_[n]:t.type==nt.POINTERDOWN?this.trackedPointers_[n]=e:n in this.trackedPointers_&&(this.trackedPointers_[n]=e),this.targetPointers=d(this.trackedPointers_)}},e}(Fo),Bo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),qo=function(t){function e(e){var n=t.call(this,{stopDown:x})||this,i=e||{};return n.kinetic_=i.kinetic,n.lastCentroid=null,n.lastPointersCount_,n.panning_=!1,n.condition_=i.condition?i.condition:Uo,n.noKinetic_=!1,n}return Bo(e,t),e.prototype.handleDragEvent=function(t){var e,n,i=this.targetPointers,o=Vo(i);if(i.length==this.lastPointersCount_){if(this.kinetic_&&this.kinetic_.update(o[0],o[1]),this.lastCentroid){var r=[this.lastCentroid[0]-o[0],o[1]-this.lastCentroid[1]],s=t.map.getView();e=r,n=s.getResolution(),e[0]*=n,e[1]*=n,pn(r,s.getRotation()),s.adjustCenter(r)}}else this.kinetic_&&this.kinetic_.begin();this.lastCentroid=o,this.lastPointersCount_=i.length},e.prototype.handleUpEvent=function(t){var e=t.map,n=e.getView();if(0===this.targetPointers.length){if(!this.noKinetic_&&this.kinetic_&&this.kinetic_.end()){var i=this.kinetic_.getDistance(),o=this.kinetic_.getAngle(),r=n.getCenter(),s=e.getPixelFromCoordinate(r),a=e.getCoordinateFromPixel([s[0]-i*Math.cos(o),s[1]-i*Math.sin(o)]);n.animate({center:n.getConstrainedCenter(a),duration:500,easing:dn})}return this.panning_&&(this.panning_=!1,n.endInteraction()),!1}return this.kinetic_&&this.kinetic_.begin(),this.lastCentroid=null,!0},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>0&&this.condition_(t)){var e=t.map.getView();return this.lastCentroid=null,e.getAnimating()&&e.cancelAnimations(),this.panning_||(this.panning_=!0,this.getMap().getView().beginInteraction()),this.kinetic_&&this.kinetic_.begin(),this.noKinetic_=this.targetPointers.length>1,!0}return!1},e}(Ho),Qo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),$o=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this,{stopDown:x})||this).condition_=i.condition?i.condition:ko,n.lastAngle_=void 0,n.duration_=void 0!==i.duration?i.duration:250,n}return Qo(e,t),e.prototype.handleDragEvent=function(t){if(Zo(t)){var e=t.map,n=e.getView();if(n.getConstraints().rotation!==on){var i=e.getSize(),o=t.pixel,r=Math.atan2(i[1]/2-o[1],o[0]-i[0]/2);if(void 0!==this.lastAngle_){var s=r-this.lastAngle_;n.adjustRotation(-s)}this.lastAngle_=r}}},e.prototype.handleUpEvent=function(t){return!Zo(t)||(t.map.getView().endInteraction(this.duration_),!1)},e.prototype.handleDownEvent=function(t){return!!Zo(t)&&(!(!Ko(t)||!this.condition_(t))&&(t.map.getView().beginInteraction(),this.lastAngle_=void 0,!0))},e}(Ho),Jo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),tr=function(t){function e(e){var n=t.call(this)||this;return n.geometry_=null,n.element_=document.createElement(\"div\"),n.element_.style.position=\"absolute\",n.element_.className=\"ol-box \"+e,n.map_=null,n.startPixel_=null,n.endPixel_=null,n}return Jo(e,t),e.prototype.disposeInternal=function(){this.setMap(null)},e.prototype.render_=function(){var t=this.startPixel_,e=this.endPixel_,n=this.element_.style;n.left=Math.min(t[0],e[0])+\"px\",n.top=Math.min(t[1],e[1])+\"px\",n.width=Math.abs(e[0]-t[0])+\"px\",n.height=Math.abs(e[1]-t[1])+\"px\"},e.prototype.setMap=function(t){if(this.map_){this.map_.getOverlayContainer().removeChild(this.element_);var e=this.element_.style;e.left=e.top=e.width=e.height=\"inherit\"}this.map_=t,this.map_&&this.map_.getOverlayContainer().appendChild(this.element_)},e.prototype.setPixels=function(t,e){this.startPixel_=t,this.endPixel_=e,this.createOrUpdateGeometry(),this.render_()},e.prototype.createOrUpdateGeometry=function(){var t=this.startPixel_,e=this.endPixel_,n=[t,[t[0],e[1]],e,[e[0],t[1]]].map(this.map_.getCoordinateFromPixel,this.map_);n[4]=n[0].slice(),this.geometry_?this.geometry_.setCoordinates([n]):this.geometry_=new Xi([n])},e.prototype.getGeometry=function(){return this.geometry_},e}(w),er=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),nr=\"boxstart\",ir=\"boxdrag\",or=\"boxend\",rr=function(t){function e(e,n,i){var o=t.call(this,e)||this;return o.coordinate=n,o.mapBrowserEvent=i,o}return er(e,t),e}(R),sr=function(t){function e(e){var n=t.call(this)||this,i=e||{};return n.box_=new tr(i.className||\"ol-dragbox\"),n.minArea_=void 0!==i.minArea?i.minArea:64,n.onBoxEnd_=i.onBoxEnd?i.onBoxEnd:O,n.startPixel_=null,n.condition_=i.condition?i.condition:Go,n.boxEndCondition_=i.boxEndCondition?i.boxEndCondition:n.defaultBoxEndCondition,n}return er(e,t),e.prototype.defaultBoxEndCondition=function(t,e,n){var i=n[0]-e[0],o=n[1]-e[1];return i*i+o*o>=this.minArea_},e.prototype.getGeometry=function(){return this.box_.getGeometry()},e.prototype.handleDragEvent=function(t){Zo(t)&&(this.box_.setPixels(this.startPixel_,t.pixel),this.dispatchEvent(new rr(ir,t.coordinate,t)))},e.prototype.handleUpEvent=function(t){return!Zo(t)||(this.box_.setMap(null),this.boxEndCondition_(t,this.startPixel_,t.pixel)&&(this.onBoxEnd_(t),this.dispatchEvent(new rr(or,t.coordinate,t))),!1)},e.prototype.handleDownEvent=function(t){return!!Zo(t)&&(!(!Ko(t)||!this.condition_(t))&&(this.startPixel_=t.pixel,this.box_.setMap(t.map),this.box_.setPixels(this.startPixel_,this.startPixel_),this.dispatchEvent(new rr(nr,t.coordinate,t)),!0))},e}(Ho),ar=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function ur(){var t,e,n=this.getMap(),i=n.getView(),o=n.getSize(),r=this.getGeometry().getExtent();if(this.out_){var s=i.calculateExtent(o),a=(t=[n.getPixelFromCoordinate(Ue(r)),n.getPixelFromCoordinate(qe(r))],ke(De(e),t));!function(t,e){var n=(t[2]-t[0])/2*(e-1),i=(t[3]-t[1])/2*(e-1);t[0]-=n,t[2]+=n,t[1]-=i,t[3]+=i}(s,1/i.getResolutionForExtent(a,o)),r=s}var u=i.getConstrainedResolution(i.getResolutionForExtent(r,o)),l=i.getConstrainedCenter(Ye(r),u);i.animate({resolution:u,center:l,duration:this.duration_,easing:dn})}var lr=function(t){function e(e){var n=this,i=e||{},o=i.condition?i.condition:Xo;return(n=t.call(this,{condition:o,className:i.className||\"ol-dragzoom\",onBoxEnd:ur})||this).duration_=void 0!==i.duration?i.duration:200,n.out_=void 0!==i.out&&i.out,n}return ar(e,t),e}(sr),cr={LEFT:37,UP:38,RIGHT:39,DOWN:40},hr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function pr(t){var e=!1;if(t.type==M.KEYDOWN){var n=t.originalEvent.keyCode;if(this.condition_(t)&&(n==cr.DOWN||n==cr.LEFT||n==cr.RIGHT||n==cr.UP)){var i=t.map.getView(),o=i.getResolution()*this.pixelDelta_,r=0,s=0;n==cr.DOWN?s=-o:n==cr.LEFT?r=-o:n==cr.RIGHT?r=o:s=o;var a=[r,s];pn(a,i.getRotation()),function(t,e,n){var i=t.getCenter();if(i){var o=[i[0]+e[0],i[1]+e[1]];t.animate_({duration:void 0!==n?n:250,easing:vn,center:t.getConstrainedCenter(o)})}}(i,a,this.duration_),t.preventDefault(),e=!0}}return!e}var fr=function(t){function e(e){var n=t.call(this,{handleEvent:pr})||this,i=e||{};return n.defaultCondition_=function(t){return Uo(t)&&Yo(t)},n.condition_=void 0!==i.condition?i.condition:n.defaultCondition_,n.duration_=void 0!==i.duration?i.duration:100,n.pixelDelta_=void 0!==i.pixelDelta?i.pixelDelta:128,n}return hr(e,t),e}(Fo),dr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function _r(t){var e=!1;if(t.type==M.KEYDOWN||t.type==M.KEYPRESS){var n=t.originalEvent.charCode;if(this.condition_(t)&&(n==\"+\".charCodeAt(0)||n==\"-\".charCodeAt(0))){var i=t.map,o=n==\"+\".charCodeAt(0)?this.delta_:-this.delta_;Io(i.getView(),o,void 0,this.duration_),t.preventDefault(),e=!0}}return!e}var vr=function(t){function e(e){var n=t.call(this,{handleEvent:_r})||this,i=e||{};return n.condition_=i.condition?i.condition:Yo,n.delta_=i.delta?i.delta:1,n.duration_=void 0!==i.duration?i.duration:100,n}return dr(e,t),e}(Fo),yr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),gr=\"trackpad\",mr=\"wheel\",Er=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this,i)||this).totalDelta_=0,n.lastDelta_=0,n.maxDelta_=void 0!==i.maxDelta?i.maxDelta:1,n.duration_=void 0!==i.duration?i.duration:250,n.timeout_=void 0!==i.timeout?i.timeout:80,n.useAnchor_=void 0===i.useAnchor||i.useAnchor,n.condition_=i.condition?i.condition:Go,n.lastAnchor_=null,n.startTime_=void 0,n.timeoutId_,n.mode_=void 0,n.trackpadEventGap_=400,n.trackpadTimeoutId_,n.trackpadDeltaPerZoom_=300,n}return yr(e,t),e.prototype.endInteraction_=function(){this.trackpadTimeoutId_=void 0,this.getMap().getView().endInteraction(void 0,Math.sign(this.lastDelta_),this.lastAnchor_)},e.prototype.handleEvent=function(t){if(!this.condition_(t))return!0;var e=t.type;if(e!==M.WHEEL&&e!==M.MOUSEWHEEL)return!0;t.preventDefault();var n,i=t.map,o=t.originalEvent;if(this.useAnchor_&&(this.lastAnchor_=t.coordinate),t.type==M.WHEEL?(n=o.deltaY,H&&o.deltaMode===WheelEvent.DOM_DELTA_PIXEL&&(n/=$),o.deltaMode===WheelEvent.DOM_DELTA_LINE&&(n*=40)):t.type==M.MOUSEWHEEL&&(n=-o.wheelDeltaY,B&&(n/=3)),0===n)return!1;this.lastDelta_=n;var r=Date.now();if(void 0===this.startTime_&&(this.startTime_=r),(!this.mode_||r-this.startTime_>this.trackpadEventGap_)&&(this.mode_=Math.abs(n)<4?gr:mr),this.mode_===gr){var s=i.getView();return this.trackpadTimeoutId_?clearTimeout(this.trackpadTimeoutId_):s.beginInteraction(),this.trackpadTimeoutId_=setTimeout(this.endInteraction_.bind(this),this.trackpadEventGap_),s.adjustZoom(-n/this.trackpadDeltaPerZoom_,this.lastAnchor_),this.startTime_=r,!1}this.totalDelta_+=n;var a=Math.max(this.timeout_-(r-this.startTime_),0);return clearTimeout(this.timeoutId_),this.timeoutId_=setTimeout(this.handleWheelZoom_.bind(this,i),a),!1},e.prototype.handleWheelZoom_=function(t){var e=t.getView();e.getAnimating()&&e.cancelAnimations(),Io(e,-ge(this.totalDelta_,-this.maxDelta_,this.maxDelta_),this.lastAnchor_,this.duration_),this.mode_=void 0,this.totalDelta_=0,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_=void 0},e.prototype.setMouseAnchor=function(t){this.useAnchor_=t,t||(this.lastAnchor_=null)},e}(Fo),br=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Tr=function(t){function e(e){var n=this,i=e||{},o=i;return o.stopDown||(o.stopDown=x),(n=t.call(this,o)||this).anchor_=null,n.lastAngle_=void 0,n.rotating_=!1,n.rotationDelta_=0,n.threshold_=void 0!==i.threshold?i.threshold:.3,n.duration_=void 0!==i.duration?i.duration:250,n}return br(e,t),e.prototype.handleDragEvent=function(t){var e=0,n=this.targetPointers[0],i=this.targetPointers[1],o=Math.atan2(i.clientY-n.clientY,i.clientX-n.clientX);if(void 0!==this.lastAngle_){var r=o-this.lastAngle_;this.rotationDelta_+=r,!this.rotating_&&Math.abs(this.rotationDelta_)>this.threshold_&&(this.rotating_=!0),e=r}this.lastAngle_=o;var s=t.map,a=s.getView();if(a.getConstraints().rotation!==on){var u=s.getViewport().getBoundingClientRect(),l=Vo(this.targetPointers);l[0]-=u.left,l[1]-=u.top,this.anchor_=s.getCoordinateFromPixel(l),this.rotating_&&(s.render(),a.adjustRotation(e,this.anchor_))}},e.prototype.handleUpEvent=function(t){return!(this.targetPointers.length<2)||(t.map.getView().endInteraction(this.duration_),!1)},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var e=t.map;return this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.handlingDownUpSequence||e.getView().beginInteraction(),!0}return!1},e}(Ho),wr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Cr=function(t){function e(e){var n=this,i=e||{},o=i;return o.stopDown||(o.stopDown=x),(n=t.call(this,o)||this).anchor_=null,n.duration_=void 0!==i.duration?i.duration:400,n.lastDistance_=void 0,n.lastScaleDelta_=1,n}return wr(e,t),e.prototype.handleDragEvent=function(t){var e=1,n=this.targetPointers[0],i=this.targetPointers[1],o=n.clientX-i.clientX,r=n.clientY-i.clientY,s=Math.sqrt(o*o+r*r);void 0!==this.lastDistance_&&(e=this.lastDistance_/s),this.lastDistance_=s;var a=t.map,u=a.getView();1!=e&&(this.lastScaleDelta_=e);var l=a.getViewport().getBoundingClientRect(),c=Vo(this.targetPointers);c[0]-=l.left,c[1]-=l.top,this.anchor_=a.getCoordinateFromPixel(c),a.render(),u.adjustResolution(e,this.anchor_)},e.prototype.handleUpEvent=function(t){if(this.targetPointers.length<2){var e=t.map.getView(),n=this.lastScaleDelta_>1?1:-1;return e.endInteraction(this.duration_,n),!1}return!0},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var e=t.map;return this.anchor_=null,this.lastDistance_=void 0,this.lastScaleDelta_=1,this.handlingDownUpSequence||e.getView().beginInteraction(),!0}return!1},e}(Ho);var xr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Or=function(t){function e(e,n,i,o,r){var s=t.call(this,e)||this;return s.inversePixelTransform=n,s.frameState=i,s.context=o,s.glContext=r,s}return xr(e,t),e}(R),Rr=/^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i,Pr=/^([a-z]*)$/i;function Sr(t){return\"string\"==typeof t?t:function(t){var e=t[0];e!=(0|e)&&(e=e+.5|0);var n=t[1];n!=(0|n)&&(n=n+.5|0);var i=t[2];i!=(0|i)&&(i=i+.5|0);var o=void 0===t[3]?1:t[3];return\"rgba(\"+e+\",\"+n+\",\"+i+\",\"+o+\")\"}(t)}!function(){var t={},e=0}();function Mr(t){return t[0]=ge(t[0]+.5|0,0,255),t[1]=ge(t[1]+.5|0,0,255),t[2]=ge(t[2]+.5|0,0,255),t[3]=ge(t[3],0,1),t}var Lr=function(){function t(){this.cache_={},this.cacheSize_=0,this.maxCacheSize_=32}return t.prototype.clear=function(){this.cache_={},this.cacheSize_=0},t.prototype.canExpireCache=function(){return this.cacheSize_>this.maxCacheSize_},t.prototype.expire=function(){if(this.canExpireCache()){var t=0;for(var e in this.cache_){var n=this.cache_[e];0!=(3&t++)||n.hasListener()||(delete this.cache_[e],--this.cacheSize_)}}},t.prototype.get=function(t,e,n){var i=Ar(t,e,n);return i in this.cache_?this.cache_[i]:null},t.prototype.set=function(t,e,n,i){var o=Ar(t,e,n);this.cache_[o]=i,++this.cacheSize_},t.prototype.setSize=function(t){this.maxCacheSize_=t,this.expire()},t}();function Ar(t,e,n){return e+\":\"+t+\":\"+(n?Sr(n):\"null\")}var Ir=new Lr,Fr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Dr(t,e){Ir.expire()}var jr=function(t){function e(e){var n=t.call(this)||this;return n.map_=e,n.layerRenderers_={},n.layerRendererListeners_={},n}return Fr(e,t),e.prototype.dispatchRenderEvent=function(t,e){i()},e.prototype.calculateMatrices2D=function(t){var e=t.viewState,n=t.coordinateToPixelTransform,i=t.pixelToCoordinateTransform;oi(n,t.size[0]/2,t.size[1]/2,1/e.resolution,-1/e.resolution,-e.rotation,-e.center[0],-e.center[1]),ri(i,n)},e.prototype.removeLayerRenderers=function(){for(var t in this.layerRenderers_)this.removeLayerRendererByKey_(t).dispose()},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i,o,s,a){var u,l=e.viewState,c=l.resolution;function h(t,n,s){if(!(r(n)in e.skippedFeatureUids)||t)return i.call(o,n,t?s:null)}var p=l.projection,f=t;if(p.canWrapX()){var d=p.getExtent(),_=Qe(d),v=t[0];if(v<d[0]||v>d[2])f=[v+_*Math.ceil((d[0]-v)/_),t[1]]}var y,g=e.layerStatesArray;for(y=g.length-1;y>=0;--y){var m=g[y],E=m.layer;if(Eo(m,c)&&s.call(a,E)){var b=this.getLayerRenderer(E),T=E.getSource();if(b&&T){var w=h.bind(null,m.managed);u=b.forEachFeatureAtCoordinate(T.getWrapX()?f:t,e,n,w)}if(u)return u}}},e.prototype.forEachLayerAtPixel=function(t,e,n,o,r){return i()},e.prototype.hasFeatureAtCoordinate=function(t,e,n,i,o){return void 0!==this.forEachFeatureAtCoordinate(t,e,n,C,this,i,o)},e.prototype.getLayerRenderer=function(t){var e=r(t);if(e in this.layerRenderers_)return this.layerRenderers_[e];var n=t.getRenderer();return n?(this.layerRenderers_[e]=n,this.layerRendererListeners_[e]=m(n,M.CHANGE,this.handleLayerRendererChange_,this),n):null},e.prototype.getLayerRenderers=function(){return this.layerRenderers_},e.prototype.getMap=function(){return this.map_},e.prototype.handleLayerRendererChange_=function(){this.map_.render()},e.prototype.removeLayerRendererByKey_=function(t){var e=this.layerRenderers_[t];return delete this.layerRenderers_[t],T(this.layerRendererListeners_[t]),delete this.layerRendererListeners_[t],e},e.prototype.renderFrame=function(t){i()},e.prototype.scheduleExpireIconCache=function(t){Ir.canExpireCache()&&t.postRenderFunctions.push(Dr)},e.prototype.scheduleRemoveUnusedLayerRenderers=function(t){var e=t.layerStatesArray.reduce(function(t,e){return t[r(e.layer)]=e,t},{}),n=function(n){n in e||t.postRenderFunctions.push(function(){this.removeLayerRendererByKey_(n).dispose()}.bind(i))},i=this;for(var o in this.layerRenderers_)n(o)},e}(w),Nr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),kr=function(t){function e(e){var n=t.call(this,e)||this;n.element_=document.createElement(\"div\");var i=n.element_.style;i.position=\"absolute\",i.width=\"100%\",i.height=\"100%\",i.zIndex=\"0\",n.element_.className=_o+\" ol-layers\";var o=e.getViewport();return o.insertBefore(n.element_,o.firstChild||null),n.children_=[],n.renderedVisible_=!0,n}return Nr(e,t),e.prototype.dispatchRenderEvent=function(t,e){var n=this.getMap();if(n.hasListener(t)){var i=new Or(t,void 0,e);n.dispatchEvent(i)}},e.prototype.renderFrame=function(t){if(t){this.calculateMatrices2D(t),this.dispatchRenderEvent(ue,t);var e=t.layerStatesArray,n=t.viewState.resolution;this.children_.length=0;for(var i=0,o=e.length;i<o;++i){var r=e[i];if(Eo(r,n)&&r.sourceState==no.READY){var s=r.layer.render(t);if(s){var a=r.zIndex;a!==s.style.zIndex&&(s.style.zIndex=a),this.children_.push(s)}}}!function(t,e){for(var n=t.childNodes,i=0;;++i){var o=n[i],r=e[i];if(!o&&!r)break;o!==r&&(o?r?t.insertBefore(r,o):(t.removeChild(o),--i):t.appendChild(r))}}(this.element_,this.children_),this.dispatchRenderEvent(le,t),this.renderedVisible_||(this.element_.style.display=\"\",this.renderedVisible_=!0),this.scheduleRemoveUnusedLayerRenderers(t),this.scheduleExpireIconCache(t)}else this.renderedVisible_&&(this.element_.style.display=\"none\",this.renderedVisible_=!1)},e.prototype.forEachLayerAtPixel=function(t,e,n,i,o){for(var r=e.viewState.resolution,s=e.layerStatesArray,a=s.length-1;a>=0;--a){var u=s[a],l=u.layer;if(Eo(u,r)&&o(l)){var c=this.getLayerRenderer(l);if(!c)continue;var h=c.getDataAtPixel(t,e,n);if(h){var p=i(l,h);if(p)return p}}}},e}(jr),zr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Gr=function(t){function e(e){return(e=p({},e)).controls||(e.controls=function(t){var e=t||{},n=new U;return(void 0===e.zoom||e.zoom)&&n.push(new So(e.zoomOptions)),(void 0===e.rotate||e.rotate)&&n.push(new Ro(e.rotateOptions)),(void 0===e.attribution||e.attribution)&&n.push(new Co(e.attributionOptions)),n}()),e.interactions||(e.interactions=function(t){var e=t||{},n=new U,i=new Mo(-.005,.05,100);return(void 0===e.altShiftDragRotate||e.altShiftDragRotate)&&n.push(new $o),(void 0===e.doubleClickZoom||e.doubleClickZoom)&&n.push(new No({delta:e.zoomDelta,duration:e.zoomDuration})),(void 0===e.dragPan||e.dragPan)&&n.push(new qo({condition:e.onFocusOnly?zo:void 0,kinetic:i})),(void 0===e.pinchRotate||e.pinchRotate)&&n.push(new Tr),(void 0===e.pinchZoom||e.pinchZoom)&&n.push(new Cr({duration:e.zoomDuration})),(void 0===e.keyboard||e.keyboard)&&(n.push(new fr),n.push(new vr({delta:e.zoomDelta,duration:e.zoomDuration}))),(void 0===e.mouseWheelZoom||e.mouseWheelZoom)&&n.push(new Er({condition:e.onFocusOnly?zo:void 0,duration:e.zoomDuration})),(void 0===e.shiftDragZoom||e.shiftDragZoom)&&n.push(new lr({duration:e.zoomDuration})),n}()),t.call(this,e)||this}return zr(e,t),e.prototype.createRenderer=function(){return new kr(this)},e}(uo),Kr=\"preload\",Ur=\"useInterimTilesOnError\",Xr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Yr=function(t){function e(e){var n=this,i=e||{},o=p({},i);return delete o.preload,delete o.useInterimTilesOnError,(n=t.call(this,o)||this).setPreload(void 0!==i.preload?i.preload:0),n.setUseInterimTilesOnError(void 0===i.useInterimTilesOnError||i.useInterimTilesOnError),n}return Xr(e,t),e.prototype.getPreload=function(){return this.get(Kr)},e.prototype.setPreload=function(t){this.set(Kr,t)},e.prototype.getUseInterimTilesOnError=function(){return this.get(Ur)},e.prototype.setUseInterimTilesOnError=function(t){this.set(Ur,t)},e}(bo),Zr=function(){function t(t,e,n,i){this.minX=t,this.maxX=e,this.minY=n,this.maxY=i}return t.prototype.contains=function(t){return this.containsXY(t[1],t[2])},t.prototype.containsTileRange=function(t){return this.minX<=t.minX&&t.maxX<=this.maxX&&this.minY<=t.minY&&t.maxY<=this.maxY},t.prototype.containsXY=function(t,e){return this.minX<=t&&t<=this.maxX&&this.minY<=e&&e<=this.maxY},t.prototype.equals=function(t){return this.minX==t.minX&&this.minY==t.minY&&this.maxX==t.maxX&&this.maxY==t.maxY},t.prototype.extend=function(t){t.minX<this.minX&&(this.minX=t.minX),t.maxX>this.maxX&&(this.maxX=t.maxX),t.minY<this.minY&&(this.minY=t.minY),t.maxY>this.maxY&&(this.maxY=t.maxY)},t.prototype.getHeight=function(){return this.maxY-this.minY+1},t.prototype.getSize=function(){return[this.getWidth(),this.getHeight()]},t.prototype.getWidth=function(){return this.maxX-this.minX+1},t.prototype.intersects=function(t){return this.minX<=t.maxX&&this.maxX>=t.minX&&this.minY<=t.maxY&&this.maxY>=t.minY},t}();function Wr(t,e,n,i,o){return void 0!==o?(o.minX=t,o.maxX=e,o.minY=n,o.maxY=i,o):new Zr(t,e,n,i)}var Vr=Zr,Hr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Br=function(t){function e(e){var n=t.call(this)||this;return n.highWaterMark=void 0!==e?e:2048,n.count_=0,n.entries_={},n.oldest_=null,n.newest_=null,n}return Hr(e,t),e.prototype.canExpireCache=function(){return this.getCount()>this.highWaterMark},e.prototype.clear=function(){this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null,this.dispatchEvent(M.CLEAR)},e.prototype.containsKey=function(t){return this.entries_.hasOwnProperty(t)},e.prototype.forEach=function(t){for(var e=this.oldest_;e;)t(e.value_,e.key_,this),e=e.newer},e.prototype.get=function(t,e){var n=this.entries_[t];return pe(void 0!==n,15),n===this.newest_?n.value_:(n===this.oldest_?(this.oldest_=this.oldest_.newer,this.oldest_.older=null):(n.newer.older=n.older,n.older.newer=n.newer),n.newer=null,n.older=this.newest_,this.newest_.newer=n,this.newest_=n,n.value_)},e.prototype.remove=function(t){var e=this.entries_[t];return pe(void 0!==e,15),e===this.newest_?(this.newest_=e.older,this.newest_&&(this.newest_.newer=null)):e===this.oldest_?(this.oldest_=e.newer,this.oldest_&&(this.oldest_.older=null)):(e.newer.older=e.older,e.older.newer=e.newer),delete this.entries_[t],--this.count_,e.value_},e.prototype.getCount=function(){return this.count_},e.prototype.getKeys=function(){var t,e=new Array(this.count_),n=0;for(t=this.newest_;t;t=t.older)e[n++]=t.key_;return e},e.prototype.getValues=function(){var t,e=new Array(this.count_),n=0;for(t=this.newest_;t;t=t.older)e[n++]=t.value_;return e},e.prototype.peekLast=function(){return this.oldest_.value_},e.prototype.peekLastKey=function(){return this.oldest_.key_},e.prototype.peekFirstKey=function(){return this.newest_.key_},e.prototype.pop=function(){var t=this.oldest_;return delete this.entries_[t.key_],t.newer&&(t.newer.older=null),this.oldest_=t.newer,this.oldest_||(this.newest_=null),--this.count_,t.value_},e.prototype.replace=function(t,e){this.get(t),this.entries_[t].value_=e},e.prototype.set=function(t,e){pe(!(t in this.entries_),16);var n={key_:t,newer:null,older:this.newest_,value_:e};this.newest_?this.newest_.newer=n:this.oldest_=n,this.newest_=n,this.entries_[t]=n,++this.count_},e.prototype.setSize=function(t){this.highWaterMark=t},e}(S),qr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Qr=new(function(t){function e(e){var n=t.call(this,e)||this;return n.consumers={},n}return qr(e,t),e.prototype.clear=function(){t.prototype.clear.call(this),this.consumers={}},e.prototype.get=function(e,n){var i=t.prototype.get.call(this,e),o=r(n);return o in this.consumers||(this.consumers[o]={}),this.consumers[o][e]=!0,i},e.prototype.prune=function(){t:for(;this.canExpireCache();){var t=this.peekLastKey();for(var e in this.consumers)if(t in this.consumers[e])break t;var n=this.pop();for(var e in n.width=n.height=0,this.consumers)delete this.consumers[e][t]}},e.prototype.release=function(t){delete this.consumers[r(t)]},e}(Br)),$r={},Jr=null,ts={};!function(){var t,e,n=60,i=$r,o=\"32px \",r=[\"monospace\",\"serif\"],s=r.length,a=\"wmytzilWMYTZIL@#/&?$%10\";function u(t){for(var n=es(),i=100;i<=700;i+=300){for(var u=i+\" \",l=!0,c=0;c<s;++c){var h=r[c];if(n.font=u+o+h,e=n.measureText(a).width,t!=h){n.font=u+o+t+\",\"+h;var p=n.measureText(a).width;l=l&&p!=e}}if(l)return!0}return!1}function l(){var e=!0;for(var o in i)i[o]<n&&(u(o)?(i[o]=n,f(ts),Jr=null,Qr.clear()):(++i[o],e=!1));e&&(clearInterval(t),t=void 0)}}();function es(){return Jr||(Jr=qi(1,1)),Jr}var ns,is;is=ts;function os(t,e,n,i){0!==e&&(t.translate(n,i),t.rotate(e),t.translate(-n,-i))}var rs=0,ss=2,as=3,us=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ls=function(t){function e(e){var n=t.call(this)||this;return n.layer_=e,n}return us(e,t),e.prototype.prepareFrame=function(t,e){return i()},e.prototype.renderFrame=function(t,e){return i()},e.prototype.loadedTileCallback=function(t,e,n){t[e]||(t[e]={}),t[e][n.tileCoord.toString()]=n},e.prototype.createLoadedTileFinder=function(t,e,n){return function(i,o){var r=this.loadedTileCallback.bind(this,n,i);return t.forEachLoadedTile(e,i,o,r)}.bind(this)},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i){},e.prototype.getDataAtPixel=function(t,e,n){return i()},e.prototype.getLayer=function(){return this.layer_},e.prototype.handleImageChange_=function(t){t.target.getState()===ss&&this.renderIfReadyAndVisible()},e.prototype.hasFeatureAtCoordinate=function(t,e){return!1},e.prototype.loadImage=function(t){var e=t.getState();return e!=ss&&e!=as&&m(t,M.CHANGE,this.handleImageChange_,this),e==rs&&(t.load(),e=t.getState()),e==ss},e.prototype.renderIfReadyAndVisible=function(){var t=this.getLayer();t.getVisible()&&t.getSourceState()==no.READY&&t.changed()},e}(A),cs=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),hs=function(t){function e(e){var n=t.call(this,e)||this;n.renderedResolution,n.tempTransform_=[1,0,0,1,0,0],n.pixelTransform_=[1,0,0,1,0,0],n.inversePixelTransform_=[1,0,0,1,0,0],n.context=qi();var i=n.context.canvas;return i.style.position=\"absolute\",i.style.transformOrigin=\"top left\",i.className=n.getLayer().getClassName(),n}return cs(e,t),e.prototype.disposeInternal=function(){this.context.canvas.width=this.context.canvas.height=0,t.prototype.disposeInternal.call(this)},e.prototype.clip=function(t,e,n){var i=e.pixelRatio,o=e.size[0]*i/2,r=e.size[1]*i/2,s=e.viewState.rotation,a=Be(n),u=qe(n),l=Xe(n),c=Ue(n);ii(e.coordinateToPixelTransform,a),ii(e.coordinateToPixelTransform,u),ii(e.coordinateToPixelTransform,l),ii(e.coordinateToPixelTransform,c),t.save(),os(t,-s,o,r),t.beginPath(),t.moveTo(a[0]*i,a[1]*i),t.lineTo(u[0]*i,u[1]*i),t.lineTo(l[0]*i,l[1]*i),t.lineTo(c[0]*i,c[1]*i),t.clip(),os(t,s,o,r)},e.prototype.clipUnrotated=function(t,e,n){var i=Be(n),o=qe(n),r=Xe(n),s=Ue(n);ii(e.coordinateToPixelTransform,i),ii(e.coordinateToPixelTransform,o),ii(e.coordinateToPixelTransform,r),ii(e.coordinateToPixelTransform,s);var a=this.inversePixelTransform_;ii(a,i),ii(a,o),ii(a,r),ii(a,s),t.save(),t.beginPath(),t.moveTo(Math.round(i[0]),Math.round(i[1])),t.lineTo(Math.round(o[0]),Math.round(o[1])),t.lineTo(Math.round(r[0]),Math.round(r[1])),t.lineTo(Math.round(s[0]),Math.round(s[1])),t.clip()},e.prototype.dispatchRenderEvent_=function(t,e,n){var i=this.getLayer();if(i.hasListener(t)){var o=new Or(t,this.inversePixelTransform_,n,e,null);i.dispatchEvent(o)}},e.prototype.preRender=function(t,e){this.dispatchRenderEvent_(se,t,e)},e.prototype.postRender=function(t,e){this.dispatchRenderEvent_(ae,t,e)},e.prototype.getRenderTransform=function(t,e,n,i){var o=t.viewState,r=e/2,s=n/2,a=t.pixelRatio/o.resolution,u=-a,l=-o.center[0]+i,c=-o.center[1];return oi(this.tempTransform_,r,s,a,u,-o.rotation,l,c)},e.prototype.getDataAtPixel=function(t,e,n){var i,o=ii(this.inversePixelTransform_,t.slice()),r=this.context;try{i=r.getImageData(Math.round(o[0]),Math.round(o[1]),1,1).data}catch(t){return\"SecurityError\"===t.name?new Uint8Array:i}return 0===i[3]?null:i},e}(ls),ps=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),fs=function(t){function e(e){var n=t.call(this,e)||this;return n.extentChanged=!0,n.renderedExtent_=null,n.renderedRevision,n.renderedTiles=[],n.newTiles_=!1,n.tmpExtent=[1/0,1/0,-1/0,-1/0],n.tmpTileRange_=new Vr(0,0,0,0),n.zDirection=0,n}return ps(e,t),e.prototype.isDrawableTile=function(t){var e=this.getLayer(),n=t.getState(),i=e.getUseInterimTilesOnError();return n==he.LOADED||n==he.EMPTY||n==he.ERROR&&!i},e.prototype.getTile=function(t,e,n,i){var o=i.pixelRatio,r=i.viewState.projection,s=this.getLayer(),a=s.getSource().getTile(t,e,n,o,r);return a.getState()==he.ERROR&&(s.getUseInterimTilesOnError()?s.getPreload()>0&&(this.newTiles_=!0):a.setState(he.LOADED)),this.isDrawableTile(a)||(a=a.getInterimTile()),a},e.prototype.loadedTileCallback=function(e,n,i){return!!this.isDrawableTile(i)&&t.prototype.loadedTileCallback.call(this,e,n,i)},e.prototype.prepareFrame=function(t,e){return!0},e.prototype.renderFrame=function(t,e){var n=this.context,i=t.viewState,o=i.projection,s=i.resolution,a=i.center,u=i.rotation,l=t.pixelRatio,c=this.getLayer(),h=c.getSource(),p=h.getRevision(),f=h.getTileGridForProjection(o),d=void 0===h.zDirection?this.zDirection:h.zDirection,_=f.getZForResolution(s,d),v=f.getResolution(_),y=t.extent;e.extent&&(y=He(y,e.extent));var g=h.getTilePixelRatio(l),m=Math.round(t.size[0]*g),E=Math.round(t.size[1]*g);u&&(m=E=Math.round(Math.sqrt(m*m+E*E)));var b=v*m/2/g,T=v*E/2/g,w=[a[0]-b,a[1]-T,a[0]+b,a[1]+T],C=f.getTileRangeForExtentAndZ(y,_),x={};x[_]={};var O=this.createLoadedTileFinder(h,o,x),R=this.tmpExtent,P=this.tmpTileRange_;this.newTiles_=!1;for(var S=C.minX;S<=C.maxX;++S)for(var M=C.minY;M<=C.maxY;++M){var L=this.getTile(_,S,M,t);if(this.isDrawableTile(L)){var A=r(this);if(L.getState()==he.LOADED){x[_][L.tileCoord.toString()]=L;var I=L.inTransition(A);this.newTiles_||!I&&-1!==this.renderedTiles.indexOf(L)||(this.newTiles_=!0)}if(1===L.getAlpha(A,t.time))continue}var F=f.getTileCoordChildTileRange(L.tileCoord,P,R),D=!1;F&&(D=O(_+1,F)),D||f.forEachTileCoordParentTileRange(L.tileCoord,O,P,R)}var j=n.canvas,N=v/s;oi(this.pixelTransform_,t.size[0]/2,t.size[1]/2,1/g,1/g,u,-m/2,-E/2),ri(this.inversePixelTransform_,this.pixelTransform_),oi(this.tempTransform_,m/2,E/2,N,N,0,-m/2,-E/2),j.width!=m||j.height!=E?(j.width=m,j.height=E):n.clearRect(0,0,m,E),e.extent&&this.clipUnrotated(n,t,e.extent),this.preRender(n,t),this.renderedTiles.length=0;var k=Object.keys(x).map(Number);k.sort(function(t,e){return t===_?1:e===_?-1:t>e?1:t<e?-1:0});for(var z=0,G=k.length;z<G;++z){var K=k[z],U=h.getTilePixelSize(K,l,o),X=f.getResolution(K)/v,Y=U[0]*X*N,Z=U[1]*X*N,W=f.getTileCoordForCoordAndZ(Be(w),K),V=f.getTileCoordExtent(W),H=ii(this.tempTransform_,[g*(V[0]-w[0])/v,g*(w[3]-V[3])/v]),B=g*h.getGutterForProjection(o),q=x[K];for(var Q in q){var $=(L=q[Q]).tileCoord,J=H[0]-(W[1]-$[1])*Y,tt=Math.round(J+Y),et=H[1]-(W[2]-$[2])*Z,nt=Math.round(et+Z),it=tt-(S=Math.round(J)),ot=nt-(M=Math.round(et));this.drawTileImage(L,t,S,M,it,ot,B,_===K),this.renderedTiles.push(L),this.updateUsedTiles(t.usedTiles,h,L)}}this.renderedRevision=p,this.renderedResolution=v,this.extentChanged=!this.renderedExtent_||!je(this.renderedExtent_,w),this.renderedExtent_=w,this.manageTilePyramid(t,h,f,l,o,y,_,c.getPreload()),this.updateCacheSize_(t,h),this.scheduleExpireCache(t,h),this.postRender(n,t),e.extent&&n.restore();var rt=e.opacity;rt!==parseFloat(j.style.opacity)&&(j.style.opacity=rt);var st=\"matrix(\"+this.pixelTransform_.join(\", \")+\")\";return st!==j.style.transform&&(j.style.transform=st),j},e.prototype.drawTileImage=function(t,e,n,i,o,s,a,u){var l=this.getTileImage(t);if(l){var c=r(this),h=u?t.getAlpha(c,e.time):1,p=this.getLayer().getSource();1!==h||p.getOpaque(e.viewState.projection)||this.context.clearRect(n,i,o,s);var f=h!==this.context.globalAlpha;f&&(this.context.save(),this.context.globalAlpha=h),this.context.drawImage(l,a,a,l.width-2*a,l.height-2*a,n,i,o,s),f&&this.context.restore(),1!==h?e.animate=!0:u&&t.endTransition(c)}},e.prototype.getImage=function(){var t=this.context;return t?t.canvas:null},e.prototype.getTileImage=function(t){return t.getImage()},e.prototype.scheduleExpireCache=function(t,e){if(e.canExpireCache()){var n=function(t,e,n){var i=r(t);i in n.usedTiles&&t.expireCache(n.viewState.projection,n.usedTiles[i])}.bind(null,e);t.postRenderFunctions.push(n)}},e.prototype.updateUsedTiles=function(t,e,n){var i=r(e);i in t||(t[i]={}),t[i][n.getKey()]=!0},e.prototype.updateCacheSize_=function(t,e){var n=r(e),i=0;n in t.usedTiles&&(i+=Object.keys(t.usedTiles[n]).length),n in t.wantedTiles&&(i+=Object.keys(t.wantedTiles[n]).length);var o=e.tileCache;o.highWaterMark<i&&(o.highWaterMark=i)},e.prototype.manageTilePyramid=function(t,e,n,i,o,s,a,u,l){var c=r(e);c in t.wantedTiles||(t.wantedTiles[c]={});var h,p,f,d,_,v,y=t.wantedTiles[c],g=t.tileQueue;for(v=n.getMinZoom();v<=a;++v)for(p=n.getTileRangeForExtentAndZ(s,v,p),f=n.getResolution(v),d=p.minX;d<=p.maxX;++d)for(_=p.minY;_<=p.maxY;++_)a-v<=u?((h=e.getTile(v,d,_,i,o)).getState()==he.IDLE&&(y[h.getKey()]=!0,g.isKeyQueued(h.getKey())||g.enqueue([h,c,n.getTileCoordCenter(h.tileCoord),f])),void 0!==l&&l(h)):e.useTile(v,d,_,o)},e}(hs);fs.prototype.getLayer;var ds=fs,_s=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),vs=function(t){function e(e){return t.call(this,e)||this}return _s(e,t),e.prototype.createRenderer=function(){return new ds(this)},e}(Yr),ys=.5,gs=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ms=function(t){function e(e,n,i){var o=t.call(this)||this,r=i||{};return o.tileCoord=e,o.state=n,o.interimTile=null,o.hifi=!0,o.key=\"\",o.transition_=void 0===r.transition?250:r.transition,o.transitionStarts_={},o}return gs(e,t),e.prototype.changed=function(){this.dispatchEvent(M.CHANGE)},e.prototype.getKey=function(){return this.key+\"/\"+this.tileCoord},e.prototype.getInterimTile=function(){if(!this.interimTile)return this;var t=this.interimTile;do{if(t.getState()==he.LOADED)return this.transition_=0,t;t=t.interimTile}while(t);return this},e.prototype.refreshInterimChain=function(){if(this.interimTile){var t=this.interimTile,e=this;do{if(t.getState()==he.LOADED){t.interimTile=null;break}t.getState()==he.LOADING?e=t:t.getState()==he.IDLE?e.interimTile=t.interimTile:e=t,t=e.interimTile}while(t)}},e.prototype.getTileCoord=function(){return this.tileCoord},e.prototype.getState=function(){return this.state},e.prototype.setState=function(t){this.state=t,this.changed()},e.prototype.load=function(){i()},e.prototype.getAlpha=function(t,e){if(!this.transition_)return 1;var n=this.transitionStarts_[t];if(n){if(-1===n)return 1}else n=e,this.transitionStarts_[t]=n;var i=e-n+1e3/60;return i>=this.transition_?1:fn(i/this.transition_)},e.prototype.inTransition=function(t){return!!this.transition_&&-1!==this.transitionStarts_[t]},e.prototype.endTransition=function(t){this.transition_&&(this.transitionStarts_[t]=-1)},e}(S),Es=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function bs(){var t=qi(1,1);return t.fillStyle=\"rgba(0,0,0,0)\",t.fillRect(0,0,1,1),t.canvas}var Ts=function(t){function e(e,n,i,o,r,s){var a=t.call(this,e,n,s)||this;return a.crossOrigin_=o,a.src_=i,a.image_=new Image,null!==o&&(a.image_.crossOrigin=o),a.imageListenerKeys_=null,a.tileLoadFunction_=r,a}return Es(e,t),e.prototype.disposeInternal=function(){this.state==he.LOADING&&(this.unlistenImage_(),this.image_=bs()),this.interimTile&&this.interimTile.dispose(),this.state=he.ABORT,this.changed(),t.prototype.disposeInternal.call(this)},e.prototype.getImage=function(){return this.image_},e.prototype.getKey=function(){return this.src_},e.prototype.handleImageError_=function(){this.state=he.ERROR,this.unlistenImage_(),this.image_=bs(),this.changed()},e.prototype.handleImageLoad_=function(){var t=this.image_;t.naturalWidth&&t.naturalHeight?this.state=he.LOADED:this.state=he.EMPTY,this.unlistenImage_(),this.changed()},e.prototype.load=function(){this.state==he.ERROR&&(this.state=he.IDLE,this.image_=new Image,null!==this.crossOrigin_&&(this.image_.crossOrigin=this.crossOrigin_)),this.state==he.IDLE&&(this.state=he.LOADING,this.changed(),this.imageListenerKeys_=[E(this.image_,M.ERROR,this.handleImageError_,this),E(this.image_,M.LOAD,this.handleImageLoad_,this)],this.tileLoadFunction_(this,this.src_))},e.prototype.unlistenImage_=function(){this.imageListenerKeys_.forEach(T),this.imageListenerKeys_=null},e}(ms);function ws(t,e,n,i){return void 0!==i?(i[0]=t,i[1]=e,i[2]=n,i):[t,e,n]}function Cs(t,e,n){return t+\"/\"+e+\"/\"+n}function xs(t){return Cs(t[0],t[1],t[2])}var Os=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Rs=function(t){function e(e){return t.call(this,e)||this}return Os(e,t),e.prototype.expireCache=function(t){for(;this.canExpireCache();){if(this.peekLast().getKey()in t)break;this.pop().dispose()}},e.prototype.pruneExceptNewestZ=function(){if(0!==this.getCount()){var t=function(t){return t.split(\"/\").map(Number)}(this.peekFirstKey())[0];this.forEach(function(e){e.tileCoord[0]!==t&&(this.remove(xs(e.tileCoord)),e.dispose())}.bind(this))}},e}(Br);function Ps(t,e,n,i){var o=n-t,r=i-e,s=Math.sqrt(o*o+r*r);return[Math.round(n+o/s),Math.round(i+r/s)]}function Ss(t,e,n,i,o,r,s,a,u,l,c){var h=qi(Math.round(n*t),Math.round(n*e));if(0===u.length)return h.canvas;h.scale(n,n);var p=[1/0,1/0,-1/0,-1/0];u.forEach(function(t,e,n){var i,o;i=p,(o=t.extent)[0]<i[0]&&(i[0]=o[0]),o[2]>i[2]&&(i[2]=o[2]),o[1]<i[1]&&(i[1]=o[1]),o[3]>i[3]&&(i[3]=o[3])});var f=Qe(p),d=Ve(p),_=qi(Math.round(n*f/i),Math.round(n*d/i)),v=n/i;u.forEach(function(t,e,n){var i=t.extent[0]-p[0],o=-(t.extent[3]-p[3]),r=Qe(t.extent),s=Ve(t.extent);_.drawImage(t.image,l,l,t.image.width-2*l,t.image.height-2*l,i*v,o*v,r*v,s*v)});var y=Be(s);return a.getTriangles().forEach(function(t,e,o){var s=t.source,a=t.target,u=s[0][0],l=s[0][1],c=s[1][0],f=s[1][1],d=s[2][0],v=s[2][1],g=(a[0][0]-y[0])/r,m=-(a[0][1]-y[1])/r,E=(a[1][0]-y[0])/r,b=-(a[1][1]-y[1])/r,T=(a[2][0]-y[0])/r,w=-(a[2][1]-y[1])/r,C=u,x=l;u=0,l=0;var O=function(t){for(var e=t.length,n=0;n<e;n++){for(var i=n,o=Math.abs(t[n][n]),r=n+1;r<e;r++){var s=Math.abs(t[r][n]);s>o&&(o=s,i=r)}if(0===o)return null;var a=t[i];t[i]=t[n],t[n]=a;for(var u=n+1;u<e;u++)for(var l=-t[u][n]/t[n][n],c=n;c<e+1;c++)n==c?t[u][c]=0:t[u][c]+=l*t[n][c]}for(var h=new Array(e),p=e-1;p>=0;p--){h[p]=t[p][e]/t[p][p];for(var f=p-1;f>=0;f--)t[f][e]-=t[f][p]*h[p]}return h}([[c-=C,f-=x,0,0,E-g],[d-=C,v-=x,0,0,T-g],[0,0,c,f,b-m],[0,0,d,v,w-m]]);if(O){h.save(),h.beginPath();var R=(g+E+T)/3,P=(m+b+w)/3,S=Ps(R,P,g,m),M=Ps(R,P,E,b),L=Ps(R,P,T,w);h.moveTo(M[0],M[1]),h.lineTo(S[0],S[1]),h.lineTo(L[0],L[1]),h.clip(),h.transform(O[0],O[2],O[1],O[3],g,m),h.translate(p[0]-C,p[3]-x),h.scale(i/n,-i/n),h.drawImage(_.canvas,0,0),h.restore()}}),c&&(h.save(),h.strokeStyle=\"black\",h.lineWidth=1,a.getTriangles().forEach(function(t,e,n){var i=t.target,o=(i[0][0]-y[0])/r,s=-(i[0][1]-y[1])/r,a=(i[1][0]-y[0])/r,u=-(i[1][1]-y[1])/r,l=(i[2][0]-y[0])/r,c=-(i[2][1]-y[1])/r;h.beginPath(),h.moveTo(a,u),h.lineTo(o,s),h.lineTo(l,c),h.closePath(),h.stroke()}),h.restore()),h.canvas}var Ms=10,Ls=function(){function t(t,e,n,i,o){this.sourceProj_=t,this.targetProj_=e;var r={},s=ei(this.targetProj_,this.sourceProj_);this.transformInv_=function(t){var e=t[0]+\"/\"+t[1];return r[e]||(r[e]=s(t)),r[e]},this.maxSourceExtent_=i,this.errorThresholdSquared_=o*o,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!i&&!!this.sourceProj_.getExtent()&&Qe(i)==Qe(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?Qe(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?Qe(this.targetProj_.getExtent()):null;var a=Be(n),u=qe(n),l=Xe(n),c=Ue(n),h=this.transformInv_(a),p=this.transformInv_(u),f=this.transformInv_(l),d=this.transformInv_(c);if(this.addQuad_(a,u,l,c,h,p,f,d,Ms),this.wrapsXInSource_){var _=1/0;this.triangles_.forEach(function(t,e,n){_=Math.min(_,t.source[0][0],t.source[1][0],t.source[2][0])}),this.triangles_.forEach(function(t){if(Math.max(t.source[0][0],t.source[1][0],t.source[2][0])-_>this.sourceWorldWidth_/2){var e=[[t.source[0][0],t.source[0][1]],[t.source[1][0],t.source[1][1]],[t.source[2][0],t.source[2][1]]];e[0][0]-_>this.sourceWorldWidth_/2&&(e[0][0]-=this.sourceWorldWidth_),e[1][0]-_>this.sourceWorldWidth_/2&&(e[1][0]-=this.sourceWorldWidth_),e[2][0]-_>this.sourceWorldWidth_/2&&(e[2][0]-=this.sourceWorldWidth_);var n=Math.min(e[0][0],e[1][0],e[2][0]);Math.max(e[0][0],e[1][0],e[2][0])-n<this.sourceWorldWidth_/2&&(t.source=e)}}.bind(this))}r={}}return t.prototype.addTriangle_=function(t,e,n,i,o,r){this.triangles_.push({source:[i,o,r],target:[t,e,n]})},t.prototype.addQuad_=function(t,e,n,i,o,r,s,a,u){var l=Pe([o,r,s,a]),c=this.sourceWorldWidth_?Qe(l)/this.sourceWorldWidth_:null,h=this.sourceWorldWidth_,p=this.sourceProj_.canWrapX()&&c>.5&&c<1,f=!1;if(u>0){if(this.targetProj_.isGlobal()&&this.targetWorldWidth_)f=Qe(Pe([t,e,n,i]))/this.targetWorldWidth_>.25||f;!p&&this.sourceProj_.isGlobal()&&c&&(f=c>.25||f)}if(f||!this.maxSourceExtent_||$e(l,this.maxSourceExtent_)){if(!(f||isFinite(o[0])&&isFinite(o[1])&&isFinite(r[0])&&isFinite(r[1])&&isFinite(s[0])&&isFinite(s[1])&&isFinite(a[0])&&isFinite(a[1]))){if(!(u>0))return;f=!0}if(u>0){if(!f){var d=[(t[0]+n[0])/2,(t[1]+n[1])/2],_=this.transformInv_(d),v=void 0;if(p)v=(we(o[0],h)+we(s[0],h))/2-we(_[0],h);else v=(o[0]+s[0])/2-_[0];var y=(o[1]+s[1])/2-_[1];f=v*v+y*y>this.errorThresholdSquared_}if(f){if(Math.abs(t[0]-n[0])<=Math.abs(t[1]-n[1])){var g=[(e[0]+n[0])/2,(e[1]+n[1])/2],m=this.transformInv_(g),E=[(i[0]+t[0])/2,(i[1]+t[1])/2],b=this.transformInv_(E);this.addQuad_(t,e,g,E,o,r,m,b,u-1),this.addQuad_(E,g,n,i,b,m,s,a,u-1)}else{var T=[(t[0]+e[0])/2,(t[1]+e[1])/2],w=this.transformInv_(T),C=[(n[0]+i[0])/2,(n[1]+i[1])/2],x=this.transformInv_(C);this.addQuad_(t,T,C,i,o,w,x,a,u-1),this.addQuad_(T,e,n,C,w,r,s,x,u-1)}return}}if(p){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}this.addTriangle_(t,n,i,o,s,a),this.addTriangle_(t,e,n,o,r,s)}},t.prototype.calculateSourceExtent=function(){var t=[1/0,1/0,-1/0,-1/0];return this.triangles_.forEach(function(e,n,i){var o=e.source;Ne(t,o[0]),Ne(t,o[1]),Ne(t,o[2])}),t},t.prototype.getTriangles=function(){return this.triangles_},t}(),As=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Is=function(t){function e(e,n,i,o,r,s,a,u,l,c,h){var p=t.call(this,r,he.IDLE)||this;p.renderEdges_=void 0!==h&&h,p.pixelRatio_=a,p.gutter_=u,p.canvas_=null,p.sourceTileGrid_=n,p.targetTileGrid_=o,p.wrappedTileCoord_=s||r,p.sourceTiles_=[],p.sourcesListenerKeys_=null,p.sourceZ_=0;var f=o.getTileCoordExtent(p.wrappedTileCoord_),d=p.targetTileGrid_.getExtent(),_=p.sourceTileGrid_.getExtent(),v=d?He(f,d):f;if(0===Ke(v))return p.state=he.EMPTY,p;var y=e.getExtent();y&&(_=_?He(_,y):y);var g=o.getResolution(p.wrappedTileCoord_[0]),m=function(t,e,n,i){var o=ni(n,e,t),r=qn(e,i,n),s=e.getMetersPerUnit();void 0!==s&&(r*=s);var a=t.getMetersPerUnit();void 0!==a&&(r/=a);var u=t.getExtent();if(!u||Me(u,o)){var l=qn(t,r,o)/r;isFinite(l)&&l>0&&(r/=l)}return r}(e,i,Ye(v),g);if(!isFinite(m)||m<=0)return p.state=he.EMPTY,p;var E=void 0!==c?c:ys;if(p.triangulation_=new Ls(e,i,v,_,m*E),0===p.triangulation_.getTriangles().length)return p.state=he.EMPTY,p;p.sourceZ_=n.getZForResolution(m);var b=p.triangulation_.calculateSourceExtent();if(_&&(e.canWrapX()?(b[1]=ge(b[1],_[1],_[3]),b[3]=ge(b[3],_[1],_[3])):b=He(b,_)),Ke(b)){for(var T=n.getTileRangeForExtentAndZ(b,p.sourceZ_),w=T.minX;w<=T.maxX;w++)for(var C=T.minY;C<=T.maxY;C++){var x=l(p.sourceZ_,w,C,a);x&&p.sourceTiles_.push(x)}0===p.sourceTiles_.length&&(p.state=he.EMPTY)}else p.state=he.EMPTY;return p}return As(e,t),e.prototype.disposeInternal=function(){this.state==he.LOADING&&this.unlistenSources_(),t.prototype.disposeInternal.call(this)},e.prototype.getImage=function(){return this.canvas_},e.prototype.reproject_=function(){var t=[];if(this.sourceTiles_.forEach(function(e,n,i){e&&e.getState()==he.LOADED&&t.push({extent:this.sourceTileGrid_.getTileCoordExtent(e.tileCoord),image:e.getImage()})}.bind(this)),this.sourceTiles_.length=0,0===t.length)this.state=he.ERROR;else{var e=this.wrappedTileCoord_[0],n=this.targetTileGrid_.getTileSize(e),i=\"number\"==typeof n?n:n[0],o=\"number\"==typeof n?n:n[1],r=this.targetTileGrid_.getResolution(e),s=this.sourceTileGrid_.getResolution(this.sourceZ_),a=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);this.canvas_=Ss(i,o,this.pixelRatio_,s,this.sourceTileGrid_.getExtent(),r,a,this.triangulation_,t,this.gutter_,this.renderEdges_),this.state=he.LOADED}this.changed()},e.prototype.load=function(){if(this.state==he.IDLE){this.state=he.LOADING,this.changed();var t=0;this.sourcesListenerKeys_=[],this.sourceTiles_.forEach(function(e,n,i){var o=e.getState();if(o==he.IDLE||o==he.LOADING){t++;var r=m(e,M.CHANGE,function(n){var i=e.getState();i!=he.LOADED&&i!=he.ERROR&&i!=he.EMPTY||(T(r),0===--t&&(this.unlistenSources_(),this.reproject_()))},this);this.sourcesListenerKeys_.push(r)}}.bind(this)),this.sourceTiles_.forEach(function(t,e,n){t.getState()==he.IDLE&&t.load()}),0===t&&setTimeout(this.reproject_.bind(this),0)}},e.prototype.unlistenSources_=function(){this.sourcesListenerKeys_.forEach(T),this.sourcesListenerKeys_=null},e}(ms);function Fs(t,e){var n=/\\{z\\}/g,i=/\\{x\\}/g,o=/\\{y\\}/g,r=/\\{-y\\}/g;return function(s,a,u){return s?t.replace(n,s[0].toString()).replace(i,s[1].toString()).replace(o,s[2].toString()).replace(r,function(){var t=s[0],n=e.getFullTileRange(t);return pe(n,55),(n.getHeight()-s[2]-1).toString()}):void 0}}function Ds(t,e){for(var n=t.length,i=new Array(n),o=0;o<n;++o)i[o]=Fs(t[o],e);return function(t){if(1===t.length)return t[0];return function(e,n,i){if(e){var o=function(t){return(t[1]<<t[0])+t[2]}(e),r=we(o,t.length);return t[r](e,n,i)}}}(i)}function js(t,e,n){}var Ns=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function ks(t){return t?Array.isArray(t)?function(e){return t}:\"function\"==typeof t?t:function(e){return[t]}:null}var zs=function(t){function e(e){var n=t.call(this)||this;return n.projection_=Bn(e.projection),n.attributions_=ks(e.attributions),n.attributionsCollapsible_=void 0===e.attributionsCollapsible||e.attributionsCollapsible,n.loading=!1,n.state_=void 0!==e.state?e.state:no.READY,n.wrapX_=void 0!==e.wrapX&&e.wrapX,n}return Ns(e,t),e.prototype.getAttributions=function(){return this.attributions_},e.prototype.getAttributionsCollapsible=function(){return this.attributionsCollapsible_},e.prototype.getProjection=function(){return this.projection_},e.prototype.getResolutions=function(){return i()},e.prototype.getState=function(){return this.state_},e.prototype.getWrapX=function(){return this.wrapX_},e.prototype.refresh=function(){this.changed()},e.prototype.setAttributions=function(t){this.attributions_=ks(t),this.changed()},e.prototype.setState=function(t){this.state_=t,this.changed()},e}(k),Gs=[0,0,0],Ks=function(){function t(t){var e,n,i,o;if(this.minZoom=void 0!==t.minZoom?t.minZoom:0,this.resolutions_=t.resolutions,pe((e=this.resolutions_,n=!0,i=function(t,e){return e-t}||Ut,e.every(function(t,o){if(0===o)return!0;var r=i(e[o-1],t);return!(r>0||n&&0===r)})),17),!t.origins)for(var r=0,s=this.resolutions_.length-1;r<s;++r)if(o){if(this.resolutions_[r]/this.resolutions_[r+1]!==o){o=void 0;break}}else o=this.resolutions_[r]/this.resolutions_[r+1];this.zoomFactor_=o,this.maxZoom=this.resolutions_.length-1,this.origin_=void 0!==t.origin?t.origin:null,this.origins_=null,void 0!==t.origins&&(this.origins_=t.origins,pe(this.origins_.length==this.resolutions_.length,20));var a=t.extent;void 0===a||this.origin_||this.origins_||(this.origin_=Be(a)),pe(!this.origin_&&this.origins_||this.origin_&&!this.origins_,18),this.tileSizes_=null,void 0!==t.tileSizes&&(this.tileSizes_=t.tileSizes,pe(this.tileSizes_.length==this.resolutions_.length,19)),this.tileSize_=void 0!==t.tileSize?t.tileSize:this.tileSizes_?null:ye,pe(!this.tileSize_&&this.tileSizes_||this.tileSize_&&!this.tileSizes_,22),this.extent_=void 0!==a?a:null,this.fullTileRanges_=null,this.tmpSize_=[0,0],void 0!==t.sizes?this.fullTileRanges_=t.sizes.map(function(t,e){return new Vr(Math.min(0,t[0]),Math.max(t[0]-1,-1),Math.min(0,t[1]),Math.max(t[1]-1,-1))},this):a&&this.calculateTileRanges_(a)}return t.prototype.forEachTileCoord=function(t,e,n){for(var i=this.getTileRangeForExtentAndZ(t,e),o=i.minX,r=i.maxX;o<=r;++o)for(var s=i.minY,a=i.maxY;s<=a;++s)n([e,o,s])},t.prototype.forEachTileCoordParentTileRange=function(t,e,n,i){var o,r,s=null,a=t[0]-1;for(2===this.zoomFactor_?(o=t[1],r=t[2]):s=this.getTileCoordExtent(t,i);a>=this.minZoom;){if(e(a,2===this.zoomFactor_?Wr(o=Math.floor(o/2),o,r=Math.floor(r/2),r,n):this.getTileRangeForExtentAndZ(s,a,n)))return!0;--a}return!1},t.prototype.getExtent=function(){return this.extent_},t.prototype.getMaxZoom=function(){return this.maxZoom},t.prototype.getMinZoom=function(){return this.minZoom},t.prototype.getOrigin=function(t){return this.origin_?this.origin_:this.origins_[t]},t.prototype.getResolution=function(t){return this.resolutions_[t]},t.prototype.getResolutions=function(){return this.resolutions_},t.prototype.getTileCoordChildTileRange=function(t,e,n){if(t[0]<this.maxZoom){if(2===this.zoomFactor_){var i=2*t[1],o=2*t[2];return Wr(i,i+1,o,o+1,e)}var r=this.getTileCoordExtent(t,n);return this.getTileRangeForExtentAndZ(r,t[0]+1,e)}return null},t.prototype.getTileRangeExtent=function(t,e,n){var i=this.getOrigin(t),o=this.getResolution(t),r=so(this.getTileSize(t),this.tmpSize_),s=i[0]+e.minX*r[0]*o,a=i[0]+(e.maxX+1)*r[0]*o;return Fe(s,i[1]+e.minY*r[1]*o,a,i[1]+(e.maxY+1)*r[1]*o,n)},t.prototype.getTileRangeForExtentAndZ=function(t,e,n){var i=Gs;this.getTileCoordForXYAndZ_(t[0],t[3],e,!1,i);var o=i[1],r=i[2];return this.getTileCoordForXYAndZ_(t[2],t[1],e,!0,i),Wr(o,i[1],r,i[2],n)},t.prototype.getTileCoordCenter=function(t){var e=this.getOrigin(t[0]),n=this.getResolution(t[0]),i=so(this.getTileSize(t[0]),this.tmpSize_);return[e[0]+(t[1]+.5)*i[0]*n,e[1]-(t[2]+.5)*i[1]*n]},t.prototype.getTileCoordExtent=function(t,e){var n=this.getOrigin(t[0]),i=this.getResolution(t[0]),o=so(this.getTileSize(t[0]),this.tmpSize_),r=n[0]+t[1]*o[0]*i,s=n[1]-(t[2]+1)*o[1]*i;return Fe(r,s,r+o[0]*i,s+o[1]*i,e)},t.prototype.getTileCoordForCoordAndResolution=function(t,e,n){return this.getTileCoordForXYAndResolution_(t[0],t[1],e,!1,n)},t.prototype.getTileCoordForXYAndResolution_=function(t,e,n,i,o){var r=this.getZForResolution(n),s=n/this.getResolution(r),a=this.getOrigin(r),u=so(this.getTileSize(r),this.tmpSize_),l=i?.5:0,c=i?.5:0,h=Math.floor((t-a[0])/n+l),p=Math.floor((a[1]-e)/n+c),f=s*h/u[0],d=s*p/u[1];return i?(f=Math.ceil(f)-1,d=Math.ceil(d)-1):(f=Math.floor(f),d=Math.floor(d)),ws(r,f,d,o)},t.prototype.getTileCoordForXYAndZ_=function(t,e,n,i,o){var r=this.getOrigin(n),s=this.getResolution(n),a=so(this.getTileSize(n),this.tmpSize_),u=i?.5:0,l=i?.5:0,c=Math.floor((t-r[0])/s+u),h=Math.floor((r[1]-e)/s+l),p=c/a[0],f=h/a[1];return i?(p=Math.ceil(p)-1,f=Math.ceil(f)-1):(p=Math.floor(p),f=Math.floor(f)),ws(n,p,f,o)},t.prototype.getTileCoordForCoordAndZ=function(t,e,n){return this.getTileCoordForXYAndZ_(t[0],t[1],e,!1,n)},t.prototype.getTileCoordResolution=function(t){return this.resolutions_[t[0]]},t.prototype.getTileSize=function(t){return this.tileSize_?this.tileSize_:this.tileSizes_[t]},t.prototype.getFullTileRange=function(t){return this.fullTileRanges_?this.fullTileRanges_[t]:null},t.prototype.getZForResolution=function(t,e){return ge(Xt(this.resolutions_,t,e||0),this.minZoom,this.maxZoom)},t.prototype.calculateTileRanges_=function(t){for(var e=this.resolutions_.length,n=new Array(e),i=this.minZoom;i<e;++i)n[i]=this.getTileRangeForExtentAndZ(t,i);this.fullTileRanges_=n},t}();function Us(t){var e=t.getDefaultTileGrid();return e||(e=function(t,e,n,i){return function(t,e,n,i){var o=void 0!==i?i:Oe.TOP_LEFT,r=Xs(t,e,n);return new Ks({extent:t,origin:Ze(t,o),resolutions:r,tileSize:n})}(Ys(t),e,n,i)}(t),t.setDefaultTileGrid(e)),e}function Xs(t,e,n){for(var i=void 0!==e?e:ve,o=Ve(t),r=Qe(t),s=so(void 0!==n?n:ye),a=Math.max(r/s[0],o/s[1]),u=i+1,l=new Array(u),c=0;c<u;++c)l[c]=a/Math.pow(2,c);return l}function Ys(t){var e=(t=Bn(t)).getExtent();if(!e){var n=180*wn[Cn.DEGREES]/t.getMetersPerUnit();e=Fe(-n,-n,n,n)}return e}var Zs=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ws=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:e.projection,state:e.state,wrapX:e.wrapX})||this;n.opaque_=void 0!==e.opaque&&e.opaque,n.tilePixelRatio_=void 0!==e.tilePixelRatio?e.tilePixelRatio:1,n.tileGrid=void 0!==e.tileGrid?e.tileGrid:null;var i=e.cacheSize;if(void 0===i){var o=[256,256],r=e.tileGrid;r&&so(r.getTileSize(r.getMinZoom()),o);var s=\"screen\"in self,a=s?screen.availWidth||screen.width:1920,u=s?screen.availHeight||screen.height:1080;i=4*Math.ceil(a/o[0])*Math.ceil(u/o[1])}return n.tileCache=new Rs(i),n.tmpSize=[0,0],n.key_=e.key||\"\",n.tileOptions={transition:e.transition},n.zDirection,n}return Zs(e,t),e.prototype.canExpireCache=function(){return this.tileCache.canExpireCache()},e.prototype.expireCache=function(t,e){var n=this.getTileCacheForProjection(t);n&&n.expireCache(e)},e.prototype.forEachLoadedTile=function(t,e,n,i){var o=this.getTileCacheForProjection(t);if(!o)return!1;for(var r,s,a,u=!0,l=n.minX;l<=n.maxX;++l)for(var c=n.minY;c<=n.maxY;++c)s=Cs(e,l,c),a=!1,o.containsKey(s)&&(a=(r=o.get(s)).getState()===he.LOADED)&&(a=!1!==i(r)),a||(u=!1);return u},e.prototype.getGutterForProjection=function(t){return 0},e.prototype.getKey=function(){return this.key_},e.prototype.setKey=function(t){this.key_!==t&&(this.key_=t,this.changed())},e.prototype.getOpaque=function(t){return this.opaque_},e.prototype.getResolutions=function(){return this.tileGrid.getResolutions()},e.prototype.getTile=function(t,e,n,o,r){return i()},e.prototype.getTileGrid=function(){return this.tileGrid},e.prototype.getTileGridForProjection=function(t){return this.tileGrid?this.tileGrid:Us(t)},e.prototype.getTileCacheForProjection=function(t){var e=this.getProjection();return e&&!Jn(e,t)?null:this.tileCache},e.prototype.getTilePixelRatio=function(t){return this.tilePixelRatio_},e.prototype.getTilePixelSize=function(t,e,n){var i,o,r,s=this.getTileGridForProjection(n),a=this.getTilePixelRatio(e),u=so(s.getTileSize(t),this.tmpSize);return 1==a?u:(i=u,o=a,void 0===(r=this.tmpSize)&&(r=[0,0]),r[0]=i[0]*o+.5|0,r[1]=i[1]*o+.5|0,r)},e.prototype.getTileCoordForTileUrlFunction=function(t,e){var n=void 0!==e?e:this.getProjection(),i=this.getTileGridForProjection(n);return this.getWrapX()&&n.isGlobal()&&(t=function(t,e,n){var i=e[0],o=t.getTileCoordCenter(e),r=Ys(n);if(Me(r,o))return e;var s=Qe(r),a=Math.ceil((r[0]-o[0])/s);return o[0]+=s*a,t.getTileCoordForCoordAndZ(o,i)}(i,t,n)),function(t,e){var n=t[0],i=t[1],o=t[2];if(e.getMinZoom()>n||n>e.getMaxZoom())return!1;var r,s=e.getExtent();return!(r=s?e.getTileRangeForExtentAndZ(s,n):e.getFullTileRange(n))||r.containsXY(i,o)}(t,i)?t:null},e.prototype.clear=function(){this.tileCache.clear()},e.prototype.refresh=function(){this.clear(),t.prototype.refresh.call(this)},e.prototype.useTile=function(t,e,n,i){},e}(zs),Vs=function(t){function e(e,n){var i=t.call(this,e)||this;return i.tile=n,i}return Zs(e,t),e}(R),Hs=Ws,Bs=\"tileloadstart\",qs=\"tileloadend\",Qs=\"tileloaderror\",$s=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Js=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,cacheSize:e.cacheSize,opaque:e.opaque,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tilePixelRatio:e.tilePixelRatio,wrapX:e.wrapX,transition:e.transition,key:e.key,attributionsCollapsible:e.attributionsCollapsible})||this;return n.generateTileUrlFunction_=!e.tileUrlFunction,n.tileLoadFunction=e.tileLoadFunction,n.tileUrlFunction=e.tileUrlFunction?e.tileUrlFunction.bind(n):js,n.urls=null,e.urls?n.setUrls(e.urls):e.url&&n.setUrl(e.url),n.tileLoadingKeys_={},n}return $s(e,t),e.prototype.getTileLoadFunction=function(){return this.tileLoadFunction},e.prototype.getTileUrlFunction=function(){return this.tileUrlFunction},e.prototype.getUrls=function(){return this.urls},e.prototype.handleTileChange=function(t){var e,n=t.target,i=r(n),o=n.getState();o==he.LOADING?(this.tileLoadingKeys_[i]=!0,e=Bs):i in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[i],e=o==he.ERROR?Qs:o==he.LOADED||o==he.ABORT?qs:void 0),null!=e&&this.dispatchEvent(new Vs(e,n))},e.prototype.setTileLoadFunction=function(t){this.tileCache.clear(),this.tileLoadFunction=t,this.changed()},e.prototype.setTileUrlFunction=function(t,e){this.tileUrlFunction=t,this.tileCache.pruneExceptNewestZ(),void 0!==e?this.setKey(e):this.changed()},e.prototype.setUrl=function(t){var e=this.urls=function(t){var e=[],n=/\\{([a-z])-([a-z])\\}/.exec(t);if(n){var i=n[1].charCodeAt(0),o=n[2].charCodeAt(0),r=void 0;for(r=i;r<=o;++r)e.push(t.replace(n[0],String.fromCharCode(r)));return e}if(n=n=/\\{(\\d+)-(\\d+)\\}/.exec(t)){for(var s=parseInt(n[2],10),a=parseInt(n[1],10);a<=s;a++)e.push(t.replace(n[0],a.toString()));return e}return e.push(t),e}(t);this.setUrls(e)},e.prototype.setUrls=function(t){this.urls=t;var e=t.join(\"\\n\");this.generateTileUrlFunction_?this.setTileUrlFunction(Ds(t,this.tileGrid),e):this.setKey(e)},e.prototype.useTile=function(t,e,n){var i=Cs(t,e,n);this.tileCache.containsKey(i)&&this.tileCache.get(i)},e}(Hs),ta=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function ea(t,e){t.getImage().src=e}var na,ia,oa=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,cacheSize:e.cacheSize,opaque:e.opaque,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tileLoadFunction:e.tileLoadFunction?e.tileLoadFunction:ea,tilePixelRatio:e.tilePixelRatio,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX,transition:e.transition,key:e.key,attributionsCollapsible:e.attributionsCollapsible})||this;return n.crossOrigin=void 0!==e.crossOrigin?e.crossOrigin:null,n.tileClass=void 0!==e.tileClass?e.tileClass:Ts,n.tileCacheForProjection={},n.tileGridForProjection={},n.reprojectionErrorThreshold_=e.reprojectionErrorThreshold,n.renderReprojectionEdges_=!1,n}return ta(e,t),e.prototype.canExpireCache=function(){if(this.tileCache.canExpireCache())return!0;for(var t in this.tileCacheForProjection)if(this.tileCacheForProjection[t].canExpireCache())return!0;return!1},e.prototype.expireCache=function(t,e){var n=this.getTileCacheForProjection(t);for(var i in this.tileCache.expireCache(this.tileCache==n?e:{}),this.tileCacheForProjection){var o=this.tileCacheForProjection[i];o.expireCache(o==n?e:{})}},e.prototype.getGutterForProjection=function(t){return this.getProjection()&&t&&!Jn(this.getProjection(),t)?0:this.getGutter()},e.prototype.getGutter=function(){return 0},e.prototype.getOpaque=function(e){return!(this.getProjection()&&e&&!Jn(this.getProjection(),e))&&t.prototype.getOpaque.call(this,e)},e.prototype.getTileGridForProjection=function(t){var e=this.getProjection();if(!this.tileGrid||e&&!Jn(e,t)){var n=r(t);return n in this.tileGridForProjection||(this.tileGridForProjection[n]=Us(t)),this.tileGridForProjection[n]}return this.tileGrid},e.prototype.getTileCacheForProjection=function(t){var e=this.getProjection();if(!e||Jn(e,t))return this.tileCache;var n=r(t);return n in this.tileCacheForProjection||(this.tileCacheForProjection[n]=new Rs(this.tileCache.highWaterMark)),this.tileCacheForProjection[n]},e.prototype.createTile_=function(t,e,n,i,o,r){var s=[t,e,n],a=this.getTileCoordForTileUrlFunction(s,o),u=a?this.tileUrlFunction(a,i,o):void 0,l=new this.tileClass(s,void 0!==u?he.IDLE:he.EMPTY,void 0!==u?u:\"\",this.crossOrigin,this.tileLoadFunction,this.tileOptions);return l.key=r,m(l,M.CHANGE,this.handleTileChange,this),l},e.prototype.getTile=function(t,e,n,i,o){var r=this.getProjection();if(r&&o&&!Jn(r,o)){var s=this.getTileCacheForProjection(o),a=[t,e,n],u=void 0,l=xs(a);s.containsKey(l)&&(u=s.get(l));var c=this.getKey();if(u&&u.key==c)return u;var h=this.getTileGridForProjection(r),p=this.getTileGridForProjection(o),f=this.getTileCoordForTileUrlFunction(a,o),d=new Is(r,h,o,p,a,f,this.getTilePixelRatio(i),this.getGutter(),function(t,e,n,i){return this.getTileInternal(t,e,n,i,r)}.bind(this),this.reprojectionErrorThreshold_,this.renderReprojectionEdges_);return d.key=c,u?(d.interimTile=u,d.refreshInterimChain(),s.replace(l,d)):s.set(l,d),d}return this.getTileInternal(t,e,n,i,r||o)},e.prototype.getTileInternal=function(t,e,n,i,o){var r=null,s=Cs(t,e,n),a=this.getKey();if(this.tileCache.containsKey(s)){if((r=this.tileCache.get(s)).key!=a){var u=r;r=this.createTile_(t,e,n,i,o,a),u.getState()==he.IDLE?r.interimTile=u.interimTile:r.interimTile=u,r.refreshInterimChain(),this.tileCache.replace(s,r)}}else r=this.createTile_(t,e,n,i,o,a),this.tileCache.set(s,r);return r},e.prototype.setRenderReprojectionEdges=function(t){if(this.renderReprojectionEdges_!=t){for(var e in this.renderReprojectionEdges_=t,this.tileCacheForProjection)this.tileCacheForProjection[e].clear();this.changed()}},e.prototype.setTileGridForProjection=function(t,e){var n=Bn(t);if(n){var i=r(n);i in this.tileGridForProjection||(this.tileGridForProjection[i]=e)}},e}(Js),ra=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();new Gr({target:\"map-container\",layers:[new vs({source:new(function(t){function e(e){var n=e||{},i=void 0!==n.projection?n.projection:\"EPSG:3857\",o=void 0!==n.tileGrid?n.tileGrid:function(t){var e=t||{},n=e.extent||Bn(\"EPSG:3857\").getExtent(),i={extent:n,minZoom:e.minZoom,tileSize:e.tileSize,resolutions:Xs(n,e.maxZoom,e.tileSize)};return new Ks(i)}({extent:Ys(i),maxZoom:n.maxZoom,minZoom:n.minZoom,tileSize:n.tileSize});return t.call(this,{attributions:n.attributions,cacheSize:n.cacheSize,crossOrigin:n.crossOrigin,opaque:n.opaque,projection:i,reprojectionErrorThreshold:n.reprojectionErrorThreshold,tileGrid:o,tileLoadFunction:n.tileLoadFunction,tilePixelRatio:n.tilePixelRatio,tileUrlFunction:n.tileUrlFunction,url:n.url,urls:n.urls,wrapX:void 0===n.wrapX||n.wrapX,transition:n.transition,attributionsCollapsible:n.attributionsCollapsible})||this}return ra(e,t),e}(oa))({url:\"http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg\"})})],view:new Bi({center:(na=[120.491633,-1.0716013],ni(na,\"EPSG:4326\",void 0!==ia?ia:\"EPSG:3857\")),zoom:5})})}]);","extractedComments":[]}