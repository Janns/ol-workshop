{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/hashed/lib/util.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/hashed/lib/index.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/hashed/lib/serializers.js","webpack:///./node_modules/colormap/index.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/hashed/lib/store.js","webpack:///./node_modules/hashed/lib/schema.js","webpack:///./node_modules/hashed/lib/field.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/hashed/lib/deserializers.js","webpack:///./node_modules/hashed/lib/hash.js","webpack:///./node_modules/colormap/colorScale.js","webpack:///./node_modules/lerp/index.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DragAndDrop.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol-hashed/index.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util","typeOf","type","isArray","isDate","isRegExp","isError","extend","dest","source","zip","zipped","count","unzip","array","ii","length","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Store","hash","store","reset","window","removeEventListener","update","addEventListener","deserialize","location","values","defaults","nonDefaults","history","pushState","serialize","register","config","callback","unregister","process","getOwnPropertyDescriptors","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","f","isString","objects","arguments","inspect","args","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","forEach","val","idx","arrayToHash","getOwnPropertyNames","formatError","RegExp","toString","Date","output","base","braces","toUTCString","formatProperty","match","formatArray","map","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","set","split","line","substr","ar","Array","arg","re","objectToString","e","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","enc","encodeURIComponent","serializers","num","bool","toISOString","colorScale","lerp","rgb2float","rgba","rgb2hex","dig","hex","rgbaStr","spec","indicies","fromrgba","torgba","nsteps","cmap","colormap","nshades","alpha","toLowerCase","round","steps","rgb","amt","concat","content","options","hmr","transform","insertInto","locals","useSourceMap","list","cssMapping","btoa","sourceMapping","sourceMap","unescape","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","memo","stylesInDom","isOldIE","document","atob","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","createElement","attrs","nonce","nc","getNonce","addAttrs","el","setAttribute","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","cssNode","childNodes","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","Schema","_values","_defaults","_providers","_callback","_callbackTimer","_scheduleCallback","clearTimeout","setTimeout","_debouncedCallback","_updateTimer","_debouncedUpdate","newValues","providers","provider","schema","changed","state","forEachKey","prefixed","deserialized","getDefault","serializedDefault","removedProvider","conflicts","_initializeProvider","serializedValue","deserializedValue","deserializedDefault","serialized","serializer","Field","fields","prefix","_prefix","_fields","getPrefixed","thisArg","more","other","thisPrefixedKeys","deserializers","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","dec","decodeURIComponent","isNaN","getTime","parse","substring","jet","hsv","hot","cool","spring","summer","autumn","winter","bone","copper","greys","yignbu","greens","yiorrd","bluered","rdbu","picnic","rainbow","portland","blackbody","earth","electric","viridis","inferno","magma","plasma","warm","rainbow-soft","bathymetry","cdom","chlorophyll","density","freesurface-blue","freesurface-red","oxygen","par","phase","salinity","temperature","turbidity","velocity-blue","velocity-green","cubehelix","v0","v1","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","factory","obj_assign","assign","var_sources","getValues","isEmpty","findListener","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","util_abstract","uidCounter_","getUid","ol_uid","VERSION","ObjectEventType","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","extendStatics","events_Event","Event","propagationStopped","preventDefault","stopPropagation","__extends","__proto__","__","events_Target","_super","Target","_this","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","Observable_extends","ol_Observable","Observable","revision_","getRevision","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Property","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","AssertionError_extends","ol_AssertionError","AssertionError","code","message","assert","assertion","errorCode","clamp","cosh","y","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getZIndex","getMaxResolution","getMinResolution","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","render_EventType","State","UNDEFINED","LOADING","READY","Layer_extends","visibleAtResolution","layerState","resolution","layer_Layer","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","handleSourcePropertyChange_","setSource","states","getSource","getState","handleSourceChange_","render","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","renderEvent","layerStatesArray","createRenderer","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","opt_options","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","tileCoord","containsXY","containsTileRange","tileRange","equals","getHeight","getSize","getWidth","createOrUpdate","ol_TileRange","TileState","IDLE","LOADED","EMPTY","ABORT","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","extent_createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","extent_isEmpty","getCenter","getCorner","corner","getForViewAndSize","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","createCanvasContext2D","opt_width","opt_height","canvas","width","getContext","replaceNode","oldNode","replaceChild","removeNode","cache","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","opt_glContext","inversePixelTransform","context","glContext","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","mat","det","transform_toString","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","setSize","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","innerHTML","padding","position","body","offsetHeight","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","translate","rotate","resetTransform","drawImage","image","originX","originY","w","h","scale","globalAlpha","setTransform","ImageState","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","zoom","tile","createLoadedTileFinder","projection","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","getDataAtPixel","pixel","getLayer","handleImageChange_","renderIfReadyAndVisible","hasFeatureAtCoordinate","loadImage","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","viewState","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","getImageData","Uint8Array","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","tileGrid","getTileGridForProjection","getZForResolution","tileResolution","getResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clearRect","zs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","usedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","restore","parseFloat","canvasTransform","gutter","transition","getTileImage","getOpaque","alphaChanged","animate","endTransition","getImage","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","getKey","wantedTiles","tileCache","opt_tileCallback","tileQueue","getMinZoom","isKeyQueued","enqueue","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","ERROR_THRESHOLD","easeIn","easeOut","inAndOut","linear","ol_Tile_extends","ol_Tile","Tile","interimTile","hifi","transition_","transitionStarts_","refreshInterimChain","getTileCoord","start","delta","ImageTile_extends","getBlankImage","fillStyle","fillRect","ol_ImageTile","ImageTile","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getAreaInternal","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","enlargeClipPoint","centroidX","centroidY","dX","dY","distance","reproj_render","sourceResolution","sourceExtent","targetResolution","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","u1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","abs","absValue","coef","solveLinearSystem","p0","p1","p2","strokeStyle","lineWidth","closePath","stroke","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","sourceProj","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetCenter","sourceCenter","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","toSize","opt_size","Source_extends","adaptAttributions","attributionLike","source_Source","Source","projection_","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","wrapX_","wrapX","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getWrapX","refresh","setAttributions","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","array_extend","extension","array_equals","arr1","arr2","len1","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","zoomFactor","minZoom","resolutions_","resolutions","every","currentVal","res","origins","zoomFactor_","maxZoom","origin_","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","jj","opt_tileRange","tileCoordExtent","getMaxZoom","getOrigin","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","cacheSize","canUseScreen","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","ratio","getTileCoordForTileUrlFunction","opt_projection","projectionExtent","worldWidth","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","XYZ","xyzOptions","gridOptions","createXYZ","interaction_Property","ACTIVE","Interaction_extends","zoomByDelta","view","opt_anchor","opt_duration","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","anchor","duration","easing","interaction_Interaction","Interaction","handleEvent","map_","setActive","getActive","getMap","mapBrowserEvent","active","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","getView","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","getViewport","unregisterListeners_","readFeatures","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","createStyleFunction","setId","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapEvent_extends","ol_MapEvent","MapEvent","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","closestOnSegment","segment","along","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","altKeyOnly","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","condition_focus","getTargetElement","activeElement","always","mouseActionButton","button","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","transform2D","opt_dest","transform_rotate","anchorX","anchorY","deltaX","deltaY","transform_translate","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","opt_sy","simplify","tolerance","squaredTolerance","getType","applyTransform","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","GeometryLayout","XY","XYM","XYZM","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","flat_transform_scale","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","ends","Circle_extends","Circle_Circle","Circle","setCenterAndRadius","squaredDistance","getRadius","getRadiusSquared_","setCenter","setRadius","geom_Circle","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","interpolatePoint","fraction","pointX","pointY","length_1","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","point1","point2","intersectsLineString","coordinatesExtent","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","lineStringLength","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LineString_extends","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","MultiLineString_extends","geom_MultiLineString","MultiLineString","ends_","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","Point_extends","geom_Point","Point","MultiPoint_extends","geom_MultiPoint","MultiPoint","appendPoint","getPoint","getPoints","points","area_linearRing","twiceArea","area_linearRings","LinearRing_extends","geom_LinearRing","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","startAngle","MultiPolygon_extends","geom_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","center_linearRingss","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","stopEvent","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","HEX_COLOR_RE_","NAMED_COLOR_RE_","normalize","color","color_toString","g","asColorLike","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","getScale","getRotation","getRotateWithView","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","anchor_","size_","imageSize_","hitDetectionImageSize_","render_","getFill","getRadius2","getAngle","getStroke","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","arc","setLineDash","drawHitDetectionCanvas_","style_Circle_extends","style_Circle","CircleStyle","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","defaultStyles","createDefaultStyle","createEditingStyle","style_Style","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","ViewHint","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","TextBuilder_extends","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","textAlign","flatOffset","flatEnd","oo","drawChars_","geometryWidths","overflow","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","unshift","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","label","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","strokePadding","declutterArgs","repeatSize","renderDeclutter_","groupCount","box","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","coords","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","vectorSource","clipExtent","clipped","viewHints","skippedFeatureUids","world","transform_1","transform_2","layer_1","features_1","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","CollectionEventType","ADD","REMOVE","Collection_extends","Collection_Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","getArray","elem","removeAt","setAt","opt_except","FormatType","ARRAY_BUFFER","XML","featureloader_xhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","onerror","send","loadFeaturesXhr","dataProjection","loadingstrategy_all","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","Draw_extends","Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","pointerOptions","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","condition_","condition","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","now","addToDrawing_","handlePointerMove_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","getPixelFromCoordinate","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power_1","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","pointer_EventType","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","NativeSource_pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","none","getViewportClampedResolution","viewportSize","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewProperty","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","multiWorld","smooth","smoothResolutionConstraint","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setResolution","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","var_args","isDef","animate_","animationCount","series","complete","setHint","updateAnimations_","getInteracting","cancelAnimationFrame","seriesComplete","elapsed","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getComputedStyle","getConstraints","getHints","opt_hints","calculateExtent","getZoomForResolution","setMaxZoom","setMinZoom","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","baseLevel","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","adjustCenter","deltaCoordinates","adjustResolution","isMoving","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","targetZoom","targetRes","Group_extends","Group_Property","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","layerFilter","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","getTarget","pixelToCoordinateTransform","getOverlayById","getOverlayContainer","getOverlayContainerStopEvent","tileCenter","focus","HTMLElement","parentElement","interactionsArray","handlePostRender","hints","lowOnFrameBudget","getLoading","dispatchRenderEvent","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","setLayerGroup","setView","skipFeature","computedStyle","offsetWidth","unskipFeature","Control_extends","control_Control","Control","target_","listenerKeys","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","display","lastChild","removeChildren","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","DoubleClickZoom_extends","delta_","interaction_DoubleClickZoom","DoubleClickZoom","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","MouseWheelZoom_Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","IconImageCache_getKey","maxCacheSize","asString","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","translatedCoordinate","layerStates","getLayerRenderer","callback_1","layerKey","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","acc","Composite_extends","Composite","CompositeMapRenderer","children_","oldChildren","oldChild","newChild","replaceChildren","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","Modify_extends","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","removePoint","vertex","dragSegment","setGeometryCoordinates_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","segments","Snap_extends","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","nodesToRemove_1","currentMap","isCircle","closestOnCircle","toPrecision","precision","factor","ol_hashed","viewport","LOG2E","clientWidth","LN2","hashHandler","lib_default","onMoveEnd","main_min","main_max","ramp","colormap_default","sphere_getArea","main_map","source1","main_layer","main_format","download","json"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,sBClFA,MAAAC,EAAapC,EAAQ,GAOrBE,EAAAmC,OAAA,SAAAhB,GACA,IAAAiB,SAAAjB,EAcA,MAbA,WAAAiB,IACA,OAAAjB,EACAiB,EAAA,OACKF,EAAAG,QAAAlB,GACLiB,EAAA,QACKF,EAAAI,OAAAnB,GACLiB,EAAA,OACKF,EAAAK,SAAApB,GACLiB,EAAA,SACKF,EAAAM,QAAArB,KACLiB,EAAA,UAGAA,GASApC,EAAAyC,OAAA,SAAAC,EAAAC,GACA,UAAAlB,KAAAkB,EACAD,EAAAjB,GAAAkB,EAAAlB,GAEA,OAAAiB,GAQA1C,EAAA4C,IAAA,SAAAhB,GACA,MAAAiB,EAAA,GACA,IAAAC,EAAA,EACA,UAAArB,KAAAG,EACAiB,EAAA,EAAAC,GAAArB,EACAoB,EAAA,EAAAC,EAAA,GAAAlB,EAAAH,KACAqB,EAEA,OAAAD,GAQA7C,EAAA+C,MAAA,SAAAC,GACA,MAAApB,EAAA,GACA,QAAA1B,EAAA,EAAA+C,EAAAD,EAAAE,OAAoChD,EAAA+C,EAAQ/C,GAAA,EAC5C0B,EAAAoB,EAAA9C,IAAA8C,EAAA9C,EAAA,GAEA,OAAA0B,iCC9DA3B,EAAAD,QAAAmD,EACAlD,EAAAD,QAAAoD,QAAAD,EAEA,IAAAE,EAAkBvD,EAAQ,IAE1B,SAAAqD,EAAAG,EAAAC,GACA,KAAAC,gBAAAL,GAAA,WAAAA,EAAAG,EAAAC,GAGAC,KAAAC,YAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAE,KAAAI,YAAAF,KAAAC,IAAA,EAAAD,KAAAG,KAAA,GAAAL,KAAAC,cAEAF,GACAC,KAAAM,YAAAP,GAGAC,KAAAO,QAwbA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAA,EAAA,OAAAD,EAAAE,QAAAH,GAEA,QAAA/D,EAAA,EAAmBA,EAAAgE,EAAAhB,OAAkBhD,IACrC,GAAAiE,EAAAF,EAAAC,EAAAhE,IAAA,OAAAA,EAEA,SAIA,SAAAmE,EAAAC,EAAAC,GACAC,EAAAF,EAAA,EAAAA,EAAAG,SAAAvB,OAAAqB,EAAAD,GAIA,SAAAE,EAAAF,EAAAI,EAAA1C,EAAAuC,EAAAI,GACAA,MAAAC,EAAA,OACAD,EAAAE,KAAAC,IACAH,EAAAI,KAAAD,IACAH,EAAAK,MAAAF,IACAH,EAAAM,MAAAH,IAEA,QAAAI,EAAAhF,EAAAwE,EAA0BxE,EAAA8B,EAAO9B,IACjCgF,EAAAZ,EAAAG,SAAAvE,GACAuC,EAAAkC,EAAAL,EAAAa,KAAAZ,EAAAW,MAGA,OAAAP,EAGA,SAAAlC,EAAA2C,EAAAC,GAKA,OAJAD,EAAAP,KAAAnB,KAAA4B,IAAAF,EAAAP,KAAAQ,EAAAR,MACAO,EAAAL,KAAArB,KAAA4B,IAAAF,EAAAL,KAAAM,EAAAN,MACAK,EAAAJ,KAAAtB,KAAAC,IAAAyB,EAAAJ,KAAAK,EAAAL,MACAI,EAAAH,KAAAvB,KAAAC,IAAAyB,EAAAH,KAAAI,EAAAJ,MACAG,EAGA,SAAAG,EAAAH,EAAAC,GAAgC,OAAAD,EAAAP,KAAAQ,EAAAR,KAChC,SAAAW,EAAAJ,EAAAC,GAAgC,OAAAD,EAAAL,KAAAM,EAAAN,KAEhC,SAAAU,EAAAL,GAAwB,OAAAA,EAAAJ,KAAAI,EAAAP,OAAAO,EAAAH,KAAAG,EAAAL,MACxB,SAAAW,EAAAN,GAAwB,OAAAA,EAAAJ,KAAAI,EAAAP,MAAAO,EAAAH,KAAAG,EAAAL,MAiBxB,SAAAY,EAAAP,EAAAC,GACA,OAAAD,EAAAP,MAAAQ,EAAAR,MACAO,EAAAL,MAAAM,EAAAN,MACAM,EAAAL,MAAAI,EAAAJ,MACAK,EAAAJ,MAAAG,EAAAH,KAGA,SAAAW,EAAAR,EAAAC,GACA,OAAAA,EAAAR,MAAAO,EAAAJ,MACAK,EAAAN,MAAAK,EAAAH,MACAI,EAAAL,MAAAI,EAAAP,MACAQ,EAAAJ,MAAAG,EAAAL,KAGA,SAAAH,EAAAH,GACA,OACAA,WACAoB,OAAA,EACAV,MAAA,EACAN,KAAAC,IACAC,KAAAD,IACAE,MAAAF,IACAG,MAAAH,KAOA,SAAAgB,EAAAC,EAAAC,EAAAC,EAAAtE,EAAAuE,GAIA,IAHA,IACAC,EADAC,EAAA,CAAAJ,EAAAC,GAGAG,EAAAlD,SACA+C,EAAAG,EAAAC,QACAL,EAAAI,EAAAC,QAEA1E,IAEAwE,EAAAH,EAAAtC,KAAAG,MAAAoC,EAAAD,GAAArE,EAAA,GAAAA,EACA0B,EAAA0C,EAAAI,EAAAH,EAAAC,EAAAC,GAEAE,EAAAE,KAAAN,EAAAG,IAAAF,IA1hBA9C,EAAArB,UAAA,CAEAyE,IAAA,WACA,OAAA/C,KAAAgD,KAAAhD,KAAAiD,KAAA,KAGAC,OAAA,SAAAC,GAEA,IAAArC,EAAAd,KAAAiD,KACAG,EAAA,GACArC,EAAAf,KAAAe,OAEA,IAAAqB,EAAAe,EAAArC,GAAA,OAAAsC,EAKA,IAHA,IACA1G,EAAA2G,EAAA3B,EAAA4B,EADAC,EAAA,GAGAzC,GAAA,CACA,IAAApE,EAAA,EAAA2G,EAAAvC,EAAAG,SAAAvB,OAAmDhD,EAAA2G,EAAS3G,IAE5DgF,EAAAZ,EAAAG,SAAAvE,GAGA0F,EAAAe,EAFAG,EAAAxC,EAAAa,KAAAZ,EAAAW,QAGAZ,EAAAa,KAAAyB,EAAAN,KAAApB,GACAS,EAAAgB,EAAAG,GAAAtD,KAAAgD,KAAAtB,EAAA0B,GACAG,EAAAT,KAAApB,IAGAZ,EAAAyC,EAAAV,MAGA,OAAAO,GAGAI,SAAA,SAAAL,GAEA,IAAArC,EAAAd,KAAAiD,KACAlC,EAAAf,KAAAe,OAEA,IAAAqB,EAAAe,EAAArC,GAAA,SAKA,IAHA,IACApE,EAAA2G,EAAA3B,EAAA4B,EADAC,EAAA,GAGAzC,GAAA,CACA,IAAApE,EAAA,EAAA2G,EAAAvC,EAAAG,SAAAvB,OAAmDhD,EAAA2G,EAAS3G,IAK5D,GAHAgF,EAAAZ,EAAAG,SAAAvE,GAGA0F,EAAAe,EAFAG,EAAAxC,EAAAa,KAAAZ,EAAAW,MAEA,CACA,GAAAZ,EAAAa,MAAAQ,EAAAgB,EAAAG,GAAA,SACAC,EAAAT,KAAApB,GAGAZ,EAAAyC,EAAAV,MAGA,UAGAY,KAAA,SAAAR,GACA,IAAAA,MAAAvD,OAAA,OAAAM,KAEA,GAAAiD,EAAAvD,OAAAM,KAAAI,YAAA,CACA,QAAA1D,EAAA,EAAA2G,EAAAJ,EAAAvD,OAA8ChD,EAAA2G,EAAS3G,IACvDsD,KAAA0D,OAAAT,EAAAvG,IAEA,OAAAsD,KAIA,IAAAc,EAAAd,KAAA2D,OAAAV,EAAAW,QAAA,EAAAX,EAAAvD,OAAA,KAEA,GAAAM,KAAAiD,KAAAhC,SAAAvB,OAIS,GAAAM,KAAAiD,KAAAZ,SAAAvB,EAAAuB,OAETrC,KAAA6D,WAAA7D,KAAAiD,KAAAnC,OAES,CACT,GAAAd,KAAAiD,KAAAZ,OAAAvB,EAAAuB,OAAA,CAEA,IAAAyB,EAAA9D,KAAAiD,KACAjD,KAAAiD,KAAAnC,EACAA,EAAAgD,EAIA9D,KAAA+D,QAAAjD,EAAAd,KAAAiD,KAAAZ,OAAAvB,EAAAuB,OAAA,WAfArC,KAAAiD,KAAAnC,EAkBA,OAAAd,MAGA0D,OAAA,SAAAjD,GAEA,OADAA,GAAAT,KAAA+D,QAAAtD,EAAAT,KAAAiD,KAAAZ,OAAA,GACArC,MAGAO,MAAA,WAEA,OADAP,KAAAiD,KAAA7B,EAAA,IACApB,MAGAgE,OAAA,SAAAvD,EAAAE,GACA,IAAAF,EAAA,OAAAT,KASA,IAPA,IAIAtD,EAAAuH,EAAAC,EAAAC,EAJArD,EAAAd,KAAAiD,KACAE,EAAAnD,KAAAe,OAAAN,GACA2D,EAAA,GACAC,EAAA,GAIAvD,GAAAsD,EAAA1E,QAAA,CASA,GAPAoB,IACAA,EAAAsD,EAAAvB,MACAoB,EAAAG,IAAA1E,OAAA,GACAhD,EAAA2H,EAAAxB,MACAsB,GAAA,GAGArD,EAAAa,OAGA,KAFAuC,EAAA1D,EAAAC,EAAAK,EAAAG,SAAAN,IAOA,OAHAG,EAAAG,SAAAqD,OAAAJ,EAAA,GACAE,EAAAtB,KAAAhC,GACAd,KAAAuE,UAAAH,GACApE,KAIAmE,GAAArD,EAAAa,OAAAQ,EAAArB,EAAAqC,GAOac,GACbvH,IACAoE,EAAAmD,EAAAhD,SAAAvE,GACAyH,GAAA,GAEarD,EAAA,MAXbsD,EAAAtB,KAAAhC,GACAuD,EAAAvB,KAAApG,GACAA,EAAA,EACAuH,EAAAnD,EACAA,IAAAG,SAAA,IAUA,OAAAjB,MAGAe,OAAA,SAAAN,GAA6B,OAAAA,GAE7B+D,YAAAzC,EACA0C,YAAAzC,EAEA0C,OAAA,WAAyB,OAAA1E,KAAAiD,MAEzB0B,SAAA,SAAA1B,GAEA,OADAjD,KAAAiD,OACAjD,MAGAgD,KAAA,SAAAlC,EAAAsC,GAEA,IADA,IAAAG,EAAA,GACAzC,GACAA,EAAAa,KAAAyB,EAAAN,KAAA8B,MAAAxB,EAAAtC,EAAAG,UACAsC,EAAAT,KAAA8B,MAAArB,EAAAzC,EAAAG,UAEAH,EAAAyC,EAAAV,MAEA,OAAAO,GAGAO,OAAA,SAAAjD,EAAA8B,EAAAC,EAAAJ,GAEA,IAEAvB,EAFA+D,EAAApC,EAAAD,EAAA,EACAsC,EAAA9E,KAAAC,YAGA,GAAA4E,GAAAC,EAIA,OADAjE,EADAC,EAAAM,EAAAV,EAAAkD,MAAApB,EAAAC,EAAA,IACAzC,KAAAe,QACAD,EAGAuB,IAEAA,EAAAnC,KAAAG,KAAAH,KAAA6E,IAAAF,GAAA3E,KAAA6E,IAAAD,IAGAA,EAAA5E,KAAAG,KAAAwE,EAAA3E,KAAA8E,IAAAF,EAAAzC,EAAA,MAGAvB,EAAAM,EAAA,KACAO,MAAA,EACAb,EAAAuB,SAIA,IAEA3F,EAAAuI,EAAAC,EAAAC,EAFAC,EAAAlF,KAAAG,KAAAwE,EAAAC,GACAO,EAAAD,EAAAlF,KAAAG,KAAAH,KAAAoF,KAAAR,IAKA,IAFAxC,EAAA5B,EAAA8B,EAAAC,EAAA4C,EAAArF,KAAAwE,aAEA9H,EAAA8F,EAAsB9F,GAAA+F,EAAY/F,GAAA2I,EAMlC,IAFA/C,EAAA5B,EAAAhE,EAFAwI,EAAAhF,KAAA4B,IAAApF,EAAA2I,EAAA,EAAA5C,GAEA2C,EAAApF,KAAAyE,aAEAQ,EAAAvI,EAAuBuI,GAAAC,EAAaD,GAAAG,EAEpCD,EAAAjF,KAAA4B,IAAAmD,EAAAG,EAAA,EAAAF,GAGApE,EAAAG,SAAA6B,KAAA9C,KAAA2D,OAAAjD,EAAAuE,EAAAE,EAAA9C,EAAA,IAMA,OAFAxB,EAAAC,EAAAd,KAAAe,QAEAD,GAGAyE,eAAA,SAAApC,EAAArC,EAAA0E,EAAApB,GAIA,IAFA,IAAA1H,EAAA2G,EAAA3B,EAAA+D,EAAAC,EAAAC,EAAAC,EAAAC,EAsPAjE,EAAAC,EAnPAuC,EAAAtB,KAAAhC,IAEAA,EAAAa,MAAAyC,EAAA1E,OAAA,IAAA8F,GAHA,CAOA,IAFAI,EAAAC,EAAAvE,IAEA5E,EAAA,EAAA2G,EAAAvC,EAAAG,SAAAvB,OAAmDhD,EAAA2G,EAAS3G,IAE5DgJ,EAAAzD,EADAP,EAAAZ,EAAAG,SAAAvE,IA4OAkF,EA1OAuB,EA0OAtB,EA1OAH,GAAAiE,GA2OAzF,KAAAC,IAAA0B,EAAAL,KAAAI,EAAAJ,MAAAtB,KAAA4B,IAAAD,EAAAR,KAAAO,EAAAP,QACAnB,KAAAC,IAAA0B,EAAAJ,KAAAG,EAAAH,MAAAvB,KAAA4B,IAAAD,EAAAN,KAAAK,EAAAL,OA5OAmE,GAGAG,GACAA,EAAAF,EACAC,EAAAF,EAAAE,EAAAF,EAAAE,EACAH,EAAA/D,GAEiBiE,IAAAE,GAEjBH,EAAAE,IACAA,EAAAF,EACAD,EAAA/D,GAKAZ,EAAA2E,GAAA3E,EAAAG,SAAA,GAGA,OAAAH,GAGAiD,QAAA,SAAAtD,EAAA+E,EAAAM,GAEA,IAAA/E,EAAAf,KAAAe,OACAoC,EAAA2C,EAAArF,EAAAM,EAAAN,GACAsF,EAAA,GAGAjF,EAAAd,KAAAuF,eAAApC,EAAAnD,KAAAiD,KAAAuC,EAAAO,GAOA,IAJAjF,EAAAG,SAAA6B,KAAArC,GACAxB,EAAA6B,EAAAqC,GAGAqC,GAAA,GACAO,EAAAP,GAAAvE,SAAAvB,OAAAM,KAAAC,aACAD,KAAAgG,OAAAD,EAAAP,GACAA,IAKAxF,KAAAiG,oBAAA9C,EAAA4C,EAAAP,IAIAQ,OAAA,SAAAD,EAAAP,GAEA,IAAA1E,EAAAiF,EAAAP,GACAV,EAAAhE,EAAAG,SAAAvB,OACA5C,EAAAkD,KAAAI,YAEAJ,KAAAkG,iBAAApF,EAAAhE,EAAAgI,GAEA,IAAAqB,EAAAnG,KAAAoG,kBAAAtF,EAAAhE,EAAAgI,GAEAuB,EAAAjF,EAAAN,EAAAG,SAAAqD,OAAA6B,EAAArF,EAAAG,SAAAvB,OAAAyG,IACAE,EAAAhE,OAAAvB,EAAAuB,OACAgE,EAAA1E,KAAAb,EAAAa,KAEAd,EAAAC,EAAAd,KAAAe,QACAF,EAAAwF,EAAArG,KAAAe,QAEAyE,EAAAO,EAAAP,EAAA,GAAAvE,SAAA6B,KAAAuD,GACArG,KAAA6D,WAAA/C,EAAAuF,IAGAxC,WAAA,SAAA/C,EAAAuF,GAEArG,KAAAiD,KAAA7B,EAAA,CAAAN,EAAAuF,IACArG,KAAAiD,KAAAZ,OAAAvB,EAAAuB,OAAA,EACArC,KAAAiD,KAAAtB,MAAA,EACAd,EAAAb,KAAAiD,KAAAjD,KAAAe,SAGAqF,kBAAA,SAAAtF,EAAAhE,EAAAgI,GAEA,IAAApI,EAAA4J,EAAAC,EAAAC,EAAAd,EAAAe,EAAAb,EAAA1B,EA+JAtC,EAAAC,EACAR,EACAE,EACAC,EACAC,EA/JA,IAFAgF,EAAAb,EAAAtE,IAEA5E,EAAAI,EAAmBJ,GAAAoI,EAAAhI,EAAYJ,IAC/B4J,EAAAtF,EAAAF,EAAA,EAAApE,EAAAsD,KAAAe,QACAwF,EAAAvF,EAAAF,EAAApE,EAAAoI,EAAA9E,KAAAe,QAyJAa,EAvJA0E,EAuJAzE,EAvJA0E,EAwJAlF,SACAE,SACAC,SACAC,SAHAJ,EAAAnB,KAAAC,IAAAyB,EAAAP,KAAAQ,EAAAR,MACAE,EAAArB,KAAAC,IAAAyB,EAAAL,KAAAM,EAAAN,MACAC,EAAAtB,KAAA4B,IAAAF,EAAAJ,KAAAK,EAAAL,MACAC,EAAAvB,KAAA4B,IAAAF,EAAAH,KAAAI,EAAAJ,MA3JA+E,EA6JAtG,KAAAC,IAAA,EAAAqB,EAAAH,GACAnB,KAAAC,IAAA,EAAAsB,EAAAF,GA7JAmE,EAAAzD,EAAAqE,GAAArE,EAAAsE,GAGAC,EAAAC,GACAA,EAAAD,EACAtC,EAAAxH,EAEAkJ,EAAAF,EAAAE,EAAAF,EAAAE,GAEaY,IAAAC,GAEbf,EAAAE,IACAA,EAAAF,EACAxB,EAAAxH,GAKA,OAAAwH,GAIAgC,iBAAA,SAAApF,EAAAhE,EAAAgI,GAEA,IAAAN,EAAA1D,EAAAa,KAAA3B,KAAAwE,YAAAzC,EACA0C,EAAA3D,EAAAa,KAAA3B,KAAAyE,YAAAzC,EACAhC,KAAA0G,eAAA5F,EAAAhE,EAAAgI,EAAAN,GACAxE,KAAA0G,eAAA5F,EAAAhE,EAAAgI,EAAAL,IAIA3D,EAAAG,SAAA0F,KAAAnC,IAIAkC,eAAA,SAAA5F,EAAAhE,EAAAgI,EAAApC,GAEA5B,EAAAG,SAAA0F,KAAAjE,GAEA,IAIAhG,EAAAgF,EAJAX,EAAAf,KAAAe,OACA6F,EAAA5F,EAAAF,EAAA,EAAAhE,EAAAiE,GACA8F,EAAA7F,EAAAF,EAAAgE,EAAAhI,EAAAgI,EAAA/D,GACA+F,EAAA5E,EAAA0E,GAAA1E,EAAA2E,GAGA,IAAAnK,EAAAI,EAAmBJ,EAAAoI,EAAAhI,EAAWJ,IAC9BgF,EAAAZ,EAAAG,SAAAvE,GACAuC,EAAA2H,EAAA9F,EAAAa,KAAAZ,EAAAW,MACAoF,GAAA5E,EAAA0E,GAGA,IAAAlK,EAAAoI,EAAAhI,EAAA,EAA2BJ,GAAAI,EAAQJ,IACnCgF,EAAAZ,EAAAG,SAAAvE,GACAuC,EAAA4H,EAAA/F,EAAAa,KAAAZ,EAAAW,MACAoF,GAAA5E,EAAA2E,GAGA,OAAAC,GAGAb,oBAAA,SAAA9C,EAAAiB,EAAAoB,GAEA,QAAA9I,EAAA8I,EAA2B9I,GAAA,EAAQA,IACnCuC,EAAAmF,EAAA1H,GAAAyG,IAIAoB,UAAA,SAAAH,GAEA,QAAA2C,EAAArK,EAAA0H,EAAA1E,OAAA,EAA+ChD,GAAA,EAAQA,IACvD,IAAA0H,EAAA1H,GAAAuE,SAAAvB,OACAhD,EAAA,GACAqK,EAAA3C,EAAA1H,EAAA,GAAAuE,UACAqD,OAAAyC,EAAAnG,QAAAwD,EAAA1H,IAAA,GAEiBsD,KAAAO,QAEJM,EAAAuD,EAAA1H,GAAAsD,KAAAe,SAIbT,YAAA,SAAAP,GAOA,IAAAiH,EAAA,wBAEAhH,KAAAwE,YAAA,IAAAyC,SAAA,QAAAD,EAAAE,KAAAnH,EAAA,KACAC,KAAAyE,YAAA,IAAAwC,SAAA,QAAAD,EAAAE,KAAAnH,EAAA,KAEAC,KAAAe,OAAA,IAAAkG,SAAA,IACA,kBAAqBlH,EAAA,GACrB,YAAAA,EAAA,GACA,YAAAA,EAAA,GACA,YAAAA,EAAA,4BCtcA,MAAAoH,EAAc7K,EAAQ,IAAS6K,MAC/BC,EAAa9K,EAAQ,IAErB,IAAA+K,EAEA,SAAAC,IACAD,GACAE,OAAAC,oBAAA,WAAAC,GAEAF,OAAAG,iBAAA,WAAAD,GACAJ,EAAA,IAAAF,EAAAC,EAAAO,YAAAC,SAAAR,MAAA,SACAS,EACAC,GAEA,MAAAC,EAAA,GACA,UAAA9J,KAAA4J,EACAA,EAAA5J,KAAA6J,EAAA7J,KACA8J,EAAA9J,GAAA4J,EAAA5J,IAGA+J,QAAAC,UAAAJ,EAAA,GAAAT,EAAAc,UAAAH,MAIA,SAAAN,IACAJ,EAAAI,OAAAL,EAAAO,YAAAC,SAAAR,OASA5K,EAAA2L,SAAA,SAAAC,EAAAC,GACA,OAAAhB,EAAAc,SAAAC,EAAAC,IAOA7L,EAAA8L,WAAA,SAAAD,GACAhB,EAAAiB,WAAAD,IAQA7L,EAAA0L,UAAA,SAAAL,GACA,OAAAT,EAAAc,UAAAb,EAAAa,UAAAL,KAGArL,EAAA8K,QAEAA,sBCzDA,SAAAiB,GAqBA,IAAAC,EAAApL,OAAAoL,2BACA,SAAAC,GAGA,IAFA,IAAAC,EAAAtL,OAAAsL,KAAAD,GACAE,EAAA,GACAjM,EAAA,EAAmBA,EAAAgM,EAAAhJ,OAAiBhD,IACpCiM,EAAAD,EAAAhM,IAAAU,OAAAwL,yBAAAH,EAAAC,EAAAhM,IAEA,OAAAiM,GAGAE,EAAA,WACArM,EAAAuD,OAAA,SAAA+I,GACA,IAAAC,EAAAD,GAAA,CAEA,IADA,IAAAE,EAAA,GACAtM,EAAA,EAAmBA,EAAAuM,UAAAvJ,OAAsBhD,IACzCsM,EAAAlG,KAAAoG,EAAAD,UAAAvM,KAEA,OAAAsM,EAAA9B,KAAA,KAGAxK,EAAA,EAmBA,IAnBA,IACAyM,EAAAF,UACA5F,EAAA8F,EAAAzJ,OACA0J,EAAAC,OAAAP,GAAAQ,QAAAT,EAAA,SAAAU,GACA,UAAAA,EAAA,UACA,GAAA7M,GAAA2G,EAAA,OAAAkG,EACA,OAAAA,GACA,gBAAAF,OAAAF,EAAAzM,MACA,gBAAA8M,OAAAL,EAAAzM,MACA,SACA,IACA,OAAA+M,KAAAC,UAAAP,EAAAzM,MACS,MAAAiN,GACT,mBAEA,QACA,OAAAJ,KAGAA,EAAAJ,EAAAzM,GAAuBA,EAAA2G,EAASkG,EAAAJ,IAAAzM,GAChCkN,EAAAL,KAAAM,EAAAN,GACAH,GAAA,IAAAG,EAEAH,GAAA,IAAAF,EAAAK,GAGA,OAAAH,GAOA5M,EAAAsN,UAAA,SAAAC,EAAAC,GACA,YAAAzB,IAAA,IAAAA,EAAA0B,cACA,OAAAF,EAIA,YAAAxB,EACA,kBACA,OAAA/L,EAAAsN,UAAAC,EAAAC,GAAApF,MAAA5E,KAAAiJ,YAIA,IAAAiB,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAA3B,EAAA4B,iBACA,UAAAC,MAAAJ,GACOzB,EAAA8B,iBACPC,QAAAC,MAAAP,GAEAM,QAAAE,MAAAR,GAEAE,GAAA,EAEA,OAAAH,EAAAnF,MAAA5E,KAAAiJ,aAOA,IACAwB,EADAC,EAAA,GA6BA,SAAAxB,EAAAT,EAAAkC,GAEA,IAAAC,EAAA,CACAC,KAAA,GACAC,QAAAC,GAkBA,OAfA9B,UAAAvJ,QAAA,IAAAkL,EAAAI,MAAA/B,UAAA,IACAA,UAAAvJ,QAAA,IAAAkL,EAAAK,OAAAhC,UAAA,IACAiC,EAAAP,GAEAC,EAAAO,WAAAR,EACGA,GAEHnO,EAAA4O,QAAAR,EAAAD,GAGAU,EAAAT,EAAAO,cAAAP,EAAAO,YAAA,GACAE,EAAAT,EAAAI,SAAAJ,EAAAI,MAAA,GACAK,EAAAT,EAAAK,UAAAL,EAAAK,QAAA,GACAI,EAAAT,EAAAU,iBAAAV,EAAAU,eAAA,GACAV,EAAAK,SAAAL,EAAAE,QAAAS,GACAC,EAAAZ,EAAAnC,EAAAmC,EAAAI,OAoCA,SAAAO,EAAAnC,EAAAqC,GACA,IAAAC,EAAAxC,EAAAyC,OAAAF,GAEA,OAAAC,EACA,KAAAxC,EAAA+B,OAAAS,GAAA,OAAAtC,EACA,KAAAF,EAAA+B,OAAAS,GAAA,OAEAtC,EAKA,SAAA2B,EAAA3B,EAAAqC,GACA,OAAArC,EAeA,SAAAoC,EAAAZ,EAAAjN,EAAAiO,GAGA,GAAAhB,EAAAU,eACA3N,GACAkO,EAAAlO,EAAAuL,UAEAvL,EAAAuL,UAAA1M,EAAA0M,WAEAvL,EAAAmO,aAAAnO,EAAAmO,YAAAxN,YAAAX,GAAA,CACA,IAAAoO,EAAApO,EAAAuL,QAAA0C,EAAAhB,GAIA,OAHA7B,EAAAgD,KACAA,EAAAP,EAAAZ,EAAAmB,EAAAH,IAEAG,EAIA,IAAAC,EA+FA,SAAApB,EAAAjN,GACA,GAAA0N,EAAA1N,GACA,OAAAiN,EAAAE,QAAA,yBACA,GAAA/B,EAAApL,GAAA,CACA,IAAAsO,EAAA,IAAAxC,KAAAC,UAAA/L,GAAA2L,QAAA,aACAA,QAAA,YACAA,QAAA,gBACA,OAAAsB,EAAAE,QAAAmB,EAAA,UAEA,GAAAC,EAAAvO,GACA,OAAAiN,EAAAE,QAAA,GAAAnN,EAAA,UACA,GAAAuN,EAAAvN,GACA,OAAAiN,EAAAE,QAAA,GAAAnN,EAAA,WAEA,GAAAiM,EAAAjM,GACA,OAAAiN,EAAAE,QAAA,eA9GAqB,CAAAvB,EAAAjN,GACA,GAAAqO,EACA,OAAAA,EAIA,IAAAtD,EAAAtL,OAAAsL,KAAA/K,GACAyO,EApCA,SAAA5M,GACA,IAAA4H,EAAA,GAMA,OAJA5H,EAAA6M,QAAA,SAAAC,EAAAC,GACAnF,EAAAkF,IAAA,IAGAlF,EA6BAoF,CAAA9D,GAQA,GANAkC,EAAAO,aACAzC,EAAAtL,OAAAqP,oBAAA9O,IAKAqB,EAAArB,KACA+K,EAAA9H,QAAA,eAAA8H,EAAA9H,QAAA,mBACA,OAAA8L,EAAA/O,GAIA,OAAA+K,EAAAhJ,OAAA,CACA,GAAAmM,EAAAlO,GAAA,CACA,IAAAV,EAAAU,EAAAV,KAAA,KAAAU,EAAAV,KAAA,GACA,OAAA2N,EAAAE,QAAA,YAAA7N,EAAA,eAEA,GAAA8B,EAAApB,GACA,OAAAiN,EAAAE,QAAA6B,OAAArO,UAAAsO,SAAA/P,KAAAc,GAAA,UAEA,GAAAmB,EAAAnB,GACA,OAAAiN,EAAAE,QAAA+B,KAAAvO,UAAAsO,SAAA/P,KAAAc,GAAA,QAEA,GAAAqB,EAAArB,GACA,OAAA+O,EAAA/O,GAIA,IA2CAmP,EA3CAC,EAAA,GAAAvN,GAAA,EAAAwN,EAAA,KAA4C,MAG5CnO,EAAAlB,KACA6B,GAAA,EACAwN,EAAA,WAIAnB,EAAAlO,MAEAoP,EAAA,cADApP,EAAAV,KAAA,KAAAU,EAAAV,KAAA,IACA,KAkBA,OAdA8B,EAAApB,KACAoP,EAAA,IAAAJ,OAAArO,UAAAsO,SAAA/P,KAAAc,IAIAmB,EAAAnB,KACAoP,EAAA,IAAAF,KAAAvO,UAAA2O,YAAApQ,KAAAc,IAIAqB,EAAArB,KACAoP,EAAA,IAAAL,EAAA/O,IAGA,IAAA+K,EAAAhJ,QAAAF,GAAA,GAAA7B,EAAA+B,OAIAkM,EAAA,EACA7M,EAAApB,GACAiN,EAAAE,QAAA6B,OAAArO,UAAAsO,SAAA/P,KAAAc,GAAA,UAEAiN,EAAAE,QAAA,uBAIAF,EAAAC,KAAA/H,KAAAnF,GAIAmP,EADAtN,EAsCA,SAAAoL,EAAAjN,EAAAiO,EAAAQ,EAAA1D,GAEA,IADA,IAAAoE,EAAA,GACApQ,EAAA,EAAAC,EAAAgB,EAAA+B,OAAmChD,EAAAC,IAAOD,EAC1C6B,EAAAZ,EAAA0L,OAAA3M,IACAoQ,EAAAhK,KAAAoK,EAAAtC,EAAAjN,EAAAiO,EAAAQ,EACA/C,OAAA3M,IAAA,IAEAoQ,EAAAhK,KAAA,IASA,OANA4F,EAAA2D,QAAA,SAAApO,GACAA,EAAAkP,MAAA,UACAL,EAAAhK,KAAAoK,EAAAtC,EAAAjN,EAAAiO,EAAAQ,EACAnO,GAAA,MAGA6O,EArDAM,CAAAxC,EAAAjN,EAAAiO,EAAAQ,EAAA1D,GAEAA,EAAA2E,IAAA,SAAApP,GACA,OAAAiP,EAAAtC,EAAAjN,EAAAiO,EAAAQ,EAAAnO,EAAAuB,KAIAoL,EAAAC,KAAAhI,MA6GA,SAAAiK,EAAAC,EAAAC,GAQA,GANAF,EAAAQ,OAAA,SAAAC,EAAAC,GAGA,OAFAC,EACAD,EAAA5M,QAAA,UAAA6M,EACAF,EAAAC,EAAAlE,QAAA,sBAAA5J,OAAA,GACG,GAEH,GACA,OAAAsN,EAAA,IACA,KAAAD,EAAA,GAAAA,EAAA,OACA,IACAD,EAAA5F,KAAA,SACA,IACA8F,EAAA,GAGA,OAAAA,EAAA,GAAAD,EAAA,IAAAD,EAAA5F,KAAA,UAAA8F,EAAA,GA5HAU,CAAAZ,EAAAC,EAAAC,IAxBAA,EAAA,GAAAD,EAAAC,EAAA,GA+CA,SAAAN,EAAA/O,GACA,UAAAyM,MAAA9L,UAAAsO,SAAA/P,KAAAc,GAAA,IAwBA,SAAAuP,EAAAtC,EAAAjN,EAAAiO,EAAAQ,EAAAnO,EAAAuB,GACA,IAAAvC,EAAAmM,EAAAuE,EAsCA,IArCAA,EAAAvQ,OAAAwL,yBAAAjL,EAAAM,IAAA,CAAyDN,QAAAM,KACzDV,IAEA6L,EADAuE,EAAAC,IACAhD,EAAAE,QAAA,6BAEAF,EAAAE,QAAA,sBAGA6C,EAAAC,MACAxE,EAAAwB,EAAAE,QAAA,uBAGAvM,EAAA6N,EAAAnO,KACAhB,EAAA,IAAAgB,EAAA,KAEAmL,IACAwB,EAAAC,KAAAjK,QAAA+M,EAAAhQ,OAAA,GAEAyL,EADAQ,EAAAgC,GACAJ,EAAAZ,EAAA+C,EAAAhQ,MAAA,MAEA6N,EAAAZ,EAAA+C,EAAAhQ,MAAAiO,EAAA,IAEAhL,QAAA,WAEAwI,EADA5J,EACA4J,EAAAyE,MAAA,MAAAR,IAAA,SAAAS,GACA,WAAAA,IACW5G,KAAA,MAAA6G,OAAA,GAEX,KAAA3E,EAAAyE,MAAA,MAAAR,IAAA,SAAAS,GACA,YAAAA,IACW5G,KAAA,OAIXkC,EAAAwB,EAAAE,QAAA,yBAGAO,EAAApO,GAAA,CACA,GAAAuC,GAAAvB,EAAAkP,MAAA,SACA,OAAA/D,GAEAnM,EAAAwM,KAAAC,UAAA,GAAAzL,IACAkP,MAAA,iCACAlQ,IAAA8Q,OAAA,EAAA9Q,EAAAyC,OAAA,GACAzC,EAAA2N,EAAAE,QAAA7N,EAAA,UAEAA,IAAAqM,QAAA,YACAA,QAAA,YACAA,QAAA,gBACArM,EAAA2N,EAAAE,QAAA7N,EAAA,WAIA,OAAAA,EAAA,KAAAmM,EA2BA,SAAAvK,EAAAmP,GACA,OAAAC,MAAApP,QAAAmP,GAIA,SAAA9C,EAAAgD,GACA,wBAAAA,EAIA,SAAAtE,EAAAsE,GACA,cAAAA,EASA,SAAAhC,EAAAgC,GACA,uBAAAA,EAIA,SAAAnF,EAAAmF,GACA,uBAAAA,EASA,SAAA7C,EAAA6C,GACA,gBAAAA,EAIA,SAAAnP,EAAAoP,GACA,OAAAtE,EAAAsE,IAAA,oBAAAC,EAAAD,GAIA,SAAAtE,EAAAqE,GACA,uBAAAA,GAAA,OAAAA,EAIA,SAAApP,EAAA9B,GACA,OAAA6M,EAAA7M,IAAA,kBAAAoR,EAAApR,GAIA,SAAAgC,EAAAqP,GACA,OAAAxE,EAAAwE,KACA,mBAAAD,EAAAC,iBAAAjE,OAIA,SAAAyB,EAAAqC,GACA,yBAAAA,EAgBA,SAAAE,EAAAjR,GACA,OAAAC,OAAAkB,UAAAsO,SAAA/P,KAAAM,GAIA,SAAAmR,EAAAnQ,GACA,OAAAA,EAAA,OAAAA,EAAAyO,SAAA,IAAAzO,EAAAyO,SAAA,IApbApQ,EAAA+R,SAAA,SAAAX,GAIA,GAHAvC,EAAAZ,KACAA,EAAAlC,EAAAiG,IAAAC,YAAA,IACAb,IAAAc,eACAhE,EAAAkD,GACA,OAAAjB,OAAA,MAAAiB,EAAA,WAAAe,KAAAlE,GAAA,CACA,IAAAmE,EAAArG,EAAAqG,IACAlE,EAAAkD,GAAA,WACA,IAAA5D,EAAAxN,EAAAuD,OAAA6E,MAAApI,EAAAyM,WACAqB,QAAAE,MAAA,YAAAoD,EAAAgB,EAAA5E,SAGAU,EAAAkD,GAAA,aAGA,OAAAlD,EAAAkD,IAoCApR,EAAA0M,UAIAA,EAAA+B,OAAA,CACA4D,KAAA,OACAC,OAAA,OACAC,UAAA,OACAC,QAAA,OACAC,MAAA,QACAC,KAAA,QACAC,MAAA,QACAC,KAAA,QACAC,KAAA,QACAC,MAAA,QACAC,QAAA,QACAC,IAAA,QACAC,OAAA,SAIAvG,EAAAyC,OAAA,CACA+D,QAAA,OACAC,OAAA,SACAC,QAAA,SACAC,UAAA,OACAC,KAAA,OACAC,OAAA,QACAC,KAAA,UAEAC,OAAA,OAkRAzT,EAAAqC,UAKArC,EAAA0O,YAKA1O,EAAAoN,SAKApN,EAAA0T,kBAHA,SAAAhC,GACA,aAAAA,GAOA1R,EAAA0P,WAKA1P,EAAAuM,WAKAvM,EAAA2T,SAHA,SAAAjC,GACA,uBAAAA,GAOA1R,EAAA6O,cAKA7O,EAAAuC,WAKAvC,EAAAqN,WAKArN,EAAAsC,SAMAtC,EAAAwC,UAKAxC,EAAAqP,aAUArP,EAAA4T,YARA,SAAAlC,GACA,cAAAA,GACA,kBAAAA,GACA,iBAAAA,GACA,iBAAAA,GACA,iBAAAA,QACA,IAAAA,GAIA1R,EAAA6T,SAAmB/T,EAAQ,IAY3B,IAAAgU,EAAA,uDACA,mBA6CA,SAAA/R,EAAAkK,EAAA8H,GACA,OAAAnT,OAAAkB,UAAAC,eAAA1B,KAAA4L,EAAA8H,GAjCA/T,EAAAuI,IAAA,WAVA,IACA/H,EACAwT,EASAlG,QAAAvF,IAAA,WAVA/H,EAAA,IAAA6P,KACA2D,EAAA,CAAAlC,EAAAtR,EAAAyT,YACAnC,EAAAtR,EAAA0T,cACApC,EAAAtR,EAAA2T,eAAAzJ,KAAA,KACA,CAAAlK,EAAA4T,UAAAN,EAAAtT,EAAA6T,YAAAL,GAAAtJ,KAAA,MAMA1K,EAAAuD,OAAA6E,MAAApI,EAAAyM,aAiBAzM,EAAAsU,SAAmBxU,EAAQ,IAE3BE,EAAA4O,QAAA,SAAA2F,EAAAC,GAEA,IAAAA,IAAAnH,EAAAmH,GAAA,OAAAD,EAIA,IAFA,IAAArI,EAAAtL,OAAAsL,KAAAsI,GACAtU,EAAAgM,EAAAhJ,OACAhD,KACAqU,EAAArI,EAAAhM,IAAAsU,EAAAtI,EAAAhM,IAEA,OAAAqU,GAOA,IAAAE,EAAA,oBAAAxT,cAAA,8BAAAoS,EA0DA,SAAAqB,EAAAC,EAAAC,GAKA,IAAAD,EAAA,CACA,IAAAE,EAAA,IAAAjH,MAAA,2CACAiH,EAAAF,SACAA,EAAAE,EAEA,OAAAD,EAAAD,GAlEA3U,EAAA8U,UAAA,SAAAC,GACA,sBAAAA,EACA,UAAAC,UAAA,oDAEA,GAAAP,GAAAM,EAAAN,GAAA,CACA,IAAAlH,EACA,sBADAA,EAAAwH,EAAAN,IAEA,UAAAO,UAAA,iEAKA,OAHApU,OAAAC,eAAA0M,EAAAkH,EAAA,CACAtT,MAAAoM,EAAAzM,YAAA,EAAAmU,UAAA,EAAAC,cAAA,IAEA3H,EAGA,SAAAA,IAQA,IAPA,IAAA4H,EAAAC,EACAC,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAL,EAAAI,EACAH,EAAAI,IAGA7I,EAAA,GACAzM,EAAA,EAAmBA,EAAAuM,UAAAvJ,OAAsBhD,IACzCyM,EAAArG,KAAAmG,UAAAvM,IAEAyM,EAAArG,KAAA,SAAAmP,EAAAtU,GACAsU,EACAL,EAAAK,GAEAN,EAAAhU,KAIA,IACA4T,EAAA3M,MAAA5E,KAAAmJ,GACK,MAAA8I,GACLL,EAAAK,GAGA,OAAAJ,EAQA,OALAzU,OAAA8U,eAAAnI,EAAA3M,OAAA+U,eAAAZ,IAEAN,GAAA7T,OAAAC,eAAA0M,EAAAkH,EAAA,CACAtT,MAAAoM,EAAAzM,YAAA,EAAAmU,UAAA,EAAAC,cAAA,IAEAtU,OAAAgV,iBACArI,EACAvB,EAAA+I,KAIA/U,EAAA8U,UAAAe,OAAApB,EAiDAzU,EAAA8V,YAlCA,SAAAf,GACA,sBAAAA,EACA,UAAAC,UAAA,oDAMA,SAAAe,IAEA,IADA,IAAApJ,EAAA,GACAzM,EAAA,EAAmBA,EAAAuM,UAAAvJ,OAAsBhD,IACzCyM,EAAArG,KAAAmG,UAAAvM,IAGA,IAAA8V,EAAArJ,EAAAtG,MACA,sBAAA2P,EACA,UAAAhB,UAAA,8CAEA,IAAAiB,EAAAzS,KACAoR,EAAA,WACA,OAAAoB,EAAA5N,MAAA6N,EAAAxJ,YAIAsI,EAAA3M,MAAA5E,KAAAmJ,GACAuJ,KAAA,SAAA3G,GAA2BxD,EAAAoK,SAAAvB,EAAA,KAAArF,IAC3B,SAAA6G,GAA2BrK,EAAAoK,SAAAzB,EAAA0B,EAAAxB,KAM3B,OAHAhU,OAAA8U,eAAAK,EAAAnV,OAAA+U,eAAAZ,IACAnU,OAAAgV,iBAAAG,EACA/J,EAAA+I,IACAgB,uCC5rBA,MAAA7T,EAAapC,EAAQ,GAErBuW,EAAAC,mBAEAC,EAAA,CACAhD,OAAA,SAAA3G,GACA,oBAAAA,EACA,UAAAgB,MAAA,iCAAAhB,GAEA,OAAAyJ,EAAAzJ,IAEAuG,OAAA,SAAAqD,GACA,oBAAAA,EACA,UAAA5I,MAAA,iCAAA4I,GAEA,OAAAH,EAAAxJ,OAAA2J,KAEApD,QAAA,SAAAqD,GACA,qBAAAA,EACA,UAAA7I,MAAA,kCAAA6I,GAEA,OAAAA,EAAA,SAEAjD,KAAA,SAAAA,GACA,IAAAtR,EAAAI,OAAAkR,GACA,UAAA5F,MAAA,+BAAA4F,GAEA,OAAA6C,EAAA7C,EAAAkD,gBAEA1T,MAAA,SAAAA,GACA,IAAAd,EAAAG,QAAAW,GACA,UAAA4K,MAAA,gCAAA5K,GAEA,OAAAqT,EAAApJ,KAAAC,UAAAlK,KAEApB,OAAA,SAAAqK,GACA,OAAAoK,EAAApJ,KAAAC,UAAAjB,MASAjM,EAAAe,IAAA,SAAAqB,GACA,KAAAA,KAAAmU,GACA,UAAA3I,MAAA,6BAAAxL,GAEA,OAAAmU,EAAAnU,kCC1CA,IAAAuU,EAAiB7W,EAAQ,IACzB8W,EAAW9W,EAAQ,IAiHnB,SAAA+W,EAAAC,GACA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,IAIA,SAAAC,EAAAD,GAEA,IADA,IAAAE,EAAAC,EAAA,IACA/W,EAAA,EAAmBA,EAAA,IAAOA,EAG1B+W,IAAA,MADAD,GADAA,EAAAF,EAAA5W,IACAkQ,SAAA,MACAmB,OAAAyF,EAAA9T,QAEA,OAAA+T,EAGA,SAAAC,EAAAJ,GACA,cAAAA,EAAApM,KAAA,SAnIAzK,EAAAD,QAEA,SAAAmX,GAIA,IAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAlU,EACAmU,EAAAC,EAAAzX,EAEAiX,MAAA,IAEAO,GAAAP,EAAAO,SAAA,MACAnU,EAAA4T,EAAA5T,QAAA,OAEAkU,EAAAN,EAAAM,YACAA,EAAA,OAEA,oBAAAA,EAAA,CAGA,GAFAA,IAAAG,eAEAjB,EAAAc,GACA,MAAA7J,MAAA6J,EAAA,+BAGAD,EAAAb,EAAAc,OAEK,KAAAhG,MAAApP,QAAAoV,GAIL,MAAA7J,MAAA,8BAAA6J,GAHAD,EAAAC,EAAArQ,QAMA,GAAAoQ,EAAAtU,OAAAwU,EAAA,EACA,UAAA9J,MACA6J,EAAA,6CAAAD,EAAAtU,QAcAyU,EAVAlG,MAAApP,QAAA8U,EAAAQ,OASK,IAAAR,EAAAQ,MAAAzU,OACL,MAGAiU,EAAAQ,MAAAvQ,QAXA,iBAAA+P,EAAAQ,MACA,CAAAR,EAAAQ,MAAAR,EAAAQ,OAGA,MAWAP,EAAAI,EAAA3G,IAAA,SAAAtQ,GACA,OAAAmD,KAAAmU,MAAAtX,EAAAmH,MAAAgQ,KAIAC,EAAA,GAAAjU,KAAA4B,IAAA5B,KAAAC,IAAAgU,EAAA,SACAA,EAAA,GAAAjU,KAAA4B,IAAA5B,KAAAC,IAAAgU,EAAA,SAEA,IAAAG,EAAAN,EAAA3G,IAAA,SAAAtQ,EAAAL,GACA,IAAAwH,EAAA8P,EAAAtX,GAAAwH,MAEAoP,EAAAU,EAAAtX,GAAA6X,IAAA3Q,QAGA,WAAA0P,EAAA5T,QAAA4T,EAAA,OAAAA,EAAA,MACAA,GAEAA,EAAA,GAAAa,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAjQ,EAEAoP,KAQArI,EAAA,GACA,IAAAvO,EAAA,EAAeA,EAAAkX,EAAAlU,OAAA,IAAuBhD,EAAA,CACtCqX,EAAAH,EAAAlX,EAAA,GAAAkX,EAAAlX,GACAmX,EAAAS,EAAA5X,GACAoX,EAAAQ,EAAA5X,EAAA,GAEA,QAAAuI,EAAA,EAAuBA,EAAA8O,EAAY9O,IAAA,CACnC,IAAAuP,EAAAvP,EAAA8O,EACA9I,EAAAnI,KAAA,CACA5C,KAAAmU,MAAAjB,EAAAS,EAAA,GAAAC,EAAA,GAAAU,IACAtU,KAAAmU,MAAAjB,EAAAS,EAAA,GAAAC,EAAA,GAAAU,IACAtU,KAAAmU,MAAAjB,EAAAS,EAAA,GAAAC,EAAA,GAAAU,IACApB,EAAAS,EAAA,GAAAC,EAAA,GAAAU,MAMAvJ,EAAAnI,KAAAkR,IAAAtU,OAAA,GAAA6U,IAAAE,OAAAN,EAAA,KAEA,QAAApU,EAAAkL,IAAAoC,IAAAkG,GACA,eAAAxT,EAAAkL,IAAAoC,IAAAqG,GACA,UAAA3T,IAAAkL,IAAAoC,IAAAgG,IAEA,OAAApI,yBCrHA,IAAAyJ,EAAcpY,EAAQ,IAEtB,iBAAAoY,MAAA,EAA4CjY,EAAAC,EAASgY,EAAA,MAOrD,IAAAC,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAjF,GAEavT,EAAQ,GAARA,CAA2CoY,EAAAC,GAExDD,EAAAK,SAAAtY,EAAAD,QAAAkY,EAAAK,0BCjBAtY,EAAAD,QAA2BF,EAAQ,GAARA,EAA2C,IAEtEwG,KAAA,CAAcrG,EAAAC,EAAS,y1KAAy1K,mCCKh3KD,EAAAD,QAAA,SAAAwY,GACA,IAAAC,EAAA,GAgDA,OA9CAA,EAAArI,SAAA,WACA,OAAA5M,KAAAqN,IAAA,SAAA5M,GACA,IAAAiU,EA+CA,SAAAjU,EAAAuU,GACA,IAAAN,EAAAjU,EAAA,OACAyU,EAAAzU,EAAA,GAEA,IAAAyU,EACA,OAAAR,EAGA,GAAAM,GAAA,mBAAAG,KAAA,CACA,IAAAC,GAWAC,EAXAH,EAeA,mEAFAC,KAAAG,SAAAxC,mBAAArJ,KAAAC,UAAA2L,MAEA,OAdAE,EAAAL,EAAAM,QAAAnI,IAAA,SAAAlO,GACA,uBAAA+V,EAAAO,WAAAtW,EAAA,QAEA,OAAAuV,GAAAD,OAAAc,GAAAd,OAAA,CAAAW,IAAAlO,KAAA,MAOA,IAAAmO,EAJA,OAAAX,GAAAxN,KAAA,MA/DAwO,CAAAjV,EAAAuU,GAEA,OAAAvU,EAAA,GACA,UAAAA,EAAA,OAAuCiU,EAAA,IAEvCA,IAEKxN,KAAA,KAIL+N,EAAAvY,EAAA,SAAAE,EAAA+Y,GACA,iBAAA/Y,IACAA,EAAA,OAAAA,EAAA,MAKA,IAFA,IAAAgZ,EAAA,GAEAlZ,EAAA,EAAmBA,EAAAsD,KAAAN,OAAiBhD,IAAA,CACpC,IAAAmZ,EAAA7V,KAAAtD,GAAA,GAEA,MAAAmZ,IACAD,EAAAC,IAAA,GAIA,IAAAnZ,EAAA,EAAeA,EAAAE,EAAA8C,OAAoBhD,IAAA,CACnC,IAAA+D,EAAA7D,EAAAF,GAKA,MAAA+D,EAAA,IAAAmV,EAAAnV,EAAA,MACAkV,IAAAlV,EAAA,GACAA,EAAA,GAAAkV,EACSA,IACTlV,EAAA,OAAAA,EAAA,aAAAkV,EAAA,KAGAV,EAAAnS,KAAArC,MAKAwU,oBCnDA,IAEAlL,EACA+L,EAHAC,EAAA,GAWAC,GATAjM,EASA,WAMA,OAAAxC,QAAA0O,mBAAAlT,MAAAwE,OAAA2O,MAZA,WAEA,YADA,IAAAJ,MAAA/L,EAAAnF,MAAA5E,KAAAiJ,YACA6M,IAoBAK,EAAA,SAAApM,GACA,IAAA+L,EAAA,GAEA,gBAAAM,EAAAnS,GAMA,sBAAAmS,EACA,OAAAA,IAEA,YAAAN,EAAAM,GAAA,CACA,IAAAC,EApBA,SAAAD,EAAAnS,GACA,OAAAA,EACAA,EAAAqS,cAAAF,GAEAH,SAAAK,cAAAF,IAgBAvZ,KAAAmD,KAAAoW,EAAAnS,GAEA,GAAAsD,OAAAgP,mBAAAF,aAAA9O,OAAAgP,kBACA,IAGAF,IAAAG,gBAAAC,KACK,MAAApI,GACLgI,EAAA,KAGAP,EAAAM,GAAAC,EAEA,OAAAP,EAAAM,IA1BA,GA8BAM,EAAA,KACAC,EAAA,EACAC,EAAA,GAEAC,EAAcva,EAAQ,IAqDtB,SAAAwa,EAAAnL,EAAAgJ,GACA,QAAAjY,EAAA,EAAgBA,EAAAiP,EAAAjM,OAAmBhD,IAAA,CACnC,IAAA+D,EAAAkL,EAAAjP,GACAqa,EAAAhB,EAAAtV,EAAAoV,IAEA,GAAAkB,EAAA,CACAA,EAAAC,OAEA,QAAA/R,EAAA,EAAiBA,EAAA8R,EAAAE,MAAAvX,OAA2BuF,IAC5C8R,EAAAE,MAAAhS,GAAAxE,EAAAwW,MAAAhS,IAGA,KAAQA,EAAAxE,EAAAwW,MAAAvX,OAAuBuF,IAC/B8R,EAAAE,MAAAnU,KAAAoU,EAAAzW,EAAAwW,MAAAhS,GAAA0P,QAEG,CACH,IAAAsC,EAAA,GAEA,IAAAhS,EAAA,EAAiBA,EAAAxE,EAAAwW,MAAAvX,OAAuBuF,IACxCgS,EAAAnU,KAAAoU,EAAAzW,EAAAwW,MAAAhS,GAAA0P,IAGAoB,EAAAtV,EAAAoV,IAAA,CAA2BA,GAAApV,EAAAoV,GAAAmB,KAAA,EAAAC,WAK3B,SAAAE,EAAAlC,EAAAN,GAIA,IAHA,IAAAhJ,EAAA,GACAyL,EAAA,GAEA1a,EAAA,EAAgBA,EAAAuY,EAAAvV,OAAiBhD,IAAA,CACjC,IAAA+D,EAAAwU,EAAAvY,GACAmZ,EAAAlB,EAAA5H,KAAAtM,EAAA,GAAAkU,EAAA5H,KAAAtM,EAAA,GAIA4W,EAAA,CAAcC,IAHd7W,EAAA,GAGc8W,MAFd9W,EAAA,GAEc4U,UADd5U,EAAA,IAGA2W,EAAAvB,GACAuB,EAAAvB,GAAAoB,MAAAnU,KAAAuU,GADA1L,EAAA7I,KAAAsU,EAAAvB,GAAA,CAAkDA,KAAAoB,MAAA,CAAAI,KAIlD,OAAA1L,EAGA,SAAA6L,EAAA7C,EAAAjJ,GACA,IAAA0K,EAAAD,EAAAxB,EAAAG,YAEA,IAAAsB,EACA,UAAAhM,MAAA,+GAGA,IAAAqN,EAAAb,IAAAlX,OAAA,GAEA,WAAAiV,EAAA+C,SACAD,EAEGA,EAAAE,YACHvB,EAAAwB,aAAAlM,EAAA+L,EAAAE,aAEAvB,EAAAyB,YAAAnM,GAJA0K,EAAAwB,aAAAlM,EAAA0K,EAAA0B,YAMAlB,EAAA9T,KAAA4I,QACE,cAAAiJ,EAAA+C,SACFtB,EAAAyB,YAAAnM,OACE,qBAAAiJ,EAAA+C,WAAA/C,EAAA+C,SAAAK,OAIF,UAAA3N,MAAA,8LAHA,IAAAuN,EAAAxB,EAAAxB,EAAA+C,SAAAK,OAAA3B,GACAA,EAAAwB,aAAAlM,EAAAiM,IAMA,SAAAK,EAAAtM,GACA,UAAAA,EAAAuM,WAAA,SACAvM,EAAAuM,WAAAC,YAAAxM,GAEA,IAAAa,EAAAqK,EAAAhW,QAAA8K,GACAa,GAAA,GACAqK,EAAAtS,OAAAiI,EAAA,GAIA,SAAA4L,EAAAxD,GACA,IAAAjJ,EAAAuK,SAAAmC,cAAA,SAMA,QAJAvI,IAAA8E,EAAA0D,MAAAzZ,OACA+V,EAAA0D,MAAAzZ,KAAA,iBAGAiR,IAAA8E,EAAA0D,MAAAC,MAAA,CACA,IAAAA,EAgCA,WACK,EAIL,OAAQhc,EAAAic,GArCRC,GACAF,IACA3D,EAAA0D,MAAAC,SAOA,OAHAG,EAAA/M,EAAAiJ,EAAA0D,OACAb,EAAA7C,EAAAjJ,GAEAA,EAiBA,SAAA+M,EAAAC,EAAAL,GACAjb,OAAAsL,KAAA2P,GAAAhM,QAAA,SAAApO,GACAya,EAAAC,aAAA1a,EAAAoa,EAAApa,MAYA,SAAAiZ,EAAAzO,EAAAkM,GACA,IAAAjJ,EAAAjE,EAAAzD,EAAAZ,EAGA,GAAAuR,EAAAE,WAAApM,EAAA6O,IAAA,CAKA,KAJAlU,EAAA,mBAAAuR,EAAAE,UACAF,EAAAE,UAAApM,EAAA6O,KACA3C,EAAAE,UAAAjV,QAAA6I,EAAA6O,MASA,oBAJA7O,EAAA6O,IAAAlU,EAUA,GAAAuR,EAAA+B,UAAA,CACA,IAAAkC,EAAAjC,IAEAjL,EAAAgL,MAAAyB,EAAAxD,IAEAlN,EAAAoR,EAAA3a,KAAA,KAAAwN,EAAAkN,GAAA,GACA5U,EAAA6U,EAAA3a,KAAA,KAAAwN,EAAAkN,GAAA,QAGAnQ,EAAA4M,WACA,mBAAAyD,KACA,mBAAAA,IAAAC,iBACA,mBAAAD,IAAAE,iBACA,mBAAAC,MACA,mBAAA9D,MAEAzJ,EAlEA,SAAAiJ,GACA,IAAAuE,EAAAjD,SAAAmC,cAAA,QAUA,YARAvI,IAAA8E,EAAA0D,MAAAzZ,OACA+V,EAAA0D,MAAAzZ,KAAA,YAEA+V,EAAA0D,MAAAc,IAAA,aAEAV,EAAAS,EAAAvE,EAAA0D,OACAb,EAAA7C,EAAAuE,GAEAA,EAuDAE,CAAAzE,GACAlN,EAiFA,SAAAyR,EAAAvE,EAAAlM,GACA,IAAA6O,EAAA7O,EAAA6O,IACAjC,EAAA5M,EAAA4M,UAQAgE,OAAAxJ,IAAA8E,EAAA2E,uBAAAjE,GAEAV,EAAA2E,uBAAAD,KACA/B,EAAAT,EAAAS,IAGAjC,IAEAiC,GAAA,uDAAuDnC,KAAAG,SAAAxC,mBAAArJ,KAAAC,UAAA2L,MAAA,OAGvD,IAAAkE,EAAA,IAAAN,KAAA,CAAA3B,GAAA,CAA6B1Y,KAAA,aAE7B4a,EAAAN,EAAAO,KAEAP,EAAAO,KAAAX,IAAAC,gBAAAQ,GAEAC,GAAAV,IAAAE,gBAAAQ,IA5GAtb,KAAA,KAAAwN,EAAAiJ,GACA3Q,EAAA,WACAgU,EAAAtM,GAEAA,EAAA+N,MAAAX,IAAAE,gBAAAtN,EAAA+N,SAGA/N,EAAAyM,EAAAxD,GACAlN,EAsDA,SAAAiE,EAAAjD,GACA,IAAA6O,EAAA7O,EAAA6O,IACAC,EAAA9O,EAAA8O,MAEAA,GACA7L,EAAAiN,aAAA,QAAApB,GAGA,GAAA7L,EAAAgO,WACAhO,EAAAgO,WAAAC,QAAArC,MACE,CACF,KAAA5L,EAAAoM,YACApM,EAAAwM,YAAAxM,EAAAoM,YAGApM,EAAAmM,YAAA5B,SAAA2D,eAAAtC,MArEApZ,KAAA,KAAAwN,GACA1H,EAAA,WACAgU,EAAAtM,KAMA,OAFAjE,EAAAgB,GAEA,SAAAoR,GACA,GAAAA,EAAA,CACA,GACAA,EAAAvC,MAAA7O,EAAA6O,KACAuC,EAAAtC,QAAA9O,EAAA8O,OACAsC,EAAAxE,YAAA5M,EAAA4M,UAEA,OAGA5N,EAAAgB,EAAAoR,QAEA7V,KA1PAvH,EAAAD,QAAA,SAAAyY,EAAAN,GACA,uBAAAmF,cACA,iBAAA7D,SAAA,UAAA7L,MAAA,iEAGAuK,KAAA,IAEA0D,MAAA,iBAAA1D,EAAA0D,MAAA1D,EAAA0D,MAAA,GAIA1D,EAAA+B,WAAA,kBAAA/B,EAAA+B,YAAA/B,EAAA+B,UAAAV,KAGArB,EAAAG,aAAAH,EAAAG,WAAA,QAGAH,EAAA+C,WAAA/C,EAAA+C,SAAA,UAEA,IAAA/L,EAAAwL,EAAAlC,EAAAN,GAIA,OAFAmC,EAAAnL,EAAAgJ,GAEA,SAAAoF,GAGA,IAFA,IAAAC,EAAA,GAEAtd,EAAA,EAAiBA,EAAAiP,EAAAjM,OAAmBhD,IAAA,CACpC,IAAA+D,EAAAkL,EAAAjP,IACAqa,EAAAhB,EAAAtV,EAAAoV,KAEAmB,OACAgD,EAAAlX,KAAAiU,GAGAgD,GAEAjD,EADAK,EAAA4C,EAAApF,GACAA,GAGA,IAAAjY,EAAA,EAAiBA,EAAAsd,EAAAta,OAAsBhD,IAAA,CACvC,IAAAqa,EAEA,QAFAA,EAAAiD,EAAAtd,IAEAsa,KAAA,CACA,QAAA/R,EAAA,EAAmBA,EAAA8R,EAAAE,MAAAvX,OAA2BuF,IAAA8R,EAAAE,MAAAhS,YAE9C8Q,EAAAgB,EAAAlB,QAkNA,IACAoE,EADAC,GACAD,EAAA,GAEA,SAAA/V,EAAAiW,GAGA,OAFAF,EAAA/V,GAAAiW,EAEAF,EAAAG,OAAAC,SAAAnT,KAAA,QAIA,SAAA2R,EAAAnN,EAAAxH,EAAAF,EAAAyE,GACA,IAAA6O,EAAAtT,EAAA,GAAAyE,EAAA6O,IAEA,GAAA5L,EAAAgO,WACAhO,EAAAgO,WAAAC,QAAAO,EAAAhW,EAAAoT,OACE,CACF,IAAAgD,EAAArE,SAAA2D,eAAAtC,GACAiD,EAAA7O,EAAA6O,WAEAA,EAAArW,IAAAwH,EAAAwM,YAAAqC,EAAArW,IAEAqW,EAAA7a,OACAgM,EAAAkM,aAAA0C,EAAAC,EAAArW,IAEAwH,EAAAmM,YAAAyC,oBC7UA7d,EAAAD,QAAA,SAAA8a,GAEA,IAAA1P,EAAA,oBAAAL,eAAAK,SAEA,IAAAA,EACA,UAAAwC,MAAA,oCAIA,IAAAkN,GAAA,iBAAAA,EACA,OAAAA,EAGA,IAAAkD,EAAA5S,EAAA6S,SAAA,KAAA7S,EAAA8S,KACAC,EAAAH,EAAA5S,EAAAgT,SAAAtR,QAAA,iBA2DA,OA/BAgO,EAAAhO,QAAA,+DAAAuR,EAAAC,GAEA,IAWAC,EAXAC,EAAAF,EACAG,OACA3R,QAAA,oBAAAnM,EAAA+d,GAAwC,OAAAA,IACxC5R,QAAA,oBAAAnM,EAAA+d,GAAwC,OAAAA,IAGxC,0DAAAvM,KAAAqM,GACAH,GAQAE,EAFA,IAAAC,EAAApa,QAAA,MAEAoa,EACG,IAAAA,EAAApa,QAAA,KAEH4Z,EAAAQ,EAGAL,EAAAK,EAAA1R,QAAA,YAIA,OAAAG,KAAAC,UAAAqR,GAAA,yBCnFA,MAAAI,EAAe7e,EAAQ,IAAU6e,OACjCzc,EAAapC,EAAQ,GACrByW,EAAoBzW,EAAQ,GAU5B6K,EAAA3K,EAAA2K,MAAA,SAAAU,EAAAQ,GACArI,KAAAob,QAAAvT,EACA7H,KAAAqb,UAAA,GACArb,KAAAsb,WAAA,GACAtb,KAAAub,UAAAlT,EACArI,KAAAwb,eAAA,MAGArU,EAAA7I,UAAAmd,kBAAA,WACAzb,KAAAwb,gBACAE,aAAA1b,KAAAwb,gBAEAxb,KAAAwb,eAAAG,WAAA3b,KAAA4b,mBAAA1d,KAAA8B,QAGAmH,EAAA7I,UAAAsd,mBAAA,WACA5b,KAAAwb,eAAA,KACAxb,KAAAub,UAAAvb,KAAAob,QAAApb,KAAAqb,YAGAlU,EAAA7I,UAAAmJ,OAAA,SAAAI,GACA7H,KAAA6b,cACAH,aAAA1b,KAAA6b,cAEA7b,KAAA6b,aAAAF,WAAA3b,KAAA8b,iBAAA5d,KAAA8B,KAAA6H,KAGAV,EAAA7I,UAAAwd,iBAAA,SAAAC,GACA/b,KAAA6b,aAAA,KACA,MAAAhU,EAAA7H,KAAAob,QACAY,EAAAhc,KAAAsb,WAAA1X,QACA,QAAAlH,EAAAsf,EAAAtc,OAAA,EAAoChD,GAAA,IAAQA,EAAA,CAC5C,MAAAuf,EAAAD,EAAAtf,GACAwf,EAAAD,EAAAC,OACA,IAAAC,GAAA,EACA,MAAAC,EAAA,GACAF,EAAAG,WAAA,SAAApe,EAAAqe,GACA,IAAAC,EACA,GAAAD,KAAAP,GAQO,GAAAlU,EAAAyU,KAAAP,EAAAO,GACP,IACAC,EAAAL,EAAAvU,YAAA1J,EAAA8d,EAAAO,IACAzU,EAAAyU,GAAAP,EAAAO,GACAF,EAAAne,GAAAse,EACAJ,GAAA,EACS,MAAAlK,SAdT,CACAsK,EAAAL,EAAAM,WAAAve,GACA,MAAAwe,EAAAP,EAAAhU,UAAAjK,EAAAse,GACA1U,EAAAyU,KAAAG,IACAN,GAAA,EACAtU,EAAAyU,GAAAG,EACAL,EAAAne,GAAAse,MAaAJ,GAAAnc,KAAAsb,WAAA1a,QAAAqb,IAAA,GACAA,EAAA5T,SAAA+T,KAUAjV,EAAA7I,UAAAgK,WAAA,SAAAD,GACA,IAAAqU,EAQA,GAPA1c,KAAAsb,WAAAtb,KAAAsb,WAAAlB,OAAA,SAAA6B,GACA,MAAAjY,EAAAiY,EAAA5T,aAIA,OAHArE,IACA0Y,EAAAT,IAEAjY,KAEA0Y,EACA,UAAAtS,MAAA,8CAEA,MAAAvC,EAAA7H,KAAAob,QACAtT,EAAA9H,KAAAqb,UACAqB,EAAAR,OAAAG,WAAA,SAAApe,EAAAqe,UACAzU,EAAAyU,UACAxU,EAAAwU,KAEAtc,KAAAyb,qBASAtU,EAAA7I,UAAA6J,SAAA,SAAAC,EAAAC,GACA,MAAA4T,EAAA,CACAC,OAAA,IAAAf,EAAA/S,GACAC,YAIA,QAAA3L,EAAA,EAAA+C,EAAAO,KAAAsb,WAAA5b,OAA8ChD,EAAA+C,IAAQ/C,EAAA,CACtD,MAAAigB,EAAAV,EAAAC,OAAAS,UAAA3c,KAAAsb,WAAA5e,GAAAwf,QACA,GAAAS,EACA,UAAAvS,MACA,oDAAAuS,GAGA,GAAAV,EAAA5T,WAAArI,KAAAsb,WAAA5e,GAAA2L,SACA,UAAA+B,MAAA,sDAOA,OAHApK,KAAAsb,WAAAxY,KAAAmZ,GACAjc,KAAA4c,oBAAAX,GAEA,SAAAG,GACA,QAAApc,KAAAsb,WAAA1a,QAAAqb,GACA,UAAA7R,MAAA,oDAEA,MAAA8R,EAAAD,EAAAC,OACA,IAAAC,GAAA,EACA,MAAAtU,EAAA7H,KAAAob,QACAc,EAAAG,WAAA,SAAApe,EAAAqe,GACA,GAAAre,KAAAme,EAAA,CACA,MAAAS,EAAAX,EAAAhU,UAAAjK,EAAAme,EAAAne,GAAAme,GACAvU,EAAAyU,KAAAO,IACAV,GAAA,EACAtU,EAAAyU,GAAAO,MAIAV,GACAnc,KAAAyb,qBAEGvd,KAAA8B,OAOHmH,EAAA7I,UAAAse,oBAAA,SAAAX,GACA,MAAAG,EAAA,GACAtU,EAAA,GACAD,EAAA7H,KAAAob,QACAa,EAAAC,OAAAG,WAAA,SAAApe,EAAAqe,GACA,IAAAQ,EACA,MAAAC,EAAAd,EAAAC,OAAAM,WAAAve,GACAwe,EAAAR,EAAAC,OAAAhU,UACAjK,EACA8e,GAEA,GAAAT,KAAAzU,EACA,IACAiV,EAAAb,EAAAC,OAAAvU,YAAA1J,EAAA4J,EAAAyU,IACO,MAAArK,GACP6K,EAAAC,OAGAD,EAAAC,EAEAX,EAAAne,GAAA6e,EACAhV,EAAAwU,GAAAG,EACA5U,EAAAyU,GAAAL,EAAAC,OAAAhU,UAAAjK,EAAA6e,KAEA,UAAAR,KAAAxU,EACA9H,KAAAqb,UAAAiB,GAAAxU,EAAAwU,GAEAL,EAAA5T,SAAA+T,IAQAjV,EAAA7I,UAAA4J,UAAA,SAAAL,GACA,MAAAmV,EAAA,GACA,QAAAtgB,EAAA,EAAA+C,EAAAO,KAAAsb,WAAA5b,OAA8ChD,EAAA+C,IAAQ/C,EAAA,CACtD,MAAAuf,EAAAjc,KAAAsb,WAAA5e,GACAuf,EAAAC,OAAAG,WAAA,SAAApe,EAAAqe,GACAA,KAAAzU,IACAmV,EAAAV,GAAAL,EAAAC,OAAAhU,UACAjK,EACA4J,EAAAyU,GACAzU,MAKA,UAAA5J,KAAA4J,EACA,KAAA5J,KAAA+e,GAAA,CACA,MAAArf,EAAAkK,EAAA5J,GACAW,EAAAF,EAAAC,OAAAhB,GACAsf,EAAAlK,EAAAxV,IAAAqB,GACAoe,EAAA/e,GAAAgf,EAAAtf,GAGA,OAAAqf,oBCpNA,MAAAE,EAAc5gB,EAAQ,IAAS4gB,MAC/Bxe,EAAapC,EAAQ,GAOrB6e,EAAA3e,EAAA2e,OAAA,SAAA/S,GAEA,MAAA+U,EAAA,GACA,IAAAC,EACA,MAHAhV,EAAA1J,EAAAO,OAAA,GAAyBmJ,MAIzBgV,EAAAhV,EAAAuB,SACAvB,EAAAuB,GAEA,UAAA1L,KAAAmK,EACA+U,EAAAlf,GAAA,IAAAif,EAAA9U,EAAAnK,IAEA+B,KAAAqd,QAAAD,EACApd,KAAAsd,QAAAH,GAQAhC,EAAA7c,UAAAif,YAAA,SAAAtf,GACA,OAAA+B,KAAAqd,QAAArd,KAAAqd,QAAA,IAAApf,KASAkd,EAAA7c,UAAA+d,WAAA,SAAAhU,EAAAmV,GACA,IAAAC,EACA,UAAAxf,KAAA+B,KAAAsd,QAEA,SADAG,EAAApV,EAAAxL,KAAA2gB,EAAAvf,EAAA+B,KAAAud,YAAAtf,KAEA,QAYAkd,EAAA7c,UAAA4J,UAAA,SAAAjK,EAAAN,EAAAkK,GACA,KAAA5J,KAAA+B,KAAAsd,SACA,UAAAlT,MAAA,gBAAAnM,GAEA,OAAA+B,KAAAsd,QAAArf,GAAAiK,UAAAvK,EAAAkK,IASAsT,EAAA7c,UAAAqJ,YAAA,SAAA1J,EAAAmL,GACA,KAAAnL,KAAA+B,KAAAsd,SACA,UAAAlT,MAAA,gBAAAnM,GAEA,OAAA+B,KAAAsd,QAAArf,GAAA0J,YAAAyB,IAQA+R,EAAA7c,UAAAke,WAAA,SAAAve,GACA,KAAAA,KAAA+B,KAAAsd,SACA,UAAAlT,MAAA,gBAAAnM,GAEA,OAAA+B,KAAAsd,QAAArf,GAAA2B,SAWAub,EAAA7c,UAAAqe,UAAA,SAAAe,GACA,MAAAC,EAAA,GACA,UAAA1f,KAAA+B,KAAAsd,QACAK,EAAA3d,KAAAud,YAAAtf,KAAA,EAGA,IAAA0e,GAAA,EAOA,OANAe,EAAArB,WAAA,SAAA1S,EAAA2S,GAIA,OAHAA,KAAAqB,IACAhB,EAAAL,IAEAK,IAEAA,oBC5GA,MAAAje,EAAapC,EAAQ,GAErByW,EAAoBzW,EAAQ,GAC5BshB,EAAsBthB,EAAQ,IAW9BE,EAAA0gB,MAAA,SAAA9U,GACA,cAAA1J,EAAAC,OAAAyJ,GACApI,KAAAJ,QAAAwI,MACG,kBAAAA,GACH,UAAAgC,MAAA,mBAEApK,KAAAJ,QAAAwI,EAAAxI,QAGA,MAAAhB,EAAAF,EAAAC,OAAAqB,KAAAJ,SACAI,KAAAkI,UAAAE,EAAAF,WAAA6K,EAAAxV,IAAAqB,GACAoB,KAAA2H,YAAAS,EAAAT,aAAAiW,EAAArgB,IAAAqB,mBCxBA,IAOAif,EACAC,EARAvV,EAAA9L,EAAAD,QAAA,GAUA,SAAAuhB,IACA,UAAA3T,MAAA,mCAEA,SAAA4T,IACA,UAAA5T,MAAA,qCAsBA,SAAA6T,EAAAC,GACA,GAAAL,IAAAlC,WAEA,OAAAA,WAAAuC,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAlC,WAEA,OADAkC,EAAAlC,WACAA,WAAAuC,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAA7P,GACL,IAEA,OAAAwP,EAAAhhB,KAAA,KAAAqhB,EAAA,GACS,MAAA7P,GAET,OAAAwP,EAAAhhB,KAAAmD,KAAAke,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAAlC,WACAA,WAEAoC,EAEK,MAAA1P,GACLwP,EAAAE,EAEA,IAEAD,EADA,mBAAApC,aACAA,aAEAsC,EAEK,MAAA3P,GACLyP,EAAAE,GAjBA,GAwEA,IAEAG,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAAze,OACA0e,EAAAD,EAAA1J,OAAA2J,GAEAE,GAAA,EAEAF,EAAA1e,QACA8e,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAI,EAAAR,EAAAM,GACAF,GAAA,EAGA,IADA,IAAAhb,EAAA+a,EAAA1e,OACA2D,GAAA,CAGA,IAFA8a,EAAAC,EACAA,EAAA,KACAE,EAAAjb,GACA8a,GACAA,EAAAG,GAAAI,MAGAJ,GAAA,EACAjb,EAAA+a,EAAA1e,OAEAye,EAAA,KACAE,GAAA,EAnEA,SAAAM,GACA,GAAAb,IAAApC,aAEA,OAAAA,aAAAiD,GAGA,IAAAb,IAAAE,IAAAF,IAAApC,aAEA,OADAoC,EAAApC,aACAA,aAAAiD,GAEA,IAEAb,EAAAa,GACK,MAAAtQ,GACL,IAEA,OAAAyP,EAAAjhB,KAAA,KAAA8hB,GACS,MAAAtQ,GAGT,OAAAyP,EAAAjhB,KAAAmD,KAAA2e,KAgDAC,CAAAH,IAiBA,SAAAI,EAAAX,EAAA1e,GACAQ,KAAAke,MACAle,KAAAR,QAYA,SAAAsf,KA5BAvW,EAAAoK,SAAA,SAAAuL,GACA,IAAA/U,EAAA,IAAA8E,MAAAhF,UAAAvJ,OAAA,GACA,GAAAuJ,UAAAvJ,OAAA,EACA,QAAAhD,EAAA,EAAuBA,EAAAuM,UAAAvJ,OAAsBhD,IAC7CyM,EAAAzM,EAAA,GAAAuM,UAAAvM,GAGA0hB,EAAAtb,KAAA,IAAA+b,EAAAX,EAAA/U,IACA,IAAAiV,EAAA1e,QAAA2e,GACAJ,EAAAO,IASAK,EAAAvgB,UAAAogB,IAAA,WACA1e,KAAAke,IAAAtZ,MAAA,KAAA5E,KAAAR,QAEA+I,EAAAwW,MAAA,UACAxW,EAAAyW,SAAA,EACAzW,EAAAiG,IAAA,GACAjG,EAAA0W,KAAA,GACA1W,EAAA2W,QAAA,GACA3W,EAAA4W,SAAA,GAIA5W,EAAA6W,GAAAN,EACAvW,EAAA8W,YAAAP,EACAvW,EAAA+W,KAAAR,EACAvW,EAAAgX,IAAAT,EACAvW,EAAAiX,eAAAV,EACAvW,EAAAkX,mBAAAX,EACAvW,EAAAmX,KAAAZ,EACAvW,EAAAoX,gBAAAb,EACAvW,EAAAqX,oBAAAd,EAEAvW,EAAAsX,UAAA,SAAA5iB,GAAqC,UAErCsL,EAAAuX,QAAA,SAAA7iB,GACA,UAAAmN,MAAA,qCAGA7B,EAAAwX,IAAA,WAA2B,WAC3BxX,EAAAyX,MAAA,SAAAC,GACA,UAAA7V,MAAA,mCAEA7B,EAAA2X,MAAA,WAA4B,yBCvL5BzjB,EAAAD,QAAA,SAAA0R,GACA,OAAAA,GAAA,iBAAAA,GACA,mBAAAA,EAAAiS,MACA,mBAAAjS,EAAAkS,MACA,mBAAAlS,EAAAmS,0BCJA,mBAAAjjB,OAAAY,OAEAvB,EAAAD,QAAA,SAAA8jB,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAAhiB,UAAAlB,OAAAY,OAAAuiB,EAAAjiB,UAAA,CACAwN,YAAA,CACAnO,MAAA2iB,EACAhjB,YAAA,EACAmU,UAAA,EACAC,cAAA,MAMAjV,EAAAD,QAAA,SAAA8jB,EAAAC,GACAD,EAAAE,OAAAD,EACA,IAAAE,EAAA,aACAA,EAAAniB,UAAAiiB,EAAAjiB,UACAgiB,EAAAhiB,UAAA,IAAAmiB,EACAH,EAAAhiB,UAAAwN,YAAAwU,oBCpBA,MAAA5hB,EAAapC,EAAQ,GAErBokB,EAAAC,mBAIA/C,EAAA,CACA7N,OAAA,SAAA3G,GACA,IAAAA,GAAA,iBAAAA,EACA,UAAAgB,MAAA,mCAAAhB,GAEA,OAAAsX,EAAAtX,IAEAuG,OAAA,SAAAvG,GACA,IAAAA,GAAA,iBAAAA,EACA,UAAAgB,MAAA,mCAAAhB,GAEA,MAAA4J,EAAAxJ,OAAAkX,EAAAtX,IACA,GAAAwX,MAAA5N,GACA,UAAA5I,MAAA,qCAAAhB,GAEA,OAAA4J,GAEApD,QAAA,SAAAxG,GACA,IAAAA,GAAA,iBAAAA,EACA,UAAAgB,MAAA,mCAAAhB,GAEA,IAAA6J,EACA,SAAA7J,EACA6J,GAAA,MACK,UAAA7J,EAGL,UAAAgB,MAAA,oCAAAhB,GAFA6J,GAAA,EAIA,OAAAA,GAEAjD,KAAA,SAAA5G,GACA,IAAAA,GAAA,iBAAAA,EACA,UAAAgB,MAAA,mCAAAhB,GAEA,MAAA4G,EAAA,IAAAnD,KAAA6T,EAAAtX,IACA,GAAAwX,MAAA5Q,EAAA6Q,WACA,UAAAzW,MAAA,mCAAAhB,GAEA,OAAA4G,GAEAxQ,MAAA,SAAA4J,GACA,IAAAA,GAAA,iBAAAA,EACA,UAAAgB,MAAA,mCAAAhB,GAEA,IAAA5J,EACA,IACAA,EAAAiK,KAAAqX,MAAAJ,EAAAtX,IACK,MAAA6I,IAGL,IAAAzS,GAAA,UAAAd,EAAAC,OAAAa,GACA,UAAA4K,MAAA,qCAAAhB,GAEA,OAAA5J,GAEApB,OAAA,SAAAgL,GACA,IAAAA,GAAA,iBAAAA,EACA,UAAAgB,MAAA,mCAAAhB,GAEA,IAAAX,EACA,IACAA,EAAAgB,KAAAqX,MAAAJ,EAAAtX,IACK,MAAA6I,IAGL,IAAAxJ,GAAA,WAAA/J,EAAAC,OAAA8J,GACA,UAAA2B,MAAA,sCAAAhB,GAEA,OAAAX,IASAjM,EAAAe,IAAA,SAAAqB,GACA,KAAAA,KAAAgf,GACA,UAAAxT,MAAA,+BAAAxL,GAEA,OAAAgf,EAAAhf,qBCxFA,MAAAF,EAAapC,EAAQ,GAgCrBE,EAAAmL,YAzBA,SAAAP,GACA,IAAA/H,EAGAA,EAFA+H,EAAA1H,OAAA,EACA0H,EAAA2Z,UAAA,GACAlT,MAAA,KAEA,GAEA,OAAAnP,EAAAa,MAAAF,IAkBA7C,EAAA0L,UAVA,SAAAL,GACA,IAAAzD,EAAA,IACA,MAAA6S,EAAAvY,EAAAU,IAAAyI,GAIA,OAHAoP,EAAAvX,OAAA,IACA0E,EAAA,KAAA6S,EAAA/P,KAAA,MAEA9C,kBC7BA3H,EAAAD,QAAA,CACAwkB,IAAA,EAAS9c,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,KAAAqQ,IAAA,YAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,WAA8B,CAAErQ,MAAA,EAAAqQ,IAAA,YAE1K0M,IAAA,EAAS/c,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,WAA8B,CAAErQ,MAAA,KAAAqQ,IAAA,YAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,WAA8B,CAAErQ,MAAA,KAAAqQ,IAAA,WAA8B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,YAEhV2M,IAAA,EAAShd,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,GAAAqQ,IAAA,WAA4B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEjG4M,KAAA,EAAUjd,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,EAAAqQ,IAAA,cAExC6M,OAAA,EAAYld,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,EAAAqQ,IAAA,cAE1C8M,OAAA,EAAYnd,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1C+M,OAAA,EAAYpd,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,EAAAqQ,IAAA,cAExCgN,OAAA,EAAYrd,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,EAAAqQ,IAAA,cAExCiN,KAAA,EAAUtd,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,eAAkC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1GkN,OAAA,EAAYvd,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,KAAAqQ,IAAA,eAAkC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1EmN,MAAA,EAAWxd,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,EAAAqQ,IAAA,gBAErCoN,OAAA,EAAYzd,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,cAAiC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,eAAkC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,KAAAqQ,IAAA,eAAkC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1RqN,OAAA,EAAY1d,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,KAAAqQ,IAAA,YAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,KAAAqQ,IAAA,eAAkC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,KAAAqQ,IAAA,eAAkC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEzRsN,OAAA,EAAY3d,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,KAAAqQ,IAAA,YAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,cAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,KAAAqQ,IAAA,eAAkC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAExRuN,QAAA,EAAa5d,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,EAAAqQ,IAAA,YAEzCwN,KAAA,EAAU7d,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,EAAAqQ,IAAA,cAE/KyN,OAAA,EAAY9d,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,YAEzV0N,QAAA,EAAa/d,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,KAAAqQ,IAAA,WAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,KAAAqQ,IAAA,aAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,YAElR2N,SAAA,EAAche,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,cAEjJ4N,UAAA,EAAeje,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,GAAAqQ,IAAA,WAA4B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEzI6N,MAAA,EAAWle,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,EAAAqQ,IAAA,gBAExK8N,SAAA,EAAcne,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,YAA6B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEvKJ,MAAA,EAAYjQ,MAAA,EAAAqQ,IAAA,iBAAkC,CAAErQ,MAAA,EAAAqQ,IAAA,kBAEhD+N,QAAA,EAAcpe,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,eAEpRgO,QAAA,EAAcre,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEhRiO,MAAA,EAAYte,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEjRkO,OAAA,EAAave,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,eAEpRmO,KAAA,EAAWxe,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,EAAAqQ,IAAA,cAE/Q4M,KAAA,EAAWjd,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,EAAAqQ,IAAA,cAE9QoO,eAAA,EAAmBze,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,YAA6B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,EAAAqQ,IAAA,cAElVqO,WAAA,EAAiB1e,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1RsO,KAAA,EAAW3e,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAElRuO,YAAA,EAAkB5e,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEvRwO,QAAA,EAAc7e,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,eAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1RyO,mBAAA,EAAuB9e,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEjS0O,kBAAA,EAAsB/e,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE9R2O,OAAA,EAAahf,MAAA,EAAAqQ,IAAA,UAAyB,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE9Q4O,IAAA,EAAUjf,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,eAE/Q6O,MAAA,EAAYlf,MAAA,EAAAqQ,IAAA,cAA6B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,EAAAqQ,IAAA,eAEtR8O,SAAA,EAAenf,MAAA,EAAAqQ,IAAA,aAA4B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1R+O,YAAA,EAAkBpf,MAAA,EAAAqQ,IAAA,WAA0B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,EAAAqQ,IAAA,eAE1RgP,UAAA,EAAgBrf,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAEtRiP,gBAAA,EAAoBtf,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE9RkP,iBAAA,EAAqBvf,MAAA,EAAAqQ,IAAA,YAA2B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gBAE1RmP,UAAA,EAAgBxf,MAAA,EAAAqQ,IAAA,SAAwB,CAAErQ,MAAA,IAAAqQ,IAAA,WAA6B,CAAErQ,MAAA,IAAAqQ,IAAA,YAA8B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,aAA+B,CAAErQ,MAAA,GAAAqQ,IAAA,aAA8B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,GAAAqQ,IAAA,cAA+B,CAAErQ,MAAA,IAAAqQ,IAAA,cAAgC,CAAErQ,MAAA,IAAAqQ,IAAA,eAAiC,CAAErQ,MAAA,EAAAqQ,IAAA,gCCtFxf9X,EAAAD,QAHA,SAAAmnB,EAAAC,EAAAhmB,GACA,OAAA+lB,GAAA,EAAA/lB,GAAAgmB,EAAAhmB,oBCA6DnB,EAAAD,QAG5D,WAAqB,aA8CtB,SAAAqnB,EAAAthB,EAAA7F,EAAAuI,GACA,IAAA6e,EAAAvhB,EAAA7F,GACA6F,EAAA7F,GAAA6F,EAAA0C,GACA1C,EAAA0C,GAAA6e,EAGA,SAAAC,EAAAniB,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,IAGA,OAtDA,SAAAU,EAAArB,EAAAsB,EAAAC,EAAAC,IAIA,SAAAshB,EAAAzhB,EAAArB,EAAAsB,EAAAC,EAAAC,GAEA,KAAAD,EAAAD,GAAA,CACA,GAAAC,EAAAD,EAAA,KACA,IAAArE,EAAAsE,EAAAD,EAAA,EACA1F,EAAAoE,EAAAsB,EAAA,EACAyhB,EAAA/jB,KAAA6E,IAAA5G,GACAM,EAAA,GAAAyB,KAAAgkB,IAAA,EAAAD,EAAA,GACAE,EAAA,GAAAjkB,KAAAoF,KAAA2e,EAAAxlB,GAAAN,EAAAM,GAAAN,IAAArB,EAAAqB,EAAA,UACAimB,EAAAlkB,KAAAC,IAAAqC,EAAAtC,KAAAmkB,MAAAnjB,EAAApE,EAAA2B,EAAAN,EAAAgmB,IACAG,EAAApkB,KAAA4B,IAAAW,EAAAvC,KAAAmkB,MAAAnjB,GAAA/C,EAAArB,GAAA2B,EAAAN,EAAAgmB,IACAH,EAAAzhB,EAAArB,EAAAkjB,EAAAE,EAAA5hB,GAGA,IAAA9E,EAAA2E,EAAArB,GACAxE,EAAA8F,EACAyC,EAAAxC,EAKA,IAHAohB,EAAAthB,EAAAC,EAAAtB,GACAwB,EAAAH,EAAAE,GAAA7E,GAAA,GAAAimB,EAAAthB,EAAAC,EAAAC,GAEA/F,EAAAuI,GAAA,CAIA,IAHA4e,EAAAthB,EAAA7F,EAAAuI,GACAvI,IACAuI,IACAvC,EAAAH,EAAA7F,GAAAkB,GAAA,GAAAlB,IACA,KAAAgG,EAAAH,EAAA0C,GAAArH,GAAA,GAAAqH,IAGA,IAAAvC,EAAAH,EAAAC,GAAA5E,GAAAimB,EAAAthB,EAAAC,EAAAyC,GAGA4e,EAAAthB,IADA0C,EACAxC,GAGAwC,GAAA/D,IAAAsB,EAAAyC,EAAA,GACA/D,GAAA+D,IAAAxC,EAAAwC,EAAA,IAvCA+e,CAAAzhB,EAAArB,EAAAsB,GAAA,EAAAC,GAAAF,EAAA7C,OAAA,EAAAgD,GAAAqhB,IAN6DQ,kDCWlDC,EAAM,mBAAApnB,OAAAqnB,OAAArnB,OAAAqnB,OAAA,SAAArO,EAAAsO,GACjB,GAAAtO,QACA,UAAA5E,UAAA,8CAGA,IADA,IAAA1E,EAAA1P,OAAAgZ,GACA1Z,EAAA,EAAA+C,EAAAwJ,UAAAvJ,OAA0ChD,EAAA+C,IAAQ/C,EAAA,CAClD,IAAAyC,EAAA8J,UAAAvM,GACA,GAAAyC,QACA,QAAAlB,KAAAkB,EACAA,EAAAZ,eAAAN,KACA6O,EAAA7O,GAAAkB,EAAAlB,IAKA,OAAA6O,GAMO,SAAAvM,EAAAnC,GACP,QAAAC,KAAAD,SACAA,EAAAC,GAWO,IAAAsmB,EAAA,mBAAAvnB,OAAAyK,OAAAzK,OAAAyK,OAAA,SAAAzJ,GACP,IAAAyJ,EAAA,GACA,QAAAxJ,KAAAD,EACAyJ,EAAA/E,KAAA1E,EAAAC,IAEA,OAAAwJ,GAOO,SAAA+c,EAAAxmB,GACP,IAAAC,EACA,IAAAA,KAAAD,EACA,SAEA,OAAAC,ECbO,SAAAwmB,EAAAhF,EAAAiF,EAAAC,EAAAC,GAEP,IADA,IAAAC,EACAvoB,EAAA,EAAA+C,EAAAogB,EAAAngB,OAA0ChD,EAAA+C,IAAQ/C,EAElD,IADAuoB,EAAApF,EAAAnjB,IACAooB,cACAG,EAAAC,SAAAH,EAIA,OAHAC,IACAC,EAAAE,YAAAzoB,GAEAuoB,EAUO,SAAAG,EAAAhP,EAAAxX,GACP,IAAAymB,EAAAC,EAAAlP,GACA,OAAAiP,IAAAzmB,QAAAiR,EASA,SAAAyV,EAAAlP,EAAAmP,GACA,IAAAF,EAAAjP,EAAAoP,MAIA,OAHAH,GAAAE,IACAF,EAAAjP,EAAAoP,MAAA,IAEAH,EAgBA,SAAAI,EAAArP,EAAAxX,GACA,IAAAihB,EAAAuF,EAAAhP,EAAAxX,GACA,GAAAihB,EAAA,CACA,QAAAnjB,EAAA,EAAA+C,EAAAogB,EAAAngB,OAA8ChD,EAAA+C,IAAQ/C,EACM,EAC5D8K,oBAAA5I,EAAAihB,EAAAnjB,GAAAgpB,eACYnlB,EAAKsf,EAAAnjB,IAEjBmjB,EAAAngB,OAAA,EACA,IAAA2lB,EAAAC,EAAAlP,GACAiP,WACAA,EAAAzmB,GACA,IAAAxB,OAAAsL,KAAA2c,GAAA3lB,QAtBA,SAAA0W,UACAA,EAAAoP,MAsBAG,CAAAvP,KAoBO,SAAAwP,EAAAxP,EAAAxX,EAAAkmB,EAAAC,EAAAc,GACP,IAAAR,EAAAC,EAAAlP,GAAA,GACAyJ,EAAAwF,EAAAzmB,GACAihB,IACAA,EAAAwF,EAAAzmB,GAAA,IAEA,IAAAqmB,EAAAJ,EAAAhF,EAAAiF,EAAAC,GAAA,GAmBA,OAlBAE,EACAY,IAEAZ,EAAAa,UAAA,IAIAb,EAAA,CACAC,OAAAH,EACAe,WAAAD,EACAf,WACA1O,SACAxX,QAEwD,EACxD8I,iBAAA9I,EAjIO,SAAAqmB,GACP,IAAAS,EAAA,SAAAK,GACA,IAAAjB,EAAAG,EAAAH,SACAI,EAAAD,EAAAC,QAAAD,EAAA7O,OAIA,OAHA6O,EAAAa,UACAE,EAAAf,GAEAH,EAAAjoB,KAAAqoB,EAAAa,IAGA,OADAd,EAAAS,gBACAA,EAuHAO,CAAAhB,IACApF,EAAA/c,KAAAmiB,IAEAA,EAsBO,SAAAiB,EAAA9P,EAAAxX,EAAAkmB,EAAAC,GACP,OAAAa,EAAAxP,EAAAxX,EAAAkmB,EAAAC,GAAA,GAeO,SAAAoB,EAAA/P,EAAAxX,EAAAkmB,EAAAC,GACP,IAAAlF,EAAAuF,EAAAhP,EAAAxX,GACA,GAAAihB,EAAA,CACA,IAAAoF,EAAAJ,EAAAhF,EAAAiF,EAAAC,GAAA,GACAE,GACAe,EAAAf,IAaO,SAAAe,EAAA/nB,GACP,GAAAA,KAAAmY,OAAA,CACwDnY,EAAA,OACxDuJ,oBAAAvJ,EAAAW,KAAAX,EAAAynB,eACA,IAAA7F,EAAAuF,EAAAnnB,EAAAmY,OAAAnY,EAAAW,MACA,GAAAihB,EAAA,CACA,IAAAnjB,EAAA,gBAAAuB,IAAAknB,YAAAtF,EAAAjf,QAAA3C,IACA,IAAAvB,GACAmjB,EAAAvb,OAAA5H,EAAA,GAEA,IAAAmjB,EAAAngB,QACA+lB,EAAAxnB,EAAAmY,OAAAnY,EAAAW,MAGQ2B,EAAKtC,IC9NE,IAAAmoB,EAAA,CAMfC,OAAA,SACAC,MAAA,QACAC,YAAA,cACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,MAAA,QACAC,QAAA,UACAC,SAAA,WACAC,KAAA,OACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,cAAA,gBACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,MAAA,SC7BO,SAASC,IAChB,OAAwB,WACxB,UAAAxd,MAAA,kCADwB,GASxB,IAAAyd,EAAA,EAWO,SAAAC,EAAArf,GACP,OAAAA,EAAAsf,SAAAtf,EAAAsf,OAAA1e,SAAAwe,IAMO,IAAAG,EAAA,eC5BQC,EAMf,iBCoBeC,EAzBf,WACA,SAAAC,IAMAnoB,KAAAooB,WAAA,EAgBA,OAXAD,EAAA7pB,UAAA+pB,QAAA,WACAroB,KAAAooB,YACApoB,KAAAooB,WAAA,EACApoB,KAAAsoB,oBAOAH,EAAA7pB,UAAAgqB,gBAAA,aACAH,EAvBA,GCAO,SAAAI,IACP,SAMO,SAAAC,IACP,SAOO,SAAAC,KCyCQ,IC9DfC,ED8DeC,EAlDf,WAIA,SAAAC,EAAAhqB,GAIAoB,KAAA6oB,mBAMA7oB,KAAApB,OAMAoB,KAAAoW,OAAA,KAgBA,OAVAwS,EAAAtqB,UAAAwqB,eAAA,WACA9oB,KAAA6oB,oBAAA,GAMAD,EAAAtqB,UAAAyqB,gBAAA,WACA/oB,KAAA6oB,oBAAA,GAEAD,EApCA,GCbAI,GACAN,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,SAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,KA0JeC,EA9HL,SAAAC,GAEV,SAAAC,IACA,IAAAC,EAAAF,EAAAvsB,KAAAmD,YAgBA,OAXAspB,EAAAC,iBAAA,GAKAD,EAAAE,aAAA,GAKAF,EAAAG,WAAA,GACAH,EAyGA,OA3HAN,EAAAK,EAAAD,GAwBAC,EAAA/qB,UAAAoJ,iBAAA,SAAA9I,EAAAkmB,GACA,IAAAjF,EAAA7f,KAAAypB,WAAA7qB,GACAihB,IACAA,EAAA7f,KAAAypB,WAAA7qB,GAAA,KAEA,IAAAihB,EAAAjf,QAAAkkB,IACAjF,EAAA/c,KAAAgiB,IAgBAuE,EAAA/qB,UAAAorB,cAAA,SAAAC,GACA,IAAA5D,EAAA,iBAAA4D,EAAA,IAAkDhB,EAAKgB,KACvD/qB,EAAAmnB,EAAAnnB,KACAmnB,EAAA3P,OAAApW,KACA,IACA4pB,EADA/J,EAAA7f,KAAAypB,WAAA7qB,GAEA,GAAAihB,EAAA,CACAjhB,KAAAoB,KAAAwpB,eACAxpB,KAAAwpB,aAAA5qB,GAAA,EACAoB,KAAAupB,iBAAA3qB,GAAA,KAEAoB,KAAAwpB,aAAA5qB,GACA,QAAAlC,EAAA,EAAA+C,EAAAogB,EAAAngB,OAAkDhD,EAAA+C,IAAQ/C,EAC1D,QAAAmjB,EAAAnjB,GAAAG,KAAAmD,KAAA+lB,MAAA8C,mBAAA,CACAe,GAAA,EACA,MAIA,KADA5pB,KAAAwpB,aAAA5qB,GACA,IAAAoB,KAAAwpB,aAAA5qB,GAAA,CACA,IAAAirB,EAAA7pB,KAAAupB,iBAAA3qB,GAEA,WADAoB,KAAAupB,iBAAA3qB,GACAirB,KACA7pB,KAAAwH,oBAAA5I,EAAmD6pB,UAEnDzoB,KAAAwpB,aAAA5qB,GAEA,OAAAgrB,IAMAP,EAAA/qB,UAAAgqB,gBAAA,YPwHO,SAAAlS,GACP,IAAAiP,EAAAC,EAAAlP,GACA,GAAAiP,EACA,QAAAzmB,KAAAymB,EACAI,EAAArP,EAAAxX,GO3HQkrB,CAAW9pB,OASnBqpB,EAAA/qB,UAAA8mB,aAAA,SAAAxmB,GACA,OAAAoB,KAAAypB,WAAA7qB,IAOAyqB,EAAA/qB,UAAAyrB,YAAA,SAAAC,GACA,OAAAA,EACAA,KAAAhqB,KAAAypB,WACArsB,OAAAsL,KAAA1I,KAAAypB,YAAA/pB,OAAA,GAMA2pB,EAAA/qB,UAAAkJ,oBAAA,SAAA5I,EAAAkmB,GACA,IAAAjF,EAAA7f,KAAAypB,WAAA7qB,GACA,GAAAihB,EAAA,CACA,IAAA3b,EAAA2b,EAAAjf,QAAAkkB,GACAlmB,KAAAoB,KAAAupB,kBAEA1J,EAAA3b,GAAmCukB,IACnCzoB,KAAAupB,iBAAA3qB,KAGAihB,EAAAvb,OAAAJ,EAAA,GACA,IAAA2b,EAAAngB,eACAM,KAAAypB,WAAA7qB,MAKAyqB,EA5HU,CA6HRnB,GCnKE+B,EAAyB,WAC7B,IAAAvB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAyId,IAAAgB,EA3GD,SAAAd,GAEd,SAAAe,IACA,IAAAb,EAAAF,EAAAvsB,KAAAmD,YAMA,OADAspB,EAAAc,UAAA,EACAd,EAgFA,OAxFIW,EAASE,EAAAf,GAcbe,EAAA7rB,UAAA6d,QAAA,aACAnc,KAAAoqB,UACApqB,KAAA0pB,cAA2BtD,EAASC,SAQpC8D,EAAA7rB,UAAA+rB,YAAA,WACA,OAAArqB,KAAAoqB,WAWAD,EAAA7rB,UAAA8gB,GAAA,SAAAxgB,EAAAkmB,GACA,GAAA7W,MAAApP,QAAAD,GAAA,CAGA,IAFA,IAAAyE,EAAAzE,EAAAc,OACAgJ,EAAA,IAAAuF,MAAA5K,GACA3G,EAAA,EAA2BA,EAAA2G,IAAS3G,EACpCgM,EAAAhM,GAA0BkpB,EAAM5lB,KAAApB,EAAAlC,GAAAooB,GAEhC,OAAApc,EAGA,OAAmBkd,EAAM5lB,KAAyB,EAAA8kB,IAYlDqF,EAAA7rB,UAAAghB,KAAA,SAAA1gB,EAAAkmB,GACA,GAAA7W,MAAApP,QAAAD,GAAA,CAGA,IAFA,IAAAyE,EAAAzE,EAAAc,OACAgJ,EAAA,IAAAuF,MAAA5K,GACA3G,EAAA,EAA2BA,EAAA2G,IAAS3G,EACpCgM,EAAAhM,GAA0BwpB,EAAUlmB,KAAApB,EAAAlC,GAAAooB,GAEpC,OAAApc,EAGA,OAAmBwd,EAAUlmB,KAAyB,EAAA8kB,IAStDqF,EAAA7rB,UAAAgsB,GAAA,SAAA1rB,EAAAkmB,GACA,GAAA7W,MAAApP,QAAAD,GACA,QAAAlC,EAAA,EAAA+C,EAAAb,EAAAc,OAA6ChD,EAAA+C,IAAQ/C,EACrCypB,EAAQnmB,KAAApB,EAAAlC,GAAAooB,QAKZqB,EAAQnmB,KAAyB,EAAA8kB,IAG7CqF,EAzFc,CA0FZhB,GCxHEoB,EAAyB,WAC7B,IAAA7B,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAyB7BsB,EAAA,SAAApB,GAOA,SAAAoB,EAAA5rB,EAAAX,EAAAwsB,GACA,IAAAnB,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAcA,OARAspB,EAAArrB,MAOAqrB,EAAAmB,WACAnB,EAEA,OAvBIiB,EAASC,EAAApB,GAuBboB,EAxBA,CAyBE7B,GA6CE+B,EAAU,SAAAtB,GAKd,SAAAuB,EAAAC,GACA,IAAAtB,EAAAF,EAAAvsB,KAAAmD,YAcA,OATQ8nB,EAAMwB,GAKdA,EAAAuB,QAAA,QACAhb,IAAA+a,GACAtB,EAAAwB,cAAAF,GAEAtB,EAwFA,OA3GIiB,EAASI,EAAAvB,GA2BbuB,EAAArsB,UAAAf,IAAA,SAAAU,GACA,IAAAN,EAIA,OAHAqC,KAAA6qB,QAAAtsB,eAAAN,KACAN,EAAAqC,KAAA6qB,QAAA5sB,IAEAN,GAOAgtB,EAAArsB,UAAAysB,QAAA,WACA,OAAA3tB,OAAAsL,KAAA1I,KAAA6qB,UAOAF,EAAArsB,UAAA0sB,cAAA,WACA,OAAexG,EAAM,GAAGxkB,KAAA6qB,UAMxBF,EAAArsB,UAAA2sB,OAAA,SAAAhtB,EAAAwsB,GACA,IAAAS,EACAA,EAAAC,EAAAltB,GACA+B,KAAA0pB,cAAA,IAAAc,EAAAU,EAAAjtB,EAAAwsB,IACAS,EAAoBjD,EACpBjoB,KAAA0pB,cAAA,IAAAc,EAAAU,EAAAjtB,EAAAwsB,KASAE,EAAArsB,UAAAsP,IAAA,SAAA3P,EAAAN,EAAAytB,GACA,GAAAA,EACAprB,KAAA6qB,QAAA5sB,GAAAN,MAEA,CACA,IAAA8sB,EAAAzqB,KAAA6qB,QAAA5sB,GACA+B,KAAA6qB,QAAA5sB,GAAAN,EACA8sB,IAAA9sB,GACAqC,KAAAirB,OAAAhtB,EAAAwsB,KAWAE,EAAArsB,UAAAwsB,cAAA,SAAAjjB,EAAAujB,GACA,QAAAntB,KAAA4J,EACA7H,KAAA4N,IAAA3P,EAAA4J,EAAA5J,GAAAmtB,IASAT,EAAArsB,UAAA+sB,MAAA,SAAAptB,EAAAmtB,GACA,GAAAntB,KAAA+B,KAAA6qB,QAAA,CACA,IAAAJ,EAAAzqB,KAAA6qB,QAAA5sB,UACA+B,KAAA6qB,QAAA5sB,GACAmtB,GACAprB,KAAAirB,OAAAhtB,EAAAwsB,KAIAE,EA5Gc,CA6GZT,GAIFoB,EAAA,GAKO,SAAAH,EAAAltB,GACP,OAAAqtB,EAAA/sB,eAAAN,GACAqtB,EAAArtB,GACAqtB,EAAArtB,GAAA,UAAAA,EAEe,IAAAstB,EAAA,ECpNAC,EAAA,CACfC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,QAAA,SACAC,eAAA,gBACAC,eAAA,gBACAC,OAAA,UCbIC,EAAyB,WAC7B,IAAAtD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAoDd+C,EA9BG,SAAA7C,GAKlB,SAAA8C,EAAAC,GACA,IAAA7C,EAAAtpB,KAEAosB,EAAA,oDAD0B,WAAPpE,EAAuBA,EAAO,IAASA,EAAOna,MAAA,SAEjE,gBAAAse,EAAA,gBAiBA,OAhBA7C,EAAAF,EAAAvsB,KAAAmD,KAAAosB,IAAApsB,MASAmsB,OAIA7C,EAAArsB,KAAA,iBAEAqsB,EAAA8C,UACA9C,EAEA,OA3BI0C,EAASE,EAAA9C,GA2Bb8C,EA5BkB,CA6BjB9hB,OC3CM,SAAAiiB,EAAAC,EAAAC,GACP,IAAAD,EACA,UAAkBL,EAAcM,GCEzB,SAAAC,EAAA7uB,EAAAmE,EAAA3B,GACP,OAAAD,KAAA4B,IAAA5B,KAAAC,IAAAxC,EAAAmE,GAAA3B,GAWO,IAAAssB,EAIP,SAAAvsB,KAEAA,KAAAusB,KAIA,SAAAljB,GACA,IAAAmjB,EAAoC,KAAAxI,IAAA3a,GACpC,OAAAmjB,EAAA,EAAAA,GAAA,GAwBO,SAAAC,EAAApjB,EAAAmjB,EAAAE,EAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAAF,EACAK,EAAAF,EAAAF,EACA,OAAAG,GAAA,IAAAC,EAAA,CACA,IAAArvB,IAAA2L,EAAAqjB,GAAAI,GAAAN,EAAAG,GAAAI,IAAAD,IAAAC,KACArvB,EAAA,GACAgvB,EAAAE,EACAD,EAAAE,GAEAnvB,EAAA,IACAgvB,GAAAI,EAAApvB,EACAivB,GAAAI,EAAArvB,GAGA,OAAWsvB,EAAe3jB,EAAAmjB,EAAAE,EAAAC,GAUnB,SAASK,EAAeN,EAAAC,EAAAC,EAAAC,GAC/B,IAAAC,EAAAF,EAAAF,EACAK,EAAAF,EAAAF,EACA,OAAAG,IAAAC,IAmEO,SAAAE,EAAAC,GACP,OAAAA,EAAAltB,KAAAmtB,GAAA,IASO,SAAAC,EAAA1rB,EAAAC,GACP,IAAArE,EAAAoE,EAAAC,EACA,OAAArE,EAAAqE,EAAA,EAAArE,EAAAqE,EAAArE,EAUO,SAAA4V,EAAAxR,EAAAC,EAAA0H,GACP,OAAA3H,EAAA2H,GAAA1H,EAAAD,GCjLA,IAAI2rB,EAAyB,WAC7B,IAAA7E,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAsPdsE,EAvMF,SAAApE,GAKb,SAAAqE,EAAA9Y,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,YAIA0tB,EAAyBlJ,EAAM,GAAG7P,GAsBlC,OArBA+Y,EAAmBlC,EAAaC,cAChC5b,IAAA8E,EAAAgZ,QAAAhZ,EAAAgZ,QAAA,EACAD,EAAmBlC,EAAaE,cAChC7b,IAAA8E,EAAAiZ,SAAAjZ,EAAAiZ,QACAF,EAAmBlC,EAAaI,SAAAjX,EAAAkZ,OAChCH,EAAmBlC,EAAaK,qBAChChc,IAAA8E,EAAAmZ,cAAAnZ,EAAAmZ,cAAAxsB,IACAosB,EAAmBlC,EAAaM,qBAChCjc,IAAA8E,EAAAoZ,cAAApZ,EAAAoZ,cAAA,EAKAzE,EAAA0E,gBAAAne,IAAA6d,EAAAO,UAAAtZ,EAAAsZ,UAAA,kBACAP,EAAAO,UACA3E,EAAAwB,cAAA4C,GAKApE,EAAA4E,OAAA,KACA5E,EAqKA,OApMIiE,EAASE,EAAArE,GAoCbqE,EAAAnvB,UAAA6vB,aAAA,WACA,OAAAnuB,KAAAguB,YAKAP,EAAAnvB,UAAA8vB,cAAA,WAEA,IAAAhS,EAAApc,KAAAkuB,QAAgD,CAChDG,MAAAruB,KACAsuB,SAAA,GAUA,OARAlS,EAAAuR,QAAwBnB,EAAKtsB,KAAAmU,MAAA,IAAArU,KAAAuuB,cAAA,SAC7BnS,EAAAoS,YAAAxuB,KAAAyuB,iBACArS,EAAAwR,QAAA5tB,KAAA0uB,aACAtS,EAAAuS,OAAA3uB,KAAA4uB,YACAxS,EAAAyR,OAAA7tB,KAAA6uB,aAAA,EACAzS,EAAA0R,cAAA9tB,KAAA8uB,mBACA1S,EAAA2R,cAAA7tB,KAAAC,IAAAH,KAAA+uB,mBAAA,GACA/uB,KAAAkuB,OAAA9R,EACAA,GAQAqR,EAAAnvB,UAAA0wB,eAAA,SAAAC,GACA,OAAerH,KAQf6F,EAAAnvB,UAAA4wB,oBAAA,SAAAC,GACA,OAAevH,KASf6F,EAAAnvB,UAAAswB,UAAA,WACA,OAC2D5uB,KAAAzC,IAAciuB,EAAaG,SAQtF8B,EAAAnvB,UAAAwwB,iBAAA,WACA,OAAiC9uB,KAAAzC,IAAciuB,EAAaK,iBAQ5D4B,EAAAnvB,UAAAywB,iBAAA,WACA,OAAiC/uB,KAAAzC,IAAciuB,EAAaM,iBAQ5D2B,EAAAnvB,UAAAiwB,WAAA,WACA,OAAiCvuB,KAAAzC,IAAciuB,EAAaC,UAM5DgC,EAAAnvB,UAAAmwB,eAAA,WACA,OAAe7G,KAQf6F,EAAAnvB,UAAAowB,WAAA,WACA,OAAkC1uB,KAAAzC,IAAciuB,EAAaE,UAS7D+B,EAAAnvB,UAAAuwB,UAAA,WACA,OAAiC7uB,KAAAzC,IAAciuB,EAAaI,UAS5D6B,EAAAnvB,UAAA8wB,UAAA,SAAAT,GACA3uB,KAAA4N,IAAiB4d,EAAaG,OAAAgD,IAQ9BlB,EAAAnvB,UAAA+wB,iBAAA,SAAAvB,GACA9tB,KAAA4N,IAAiB4d,EAAaK,eAAAiC,IAQ9BL,EAAAnvB,UAAAgxB,iBAAA,SAAAvB,GACA/tB,KAAA4N,IAAiB4d,EAAaM,eAAAiC,IAQ9BN,EAAAnvB,UAAAixB,WAAA,SAAA5B,GACA3tB,KAAA4N,IAAiB4d,EAAaC,QAAAkC,IAQ9BF,EAAAnvB,UAAAkxB,WAAA,SAAA5B,GACA5tB,KAAA4N,IAAiB4d,EAAaE,QAAAkC,IAS9BH,EAAAnvB,UAAAmxB,UAAA,SAAAC,GACA1vB,KAAA4N,IAAiB4d,EAAaI,QAAA8D,IAE9BjC,EArMa,CAsMXlC,GC/OaoE,EAMf,YANeA,EAYf,aAZeA,EAkBf,aAlBeA,EAwBf,cAxBeA,GA+Bf,iBC9BeC,GAAA,CACfC,UAAA,YACAC,QAAA,UACAC,MAAA,QACAlJ,MAAA,SCXImJ,GAAyB,WAC7B,IAAAtH,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6PtB,SAAA+G,GAAAC,EAAAC,GACP,OAAAD,EAAAtC,SAAAuC,GAAAD,EAAAnC,eACAoC,EAAAD,EAAApC,cAEe,IAAAsC,GAtLN,SAAAhH,GAKT,SAAAiH,EAAA1b,GACA,IAAA2U,EAAAtpB,KACAswB,EAA0B9L,EAAM,GAAG7P,UACnC2b,EAAAnxB,QACAmqB,EAAAF,EAAAvsB,KAAAmD,KAAAswB,IAAAtwB,MAKAuwB,kBAAA,KAKAjH,EAAAkH,cAAA,KAKAlH,EAAAmH,iBAAA,KAKAnH,EAAAoH,UAAA,KACA/b,EAAAtH,KACAic,EAAAqH,OAAAhc,EAAAtH,KAEQuY,EAAM0D,EAAQ6B,EAAmBK,EAAaO,QAAAzC,EAAAsH,4BAAAtH,GACtD,IAAAnqB,EAAAwV,EAAAxV,OAA4DwV,EAAA,YAE5D,OADA2U,EAAAuH,UAAA1xB,GACAmqB,EAoIA,OAvKI0G,GAASK,EAAAjH,GAwCbiH,EAAA/xB,UAAA0wB,eAAA,SAAAC,GACA,IAAAzvB,EAAAyvB,GAAA,GAEA,OADAzvB,EAAAsD,KAAA9C,MACAR,GAKA6wB,EAAA/xB,UAAA4wB,oBAAA,SAAAC,GACA,IAAA2B,EAAA3B,GAAA,GAEA,OADA2B,EAAAhuB,KAAA9C,KAAAouB,iBACA0C,GAQAT,EAAA/xB,UAAAyyB,UAAA,WACA,OAAqC/wB,KAAAzC,IAAciuB,EAAaO,SAAA,MAKhEsE,EAAA/xB,UAAAmwB,eAAA,WACA,IAAAtvB,EAAAa,KAAA+wB,YACA,OAAA5xB,EAAoCA,EAAA6xB,WAAXpB,GAAWC,WAKpCQ,EAAA/xB,UAAA2yB,oBAAA,WACAjxB,KAAAmc,WAKAkU,EAAA/xB,UAAAsyB,4BAAA,WACA5wB,KAAAywB,mBACYzK,EAAahmB,KAAAywB,kBACzBzwB,KAAAywB,iBAAA,MAEA,IAAAtxB,EAAAa,KAAA+wB,YACA5xB,IACAa,KAAAywB,iBAAoC7K,EAAMzmB,EAASinB,EAASC,OAAArmB,KAAAixB,oBAAAjxB,OAE5DA,KAAAmc,WAQAkU,EAAA/xB,UAAA4yB,OAAA,SAAAC,GACA,IAAAC,EAAApxB,KAAAqxB,cACAnB,EAAAlwB,KAAAouB,gBACA,GAAAgD,EAAAE,aAAAH,EAAAjB,GACA,OAAAkB,EAAAG,YAAAJ,EAAAjB,IAeAG,EAAA/xB,UAAAqyB,OAAA,SAAAtjB,GACArN,KAAAuwB,oBACYvK,EAAahmB,KAAAuwB,mBACzBvwB,KAAAuwB,kBAAA,MAEAljB,GACArN,KAAAmc,UAEAnc,KAAAwwB,gBACYxK,EAAahmB,KAAAwwB,eACzBxwB,KAAAwwB,cAAA,MAEAnjB,IACArN,KAAAuwB,kBAAqC3K,EAAMvY,EAAMsiB,EAAe,SAAA5J,GAChE,IAAAyL,EAAkF,EAClFtB,EAAAlwB,KAAAouB,gBACA8B,EAAA5B,SAAA,OACAze,IAAA7P,KAAA6uB,cACAqB,EAAArC,OAAAvsB,KAEAkwB,EAAAL,WAAAM,iBAAA3uB,KAAAotB,IACalwB,MACbA,KAAAwwB,cAAiC5K,EAAM5lB,KAAOomB,EAASC,OAAAhZ,EAAA6jB,OAAA7jB,GACvDrN,KAAAmc,YASAkU,EAAA/xB,UAAAuyB,UAAA,SAAA1xB,GACAa,KAAA4N,IAAiB4d,EAAaO,OAAA5sB,IAM9BkxB,EAAA/xB,UAAA+yB,YAAA,WAIA,OAHArxB,KAAA0wB,YACA1wB,KAAA0wB,UAAA1wB,KAAA0xB,kBAEA1xB,KAAA0wB,WAOAL,EAAA/xB,UAAAozB,eAAA,WACA,aAEArB,EAxKS,CAyKP7C,GC9OamE,GACf,UADeA,GAEf,yBCRIC,GAAyB,WAC7B,IAAAlJ,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4Gd2I,GAvDE,SAAAzI,GAKjB,SAAA0I,EAAAC,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACAzB,EAA0B9L,EAAM,GAAG7P,GAOnC,cANA2b,EAAA0B,eACA1B,EAAA2B,wBACA3I,EAAAF,EAAAvsB,KAAAmD,KAAAswB,IAAAtwB,MACAkyB,gBAAAriB,IAAA8E,EAAAqd,QAAArd,EAAAqd,QAAA,GACA1I,EAAA6I,+BAAAtiB,IAAA8E,EAAAsd,wBACAtd,EAAAsd,wBACA3I,EAsCA,OApDIsI,GAASE,EAAA1I,GAsBb0I,EAAAxzB,UAAA8zB,WAAA,WACA,OAAiCpyB,KAAAzC,IAAco0B,KAQ/CG,EAAAxzB,UAAA4zB,WAAA,SAAAF,GACAhyB,KAAA4N,IAAiB+jB,GAAYK,IAQ7BF,EAAAxzB,UAAA+zB,0BAAA,WACA,OAAkCryB,KAAAzC,IAAco0B,KAQhDG,EAAAxzB,UAAA6zB,0BAAA,SAAAF,GACAjyB,KAAA4N,IAAiB+jB,GAAYM,IAE7BH,EArDiB,CAsDf1B,ICpGFkC,GAAA,WAOA,SAAAA,EAAAjxB,EAAAG,EAAAD,EAAAE,GAIAzB,KAAAqB,OAIArB,KAAAwB,OAIAxB,KAAAuB,OAIAvB,KAAAyB,OA8EA,OAxEA6wB,EAAAh0B,UAAA6D,SAAA,SAAAowB,GACA,OAAAvyB,KAAAwyB,WAAAD,EAAA,GAAAA,EAAA,KAMAD,EAAAh0B,UAAAm0B,kBAAA,SAAAC,GACA,OAAA1yB,KAAAqB,MAAAqxB,EAAArxB,MAAAqxB,EAAAlxB,MAAAxB,KAAAwB,MACAxB,KAAAuB,MAAAmxB,EAAAnxB,MAAAmxB,EAAAjxB,MAAAzB,KAAAyB,MAOA6wB,EAAAh0B,UAAAk0B,WAAA,SAAAjpB,EAAAmjB,GACA,OAAA1sB,KAAAqB,MAAAkI,MAAAvJ,KAAAwB,MAAAxB,KAAAuB,MAAAmrB,MAAA1sB,KAAAyB,MAMA6wB,EAAAh0B,UAAAq0B,OAAA,SAAAD,GACA,OAAA1yB,KAAAqB,MAAAqxB,EAAArxB,MAAArB,KAAAuB,MAAAmxB,EAAAnxB,MACAvB,KAAAwB,MAAAkxB,EAAAlxB,MAAAxB,KAAAyB,MAAAixB,EAAAjxB,MAKA6wB,EAAAh0B,UAAAW,OAAA,SAAAyzB,GACAA,EAAArxB,KAAArB,KAAAqB,OACArB,KAAAqB,KAAAqxB,EAAArxB,MAEAqxB,EAAAlxB,KAAAxB,KAAAwB,OACAxB,KAAAwB,KAAAkxB,EAAAlxB,MAEAkxB,EAAAnxB,KAAAvB,KAAAuB,OACAvB,KAAAuB,KAAAmxB,EAAAnxB,MAEAmxB,EAAAjxB,KAAAzB,KAAAyB,OACAzB,KAAAyB,KAAAixB,EAAAjxB,OAMA6wB,EAAAh0B,UAAAs0B,UAAA,WACA,OAAA5yB,KAAAyB,KAAAzB,KAAAuB,KAAA,GAKA+wB,EAAAh0B,UAAAu0B,QAAA,WACA,OAAA7yB,KAAA8yB,WAAA9yB,KAAA4yB,cAKAN,EAAAh0B,UAAAw0B,SAAA,WACA,OAAA9yB,KAAAwB,KAAAxB,KAAAqB,KAAA,GAMAixB,EAAAh0B,UAAA8D,WAAA,SAAAswB,GACA,OAAA1yB,KAAAqB,MAAAqxB,EAAAlxB,MACAxB,KAAAwB,MAAAkxB,EAAArxB,MACArB,KAAAuB,MAAAmxB,EAAAjxB,MACAzB,KAAAyB,MAAAixB,EAAAnxB,MAEA+wB,EArGA,GA+GO,SAAAS,GAAA1xB,EAAAG,EAAAD,EAAAE,EAAAixB,GACP,YAAA7iB,IAAA6iB,GACAA,EAAArxB,OACAqxB,EAAAlxB,OACAkxB,EAAAnxB,OACAmxB,EAAAjxB,OACAixB,GAGA,IAAAJ,GAAAjxB,EAAAG,EAAAD,EAAAE,GAGe,IAAAuxB,GAAA,GC5HAC,GAAA,CACfC,KAAA,EACApD,QAAA,EACAqD,OAAA,EAKAtM,MAAA,EACAuM,MAAA,EACAC,MAAA,GCTeC,GAAA,CACfC,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,aCJeC,GAAA,CACfC,QAAA,EACAC,aAAA,EACAC,MAAA,EACAC,MAAA,EACAC,MAAA,EACAC,KAAA,ICKO,SAAAC,GAAAC,GAEP,IADA,IAAAxF,EAAAyF,KACA13B,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAA4ChD,EAAA+C,IAAQ/C,EACpD23B,GAAA1F,EAAAwF,EAAAz3B,IAEA,OAAAiyB,EAwBO,SAAA2F,GAAA3F,EAAAhxB,EAAA42B,GACP,OAAAA,GACAA,EAAA,GAAA5F,EAAA,GAAAhxB,EACA42B,EAAA,GAAA5F,EAAA,GAAAhxB,EACA42B,EAAA,GAAA5F,EAAA,GAAAhxB,EACA42B,EAAA,GAAA5F,EAAA,GAAAhxB,EACA42B,GAGA,CACA5F,EAAA,GAAAhxB,EACAgxB,EAAA,GAAAhxB,EACAgxB,EAAA,GAAAhxB,EACAgxB,EAAA,GAAAhxB,GAWO,SAAA62B,GAAA7F,EAAA4F,GACP,OAAAA,GACAA,EAAA,GAAA5F,EAAA,GACA4F,EAAA,GAAA5F,EAAA,GACA4F,EAAA,GAAA5F,EAAA,GACA4F,EAAA,GAAA5F,EAAA,GACA4F,GAGA5F,EAAA/qB,QASO,SAAA6wB,GAAA9F,EAAAplB,EAAAmjB,GACP,IAAAM,EAAAC,EAmBA,OAjBAD,EADAzjB,EAAAolB,EAAA,GACAA,EAAA,GAAAplB,EAEAolB,EAAA,GAAAplB,EACAA,EAAAolB,EAAA,GAGA,GAWA3B,GARAC,EADAP,EAAAiC,EAAA,GACAA,EAAA,GAAAjC,EAEAiC,EAAA,GAAAjC,EACAA,EAAAiC,EAAA,GAGA,GAEA1B,EAUO,SAAAyH,GAAA/F,EAAAgG,GACP,OAAAnC,GAAA7D,EAAAgG,EAAA,GAAAA,EAAA,IAcO,SAAAC,GAAAC,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IACAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,GAWO,SAAArC,GAAA7D,EAAAplB,EAAAmjB,GACP,OAAAiC,EAAA,IAAAplB,MAAAolB,EAAA,IAAAA,EAAA,IAAAjC,MAAAiC,EAAA,GASO,SAAAoG,GAAApG,EAAAgG,GACP,IAAAtzB,EAAAstB,EAAA,GACAptB,EAAAotB,EAAA,GACAntB,EAAAmtB,EAAA,GACAltB,EAAAktB,EAAA,GACAplB,EAAAorB,EAAA,GACAjI,EAAAiI,EAAA,GACAK,EAAuBrB,GAAYC,QAgBnC,OAfArqB,EAAAlI,EACA2zB,GAAsCrB,GAAYM,KAElD1qB,EAAA/H,IACAwzB,GAAsCrB,GAAYI,OAElDrH,EAAAnrB,EACAyzB,GAAsCrB,GAAYK,MAElDtH,EAAAjrB,IACAuzB,GAAsCrB,GAAYG,OAElDkB,IAAyBrB,GAAYC,UACrCoB,EAAuBrB,GAAYE,cAEnCmB,EAOO,SAAAZ,KACP,OAAA9yB,mBAWO,SAAS2zB,GAAc5zB,EAAAE,EAAAC,EAAAC,EAAA8yB,GAC9B,OAAAA,GACAA,EAAA,GAAAlzB,EACAkzB,EAAA,GAAAhzB,EACAgzB,EAAA,GAAA/yB,EACA+yB,EAAA,GAAA9yB,EACA8yB,GAGA,CAAAlzB,EAAAE,EAAAC,EAAAC,GAQO,SAAAyzB,GAAAX,GACP,OAAWU,GAAc3zB,kBAAAizB,GAOlB,SAAAY,GAAAR,EAAAJ,GACP,IAAAhrB,EAAAorB,EAAA,GACAjI,EAAAiI,EAAA,GACA,OAAWM,GAAc1rB,EAAAmjB,EAAAnjB,EAAAmjB,EAAA6H,GAmBlB,SAAAa,GAAAC,EAAAC,EAAAC,EAAAC,EAAAjB,GAEP,OAAAkB,GADAP,GAAAX,GACAc,EAAAC,EAAAC,EAAAC,GAkBO,SAAA7C,GAAAkC,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GASO,SAAA71B,GAAA41B,EAAAC,GAaP,OAZAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAD,EAMO,SAAAR,GAAA1F,EAAAgG,GACPA,EAAA,GAAAhG,EAAA,KACAA,EAAA,GAAAgG,EAAA,IAEAA,EAAA,GAAAhG,EAAA,KACAA,EAAA,GAAAgG,EAAA,IAEAA,EAAA,GAAAhG,EAAA,KACAA,EAAA,GAAAgG,EAAA,IAEAA,EAAA,GAAAhG,EAAA,KACAA,EAAA,GAAAgG,EAAA,IAQO,SAAAe,GAAA/G,EAAAwF,GACP,QAAAz3B,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAA4ChD,EAAA+C,IAAQ/C,EACpD23B,GAAA1F,EAAAwF,EAAAz3B,IAEA,OAAAiyB,EAUO,SAAA8G,GAAA9G,EAAA0G,EAAAC,EAAAC,EAAAC,GACP,KAAUF,EAAAC,EAAcD,GAAAE,EACxBG,GAAAhH,EAAA0G,EAAAC,GAAAD,EAAAC,EAAA,IAEA,OAAA3G,EAkBO,SAAAgH,GAAAhH,EAAAplB,EAAAmjB,GACPiC,EAAA,GAAAzuB,KAAA4B,IAAA6sB,EAAA,GAAAplB,GACAolB,EAAA,GAAAzuB,KAAA4B,IAAA6sB,EAAA,GAAAjC,GACAiC,EAAA,GAAAzuB,KAAAC,IAAAwuB,EAAA,GAAAplB,GACAolB,EAAA,GAAAzuB,KAAAC,IAAAwuB,EAAA,GAAAjC,GAWO,SAAAkJ,GAAAjH,EAAAtmB,GACP,IAAAiE,EAEA,OADAA,EAAAjE,EAAAwtB,GAAAlH,KAEAriB,GAEAA,EAAAjE,EAAAytB,GAAAnH,KAEAriB,GAEAA,EAAAjE,EAAA0tB,GAAApH,KAEAriB,GAEAA,EAAAjE,EAAA2tB,GAAArH,OAIA,EAQO,SAAAsH,GAAAtH,GACP,IAAAjpB,EAAA,EAIA,OAHSwwB,GAAOvH,KAChBjpB,EAAAotB,GAAAnE,GAAAiE,GAAAjE,IAEAjpB,EAQO,SAAAmwB,GAAAlH,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAAmH,GAAAnH,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAAwH,GAAAxH,GACP,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAQO,SAAAyH,GAAAzH,EAAA0H,GACP,IAAA1B,EAgBA,OAfA0B,IAAmB/C,GAAMC,YACzBoB,EAAAkB,GAAAlH,GAEA0H,IAAwB/C,GAAME,aAC9BmB,EAAAmB,GAAAnH,GAEA0H,IAAwB/C,GAAMG,SAC9BkB,EAAAqB,GAAArH,GAEA0H,IAAwB/C,GAAMI,UAC9BiB,EAAAoB,GAAApH,GAGQtC,GAAM,MAEdsI,EAsBO,SAAA2B,GAAAC,EAAApG,EAAAqG,EAAAC,EAAAlC,GACP,IAAAvH,EAAAmD,EAAAsG,EAAA,KACAxJ,EAAAkD,EAAAsG,EAAA,KACAC,EAAAx2B,KAAAy2B,IAAAH,GACAI,EAAA12B,KAAA22B,IAAAL,GACAM,EAAA9J,EAAA0J,EACAK,EAAA/J,EAAA4J,EACAI,EAAA/J,EAAAyJ,EACAO,EAAAhK,EAAA2J,EACArtB,EAAAgtB,EAAA,GACA7J,EAAA6J,EAAA,GACAW,EAAA3tB,EAAAutB,EAAAG,EACArK,EAAArjB,EAAAutB,EAAAG,EACAnK,EAAAvjB,EAAAutB,EAAAG,EACAE,EAAA5tB,EAAAutB,EAAAG,EACAG,EAAA1K,EAAAqK,EAAAC,EACAnK,EAAAH,EAAAqK,EAAAC,EACAjK,EAAAL,EAAAqK,EAAAC,EACAK,EAAA3K,EAAAqK,EAAAC,EACA,OAAW/B,GAAc/0B,KAAA4B,IAAAo1B,EAAAtK,EAAAE,EAAAqK,GAAAj3B,KAAA4B,IAAAs1B,EAAAvK,EAAAE,EAAAsK,GAAAn3B,KAAAC,IAAA+2B,EAAAtK,EAAAE,EAAAqK,GAAAj3B,KAAAC,IAAAi3B,EAAAvK,EAAAE,EAAAsK,GAAA9C,GAQlB,SAAA3B,GAAAjE,GACP,OAAAA,EAAA,GAAAA,EAAA,GAmBO,SAAA2I,GAAAzC,EAAAC,EAAAP,GACP,IAAAgD,EAAAhD,GA3UA,CAAAjzB,SAAA,UAyWA,OA7BQk2B,GAAU3C,EAAAC,IAClBD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAGA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAGA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAGA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAGA0C,EAAA,GAAAzC,EAAA,IAIAI,GAAAqC,GAEAA,EAwBO,SAAAvB,GAAArH,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAAoH,GAAApH,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAAmE,GAAAnE,GACP,OAAAA,EAAA,GAAAA,EAAA,GASO,SAAS6I,GAAU3C,EAAAC,GAC1B,OAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,GAQO,SAASoB,GAAOvH,GACvB,OAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GC7lBO,SAAA8I,GAAAC,EAAAC,GACP,IAAAC,EAAA3hB,SAAAmC,cAAA,UAOA,OANAsf,IACAE,EAAAC,MAAAH,GAEAC,IACAC,EAAAv1B,OAAAs1B,GAEAC,EAAAE,WAAA,MAgCO,SAAAC,GAAA1xB,EAAA2xB,GACP,IAAA/zB,EAAA+zB,EAAA/f,WACAhU,GACAA,EAAAg0B,aAAA5xB,EAAA2xB,GAOO,SAAAE,GAAAp3B,GACP,OAAAA,KAAAmX,WAAAnX,EAAAmX,WAAAC,YAAApX,GAAA,KCzDA,ICkDA4K,GACAysB,GDnDIC,GAAyB,WAC7B,IAAA1P,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAyDdmP,GA3Cf,SAAAjP,GAUA,SAAAkP,EAAA15B,EAAA25B,EAAAC,EAAAC,EAAAC,GACA,IAAApP,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KA4BA,OArBAspB,EAAAqP,sBAAAJ,EAMAjP,EAAA6H,WAAAqH,EAOAlP,EAAAsP,QAAAH,EAOAnP,EAAAuP,UAAAH,EACApP,EAEA,OAxCI8O,GAASE,EAAAlP,GAwCbkP,EAzCA,CA0CE3P,GClDKmQ,GAAA,YAcAC,GAAA,kBAcAC,GAAA,aAQAC,GAAA,eAOAC,IAEPf,GAAA,GACA,SAAAgB,GAIA,GAHAztB,KACAA,GAAAuK,SAAAmC,cAAA,OAAA1M,SAEAytB,KAAAhB,IAAA,CACAzsB,GAAAytB,OACA,IAAAC,EAAA1tB,GAAA2tB,WAEA,GADA3tB,GAAAytB,KAAA,IACAC,EACA,YAEAjB,GAAAgB,GAAAC,EAAAvrB,MAAA,QAEA,OAAAsqB,GAAAgB,KC5CA,IAAAlrB,MAAA,GAuDO,SAAAL,GAAAiH,EAAAjT,EAAAC,EAAA9E,EAAAC,EAAAqR,EAAAvF,GAOP,OANA+L,EAAA,GAAAjT,EACAiT,EAAA,GAAAhT,EACAgT,EAAA,GAAA9X,EACA8X,EAAA,GAAA7X,EACA6X,EAAA,GAAAxG,EACAwG,EAAA,GAAA/L,EACA+L,EA0BO,SAAAjQ,GAAAiQ,EAAA8f,GACP,IAAAprB,EAAAorB,EAAA,GACAjI,EAAAiI,EAAA,GAGA,OAFAA,EAAA,GAAA9f,EAAA,GAAAtL,EAAAsL,EAAA,GAAA6X,EAAA7X,EAAA,GACA8f,EAAA,GAAA9f,EAAA,GAAAtL,EAAAsL,EAAA,GAAA6X,EAAA7X,EAAA,GACA8f,EAwDO,SAAA2E,GAAAzkB,EAAA0kB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAAhD,EAAA32B,KAAA22B,IAAA8C,GACAhD,EAAAz2B,KAAAy2B,IAAAgD,GAOA,OANA9kB,EAAA,GAAA4kB,EAAA9C,EACA9hB,EAAA,GAAA6kB,EAAA7C,EACAhiB,EAAA,IAAA4kB,EAAA5C,EACAhiB,EAAA,GAAA6kB,EAAA/C,EACA9hB,EAAA,GAAA+kB,EAAAH,EAAA9C,EAAAkD,EAAAJ,EAAA5C,EAAA0C,EACA1kB,EAAA,GAAA+kB,EAAAF,EAAA7C,EAAAgD,EAAAH,EAAA/C,EAAA6C,EACA3kB,EAiBO,SAAAilB,GAAA1jB,EAAAjX,GACP,IAqBO46B,EArBPC,GAqBOD,EArBP56B,GAsBA,GAAA46B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GArBI1N,EAAM,IAAA2N,EAAA,IACV,IAAAp4B,EAAAzC,EAAA,GACA0C,EAAA1C,EAAA,GACApC,EAAAoC,EAAA,GACAnC,EAAAmC,EAAA,GACAkP,EAAAlP,EAAA,GACA2J,EAAA3J,EAAA,GAOA,OANAiX,EAAA,GAAApZ,EAAAg9B,EACA5jB,EAAA,IAAAvU,EAAAm4B,EACA5jB,EAAA,IAAArZ,EAAAi9B,EACA5jB,EAAA,GAAAxU,EAAAo4B,EACA5jB,EAAA,IAAArZ,EAAA+L,EAAA9L,EAAAqR,GAAA2rB,EACA5jB,EAAA,KAAAxU,EAAAkH,EAAAjH,EAAAwM,GAAA2rB,EACA5jB,EAgBO,SAAS6jB,GAAQF,GACxB,gBAAAA,EAAA7yB,KAAA,UCpOA,IAAIgzB,GAAyB,WAC7B,IAAAxR,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAmQdiR,GAnOH,SAAA/Q,GAKZ,SAAAgR,EAAAC,GACA,IAAA/Q,EAAAF,EAAAvsB,KAAAmD,YAyBA,OArBAspB,EAAAgR,mBAAAzqB,IAAAwqB,IAAA,KAKA/Q,EAAAiR,OAAA,EAKAjR,EAAAkR,SAAA,GAKAlR,EAAAmR,QAAA,KAKAnR,EAAAoR,QAAA,KACApR,EAkMA,OAhOI4Q,GAASE,EAAAhR,GAmCbgR,EAAA97B,UAAAq8B,eAAA,WACA,OAAA36B,KAAA46B,WAAA56B,KAAAs6B,eAKAF,EAAA97B,UAAAiC,MAAA,WACAP,KAAAu6B,OAAA,EACAv6B,KAAAw6B,SAAA,GACAx6B,KAAAy6B,QAAA,KACAz6B,KAAA06B,QAAA,KACA16B,KAAA0pB,cAA2BtD,EAASE,QAMpC8T,EAAA97B,UAAAu8B,YAAA,SAAA58B,GACA,OAAA+B,KAAAw6B,SAAAj8B,eAAAN,IAQAm8B,EAAA97B,UAAA+N,QAAA,SAAAvD,GAEA,IADA,IAAAgyB,EAAA96B,KAAAy6B,QACAK,GACAhyB,EAAAgyB,EAAAC,OAAAD,EAAAE,KAAAh7B,MACA86B,IAAAG,OAQAb,EAAA97B,UAAAf,IAAA,SAAAU,EAAA8zB,GACA,IAAA+I,EAAA96B,KAAAw6B,SAAAv8B,GAEA,OADQouB,OAAMxc,IAAAirB,EAAA,IACdA,IAAA96B,KAAA06B,QACAI,EAAAC,QAEAD,IAAA96B,KAAAy6B,SACAz6B,KAAAy6B,QAA4Cz6B,KAAAy6B,QAAA,MAC5Cz6B,KAAAy6B,QAAAS,MAAA,OAGAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,OAEAH,EAAAG,MAAA,KACAH,EAAAI,MAAAl7B,KAAA06B,QACA16B,KAAA06B,QAAAO,MAAAH,EACA96B,KAAA06B,QAAAI,EACAA,EAAAC,SAOAX,EAAA97B,UAAA0F,OAAA,SAAA/F,GACA,IAAA68B,EAAA96B,KAAAw6B,SAAAv8B,GAoBA,OAnBQouB,OAAMxc,IAAAirB,EAAA,IACdA,IAAA96B,KAAA06B,SACA16B,KAAA06B,QAA4CI,EAAA,MAC5C96B,KAAA06B,UACA16B,KAAA06B,QAAAO,MAAA,OAGAH,IAAA96B,KAAAy6B,SACAz6B,KAAAy6B,QAA4CK,EAAA,MAC5C96B,KAAAy6B,UACAz6B,KAAAy6B,QAAAS,MAAA,QAIAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,cAEAj7B,KAAAw6B,SAAAv8B,KACA+B,KAAAu6B,OACAO,EAAAC,QAKAX,EAAA97B,UAAAs8B,SAAA,WACA,OAAA56B,KAAAu6B,QAKAH,EAAA97B,UAAAysB,QAAA,WACA,IAEA+P,EAFApyB,EAAA,IAAAuF,MAAAjO,KAAAu6B,QACA79B,EAAA,EAEA,IAAAo+B,EAAA96B,KAAA06B,QAAkCI,EAAOA,IAAAI,MACzCxyB,EAAAhM,KAAAo+B,EAAAE,KAEA,OAAAtyB,GAKA0xB,EAAA97B,UAAAqmB,UAAA,WACA,IAEAmW,EAFAjzB,EAAA,IAAAoG,MAAAjO,KAAAu6B,QACA79B,EAAA,EAEA,IAAAo+B,EAAA96B,KAAA06B,QAAkCI,EAAOA,IAAAI,MACzCrzB,EAAAnL,KAAAo+B,EAAAC,OAEA,OAAAlzB,GAKAuyB,EAAA97B,UAAA68B,SAAA,WACA,OAAAn7B,KAAAy6B,QAAAM,QAKAX,EAAA97B,UAAA88B,YAAA,WACA,OAAAp7B,KAAAy6B,QAAAO,MAMAZ,EAAA97B,UAAA+8B,aAAA,WACA,OAAAr7B,KAAA06B,QAAAM,MAKAZ,EAAA97B,UAAAuE,IAAA,WACA,IAAAi4B,EAAA96B,KAAAy6B,QAUA,cATAz6B,KAAAw6B,SAAAM,EAAAE,MACAF,EAAAG,QACAH,EAAAG,MAAAC,MAAA,MAEAl7B,KAAAy6B,QAAwCK,EAAA,MACxC96B,KAAAy6B,UACAz6B,KAAA06B,QAAA,QAEA16B,KAAAu6B,OACAO,EAAAC,QAMAX,EAAA97B,UAAAgL,QAAA,SAAArL,EAAAN,GACAqC,KAAAzC,IAAAU,GACA+B,KAAAw6B,SAAAv8B,GAAA88B,OAAAp9B,GAMAy8B,EAAA97B,UAAAsP,IAAA,SAAA3P,EAAAN,GACQ0uB,IAAMpuB,KAAA+B,KAAAw6B,UAAA,IACd,IAAAM,EAAA,CACAE,KAAA/8B,EACAg9B,MAAA,KACAC,MAAAl7B,KAAA06B,QACAK,OAAAp9B,GAEAqC,KAAA06B,QAIA16B,KAAA06B,QAAAO,MAAAH,EAHA96B,KAAAy6B,QAAAK,EAKA96B,KAAA06B,QAAAI,EACA96B,KAAAw6B,SAAAv8B,GAAA68B,IACA96B,KAAAu6B,QAOAH,EAAA97B,UAAAg9B,QAAA,SAAA7E,GACAz2B,KAAAs6B,cAAA7D,GAEA2D,EAjOY,CAkOVjR,GCrQEoS,GAAyB,WAC7B,IAAA7S,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAuBzBsS,GAAU,SAAApS,GAKd,SAAAqS,EAAApB,GACA,IAAA/Q,EAAAF,EAAAvsB,KAAAmD,KAAAq6B,IAAAr6B,KAEA,OADAspB,EAAAoS,UAAA,GACApS,EA0CA,OAjDIiS,GAASE,EAAArS,GASbqS,EAAAn9B,UAAAiC,MAAA,WACA6oB,EAAA9qB,UAAAiC,MAAA1D,KAAAmD,MACAA,KAAA07B,UAAA,IAQAD,EAAAn9B,UAAAf,IAAA,SAAAU,EAAA09B,GACA,IAAA/D,EAAAxO,EAAA9qB,UAAAf,IAAAV,KAAAmD,KAAA/B,GACA29B,EAAyB9T,EAAM6T,GAK/B,OAJAC,KAAA57B,KAAA07B,YACA17B,KAAA07B,UAAAE,GAAA,IAEA57B,KAAA07B,UAAAE,GAAA39B,IAAA,EACA25B,GAEA6D,EAAAn9B,UAAAu9B,MAAA,WACAC,EAAA,KAAA97B,KAAA26B,kBAAA,CACA,IAAA18B,EAAA+B,KAAAo7B,cACA,QAAAQ,KAAA57B,KAAA07B,UACA,GAAAz9B,KAAA+B,KAAA07B,UAAAE,GACA,MAAAE,EAGA,IAAAlE,EAAA53B,KAAA6C,MAEA,QAAA+4B,KADAhE,EAAAC,MAAAD,EAAAv1B,OAAA,EACArC,KAAA07B,iBACA17B,KAAA07B,UAAAE,GAAA39B,KAOAw9B,EAAAn9B,UAAAy9B,QAAA,SAAAJ,UACA37B,KAAA07B,UAA8B5T,EAAM6T,KAEpCF,EAlDc,CAmDZtB,ICWK6B,GAAA,GAmCAC,GAAA,UAYAC,GAAA,IDzDQ,GC6DRC,GAAA,GAIPC,GAAA,KAIOC,GAAA,GAKAC,GAAA,WACP,IAMAC,EAAAC,EANAC,EAAA,GACAC,EAAAP,GACA1F,EAAA,QACAkG,EAAA,sBACAt5B,EAAAs5B,EAAAj9B,OACAk9B,EAAA,2BAEA,SAAAC,EAAA1D,GAIA,IAHA,IAAAP,EAAAkE,KAGAC,EAAA,IAA8BA,GAAA,IAAeA,GAAA,KAG7C,IAFA,IAAAC,EAAAD,EAAA,IACAE,GAAA,EACAvgC,EAAA,EAA2BA,EAAA2G,IAAS3G,EAAA,CACpC,IAAAwgC,EAAAP,EAAAjgC,GAGA,GAFAk8B,EAAAO,KAAA6D,EAAAvG,EAAAyG,EACAV,EAAA5D,EAAAuE,YAAAP,GAAA/E,MACAsB,GAAA+D,EAAA,CACAtE,EAAAO,KAAA6D,EAAAvG,EAAA0C,EAAA,IAAA+D,EACA,IAAArF,EAAAe,EAAAuE,YAAAP,GAAA/E,MAGAoF,KAAApF,GAAA2E,GAGA,GAAAS,EAIA,SAGA,SAEA,SAAAG,IACA,IAAAC,GAAA,EACA,QAAAlE,KAAAuD,EACAA,EAAAvD,GAAAsD,IACAI,EAAA1D,IACAuD,EAAAvD,GAAAsD,EACoBl8B,EAAK87B,IAEzBD,GAAA,KACAF,GAAA37B,YAGAm8B,EAAAvD,GACAkE,GAAA,IAIAA,IACAC,cAAAf,GACAA,OAAA1sB,GAGA,gBAAA0tB,GACA,IAAAC,EAA2BtE,GAAeqE,GAC1C,GAAAC,EAGA,QAAA9gC,EAAA,EAAA+C,EAAA+9B,EAAA99B,OAAiDhD,EAAA+C,IAAQ/C,EAAA,CACzD,IAAA28B,EAAAmE,EAAA9gC,GACA28B,KAAAqD,IACAA,EAAArD,GAAAoD,EACAI,EAAAxD,KACAqD,EAAArD,GAAA,OACAxpB,IAAA0sB,IACAA,EAAAkB,YAAAL,EAAA,SAtEO,GAgFP,SAAAN,KAIA,OAHAV,KACAA,GAAyB3E,GAAqB,MAE9C2E,GAMO,IACPsB,GACAC,GAFOC,IAEPD,GAAAtB,GACA,SAAAlD,GACA,IAAA92B,EAAAs7B,GAAAxE,GAcA,OAbAtpB,MAAAxN,IACAq7B,MACAA,GAAAznB,SAAAmC,cAAA,QACAylB,UAAA,IACAH,GAAAhyB,MAAA5E,OAAA42B,GAAAhyB,MAAAoyB,QAAA,eACAJ,GAAAhyB,MAAAqyB,SAAA,sBACAL,GAAAhyB,MAAAlJ,KAAA,uBAEAk7B,GAAAhyB,MAAAytB,OACAljB,SAAA+nB,KAAAnmB,YAAA6lB,IACAr7B,EAAAs7B,GAAAxE,GAAAuE,GAAAO,aACAhoB,SAAA+nB,KAAA9lB,YAAAwlB,KAEAr7B,IAQO,SAAA67B,GAAA/E,EAAAyD,GACP,IAAAR,EAAAU,KAIA,OAHA3D,GAAAiD,EAAAjD,OACAiD,EAAAjD,QAEAiD,EAAAe,YAAAP,GAAA/E,MASO,SAASsG,GAAwBhF,EAAAyD,EAAAzE,GACxC,OAAAyE,KAAAzE,EACAA,EAAAyE,GAEAzE,EAAAyE,GAAAsB,GAAA/E,EAAAyD,GA0BO,SAAAwB,GAAAxF,EAAApC,EAAA6H,EAAAC,GACP,IAAA9H,IACAoC,EAAA2F,UAAAF,EAAAC,GACA1F,EAAA4F,OAAAhI,GACAoC,EAAA2F,WAAAF,GAAAC,IAGO,IAAAG,GH9RP,cG4SO,SAAAC,GAAA9F,EAAA/jB,EAAA8Y,EAAAgR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx1B,EAAAmjB,EAAAsS,GACP,IAAA7qB,EACA,GAAAwZ,IACAxZ,EAAAykB,EAAAqG,YACArG,EAAAqG,YAAA9qB,EAAAwZ,GAEA9Y,GACA+jB,EAAAsG,aAAAt6B,MAAAg0B,EAAA/jB,GAEA+jB,EAAA8F,UAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx1B,EAAAmjB,EAAAoS,EAAAE,EAAAD,EAAAC,GACA7qB,IACAykB,EAAAqG,YAAA9qB,GAEAU,GACA+jB,EAAAsG,aAAAt6B,MAAAg0B,EAAA6F,IClVe,IAAAU,GAAA,CACfjM,KAAA,EACApD,QAAA,EACAqD,OAAA,EACAtM,MAAA,GCVIuY,GAAyB,WAC7B,IAAA1W,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAqKdmW,GA/IE,SAAAjW,GAKjB,SAAAkW,EAAAjR,GACA,IAAA/E,EAAAF,EAAAvsB,KAAAmD,YAMA,OADAspB,EAAAiW,OAAAlR,EACA/E,EAiIA,OA5II8V,GAASE,EAAAlW,GAoBbkW,EAAAhhC,UAAAgzB,aAAA,SAAAH,EAAAjB,GACA,OAAetI,KASf0X,EAAAhhC,UAAAizB,YAAA,SAAAJ,EAAAjB,GACA,OAAetI,KAOf0X,EAAAhhC,UAAAkhC,mBAAA,SAAAC,EAAAC,EAAAC,GACAF,EAAAC,KACAD,EAAAC,GAAA,IAEAD,EAAAC,GAAAC,EAAApN,UAAA3lB,YAAA+yB,GAWAL,EAAAhhC,UAAAshC,uBAAA,SAAAzgC,EAAA0gC,EAAAJ,GACA,gBAOAC,EAAAhN,GACA,IAAArqB,EAAArI,KAAAw/B,mBAAAthC,KAAA8B,KAAAy/B,EAAAC,GACA,OAAAvgC,EAAA2gC,kBAAAD,EAAAH,EAAAhN,EAAArqB,IACSnK,KAAA8B,OAWTs/B,EAAAhhC,UAAAyhC,2BAAA,SAAApL,EAAAxD,EAAA6O,EAAA33B,KAUAi3B,EAAAhhC,UAAA2hC,eAAA,SAAAC,EAAA/O,EAAA6O,GACA,OAAepY,KAKf0X,EAAAhhC,UAAA6hC,SAAA,WACA,OAAAngC,KAAAu/B,QAOAD,EAAAhhC,UAAA8hC,mBAAA,SAAAzW,GAC6DA,EAAA,OAC7DqH,aAAiCmO,GAAUhM,QAC3CnzB,KAAAqgC,2BAQAf,EAAAhhC,UAAAgiC,uBAAA,SAAA3L,EAAAxD,GACA,UASAmO,EAAAhhC,UAAAiiC,UAAA,SAAA5B,GACA,IAAA6B,EAAA7B,EAAA3N,WAQA,OAPAwP,GAA0BrB,GAAUhM,QAAAqN,GAAyBrB,GAAUtY,OAC3DjB,EAAM+Y,EAAQvY,EAASC,OAAArmB,KAAAogC,mBAAApgC,MAEnCwgC,GAA0BrB,GAAUjM,OACpCyL,EAAAl7B,OACA+8B,EAAA7B,EAAA3N,YAEAwP,GAA6BrB,GAAUhM,QAKvCmM,EAAAhhC,UAAA+hC,wBAAA,WACA,IAAAhS,EAAAruB,KAAAmgC,WACA9R,EAAAK,cAAAL,EAAAI,kBAA4DmB,GAAWG,OACvE1B,EAAAlS,WAGAmjB,EA7IiB,CA8IfpV,GCpKEuW,GAAyB,WAC7B,IAAA/X,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAoNdwX,GA1LQ,SAAAtX,GAKvB,SAAAuX,EAAAtS,GACA,IAAA/E,EAAAF,EAAAvsB,KAAAmD,KAAAquB,IAAAruB,KAKAspB,EAAAsX,mBAOAtX,EAAAuX,eNdA,cMqBAvX,EAAAwX,gBNrBA,cM4BAxX,EAAAyX,uBN5BA,cMiCAzX,EAAAsP,QAAwBnB,KACxB,IAAAG,EAAAtO,EAAAsP,QAAAhB,OAIA,OAHAA,EAAAlsB,MAAAqyB,SAAA,WACAnG,EAAAlsB,MAAAs1B,gBAAA,WACApJ,EAAA3J,UAAA3E,EAAA6W,WAAAhS,eACA7E,EA8IA,OAvLImX,GAASE,EAAAvX,GA8CbuX,EAAAriC,UAAAgqB,gBAAA,WACAtoB,KAAA44B,QAAAhB,OAAAC,MAAA73B,KAAA44B,QAAAhB,OAAAv1B,OAAA,EACA+mB,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAQA2gC,EAAAriC,UAAA2iC,KAAA,SAAArI,EAAAzH,EAAAxC,GACA,IAAAuS,EAAA/P,EAAA+P,WACAC,EAAAhQ,EAAAsF,KAAA,GAAAyK,EAAA,EACAE,EAAAjQ,EAAAsF,KAAA,GAAAyK,EAAA,EACA1K,EAAArF,EAAAkQ,UAAA7K,SACA8K,EAAsBtL,GAAUrH,GAChC4S,EAAuBxL,GAAWpH,GAClC6S,EAA0B1L,GAAcnH,GACxC8S,EAAyB5L,GAAalH,GAC9B/pB,GAAcusB,EAAAuQ,2BAAAJ,GACd18B,GAAcusB,EAAAuQ,2BAAAH,GACd38B,GAAcusB,EAAAuQ,2BAAAF,GACd58B,GAAcusB,EAAAuQ,2BAAAD,GACtB7I,EAAA+I,OACQvD,GAAcxF,GAAApC,EAAA2K,EAAAC,GACtBxI,EAAAgJ,YACAhJ,EAAAiJ,OAAAP,EAAA,GAAAJ,EAAAI,EAAA,GAAAJ,GACAtI,EAAAkJ,OAAAP,EAAA,GAAAL,EAAAK,EAAA,GAAAL,GACAtI,EAAAkJ,OAAAN,EAAA,GAAAN,EAAAM,EAAA,GAAAN,GACAtI,EAAAkJ,OAAAL,EAAA,GAAAP,EAAAO,EAAA,GAAAP,GACAtI,EAAAqI,OACQ7C,GAAcxF,EAAApC,EAAA2K,EAAAC,IAQtBT,EAAAriC,UAAAyjC,cAAA,SAAAnJ,EAAAzH,EAAAxC,GACA,IAAA2S,EAAsBtL,GAAUrH,GAChC4S,EAAuBxL,GAAWpH,GAClC6S,EAA0B1L,GAAcnH,GACxC8S,EAAyB5L,GAAalH,GAC9B/pB,GAAcusB,EAAAuQ,2BAAAJ,GACd18B,GAAcusB,EAAAuQ,2BAAAH,GACd38B,GAAcusB,EAAAuQ,2BAAAF,GACd58B,GAAcusB,EAAAuQ,2BAAAD,GACtB,IAAAO,EAAAhiC,KAAA+gC,uBACQn8B,GAAco9B,EAAAV,GACd18B,GAAco9B,EAAAT,GACd38B,GAAco9B,EAAAR,GACd58B,GAAco9B,EAAAP,GACtB7I,EAAA+I,OACA/I,EAAAgJ,YACAhJ,EAAAiJ,OAAA3hC,KAAAmU,MAAAitB,EAAA,IAAAphC,KAAAmU,MAAAitB,EAAA,KACA1I,EAAAkJ,OAAA5hC,KAAAmU,MAAAktB,EAAA,IAAArhC,KAAAmU,MAAAktB,EAAA,KACA3I,EAAAkJ,OAAA5hC,KAAAmU,MAAAmtB,EAAA,IAAAthC,KAAAmU,MAAAmtB,EAAA,KACA5I,EAAAkJ,OAAA5hC,KAAAmU,MAAAotB,EAAA,IAAAvhC,KAAAmU,MAAAotB,EAAA,KACA7I,EAAAqI,QAQAN,EAAAriC,UAAA2jC,qBAAA,SAAArjC,EAAAg6B,EAAAzH,GACA,IAAA9C,EAAAruB,KAAAmgC,WACA,GAAA9R,EAAAtE,YAAAnrB,GAAA,CACA,IAAAsjC,EAAA,IAA8B7J,GAAWz5B,EAAAoB,KAAA+gC,uBAAA5P,EAAAyH,EAAA,MACzCvK,EAAA3E,cAAAwY,KAQAvB,EAAAriC,UAAA6jC,UAAA,SAAAvJ,EAAAzH,GACAnxB,KAAAiiC,qBAAkCtS,EAAeiJ,EAAAzH,IAOjDwP,EAAAriC,UAAA8jC,WAAA,SAAAxJ,EAAAzH,GACAnxB,KAAAiiC,qBAAkCtS,EAAeiJ,EAAAzH,IAWjDwP,EAAAriC,UAAA+jC,mBAAA,SAAAlR,EAAA0G,EAAAx1B,EAAAg8B,GACA,IAAAgD,EAAAlQ,EAAAkQ,UAEA9H,EAAA1B,EAAA,EACA2B,EAAAn3B,EAAA,EACAo3B,EAHAtI,EAAA+P,WAGAG,EAAAlR,WACAuJ,GAAAD,EACAG,GAAAyH,EAAA9K,OAAA,GAAA8H,EACAxE,GAAAwH,EAAA9K,OAAA,GACA,OAAe+C,GAAgBt5B,KAAA6gC,eAAAtH,EAAAC,EAAAC,EAAAC,GAAA2H,EAAA7K,SAAAoD,EAAAC,IAU/B8G,EAAAriC,UAAA2hC,eAAA,SAAAC,EAAA/O,EAAA6O,GACA,IAEA/8B,EAFAq/B,EAA0B19B,GAAc5E,KAAA+gC,uBAAAb,EAAAt8B,SACxCg1B,EAAA54B,KAAA44B,QAEA,IACA31B,EAAA21B,EAAA2J,aAAAriC,KAAAmU,MAAAiuB,EAAA,IAAApiC,KAAAmU,MAAAiuB,EAAA,SAAAr/B,KAEA,MAAAgP,GACA,wBAAAA,EAAAhV,KAEA,IAAAulC,WAEAv/B,EAEA,WAAAA,EAAA,GACA,KAEAA,GAEA09B,EAxLuB,CAyLrBtB,ICnNEoD,GAAyB,WAC7B,IAAA/Z,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA2BzBwZ,GAAuB,SAAAtZ,GAK3B,SAAAuZ,EAAAC,GACA,IAAAtZ,EAAAF,EAAAvsB,KAAAmD,KAAA4iC,IAAA5iC,KAyCA,OApCAspB,EAAAuZ,eAAA,EAKAvZ,EAAAwZ,gBAAA,KAKAxZ,EAAAyZ,iBAKAzZ,EAAA0Z,cAAA,GAKA1Z,EAAA2Z,WAAA,EAKA3Z,EAAA4Z,UX6HA,CAAA5hC,SAAA,UWxHAgoB,EAAA6Z,cAAA,IAAkCnQ,GAAS,SAK3C1J,EAAA8Z,WAAA,EACA9Z,EAiYA,OA/aImZ,GAASE,EAAAvZ,GAqDbuZ,EAAArkC,UAAA+kC,eAAA,SAAA1D,GACA,IAAAiD,EAAyE5iC,KAAAmgC,WACzEmD,EAAA3D,EAAA3O,WACAiB,EAAA2Q,EAAAvQ,4BACA,OAAAiR,GAA4BrQ,GAASE,QACrCmQ,GAAyBrQ,GAASG,OAClCkQ,GAAyBrQ,GAASpM,QAAAoL,GASlC0Q,EAAArkC,UAAAilC,QAAA,SAAAtf,EAAA1a,EAAAmjB,EAAAyE,GACA,IAAA+P,EAAA/P,EAAA+P,WACArB,EAAA1O,EAAAkQ,UAAAxB,WACA+C,EAAyE5iC,KAAAmgC,WAEzER,EADAiD,EAAA7R,YACAwS,QAAAtf,EAAA1a,EAAAmjB,EAAAwU,EAAArB,GAcA,OAbAF,EAAA3O,YAA+BiC,GAASpM,QACxC+b,EAAAvQ,4BAIAuQ,EAAAxQ,aAAA,IAEApyB,KAAAijC,WAAA,GAJAtD,EAAA6D,SAA8BvQ,GAASE,SAOvCnzB,KAAAqjC,eAAA1D,KACAA,IAAA8D,kBAEA9D,GAKAgD,EAAArkC,UAAAkhC,mBAAA,SAAAC,EAAAC,EAAAC,GACA,QAAA3/B,KAAAqjC,eAAA1D,IACAvW,EAAA9qB,UAAAkhC,mBAAA3iC,KAAAmD,KAAAy/B,EAAAC,EAAAC,IAOAgD,EAAArkC,UAAAgzB,aAAA,SAAAH,EAAAjB,GACA,UAUAyS,EAAArkC,UAAAizB,YAAA,SAAAJ,EAAAjB,GACA,IAAA0I,EAAA54B,KAAA44B,QACAyI,EAAAlQ,EAAAkQ,UACAxB,EAAAwB,EAAAxB,WACA6D,EAAArC,EAAAlR,WACAwT,EAAAtC,EAAA9K,OACAC,EAAA6K,EAAA7K,SACA0K,EAAA/P,EAAA+P,WACA0B,EAAyE5iC,KAAAmgC,WACzEyD,EAAAhB,EAAA7R,YACA8S,EAAAD,EAAAvZ,cACAyZ,EAAAF,EAAAG,yBAAAlE,GACAuD,OAAAvzB,IAAA+zB,EAAAR,WAAApjC,KAAAojC,WAAAQ,EAAAR,WACAnf,EAAA6f,EAAAE,kBAAAN,EAAAN,GACAa,EAAAH,EAAAI,cAAAjgB,GACA0K,EAAAwC,EAAAxC,OACAuB,EAAAvB,SACAA,EAAqB2I,GAAe3I,EAAAuB,EAAAvB,SAEpC,IAAAwV,EAAAP,EAAAQ,kBAAAlD,GAEArJ,EAAA33B,KAAAmU,MAAA8c,EAAAsF,KAAA,GAAA0N,GACA9hC,EAAAnC,KAAAmU,MAAA8c,EAAAsF,KAAA,GAAA0N,GACA3N,IAEAqB,EAAAx1B,EADAnC,KAAAmU,MAAAnU,KAAAoF,KAAAuyB,IAAAx1B,OAGA,IAAA2qB,EAAAiX,EAAApM,EAAA,EAAAsM,EACAlX,EAAAgX,EAAA5hC,EAAA,EAAA8hC,EACAE,EAAA,CACAV,EAAA,GAAA3W,EACA2W,EAAA,GAAA1W,EACA0W,EAAA,GAAA3W,EACA2W,EAAA,GAAA1W,GAEAyF,EAAAoR,EAAAQ,0BAAA3V,EAAA1K,GAIAsgB,EAAA,GACAA,EAAAtgB,GAAA,GACA,IAAAugB,EAAAxkC,KAAA4/B,uBAAAgE,EAAA/D,EAAA0E,GACArB,EAAAljC,KAAAkjC,UACAuB,EAAAzkC,KAAAmjC,cACAnjC,KAAAijC,WAAA,EACA,QAAA15B,EAAAmpB,EAAArxB,KAAoCkI,GAAAmpB,EAAAlxB,OAAqB+H,EACzD,QAAAmjB,EAAAgG,EAAAnxB,KAAwCmrB,GAAAgG,EAAAjxB,OAAqBirB,EAAA,CAC7D,IAAAiT,EAAA3/B,KAAAujC,QAAAtf,EAAA1a,EAAAmjB,EAAAyE,GACA,GAAAnxB,KAAAqjC,eAAA1D,GAAA,CACA,IAAA+E,EAA8B5c,EAAM9nB,MACpC,GAAA2/B,EAAA3O,YAA2CiC,GAASE,OAAA,CACpDoR,EAAAtgB,GAAA0b,EAAApN,UAAA3lB,YAAA+yB,EACA,IAAAgF,EAAAhF,EAAAgF,aAAAD,GACA1kC,KAAAijC,YAAA0B,IAAA,IAAA3kC,KAAAgjC,cAAApiC,QAAA++B,KACA3/B,KAAAijC,WAAA,GAGA,OAAAtD,EAAAiF,SAAAF,EAAAvT,EAAA3gB,MAEA,SAGA,IAAAq0B,EAAAf,EAAAgB,2BAAAnF,EAAApN,UAAAkS,EAAAvB,GACA6B,GAAA,EACAF,IACAE,EAAAP,EAAAvgB,EAAA,EAAA4gB,IAEAE,GACAjB,EAAAkB,gCAAArF,EAAApN,UAAAiS,EAAAC,EAAAvB,GAIA,IAAAtL,EAAAgB,EAAAhB,OACAqN,EAAAhB,EAAAP,EAEQpK,GAAgBt5B,KAAA8gC,gBAAA3P,EAAAsF,KAAA,KAAAtF,EAAAsF,KAAA,OAAA0N,EAAA,EAAAA,EAAA3N,GAAAqB,EAAA,GAAAx1B,EAAA,GAChBy3B,GAAW95B,KAAA+gC,uBAAA/gC,KAAA8gC,iBAEXxH,GAAgBt5B,KAAA6gC,eAAAhJ,EAAA,EAAAx1B,EAAA,EAAA4iC,IAAA,GAAApN,EAAA,GAAAx1B,EAAA,GACxBu1B,EAAAC,UAAAD,EAAAv1B,WACAu1B,EAAAC,QACAD,EAAAv1B,UAGAu2B,EAAAsM,UAAA,IAAArN,EAAAx1B,GAEA6tB,EAAAvB,QACA3uB,KAAA+hC,cAAAnJ,EAAAzH,EAAAjB,EAAAvB,QAEA3uB,KAAAmiC,UAAAvJ,EAAAzH,GACAnxB,KAAAgjC,cAAAtjC,OAAA,EAEA,IAAAylC,EAAA/nC,OAAAsL,KAAA67B,GAAAl3B,IAAA7D,QACA27B,EAAAx+B,KAAA,SAAA/E,EAAAC,GACA,OAAAD,IAAAqiB,EACA,EAEApiB,IAAAoiB,GACA,EAGAriB,EAAAC,EAAA,EAAAD,EAAAC,GAAA,MAGA,QAAAnF,EAAA,EAAA+C,EAAA0lC,EAAAzlC,OAAuChD,EAAA+C,IAAQ/C,EAAA,CAC/C,IAAA0oC,EAAAD,EAAAzoC,GACA2oC,EAAAzB,EAAA0B,iBAAAF,EAAAlE,EAAArB,GAEA0F,EADAzB,EAAAI,cAAAkB,GACAnB,EACAuB,EAAAH,EAAA,GAAAE,EAAAN,EACAQ,EAAAJ,EAAA,GAAAE,EAAAN,EACAS,EAAA5B,EAAA6B,yBAAoE3P,GAAUqO,GAAAe,GAC9EQ,EAAA9B,EAAA+B,mBAAAH,GACAI,EAA2BlhC,GAAc5E,KAAA6gC,eAAA,CACzCsD,GAAAyB,EAAA,GAAAvB,EAAA,IAAAJ,EACAE,GAAAE,EAAA,GAAAuB,EAAA,IAAA3B,IAEA8B,EAAA5B,EAAAP,EAAAoC,uBAAAnG,GACAoG,EAAA1B,EAAAa,GACA,QAAAc,KAAAD,EAAA,CACA,IACA1T,GADAoN,EAAAsG,EAAAC,IACA3T,UAEA4T,EAAAL,EAAA,IAAAJ,EAAA,GAAAnT,EAAA,IAAAiT,EACAY,GAAAlmC,KAAAmU,MAAA8xB,EAAAX,GACAa,GAAAP,EAAA,IAAAJ,EAAA,GAAAnT,EAAA,IAAAkT,EACAa,GAAApmC,KAAAmU,MAAAgyB,GAAAZ,GAGA3G,GAAAsH,IAFA78B,EAAArJ,KAAAmU,MAAA8xB,IAGApH,GAAAuH,IAFA5Z,EAAAxsB,KAAAmU,MAAAgyB,KAGArmC,KAAAumC,cAAA5G,EAAAxO,EAAA5nB,EAAAmjB,EAAAoS,GAAAC,GAAAgH,EAAA9hB,IAAAmhB,GACAplC,KAAAgjC,cAAAlgC,KAAA68B,GACA3/B,KAAAwmC,gBAAArV,EAAAsV,UAAA7C,EAAAjE,IAGA3/B,KAAA+iC,iBAAAc,EACA7jC,KAAA4gC,mBAAAqD,EACAjkC,KAAA6iC,eAAA7iC,KAAA8iC,kBAAuDnQ,GAAM3yB,KAAA8iC,gBAAAuB,GAC7DrkC,KAAA8iC,gBAAAuB,EACArkC,KAAA0mC,kBAAAvV,EAAAyS,EAAAE,EAAA5C,EAAArB,EAAAlR,EAAA1K,EAAA2e,EAAAxQ,cACApyB,KAAA2mC,iBAAAxV,EAAAyS,GACA5jC,KAAA4mC,oBAAAzV,EAAAyS,GACA5jC,KAAAoiC,WAAAxJ,EAAAzH,GACAjB,EAAAvB,QACAiK,EAAAiO,UAEA,IAAAlZ,GAAAuC,EAAAvC,QACAA,KAAAmZ,WAAAlP,EAAAlsB,MAAAiiB,WACAiK,EAAAlsB,MAAAiiB,YAEA,IAAAoZ,GAA8B9M,GAAiBj6B,KAAA8gC,iBAI/C,OAHAiG,KAAAnP,EAAAlsB,MAAAmJ,YACA+iB,EAAAlsB,MAAAmJ,UAAAkyB,IAEAnP,GAYA+K,EAAArkC,UAAAioC,cAAA,SAAA5G,EAAAxO,EAAA5nB,EAAAmjB,EAAAoS,EAAAC,EAAAiI,EAAAC,GACA,IAAAtI,EAAA3+B,KAAAknC,aAAAvH,GACA,GAAAhB,EAAA,CAGA,IAAA+F,EAAkB5c,EAAM9nB,MACxBmU,EAAA8yB,EAAAtH,EAAAiF,SAAAF,EAAAvT,EAAA3gB,MAAA,EAEAozB,EADyE5jC,KAAAmgC,WACzEpP,YACA,IAAA5c,GAAAyvB,EAAAuD,UAAAhW,EAAAkQ,UAAAxB,aACA7/B,KAAA44B,QAAAsM,UAAA37B,EAAAmjB,EAAAoS,EAAAC,GAEA,IAAAqI,EAAAjzB,IAAAnU,KAAA44B,QAAAqG,YACAmI,IACApnC,KAAA44B,QAAA+I,OACA3hC,KAAA44B,QAAAqG,YAAA9qB,GAEAnU,KAAA44B,QAAA8F,UAAAC,EAAAqI,IAAArI,EAAA9G,MAAA,EAAAmP,EAAArI,EAAAt8B,OAAA,EAAA2kC,EAAAz9B,EAAAmjB,EAAAoS,EAAAC,GACAqI,GACApnC,KAAA44B,QAAAiO,UAEA,IAAA1yB,EACAgd,EAAAkW,SAAA,EAEAJ,GACAtH,EAAA2H,cAAA5C,KAMA/B,EAAArkC,UAAAipC,SAAA,WACA,IAAA3O,EAAA54B,KAAA44B,QACA,OAAAA,IAAAhB,OAAA,MAQA+K,EAAArkC,UAAA4oC,aAAA,SAAAvH,GACA,OAA+D,EAAA4H,YAO/D5E,EAAArkC,UAAAsoC,oBAAA,SAAAzV,EAAAyS,GACA,GAAAA,EAAAjJ,iBAAA,CAMA,IAAA6M,EAAA,SAAA5D,EAAAv2B,EAAA8jB,GACA,IAAAsW,EAAoC3f,EAAM8b,GAC1C6D,KAAAtW,EAAAsV,WACA7C,EAAA8D,YAAAvW,EAAAkQ,UAAAxB,WAAA1O,EAAAsV,UAAAgB,KAEavpC,KAAA,KAAA0lC,GACbzS,EAAAwW,oBAAA7kC,KAC0E,KAS1E6/B,EAAArkC,UAAAkoC,gBAAA,SAAAC,EAAA7C,EAAAjE,GAEA,IAAA8H,EAA4B3f,EAAM8b,GAClC6D,KAAAhB,IACAA,EAAAgB,GAAA,IAEAhB,EAAAgB,GAAA9H,EAAAiI,WAAA,GAQAjF,EAAArkC,UAAAqoC,iBAAA,SAAAxV,EAAAyS,GACA,IAAA6D,EAA4B3f,EAAM8b,GAClCnN,EAAA,EACAgR,KAAAtW,EAAAsV,YACAhQ,GAAAr5B,OAAAsL,KAAAyoB,EAAAsV,UAAAgB,IAAA/nC,QAEA+nC,KAAAtW,EAAA0W,cACApR,GAAAr5B,OAAAsL,KAAAyoB,EAAA0W,YAAAJ,IAAA/nC,QAEA,IAAAooC,EAAAlE,EAAAkE,UACAA,EAAAxN,cAAA7D,IACAqR,EAAAxN,cAAA7D,IAqBAkM,EAAArkC,UAAAooC,kBAAA,SAAAvV,EAAAyS,EAAAE,EAAA5C,EAAArB,EAAAlR,EAAAyW,EAAApT,EAAA+V,GACA,IAAAN,EAA4B3f,EAAM8b,GAClC6D,KAAAtW,EAAA0W,cACA1W,EAAA0W,YAAAJ,GAAA,IAEA,IAGA9H,EAAAjN,EAAAuR,EAAA16B,EAAAmjB,EAAAzI,EAHA4jB,EAAA1W,EAAA0W,YAAAJ,GACAO,EAAA7W,EAAA6W,UAGA,IAAA/jB,EAFA6f,EAAAmE,aAEyBhkB,GAAAmhB,IAAenhB,EAGxC,IAFAyO,EAAAoR,EAAAQ,0BAAA3V,EAAA1K,EAAAyO,GACAuR,EAAAH,EAAAI,cAAAjgB,GACA1a,EAAAmpB,EAAArxB,KAAoCkI,GAAAmpB,EAAAlxB,OAAqB+H,EACzD,IAAAmjB,EAAAgG,EAAAnxB,KAAwCmrB,GAAAgG,EAAAjxB,OAAqBirB,EAC7D0Y,EAAAnhB,GAAA+N,IACA2N,EAAAiE,EAAAL,QAAAtf,EAAA1a,EAAAmjB,EAAAwU,EAAArB,IACA7O,YAA+CiC,GAASC,OACxD2U,EAAAlI,EAAAiI,WAAA,EACAI,EAAAE,YAAAvI,EAAAiI,WACAI,EAAAG,QAAA,CAAAxI,EAAA8H,EACA3D,EAAAsE,mBAAAzI,EAAApN,WAAA0R,UAGAp0B,IAAAk4B,GACAA,EAAApI,IAIAiE,EAAAyE,QAAApkB,EAAA1a,EAAAmjB,EAAAmT,IAMA8C,EAhb2B,CAibzBjC,IAKFgC,GAAuBpkC,UAAA6hC,SACR,IAAAmI,GAAA,GCldXC,GAAyB,WAC7B,IAAA7f,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAiDdsf,GAlBF,SAAApf,GAKb,SAAAqf,EAAA1W,GACA,OAAA3I,EAAAvsB,KAAAmD,KAAA+xB,IAAA/xB,KAUA,OAfIuoC,GAASE,EAAArf,GAYbqf,EAAAnqC,UAAAozB,eAAA,WACA,WAAmB4W,GAAuBtoC,OAE1CyoC,EAhBa,CAiBX5W,ICxCK6W,GAAA,GCCA,SAAAC,GAAA/qC,GACP,OAAAsC,KAAA8E,IAAApH,EAAA,GAQO,SAAAgrC,GAAAhrC,GACP,SAAA+qC,GAAA,EAAA/qC,GAQO,SAAAirC,GAAAjrC,GACP,SAAAA,IAAA,EAAAA,MAQO,SAAAkrC,GAAAlrC,GACP,OAAAA,ECrCA,IAAImrC,GAAyB,WAC7B,IAAArgB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAsSd8f,GAnNP,SAAA5f,GAOR,SAAA6f,EAAA1W,EAAAnW,EAAA2V,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,YACA2U,EAAAod,GAAA,GA0CA,OAtCAzI,EAAAiJ,YAKAjJ,EAAAlN,QAOAkN,EAAA4f,YAAA,KAOA5f,EAAA6f,MAAA,EAOA7f,EAAArrB,IAAA,GAKAqrB,EAAA8f,iBAAAv5B,IAAA8E,EAAAsyB,WAAA,IAAAtyB,EAAAsyB,WAMA3d,EAAA+f,kBAAA,GACA/f,EA8JA,OAhNIyf,GAASE,EAAA7f,GAuDb6f,EAAA3qC,UAAA6d,QAAA,WACAnc,KAAA0pB,cAA2BtD,EAASC,SAKpC4iB,EAAA3qC,UAAAspC,OAAA,WACA,OAAA5nC,KAAA/B,IAAA,IAAA+B,KAAAuyB,WAQA0W,EAAA3qC,UAAAmlC,eAAA,WACA,IAAAzjC,KAAAkpC,YAEA,OAAAlpC,KAEA,IAAA2/B,EAAA3/B,KAAAkpC,YAKA,GACA,GAAAvJ,EAAA3O,YAAmCiC,GAASE,OAI5C,OADAnzB,KAAAopC,YAAA,EACAzJ,EAEAA,IAAAuJ,kBACSvJ,GAET,OAAA3/B,MAMAipC,EAAA3qC,UAAAgrC,oBAAA,WACA,GAAAtpC,KAAAkpC,YAAA,CAGA,IAAAvJ,EAAA3/B,KAAAkpC,YACA37B,EAAmC,KACnC,GACA,GAAAoyB,EAAA3O,YAAmCiC,GAASE,OAAA,CAI5CwM,EAAAuJ,YAAA,KACA,MAEAvJ,EAAA3O,YAAwCiC,GAASnD,QAGjDviB,EAAAoyB,EAEAA,EAAA3O,YAAwCiC,GAASC,KAGjD3lB,EAAA27B,YAAAvJ,EAAAuJ,YAGA37B,EAAAoyB,EAEAA,EAAApyB,EAAA27B,kBACSvJ,KAOTsJ,EAAA3qC,UAAAirC,aAAA,WACA,OAAAvpC,KAAAuyB,WAKA0W,EAAA3qC,UAAA0yB,SAAA,WACA,OAAAhxB,KAAAoc,OAUA6sB,EAAA3qC,UAAAklC,SAAA,SAAApnB,GACApc,KAAAoc,QACApc,KAAAmc,WASA8sB,EAAA3qC,UAAAmF,KAAA,WACQmkB,KAQRqhB,EAAA3qC,UAAAsmC,SAAA,SAAA/uB,EAAArF,GACA,IAAAxQ,KAAAopC,YACA,SAEA,IAAAI,EAAAxpC,KAAAqpC,kBAAAxzB,GACA,GAAA2zB,GAIA,QAAAA,EACA,cAJAA,EAAAh5B,EACAxQ,KAAAqpC,kBAAAxzB,GAAA2zB,EAKA,IAAAC,EAAAj5B,EAAAg5B,EAAA,OACA,OAAAC,GAAAzpC,KAAAopC,YACA,EAEeT,GAAMc,EAAAzpC,KAAAopC,cASrBH,EAAA3qC,UAAAqmC,aAAA,SAAA9uB,GACA,QAAA7V,KAAAopC,cAGA,IAAAppC,KAAAqpC,kBAAAxzB,IAMAozB,EAAA3qC,UAAAgpC,cAAA,SAAAzxB,GACA7V,KAAAopC,cACAppC,KAAAqpC,kBAAAxzB,IAAA,IAGAozB,EAjNQ,CAkNN9f,GCrSEugB,GAAyB,WAC7B,IAAAhhB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA8J7B,SAAAygB,KACA,IAAA/+B,EAAc6sB,GAAqB,KAGnC,OAFA7sB,EAAAg/B,UAAA,gBACAh/B,EAAAi/B,SAAA,SACAj/B,EAAAgtB,OAEe,IAAAkS,GA/IF,SAAA1gB,GAUb,SAAA2gB,EAAAxX,EAAAnW,EAAA4tB,EAAAC,EAAAC,EAAAnY,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,KAAAuyB,EAAAnW,EAAA2V,IAAA/xB,KA+BA,OA1BAspB,EAAA6gB,aAAAF,EAOA3gB,EAAA8gB,KAAAJ,EAKA1gB,EAAA+gB,OAAA,IAAAC,MACA,OAAAL,IACA3gB,EAAA+gB,OAAAJ,eAMA3gB,EAAAihB,mBAAA,KAKAjhB,EAAAkhB,kBAAAN,EACA5gB,EAyFA,OAlIIogB,GAASK,EAAA3gB,GA8Cb2gB,EAAAzrC,UAAAgqB,gBAAA,WACAtoB,KAAAoc,OAA0B6W,GAASnD,UACnC9vB,KAAAyqC,iBACAzqC,KAAAqqC,OAAAV,MAEA3pC,KAAAkpC,aACAlpC,KAAAkpC,YAAA7gB,UAEAroB,KAAAoc,MAAqB6W,GAASI,MAC9BrzB,KAAAmc,UACAiN,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAOA+pC,EAAAzrC,UAAAipC,SAAA,WACA,OAAAvnC,KAAAqqC,QAKAN,EAAAzrC,UAAAspC,OAAA,WACA,OAAA5nC,KAAAoqC,MAOAL,EAAAzrC,UAAAosC,kBAAA,WACA1qC,KAAAoc,MAAqB6W,GAASpM,MAC9B7mB,KAAAyqC,iBACAzqC,KAAAqqC,OAAAV,KACA3pC,KAAAmc,WAOA4tB,EAAAzrC,UAAAqsC,iBAAA,WACA,IAAAhM,EAAgD3+B,KAAA,OAChD2+B,EAAAiM,cAAAjM,EAAAkM,cACA7qC,KAAAoc,MAAyB6W,GAASE,OAGlCnzB,KAAAoc,MAAyB6W,GAASG,MAElCpzB,KAAAyqC,iBACAzqC,KAAAmc,WAMA4tB,EAAAzrC,UAAAmF,KAAA,WACAzD,KAAAoc,OAA0B6W,GAASpM,QACnC7mB,KAAAoc,MAAyB6W,GAASC,KAClClzB,KAAAqqC,OAAA,IAAAC,MACA,OAAAtqC,KAAAmqC,eACAnqC,KAAAqqC,OAAAJ,YAAAjqC,KAAAmqC,eAGAnqC,KAAAoc,OAA0B6W,GAASC,OACnClzB,KAAAoc,MAAyB6W,GAASnD,QAClC9vB,KAAAmc,UACAnc,KAAAuqC,mBAAA,CACgBrkB,EAAUlmB,KAAAqqC,OAAcjkB,EAASS,MAAA7mB,KAAA0qC,kBAAA1qC,MACjCkmB,EAAUlmB,KAAAqqC,OAAcjkB,EAASY,KAAAhnB,KAAA2qC,iBAAA3qC,OAEjDA,KAAAwqC,kBAAAxqC,UAAAoqC,QAQAL,EAAAzrC,UAAAmsC,eAAA,WACAzqC,KAAAuqC,mBAAAl+B,QAAwC2Z,GACxChmB,KAAAuqC,mBAAA,MAEAR,EAnIa,CAoIXf,ICzIK,SAAS8B,GAAc7mB,EAAA1a,EAAAmjB,EAAAqe,GAC9B,YAAAl7B,IAAAk7B,GACAA,EAAA,GAAA9mB,EACA8mB,EAAA,GAAAxhC,EACAwhC,EAAA,GAAAre,EACAqe,GAGA,CAAA9mB,EAAA1a,EAAAmjB,GASO,SAAAse,GAAA/mB,EAAA1a,EAAAmjB,GACP,OAAAzI,EAAA,IAAA1a,EAAA,IAAAmjB,EAOO,SAAAkb,GAAArV,GACP,OAAAyY,GAAAzY,EAAA,GAAAA,EAAA,GAAAA,EAAA,IC1CA,IAAI0Y,GAAyB,WAC7B,IAAAviB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA2DdgiB,GAzCF,SAAA9hB,GAKb,SAAA+hB,EAAA9Q,GACA,OAAAjR,EAAAvsB,KAAAmD,KAAAq6B,IAAAr6B,KAiCA,OAtCIirC,GAASE,EAAA/hB,GAUb+hB,EAAA7sC,UAAAopC,YAAA,SAAAjB,GACA,KAAAzmC,KAAA26B,kBAAA,CAEA,GADA36B,KAAAm7B,WACAyM,WAAAnB,EACA,MAGAzmC,KAAA6C,MAAAwlB,YAOA8iB,EAAA7sC,UAAA8sC,mBAAA,WACA,OAAAprC,KAAA46B,WAAA,CAGA,IAEA3W,EDAO,SAAAhmB,GACP,OAAAA,EAAA4P,MAAA,KAAAR,IAAA7D,QCFwB6hC,CADxBrrC,KAAAq7B,gBAEA,GACAr7B,KAAAqM,QAAA,SAAAszB,GACAA,EAAApN,UAAA,KAAAtO,IACAjkB,KAAAgE,OAA4B4jC,GAAMjI,EAAApN,YAClCoN,EAAAtX,YAESnqB,KAAA8B,SAETmrC,EAvCa,CAwCXhR,ICjDamR,GAAA,CACfC,MAAA,QACAC,YAAA,aACAC,YAAA,aACAC,QAAA,UACAC,YAAA,aACAC,kBAAA,kBACAC,cAAA,eACAC,oBAAA,qBACAC,OAAA,UCQOC,GAAA,UAUA,SAAAC,GAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAD,GAAAJ,GACAM,EAAenf,EAAS+e,EAAA,IACxBK,EAAepf,EAASgf,EAAA,IACxBK,GAAAD,EAAAD,GAAA,EACAG,EAAsBtf,EAASgf,EAAA,GAAAD,EAAA,MAC/BtqC,EAAA1B,KAAA22B,IAAA2V,GAAAtsC,KAAA22B,IAAA2V,GACAtsC,KAAA22B,IAAA4V,GAAAvsC,KAAA22B,IAAA4V,GACAvsC,KAAAy2B,IAAA2V,GAAApsC,KAAAy2B,IAAA4V,GACA,SAAAF,EAAAnsC,KAAAwsC,MAAAxsC,KAAAoF,KAAA1D,GAAA1B,KAAAoF,KAAA,EAAA1D,IA6FA,SAAA+qC,GAAAxY,EAAAkY,GAKA,IAJA,IAAA3mC,EAAA,EACArC,EAAA8wB,EAAAz0B,OACAktB,EAAAuH,EAAA9wB,EAAA,MACAwpB,EAAAsH,EAAA9wB,EAAA,MACA3G,EAAA,EAAmBA,EAAA2G,EAAS3G,IAAA,CAC5B,IAAAowB,EAAAqH,EAAAz3B,GAAA,GACAqwB,EAAAoH,EAAAz3B,GAAA,GACAgJ,GAAgBynB,EAASL,EAAAF,IACzB,EAAA1sB,KAAA22B,IAA0B1J,EAASN,IACnC3sB,KAAA22B,IAAyB1J,EAASJ,KAClCH,EAAAE,EACAD,EAAAE,EAEA,OAAArnB,EAAA2mC,IAAA,EChJA,IAAAO,GAAA,CACAC,QAAA,UACAC,KAAA,KACAC,OAAA,IACAC,OAAA,SACAC,YAAA,cACAC,OAAA,SAQOC,GAAA,GAEPA,GAAAP,GAAAC,SAAA,EAAA3sC,KAAAmtB,GAAA,YACA8f,GAAAP,GAAAE,MAAA,MACAK,GAAAP,GAAAG,QAAA,EACAI,GAAAP,GAAAM,QAAA,UACe,IAAAE,GAAA,GCwNAC,GAnMD,WAId,SAAAC,EAAA34B,GAKA3U,KAAAutC,MAAA54B,EAAAwX,KAQAnsB,KAAAwtC,OAA8D74B,EAAA,MAQ9D3U,KAAAytC,aAAA59B,IAAA8E,EAAAga,OAAAha,EAAAga,OAAA,KAQA3uB,KAAA0tC,kBAAA79B,IAAA8E,EAAAg5B,YACAh5B,EAAAg5B,YAAA,KAKA3tC,KAAA4tC,sBAAA/9B,IAAA8E,EAAAk5B,gBACAl5B,EAAAk5B,gBAAA,MAKA7tC,KAAA8tC,aAAAj+B,IAAA8E,EAAAo5B,QAAAp5B,EAAAo5B,OAKA/tC,KAAAguC,aAAAhuC,KAAA8tC,UAAA9tC,KAAAytC,SAKAztC,KAAAiuC,wBAAAt5B,EAAAu5B,mBAKAluC,KAAAmuC,iBAAA,KAKAnuC,KAAAouC,eAAAz5B,EAAA05B,cAgIA,OA3HAf,EAAAhvC,UAAAgwC,SAAA,WACA,OAAAtuC,KAAAguC,WAOAV,EAAAhvC,UAAAiwC,QAAA,WACA,OAAAvuC,KAAAutC,OAOAD,EAAAhvC,UAAAswB,UAAA,WACA,OAAA5uB,KAAAytC,SAOAH,EAAAhvC,UAAAkwC,SAAA,WACA,OAAAxuC,KAAAwtC,QASAF,EAAAhvC,UAAAmwC,iBAAA,WACA,OAAAzuC,KAAAouC,gBAAsCjB,GAAentC,KAAAwtC,SAOrDF,EAAAhvC,UAAAowC,eAAA,WACA,OAAA1uC,KAAA0tC,cAaAJ,EAAAhvC,UAAAqwC,mBAAA,WACA,OAAA3uC,KAAA4tC,kBAOAN,EAAAhvC,UAAAswC,SAAA,WACA,OAAA5uC,KAAA8tC,SAOAR,EAAAhvC,UAAAuwC,UAAA,SAAAd,GACA/tC,KAAA8tC,QAAAC,EACA/tC,KAAAguC,aAAAD,IAAA/tC,KAAAytC,UAKAH,EAAAhvC,UAAAwwC,mBAAA,WACA,OAAA9uC,KAAAmuC,kBAKAb,EAAAhvC,UAAAywC,mBAAA,SAAAjL,GACA9jC,KAAAmuC,iBAAArK,GAOAwJ,EAAAhvC,UAAA8wB,UAAA,SAAAT,GACA3uB,KAAAytC,QAAA9e,EACA3uB,KAAAguC,aAAAhuC,KAAA8tC,UAAAnf,IAQA2e,EAAAhvC,UAAA0wC,eAAA,SAAArB,GACA3tC,KAAA0tC,aAAAC,GAQAL,EAAAhvC,UAAA2wC,sBAAA,SAAAC,GACAlvC,KAAAiuC,wBAAAiB,GAOA5B,EAAAhvC,UAAA6wC,uBAAA,WACA,OAAAnvC,KAAAiuC,yBAEAX,EAjMc,GCjDV8B,GAAyB,WAC7B,IAAA1mB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAyBtBmmB,GAAA,QAKAC,GAAApvC,KAAAmtB,GAAAgiB,GAKA1jB,GAAA,EACP2jB,OACAA,OAMOC,GAAA,kBAKHC,GAAkB,SAAApmB,GAKtB,SAAAqmB,EAAAtjB,GACA,OAAA/C,EAAAvsB,KAAAmD,KAAA,CACAmsB,OACAujB,MAAmBtC,GAAKL,OACxBpe,OAAAhD,GACAoiB,QAAA,EACAJ,YAAA4B,GACArB,mBAAA,SAAA/d,EAAAwf,GACA,OAAAxf,EAAoC1D,EAAIkjB,EAAA,GAAAN,QAE/BrvC,KAET,OAhBIovC,GAASK,EAAArmB,GAgBbqmB,EAjBsB,CAkBpBpC,IAOKuC,GAAA,CACP,IAAQJ,GAAkB,aAC1B,IAAQA,GAAkB,eAC1B,IAAQA,GAAkB,eAC1B,IAAQA,GAAkB,eAC1B,IAAQA,GAAkB,oCAC1B,IAAQA,GAAkB,8BAC1B,IAAQA,GAAkB,iDAUnB,SAAAK,GAAAC,EAAAC,EAAAC,GACP,IAAAtwC,EAAAowC,EAAApwC,OACAuwC,EAAAD,EAAA,EAAAA,EAAA,EACAljC,EAAAijC,OACAlgC,IAAA/C,IAGAA,EAFAmjC,EAAA,EAEAH,EAAAlsC,QAGA,IAAAqK,MAAAvO,IAIA,IADA,IAAAwwC,EAAAZ,GACA5yC,EAAA,EAAmBA,EAAAgD,EAAYhD,GAAAuzC,EAAA,CAC/BnjC,EAAApQ,GAAAwzC,EAAAJ,EAAApzC,GAAA,IACA,IAAAgwB,EAAA2iB,GACAnvC,KAAA6E,IAAA7E,KAAAiwC,IAAAjwC,KAAAmtB,KAAAyiB,EAAApzC,EAAA,aACAgwB,EAAAwjB,EACAxjB,EAAAwjB,EAEAxjB,GAAAwjB,IACAxjB,GAAAwjB,GAEApjC,EAAApQ,EAAA,GAAAgwB,EAEA,OAAA5f,EAUO,SAAAsjC,GAAAN,EAAAC,EAAAC,GACP,IAAAtwC,EAAAowC,EAAApwC,OACAuwC,EAAAD,EAAA,EAAAA,EAAA,EACAljC,EAAAijC,OACAlgC,IAAA/C,IAGAA,EAFAmjC,EAAA,EAEAH,EAAAlsC,QAGA,IAAAqK,MAAAvO,IAGA,QAAAhD,EAAA,EAAmBA,EAAAgD,EAAYhD,GAAAuzC,EAC/BnjC,EAAApQ,GAAA,IAAAozC,EAAApzC,GAAA4yC,GACAxiC,EAAApQ,EAAA,OAAAwD,KAAAmwC,KAAAnwC,KAAAgkB,IAAA4rB,EAAApzC,EAAA,GAAA2yC,KAAAnvC,KAAAmtB,GAAA,GAEA,OAAAvgB,EC/IA,IAAIwjC,GAAyB,WAC7B,IAAA5nB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+BlBqnB,GAAM,kBAKNC,GAZM,QAYStwC,KAAAmtB,GAAmB,IASzCojB,GAAkB,SAAArnB,GAMtB,SAAAsnB,EAAAvkB,EAAAwkB,GACA,OAAAvnB,EAAAvsB,KAAAmD,KAAA,CACAmsB,OACAujB,MAAmBtC,GAAKP,QACxBle,OAAoB4hB,GACpB1C,gBAAA8C,EACA5C,QAAA,EACAM,cAA2BmC,GAC3B7C,YAAyB4C,MAChBvwC,KAET,OAhBIswC,GAASI,EAAAtnB,GAgBbsnB,EAjBsB,CAkBpBrD,IAOSuD,GAAW,CACtB,IAAQH,GAAkB,UAC1B,IAAQA,GAAkB,mBAC1B,IAAQA,GAAkB,oCAC1B,IAAQA,GAAkB,uCAC1B,IAAQA,GAAkB,iCAC1B,IAAQA,GAAkB,4BAC1B,IAAQA,GAAkB,sDAC1B,IAAQA,GAAkB,sCCxEtBI,GAAK,GCET,ICuOOC,GAAAC,GAAAC,GDvOPC,GAAA,GAeO,SAASC,GAAG/xC,EAAAgyC,EAAAC,GACnB,IAAAC,EAAAlyC,EAAAovC,UACA+C,EAAAH,EAAA5C,UACA8C,KAAAJ,KACAA,GAAAI,GAAA,IAEAJ,GAAAI,GAAAC,GAAAF,EC0DO,SAAAG,GAAAzB,EAAAC,EAAAC,GACP,IAAAljC,EACA,QAAA+C,IAAAkgC,EAAA,CACA,QAAArzC,EAAA,EAAA+C,EAAAqwC,EAAApwC,OAA0ChD,EAAA+C,IAAQ/C,EAClDqzC,EAAArzC,GAAAozC,EAAApzC,GAEAoQ,EAAAijC,OAGAjjC,EAAAgjC,EAAAlsC,QAEA,OAAAkJ,EAQO,SAAA0kC,GAAA1B,EAAAC,EAAAC,GACP,QAAAngC,IAAAkgC,GAAAD,IAAAC,EAAA,CACA,QAAArzC,EAAA,EAAA+C,EAAAqwC,EAAApwC,OAA0ChD,EAAA+C,IAAQ/C,EAClDqzC,EAAArzC,GAAAozC,EAAApzC,GAEAozC,EAAAC,EAEA,OAAAD,EASO,SAAA2B,GAAA5R,IFhGA,SAAA1T,EAAA0T,GACHgR,GAAK1kB,GAAA0T,EEgGL7uB,CAAe6uB,EAAA0O,UAAA1O,GACfqR,GAAgBrR,IAAA0R,IAiBb,SAASG,GAAGC,GACnB,uBAAAA,EF3HWd,GE4H+B,IF5H1B,KE6HgB,QAsBzB,SAAA3C,GAAArO,EAAA1P,EAAAwf,EAAAiC,GAEP,IAAAC,EACA30C,GAFA2iC,EAAiB6R,GAAG7R,IAEpBsP,yBACA,GAAAjyC,EACA20C,EAAA30C,EAAAizB,EAAAwf,GACAiC,OAAA/R,EAAA2O,aACAH,EAAAxO,EAAA4O,sBAEAoD,IAAAxD,EAAoElB,GAAeyE,SAMnF,GADA/R,EAAA2O,YACqBpB,GAAKP,UAAA+E,MAAuCxE,GAAKP,QACtEgF,EAAA1hB,MAEA,CAIA,IAWAke,EAXAyD,EAAAC,GAAAlS,EAAuE6R,GAAG,cAC1EM,EAAA,CACArC,EAAA,GAAAxf,EAAA,EAAAwf,EAAA,GACAA,EAAA,GAAAxf,EAAA,EAAAwf,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAxf,EAAA,EACAwf,EAAA,GAAAA,EAAA,GAAAxf,EAAA,GAKA0hB,GAFwB5F,IADxB+F,EAAAF,EAAAE,IAAA,IACmCpuC,MAAA,KAAAouC,EAAApuC,MAAA,MACVqoC,GAAW+F,EAAApuC,MAAA,KAAAouC,EAAApuC,MAAA,OACpC,OAIAiM,KAHAw+B,EAAAuD,EACgBzE,GAAeyE,GAC/B/R,EAAA4O,sBAEAoD,GAAAxD,GAIA,OAAAwD,EASO,SAAAI,GAAAC,IAvFA,SAAAA,GACPA,EAAA7lC,QAAAolC,IAuFAU,CAAAD,GACAA,EAAA7lC,QAAA,SAAAlN,GACA+yC,EAAA7lC,QAAA,SAAA8kC,GACAhyC,IAAAgyC,GACgBD,GAAgB/xC,EAAAgyC,EAAAI,QAsCzB,SAAAa,GAAAvS,EAAAwS,GACP,OAAAxS,EAGA,iBAAAA,EACe6R,GAAG7R,GAGlB,EANe6R,GAAGW,GAwGX,SAAAC,GAAAC,EAAAC,GACP,GAAAD,IAAAC,EACA,SAEA,IAAAC,EAAAF,EAAA/D,aAAAgE,EAAAhE,WACA,OAAA+D,EAAAhE,YAAAiE,EAAAjE,UACAkE,EAGAV,GAAAQ,EAAAC,KACAjB,IAAAkB,EAYO,SAAAV,GAAAW,EAAAC,GACP,IAEAC,ED9UO,SAAYvB,EAAAC,GACnB,IAAAz8B,EAIA,OAHAw8B,KAAAJ,IAAAK,KAAAL,GAAAI,KACAx8B,EAAAo8B,GAAAI,GAAAC,IAEAz8B,ECyUwBg+B,CAFxBH,EAAAnE,UACAoE,EAAApE,WAKA,OAHAqE,IACAA,EAAApB,IAEAoB,EAYO,SAAAE,GAAA3zC,EAAAgyC,GAGP,OAAAY,GAF2BL,GAAGvyC,GACEuyC,GAAGP,IAiB5B,SAAS4B,GAASpe,EAAAx1B,EAAAgyC,GAEzB,OADA2B,GAAA3zC,EAAAgyC,EACAyB,CAAAje,OAAA9kB,EAAA8kB,EAAAj1B,QCrXA,SAAAszC,GAAAC,EAAAC,EAAA3pC,EAAAmjB,GACA,IAAAymB,EAAA5pC,EAAA0pC,EACAG,EAAA1mB,EAAAwmB,EACAG,EAAAnzC,KAAAoF,KAAA6tC,IAAAC,KACA,OAAAlzC,KAAAmU,MAAA9K,EAAA4pC,EAAAE,GAAAnzC,KAAAmU,MAAAqY,EAAA0mB,EAAAC,IAqBO,SAASC,GAAMzb,EAAAx1B,EAAA6+B,EAAAqS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAn+B,EAAAwxB,EAAA4M,GACtB,IAAAhb,EAAkBnB,GAAqBv3B,KAAAmU,MAAA6sB,EAAArJ,GAAA33B,KAAAmU,MAAA6sB,EAAA7+B,IACvC,OAAAmT,EAAA9V,OACA,OAAAk5B,EAAAhB,OAEAgB,EAAAoG,MAAAkC,KACA,IAAA2S,E5BuGA,CAAAvyC,SAAA,U4BtGAkU,EAAAnJ,QAAA,SAAA29B,EAAAttC,EAAA6F,GACQtD,GAAM40C,EAAA7J,EAAArb,UAEd,IAAAmlB,EAA6BhhB,GAAQ+gB,GACrCE,EAA8BnhB,GAASihB,GACvCG,EAAwBvc,GAAqBv3B,KAAAmU,MAAA6sB,EAAA4S,EAAAP,GAAArzC,KAAAmU,MAAA6sB,EAAA6S,EAAAR,IAC7CU,EAAA/S,EAAAqS,EACA/9B,EAAAnJ,QAAA,SAAA29B,EAAAttC,EAAA6F,GACA,IAAA2xC,EAAAlK,EAAArb,OAAA,GAAAklB,EAAA,GACAM,IAAAnK,EAAArb,OAAA,GAAAklB,EAAA,IACAO,EAAuBthB,GAAQkX,EAAArb,QAC/B0lB,EAAwBzhB,GAASoX,EAAArb,QACjCqlB,EAAAtV,UAAAsL,EAAArL,MAAAqI,IAAAgD,EAAArL,MAAA9G,MAAA,EAAAmP,EAAAgD,EAAArL,MAAAt8B,OAAA,EAAA2kC,EAAAkN,EAAAD,EAAAE,EAAAF,EAAAG,EAAAH,EAAAI,EAAAJ,KAEA,IAAAK,EAAwBte,GAAU0d,GA4FlC,OA3FAC,EAAAY,eAAAloC,QAAA,SAAAmoC,EAAA93C,EAAA6F,GAqBA,IAAApD,EAAAq1C,EAAAr1C,OACAiX,EAAAo+B,EAAAp+B,OACA8gB,EAAA/3B,EAAA,MAAAi4B,EAAAj4B,EAAA,MACAytB,EAAAztB,EAAA,MAAA0tB,EAAA1tB,EAAA,MACA2tB,EAAA3tB,EAAA,MAAA4tB,EAAA5tB,EAAA,MACAs1C,GAAAr+B,EAAA,MAAAk+B,EAAA,IAAAb,EACA9vB,IAAAvN,EAAA,MAAAk+B,EAAA,IAAAb,EACAiB,GAAAt+B,EAAA,MAAAk+B,EAAA,IAAAb,EACA7vB,IAAAxN,EAAA,MAAAk+B,EAAA,IAAAb,EACAkB,GAAAv+B,EAAA,MAAAk+B,EAAA,IAAAb,EACAmB,IAAAx+B,EAAA,MAAAk+B,EAAA,IAAAb,EAIAoB,EAAA3d,EACA4d,EAAA1d,EACAF,EAAA,EACAE,EAAA,EAKA,IAMA2d,EvCtDO,SAAAhb,GAEP,IADA,IAAA57B,EAAA47B,EAAAr6B,OACAhD,EAAA,EAAmBA,EAAAyB,EAAOzB,IAAA,CAI1B,IAFA,IAAAs4C,EAAAt4C,EACAu4C,EAAA/0C,KAAAg1C,IAAAnb,EAAAr9B,OACAc,EAAAd,EAAA,EAA2Bc,EAAAW,EAAOX,IAAA,CAClC,IAAA23C,EAAAj1C,KAAAg1C,IAAAnb,EAAAv8B,GAAAd,IACAy4C,EAAAF,IACAA,EAAAE,EACAH,EAAAx3C,GAGA,OAAAy3C,EACA,YAGA,IAAAnxB,EAAAiW,EAAAib,GACAjb,EAAAib,GAAAjb,EAAAr9B,GACAq9B,EAAAr9B,GAAAonB,EAEA,QAAA7e,EAAAvI,EAAA,EAA2BuI,EAAA9G,EAAO8G,IAElC,IADA,IAAAmwC,GAAArb,EAAA90B,GAAAvI,GAAAq9B,EAAAr9B,MACAwE,EAAAxE,EAA2BwE,EAAA/C,EAAA,EAAW+C,IACtCxE,GAAAwE,EACA64B,EAAA90B,GAAA/D,GAAA,EAGA64B,EAAA90B,GAAA/D,IAAAk0C,EAAArb,EAAAr9B,GAAAwE,GAOA,IADA,IAAAqI,EAAA,IAAA0E,MAAA9P,GACAxB,EAAAwB,EAAA,EAAuBxB,GAAA,EAAQA,IAAA,CAC/B4M,EAAA5M,GAAAo9B,EAAAp9B,GAAAwB,GAAA47B,EAAAp9B,MACA,QAAAG,EAAAH,EAAA,EAA2BG,GAAA,EAAQA,IACnCi9B,EAAAj9B,GAAAqB,IAAA47B,EAAAj9B,GAAAH,GAAA4M,EAAA5M,GAGA,OAAA4M,EuCa0B8rC,CAN1B,CACA,CALAzoB,GAAAioB,EACAhoB,GAAAioB,EAIA,IAAAJ,EAAAD,GACA,CAJA3nB,GAAA+nB,EACA9nB,GAAA+nB,EAGA,IAAAH,EAAAF,GACA,KAAA7nB,EAAAC,EAAAjJ,EAAAD,GACA,KAAAmJ,EAAAC,EAAA6nB,EAAAjxB,KAGA,GAAAoxB,EAAA,CAGAnc,EAAA+I,OACA/I,EAAAgJ,YACA,IAAAqR,GAAAwB,EAAAC,EAAAC,GAAA,EACAzB,GAAAvvB,EAAAC,EAAAgxB,GAAA,EACAU,EAAAtC,GAAAC,EAAAC,EAAAuB,EAAA9wB,GACA4xB,EAAAvC,GAAAC,EAAAC,EAAAwB,EAAA9wB,GACA4xB,EAAAxC,GAAAC,EAAAC,EAAAyB,EAAAC,GACAhc,EAAAiJ,OAAA0T,EAAA,GAAAA,EAAA,IACA3c,EAAAkJ,OAAAwT,EAAA,GAAAA,EAAA,IACA1c,EAAAkJ,OAAA0T,EAAA,GAAAA,EAAA,IACA5c,EAAAqI,OACArI,EAAA/jB,UAAAkgC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAN,EAAA9wB,GACAiV,EAAA2F,UAAAsV,EAAA,GAAAgB,EAAAhB,EAAA,GAAAiB,GACAlc,EAAAoG,MAAAuU,EAAArS,GAAAqS,EAAArS,GACAtI,EAAA8F,UAAAsV,EAAApc,OAAA,KACAgB,EAAAiO,aAEA+M,IACAhb,EAAA+I,OACA/I,EAAA6c,YAAA,QACA7c,EAAA8c,UAAA,EACA/B,EAAAY,eAAAloC,QAAA,SAAAmoC,EAAA93C,EAAA6F,GACA,IAAA6T,EAAAo+B,EAAAp+B,OACAq+B,GAAAr+B,EAAA,MAAAk+B,EAAA,IAAAb,EACA9vB,IAAAvN,EAAA,MAAAk+B,EAAA,IAAAb,EACAiB,GAAAt+B,EAAA,MAAAk+B,EAAA,IAAAb,EACA7vB,IAAAxN,EAAA,MAAAk+B,EAAA,IAAAb,EACAkB,GAAAv+B,EAAA,MAAAk+B,EAAA,IAAAb,EACAmB,IAAAx+B,EAAA,MAAAk+B,EAAA,IAAAb,EACA7a,EAAAgJ,YACAhJ,EAAAiJ,OAAA6S,EAAA9wB,GACAgV,EAAAkJ,OAAA2S,EAAA9wB,GACAiV,EAAAkJ,OAAA6S,EAAAC,GACAhc,EAAA+c,YACA/c,EAAAgd,WAEAhd,EAAAiO,WAEAjO,EAAAhB,OD+QAqa,GAA6BrC,IAC7BqC,GAA6BrB,IAjOtBE,GAoO2ClB,GApO3CmB,GAoOiElB,GApOjEmB,GAoO+EZ,GAA1DQ,GAnO5BvkC,QAAA,SAAAkmC,GACAzB,GAAAzkC,QAAA,SAAAmmC,GACYtB,GAAgBqB,EAAAC,EAAAzB,IAChBG,GAAgBsB,EAAAD,EAAAvB,QEhO5B,IAAA6E,GAAA,GAsReC,GAvQE,WAQjB,SAAAC,EAAAC,EAAAC,EAAAvC,EAAAwC,EAAAC,GAKAn2C,KAAAo2C,YAAAJ,EAKAh2C,KAAAq2C,YAAAJ,EAEA,IAAAK,EAAA,GACAC,EAA2BzD,GAAY9yC,KAAAq2C,YAAAr2C,KAAAo2C,aAMvCp2C,KAAAw2C,cAAA,SAAAz5C,GACA,IAAAkB,EAAAlB,EAAA,OAAAA,EAAA,GAIA,OAHAu5C,EAAAr4C,KACAq4C,EAAAr4C,GAAAs4C,EAAAx5C,IAEAu5C,EAAAr4C,IAMA+B,KAAAy2C,iBAAAP,EAKAl2C,KAAA02C,uBAAAP,IAKAn2C,KAAA22C,WAAA,GAMA32C,KAAA42C,iBAAA,EAKA52C,KAAA62C,kBAAA72C,KAAAo2C,YAAA9H,cACA4H,KACAl2C,KAAAo2C,YAAAxnB,aACakE,GAAQojB,IAAqBpjB,GAAQ9yB,KAAAo2C,YAAAxnB,aAKlD5uB,KAAA82C,kBAAA92C,KAAAo2C,YAAAxnB,YACYkE,GAAQ9yB,KAAAo2C,YAAAxnB,aAAA,KAKpB5uB,KAAA+2C,kBAAA/2C,KAAAq2C,YAAAznB,YACYkE,GAAQ9yB,KAAAq2C,YAAAznB,aAAA,KACpB,IAAAooB,EAAiChhB,GAAU0d,GAC3CuD,EAAkClhB,GAAW2d,GAC7CwD,EAAqCphB,GAAc4d,GACnDyD,EAAoCthB,GAAa6d,GACjD0D,EAAAp3C,KAAAw2C,cAAAQ,GACAK,EAAAr3C,KAAAw2C,cAAAS,GACAK,EAAAt3C,KAAAw2C,cAAAU,GACAK,EAAAv3C,KAAAw2C,cAAAW,GAEA,GADAn3C,KAAAw3C,SAAAR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1B,IACA71C,KAAA42C,gBAAA,CACA,IAAAa,EAAAn2C,IACAtB,KAAA22C,WAAAtqC,QAAA,SAAAmoC,EAAA93C,EAAA6F,GACAk1C,EAAAv3C,KAAA4B,IAAA21C,EAAAjD,EAAAr1C,OAAA,MAAAq1C,EAAAr1C,OAAA,MAAAq1C,EAAAr1C,OAAA,SAIAa,KAAA22C,WAAAtqC,QAAA,SAAAmoC,GACA,GAAAt0C,KAAAC,IAAAq0C,EAAAr1C,OAAA,MAAAq1C,EAAAr1C,OAAA,MAAAq1C,EAAAr1C,OAAA,OAAAs4C,EAAAz3C,KAAA82C,kBAAA,GACA,IAAAY,EAAA,EAAAlD,EAAAr1C,OAAA,MAAAq1C,EAAAr1C,OAAA,OACA,CAAAq1C,EAAAr1C,OAAA,MAAAq1C,EAAAr1C,OAAA,OACA,CAAAq1C,EAAAr1C,OAAA,MAAAq1C,EAAAr1C,OAAA,QACAu4C,EAAA,MAAAD,EAAAz3C,KAAA82C,kBAAA,IACAY,EAAA,OAAA13C,KAAA82C,mBAEAY,EAAA,MAAAD,EAAAz3C,KAAA82C,kBAAA,IACAY,EAAA,OAAA13C,KAAA82C,mBAEAY,EAAA,MAAAD,EAAAz3C,KAAA82C,kBAAA,IACAY,EAAA,OAAA13C,KAAA82C,mBAKA,IAAAz1C,EAAAnB,KAAA4B,IAAA41C,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAx3C,KAAAC,IAAAu3C,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAr2C,EAAArB,KAAA82C,kBAAA,IACAtC,EAAAr1C,OAAAu4C,KAGax5C,KAAA8B,OAEbs2C,EAAA,GAiJA,OArIAP,EAAAz3C,UAAAq5C,aAAA,SAAA/1C,EAAAC,EAAA9E,EAAA66C,EAAAC,EAAAC,GACA93C,KAAA22C,WAAA7zC,KAAA,CACA3D,OAAA,CAAAy4C,EAAAC,EAAAC,GACA1hC,OAAA,CAAAxU,EAAAC,EAAA9E,MAmBAg5C,EAAAz3C,UAAAk5C,SAAA,SAAA51C,EAAAC,EAAA9E,EAAAC,EAAA46C,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAA+B/jB,GAAc,CAAA0jB,EAAAC,EAAAC,EAAAC,IAC7CG,EAAAl4C,KAAA82C,kBACYhkB,GAAQmlB,GAAAj4C,KAAA82C,kBAAA,KACpBqB,EAAiDn4C,KAAA,kBAGjDo4C,EAAAp4C,KAAAo2C,YAAA9H,YACA4J,EAAA,IAAAA,EAAA,EACAG,GAAA,EACA,GAAAL,EAAA,GACA,GAAAh4C,KAAAq2C,YAAAzH,YAAA5uC,KAAA+2C,kBAGAsB,EADsCvlB,GADCoB,GAAc,CAAAtyB,EAAAC,EAAA9E,EAAAC,KACPgD,KAAA+2C,kBAzK9C,KA2KAsB,GAEAD,GAAAp4C,KAAAo2C,YAAAxH,YAAAsJ,IACAG,EAAAH,EA9KA,KA+KAG,GAGA,GAAAA,IAAAr4C,KAAAy2C,kBACiBjf,GAAUygB,EAAAj4C,KAAAy2C,kBAD3B,CAMA,KAAA4B,GACAC,SAAAV,EAAA,KAAAU,SAAAV,EAAA,KACAU,SAAAT,EAAA,KAAAS,SAAAT,EAAA,KACAS,SAAAR,EAAA,KAAAQ,SAAAR,EAAA,KACAQ,SAAAP,EAAA,KAAAO,SAAAP,EAAA,MACA,KAAAC,EAAA,GAIA,OAHAK,GAAA,EAOA,GAAAL,EAAA,GACA,IAAAK,EAAA,CACA,IAAA9hB,EAAA,EAAA30B,EAAA,GAAA7E,EAAA,OAAA6E,EAAA,GAAA7E,EAAA,OACAw7C,EAAAv4C,KAAAw2C,cAAAjgB,GACAvJ,OAAA,EACA,GAAAorB,EAGAprB,GAF2CM,EAAMsqB,EAAA,GAAAO,GACzB7qB,EAAMwqB,EAAA,GAAAK,IAAA,EAEN7qB,EAAMirB,EAAA,GAAAJ,QAG9BnrB,GAAA4qB,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEA,IAAAtrB,GAAA2qB,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEAF,EADArrB,IAAAC,IACAjtB,KAAA02C,uBAEA,GAAA2B,EAAA,CACA,GAAAn4C,KAAAg1C,IAAAtzC,EAAA,GAAA7E,EAAA,KAAAmD,KAAAg1C,IAAAtzC,EAAA,GAAA7E,EAAA,KAEA,IAAAy7C,EAAA,EAAA32C,EAAA,GAAA9E,EAAA,OAAA8E,EAAA,GAAA9E,EAAA,OACA07C,EAAAz4C,KAAAw2C,cAAAgC,GACAE,EAAA,EAAA17C,EAAA,GAAA4E,EAAA,OAAA5E,EAAA,GAAA4E,EAAA,OACA+2C,EAAA34C,KAAAw2C,cAAAkC,GACA14C,KAAAw3C,SAAA51C,EAAAC,EAAA22C,EAAAE,EAAAd,EAAAC,EAAAY,EAAAE,EAAAX,EAAA,GACAh4C,KAAAw3C,SAAAkB,EAAAF,EAAAz7C,EAAAC,EAAA27C,EAAAF,EAAAX,EAAAC,EAAAC,EAAA,OAEA,CAEA,IAAAY,EAAA,EAAAh3C,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAg3C,EAAA74C,KAAAw2C,cAAAoC,GACAE,EAAA,EAAA/7C,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA+7C,EAAA/4C,KAAAw2C,cAAAsC,GACA94C,KAAAw3C,SAAA51C,EAAAg3C,EAAAE,EAAA97C,EAAA46C,EAAAiB,EAAAE,EAAAhB,EAAAC,EAAA,GACAh4C,KAAAw3C,SAAAoB,EAAA/2C,EAAA9E,EAAA+7C,EAAAD,EAAAhB,EAAAC,EAAAiB,EAAAf,EAAA,GAEA,QAGA,GAAAI,EAAA,CACA,IAAAp4C,KAAA62C,kBACA,OAEA72C,KAAA42C,iBAAA,EAEA52C,KAAA23C,aAAA/1C,EAAA7E,EAAAC,EAAA46C,EAAAE,EAAAC,GACA/3C,KAAA23C,aAAA/1C,EAAAC,EAAA9E,EAAA66C,EAAAC,EAAAC,KAOA/B,EAAAz3C,UAAA06C,sBAAA,WACA,IAAArqB,E7B5FA,CAAArtB,SAAA,U6BmGA,OANAtB,KAAA22C,WAAAtqC,QAAA,SAAAmoC,EAAA93C,EAAA6F,GACA,IAAAynC,EAAAwK,EAAAr1C,OACYk1B,GAAgB1F,EAAAqb,EAAA,IAChB3V,GAAgB1F,EAAAqb,EAAA,IAChB3V,GAAgB1F,EAAAqb,EAAA,MAE5Brb,GAKAonB,EAAAz3C,UAAAi2C,aAAA,WACA,OAAAv0C,KAAA22C,YAEAZ,EArQiB,GClCbkD,GAAyB,WAC7B,IAAAvwB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4QdgwB,GA1OD,SAAA9vB,GAgBd,SAAA+vB,EAAAnD,EAAAoD,EAAAnD,EAAAoD,EAAA9mB,EAAA+mB,EAAApY,EAAA8F,EAAAuS,EAAAC,EAAA5F,GACA,IAAAtqB,EAAAF,EAAAvsB,KAAAmD,KAAAuyB,EAAiDU,GAASC,OAAAlzB,KAK1DspB,EAAAmwB,kBAAA5pC,IAAA+jC,KAKAtqB,EAAAowB,YAAAxY,EAKA5X,EAAAqwB,QAAA3S,EAKA1d,EAAAswB,QAAA,KAKAtwB,EAAAuwB,gBAAAT,EAKA9vB,EAAAwwB,gBAAAT,EAKA/vB,EAAAywB,kBAAAT,GAAA/mB,EAKAjJ,EAAA0wB,aAAA,GAKA1wB,EAAA2wB,qBAAA,KAKA3wB,EAAA4wB,SAAA,EACA,IAAAxG,EAAA2F,EAAAxT,mBAAAvc,EAAAywB,mBACAI,EAAA7wB,EAAAwwB,gBAAAlrB,YACAsnB,EAAA5sB,EAAAuwB,gBAAAjrB,YACAwrB,EAAAD,EACY7iB,GAAeoc,EAAAyG,GAAAzG,EAC3B,GAAmB,IAAPzd,GAAOmkB,GAInB,OADA9wB,EAAAlN,MAA0B6W,GAASG,MACnC9J,EAEA,IAAA+wB,EAAArE,EAAApnB,YACAyrB,IAKAnE,EAJAA,EAIkC5e,GAAe4e,EAAAmE,GAHjDA,GAMA,IAAA5G,EAAA4F,EAAAnV,cAAA5a,EAAAywB,kBAAA,IAEAxG,EFzGO,SAAAyC,EAAAC,EAAAqE,EAAA7G,GACP,IAAA8G,EAAuBxH,GAASuH,EAAArE,EAAAD,GAEhCzC,EAA2BrF,GAAkB+H,EAAAxC,EAAA6G,GAC7CE,EAAAvE,EAAAxH,wBACA5+B,IAAA2qC,IACAjH,GAAAiH,GAEA,IAAAC,EAAAzE,EAAAvH,wBACA5+B,IAAA4qC,IACAlH,GAAAkH,GAKA,IAAAjH,EAAAwC,EAAApnB,YACA,IAAA4kB,GAAyB9e,GAAkB8e,EAAA+G,GAAA,CAC3C,IAAAG,EAAiCxM,GAAkB8H,EAAAzC,EAAAgH,GACnDhH,EACA+E,SAAAoC,MAAA,IACAnH,GAAAmH,GAGA,OAAAnH,EEkF+BoH,CAAyB3E,EAAAC,EAD7B9f,GAASikB,GACoB3G,GACxD,IAAA6E,SAAA/E,OAAA,EAIA,OADAjqB,EAAAlN,MAA0B6W,GAASG,MACnC9J,EAEA,IAAAsxB,OAAA/qC,IAAA2pC,EACAA,EAAiC9Q,GAMjC,GADApf,EAAAuxB,eAAA,IAAmC/E,GAAaE,EAAAC,EAAAmE,EAAAlE,EAAA3C,EAAAqH,GAChD,IAAAtxB,EAAAuxB,eAAAtG,eAAA70C,OAGA,OADA4pB,EAAAlN,MAA0B6W,GAASG,MACnC9J,EAEAA,EAAA4wB,SAAAd,EAAApV,kBAAAuP,GACA,IAAAC,EAAAlqB,EAAAuxB,eAAA7B,wBAUA,GATA9C,IACAF,EAAA1H,YACAkF,EAAA,GAAkChnB,EAAKgnB,EAAA,GAAA0C,EAAA,GAAAA,EAAA,IACvC1C,EAAA,GAAkChnB,EAAKgnB,EAAA,GAAA0C,EAAA,GAAAA,EAAA,KAGvC1C,EAA+Blc,GAAekc,EAAA0C,IAGjCjgB,GAAOud,GAGpB,CAEA,IADA,IAAAsH,EAAA1B,EAAA9U,0BAAAkP,EAAAlqB,EAAA4wB,UACAa,EAAAD,EAAAz5C,KAA6C05C,GAAAD,EAAAt5C,KAA0Bu5C,IACvE,QAAAC,EAAAF,EAAAv5C,KAAiDy5C,GAAAF,EAAAr5C,KAA0Bu5C,IAAA,CAC3E,IAAArb,EAAA4Z,EAAAjwB,EAAA4wB,SAAAa,EAAAC,EAAA9Z,GACAvB,GACArW,EAAA0wB,aAAAl3C,KAAA68B,GAIA,IAAArW,EAAA0wB,aAAAt6C,SACA4pB,EAAAlN,MAA8B6W,GAASG,YAbvC9J,EAAAlN,MAA0B6W,GAASG,MAgBnC,OAAA9J,EA+FA,OAvOI2vB,GAASE,EAAA/vB,GA6Ib+vB,EAAA76C,UAAAgqB,gBAAA,WACAtoB,KAAAoc,OAA0B6W,GAASnD,SACnC9vB,KAAAi7C,mBAEA7xB,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAMAm5C,EAAA76C,UAAAipC,SAAA,WACA,OAAAvnC,KAAA45C,SAKAT,EAAA76C,UAAA48C,WAAA,WACA,IAAA1lC,EAAA,GAUA,GATAxV,KAAAg6C,aAAA3tC,QAAA,SAAAszB,EAAAjjC,EAAA6F,GACAo9B,KAAA3O,YAA2CiC,GAASE,QACpD3d,EAAA1S,KAAA,CACA6rB,OAAA3uB,KAAA65C,gBAAAhU,mBAAAlG,EAAApN,WACAoM,MAAAgB,EAAA4H,cAGSrpC,KAAA8B,OACTA,KAAAg6C,aAAAt6C,OAAA,EACA,IAAA8V,EAAA9V,OACAM,KAAAoc,MAAyB6W,GAASpM,UAElC,CACA,IAAA5C,EAAAjkB,KAAA+5C,kBAAA,GACAtjB,EAAAz2B,KAAA85C,gBAAAqB,YAAAl3B,GACA4T,EAAA,iBAAApB,MAAA,GACAp0B,EAAA,iBAAAo0B,MAAA,GACAgd,EAAAzzC,KAAA85C,gBAAA5V,cAAAjgB,GACAsvB,EAAAvzC,KAAA65C,gBAAA3V,cAAAlkC,KAAAk6C,UACAxG,EAAA1zC,KAAA85C,gBAAAjU,mBAAA7lC,KAAA+5C,mBACA/5C,KAAA45C,QAA2BtG,GAAiBzb,EAAAx1B,EAAArC,KAAA05C,YAAAnG,EAAAvzC,KAAA65C,gBAAAjrB,YAAA6kB,EAAAC,EAAA1zC,KAAA66C,eAAArlC,EAAAxV,KAAA25C,QAAA35C,KAAAy5C,cAC5Cz5C,KAAAoc,MAAyB6W,GAASE,OAElCnzB,KAAAmc,WAKAg9B,EAAA76C,UAAAmF,KAAA,WACA,GAAAzD,KAAAoc,OAA0B6W,GAASC,KAAA,CACnClzB,KAAAoc,MAAyB6W,GAASnD,QAClC9vB,KAAAmc,UACA,IAAAi/B,EAAA,EACAp7C,KAAAi6C,qBAAA,GACAj6C,KAAAg6C,aAAA3tC,QAAA,SAAAszB,EAAAjjC,EAAA6F,GACA,IAAA6Z,EAAAujB,EAAA3O,WACA,GAAA5U,GAA6B6W,GAASC,MAAA9W,GAAkB6W,GAASnD,QAAA,CACjEsrB,IACA,IAAAC,EAA4Cz1B,EAAM+Z,EAAOvZ,EAASC,OAAA,SAAAhY,GAClE,IAAA+N,EAAAujB,EAAA3O,WACA5U,GAAqC6W,GAASE,QAC9C/W,GAAqC6W,GAASpM,OAC9CzK,GAAqC6W,GAASG,QAClBpN,EAAaq1B,GAEzC,MADAD,IAEAp7C,KAAAi7C,mBACAj7C,KAAAk7C,gBAGqBl7C,MACrBA,KAAAi6C,qBAAAn3C,KAAAu4C,KAEan9C,KAAA8B,OACbA,KAAAg6C,aAAA3tC,QAAA,SAAAszB,EAAAjjC,EAAA6F,GACAo9B,EAAA3O,YAC6BiC,GAASC,MACtCyM,EAAAl8B,SAGA,IAAA23C,GACAz/B,WAAA3b,KAAAk7C,WAAAh9C,KAAA8B,MAAA,KAOAm5C,EAAA76C,UAAA28C,iBAAA,WACAj7C,KAAAi6C,qBAAA5tC,QAA0C2Z,GAC1ChmB,KAAAi6C,qBAAA,MAEAd,EAxOc,CAyOZnQ,IChQK,SAAAsS,GAAAC,EAAAzX,GACP,IAAA0X,EAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,UACA,gBAOAppB,EAAA2O,EAAArB,GACA,OAAAtN,EAIAgpB,EAAAjyC,QAAAkyC,EAAAjpB,EAAA,GAAA3lB,YACAtD,QAAAmyC,EAAAlpB,EAAA,GAAA3lB,YACAtD,QAAAoyC,EAAAnpB,EAAA,GAAA3lB,YACAtD,QAAAqyC,EAAA,WACA,IAAA13B,EAAAsO,EAAA,GACAqpB,EAAA9X,EAAA+X,iBAAA53B,GAGA,OAFgBoI,EAAMuvB,EAAA,KACtBA,EAAAhpB,YAAAL,EAAA,MACA3lB,kBAXA,GAqBO,SAAAkvC,GAAAC,EAAAjY,GAGP,IAFA,IAAAzgC,EAAA04C,EAAAr8C,OACAs8C,EAAA,IAAA/tC,MAAA5K,GACA3G,EAAA,EAAmBA,EAAA2G,IAAS3G,EAC5Bs/C,EAAAt/C,GAAA4+C,GAAAS,EAAAr/C,GAAAonC,GAEA,OAMO,SAAAkY,GACP,OAAAA,EAAAt8C,OACA,OAAAs8C,EAAA,GAEA,gBAOAzpB,EAAA2O,EAAArB,GACA,GAAAtN,EAGA,CACA,IAAAwM,EdlBO,SAAAxM,GACP,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GciBoBnrB,CAAamrB,GACjCruB,EAAwBopB,EAAMyR,EAAAid,EAAAt8C,QAC9B,OAAAs8C,EAAA93C,GAAAquB,EAAA2O,EAAArB,KAxBAoc,CAAAD,GAkCO,SAAAE,GAAA3pB,EAAA2O,EAAArB,IC/BA,SAAAsc,GAAA1lB,EAAA2lB,GACP,OAAAnuC,MAAApP,QAAA43B,GACAA,QAGA5mB,IAAAusC,EACAA,EAAA,CAAA3lB,KAGA2lB,EAAA,GAAAA,EAAA,GAA0D,EAE1DA,GClEA,IAAIC,GAAyB,WAC7B,IAAA3zB,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4K7B,SAAAozB,GAAAC,GACA,OAAAA,EAGAtuC,MAAApP,QAAA09C,GACA,SAAAprB,GACA,OAAAorB,GAGA,mBAAAA,EACAA,EAEA,SAAAprB,GACA,OAAAorB,IAXA,KAce,IAAAC,GAtIL,SAAApzB,GAKV,SAAAqzB,EAAA9nC,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,YAkCA,OA7BAspB,EAAAozB,YAA4BhL,GAAa/8B,EAAAkrB,YAKzCvW,EAAAqzB,cAAAL,GAAA3nC,EAAAioC,cAKAtzB,EAAAuzB,8BAAAhtC,IAAA8E,EAAAmoC,yBACAnoC,EAAAmoC,wBAMAxzB,EAAAyzB,SAAA,EAKAzzB,EAAA4E,YAAAre,IAAA8E,EAAAyH,MACAzH,EAAAyH,MAA4BwT,GAAWG,MAKvCzG,EAAA0zB,YAAAntC,IAAA8E,EAAAsoC,OAAAtoC,EAAAsoC,MACA3zB,EAuEA,OA9GI+yB,GAASI,EAAArzB,GA6CbqzB,EAAAn+C,UAAA4+C,gBAAA,WACA,OAAAl9C,KAAA28C,eAKAF,EAAAn+C,UAAA6+C,2BAAA,WACA,OAAAn9C,KAAA68C,0BAOAJ,EAAAn+C,UAAA8+C,cAAA,WACA,OAAAp9C,KAAA08C,aAMAD,EAAAn+C,UAAA++C,eAAA,WACA,OAAez1B,KAOf60B,EAAAn+C,UAAA0yB,SAAA,WACA,OAAAhxB,KAAAkuB,QAKAuuB,EAAAn+C,UAAAg/C,SAAA,WACA,OAAAt9C,KAAAg9C,QAMAP,EAAAn+C,UAAAi/C,QAAA,WACAv9C,KAAAmc,WASAsgC,EAAAn+C,UAAAk/C,gBAAA,SAAAZ,GACA58C,KAAA28C,cAAAL,GAAAM,GACA58C,KAAAmc,WAOAsgC,EAAAn+C,UAAAklC,SAAA,SAAApnB,GACApc,KAAAkuB,OAAA9R,EACApc,KAAAmc,WAEAsgC,EA/GU,CAgHRlxB,GC/JKkyB,GAAA,GAKAC,GAAA,IC6BA,SAAAC,GAAA/7C,EAAAC,GACP,OAAAD,EAAAC,EAAA,EAAAD,EAAAC,GAAA,IAmBO,SAAA+7C,GAAAr7C,EAAA6T,EAAAynC,GACP,IAAA1/C,EAAAoE,EAAA7C,OACA,GAAA6C,EAAA,IAAA6T,EACA,SAEA,GAAAA,GAAA7T,EAAApE,EAAA,GACA,OAAAA,EAAA,EAGA,IAAAzB,OAAA,EACA,GAAAmhD,EAAA,GACA,IAAAnhD,EAAA,EAAuBA,EAAAyB,IAAOzB,EAC9B,GAAA6F,EAAA7F,GAAA0Z,EACA,OAAA1Z,EAAA,OAIA,GAAAmhD,EAAA,GACA,IAAAnhD,EAAA,EAAuBA,EAAAyB,IAAOzB,EAC9B,GAAA6F,EAAA7F,IAAA0Z,EACA,OAAA1Z,OAKA,IAAAA,EAAA,EAAuBA,EAAAyB,IAAOzB,EAAA,CAC9B,GAAA6F,EAAA7F,IAAA0Z,EACA,OAAA1Z,EAEA,GAAA6F,EAAA7F,GAAA0Z,EACA,OAAA7T,EAAA7F,EAAA,GAAA0Z,IAAA7T,EAAA7F,GACAA,EAAA,EAGAA,EAKA,OAAAyB,EAAA,EAQO,SAAA2/C,GAAAv7C,EAAAw7C,EAAAxoB,GACP,KAAAwoB,EAAAxoB,GAAA,CACA,IAAAzR,EAAAvhB,EAAAw7C,GACAx7C,EAAAw7C,GAAAx7C,EAAAgzB,GACAhzB,EAAAgzB,GAAAzR,IACAi6B,IACAxoB,GAQO,SAASyoB,GAAMz7C,EAAAU,GAGtB,IAFA,IAAAg7C,EAAAhwC,MAAApP,QAAAoE,KAAA,CAAAA,GACAvD,EAAAu+C,EAAAv+C,OACAhD,EAAA,EAAmBA,EAAAgD,EAAYhD,IAC/B6F,IAAA7C,QAAAu+C,EAAAvhD,GAuCO,SAASwhD,GAAMC,EAAAC,GACtB,IAAAC,EAAAF,EAAAz+C,OACA,GAAA2+C,IAAAD,EAAA1+C,OACA,SAEA,QAAAhD,EAAA,EAAmBA,EAAA2hD,EAAU3hD,IAC7B,GAAAyhD,EAAAzhD,KAAA0hD,EAAA1hD,GACA,SAGA,SChKA,IAAA4hD,GAAA,QA6deC,GA9bH,WAIZ,SAAAC,EAAA7pC,GDuKO,IAAApS,EAAAk8C,EACP/7C,ECzJAg8C,EACA,GAXA1+C,KAAA2+C,aAAA9uC,IAAA8E,EAAAgqC,QAAAhqC,EAAAgqC,QAAA,EAKA3+C,KAAA4+C,aAAAjqC,EAAAkqC,YACQxyB,GD4JD9pB,EC5JgBvC,KAAA4+C,aD4JhBH,GC1JE,ED2JT/7C,EC7JuB,SAAAd,EAAAC,GACvB,OAAAA,EAAAD,ID4JA+7C,GACAp7C,EAAAu8C,MAAA,SAAAC,EAAA76C,GACA,OAAAA,EACA,SAEA,IAAA86C,EAAAt8C,EAAAH,EAAA2B,EAAA,GAAA66C,GACA,QAAAC,EAAA,GAAAP,GAAA,IAAAO,MCjKS,KAGTrqC,EAAAsqC,QACA,QAAAviD,EAAA,EAAA+C,EAAAO,KAAA4+C,aAAAl/C,OAAA,EAA8DhD,EAAA+C,IAAQ/C,EACtE,GAAAgiD,GAIA,GAAA1+C,KAAA4+C,aAAAliD,GAAAsD,KAAA4+C,aAAAliD,EAAA,KAAAgiD,EAAA,CACAA,OAAA7uC,EACA,YALA6uC,EAAA1+C,KAAA4+C,aAAAliD,GAAAsD,KAAA4+C,aAAAliD,EAAA,GAcAsD,KAAAk/C,YAAAR,EAKA1+C,KAAAm/C,QAAAn/C,KAAA4+C,aAAAl/C,OAAA,EAKAM,KAAAo/C,aAAAvvC,IAAA8E,EAAA5D,OAAA4D,EAAA5D,OAAA,KAKA/Q,KAAAq/C,SAAA,UACAxvC,IAAA8E,EAAAsqC,UACAj/C,KAAAq/C,SAAA1qC,EAAAsqC,QACY5yB,EAAMrsB,KAAAq/C,SAAA3/C,QAAAM,KAAA4+C,aAAAl/C,OAAA,KAElB,IAAAivB,EAAAha,EAAAga,YACA9e,IAAA8e,GACA3uB,KAAAo/C,SAAAp/C,KAAAq/C,WACAr/C,KAAAo/C,QAA2BppB,GAAUrH,IAE7BtC,GAAMrsB,KAAAo/C,SAAAp/C,KAAAq/C,UAAAr/C,KAAAo/C,UAAAp/C,KAAAq/C,SAAA,IAKdr/C,KAAAs/C,WAAA,UACAzvC,IAAA8E,EAAA4qC,YACAv/C,KAAAs/C,WAAA3qC,EAAA4qC,UACYlzB,EAAMrsB,KAAAs/C,WAAA5/C,QAAAM,KAAA4+C,aAAAl/C,OAAA,KAMlBM,KAAAw/C,eAAA3vC,IAAA8E,EAAA8qC,SACA9qC,EAAA8qC,SACAz/C,KAAAs/C,WAAgD,KAAjB5B,GACvBrxB,GAAMrsB,KAAAw/C,WAAAx/C,KAAAs/C,YACdt/C,KAAAw/C,YAAAx/C,KAAAs/C,WAAA,IAKAt/C,KAAAytC,aAAA59B,IAAA8e,IAAA,KAKA3uB,KAAA0/C,gBAAA,KAKA1/C,KAAA2/C,SAAA,WACA9vC,IAAA8E,EAAAirC,MACA5/C,KAAA0/C,gBAAA/qC,EAAAirC,MAAAvyC,IAAA,SAAAopB,EAAAxS,GAEA,OADA,IAAoC+O,GAAS9yB,KAAA4B,IAAA,EAAA20B,EAAA,IAAAv2B,KAAAC,IAAAs2B,EAAA,SAAAv2B,KAAA4B,IAAA,EAAA20B,EAAA,IAAAv2B,KAAAC,IAAAs2B,EAAA,WAEhCz2B,MAEb2uB,GACA3uB,KAAA6/C,qBAAAlxB,GAqVA,OA1UA6vB,EAAAlgD,UAAAwhD,iBAAA,SAAAnxB,EAAA+Q,EAAAr3B,GAEA,IADA,IAAAqqB,EAAA1yB,KAAAskC,0BAAA3V,EAAA+Q,GACAhjC,EAAAg2B,EAAArxB,KAAA5B,EAAAizB,EAAAlxB,KAAyD9E,GAAA+C,IAAS/C,EAClE,QAAAuI,EAAAytB,EAAAnxB,KAAAw+C,EAAArtB,EAAAjxB,KAA6DwD,GAAA86C,IAAS96C,EACtEoD,EAAA,CAAAq3B,EAAAhjC,EAAAuI,KAWAu5C,EAAAlgD,UAAA0mC,gCAAA,SAAAzS,EAAAlqB,EAAA23C,EAAAzrB,GACA,IAAAhrB,EAAAmjB,EACAuzB,EAAA,KACAh8B,EAAAsO,EAAA,KAQA,IAPA,IAAAvyB,KAAAk/C,aACA31C,EAAAgpB,EAAA,GACA7F,EAAA6F,EAAA,IAGA0tB,EAAAjgD,KAAA6lC,mBAAAtT,EAAAgC,GAEAtQ,GAAAjkB,KAAA2+C,SAAA,CASA,GAAAt2C,EAAA4b,EARA,IAAAjkB,KAAAk/C,YAG4BnsB,GAF5BxpB,EAAArJ,KAAAmkB,MAAA9a,EAAA,GAEmDA,EADnDmjB,EAAAxsB,KAAAmkB,MAAAqI,EAAA,GACmDA,EAAAszB,GAGnDhgD,KAAAskC,0BAAA2b,EAAAh8B,EAAA+7B,IAGA,WAEA/7B,EAEA,UAMAu6B,EAAAlgD,UAAAswB,UAAA,WACA,OAAA5uB,KAAAytC,SAOA+Q,EAAAlgD,UAAA4hD,WAAA,WACA,OAAAlgD,KAAAm/C,SAOAX,EAAAlgD,UAAA2pC,WAAA,WACA,OAAAjoC,KAAA2+C,SAQAH,EAAAlgD,UAAA6hD,UAAA,SAAAl8B,GACA,OAAAjkB,KAAAo/C,QACAp/C,KAAAo/C,QAGAp/C,KAAAq/C,SAAAp7B,IASAu6B,EAAAlgD,UAAA4lC,cAAA,SAAAjgB,GACA,OAAAjkB,KAAA4+C,aAAA36B,IAOAu6B,EAAAlgD,UAAA++C,eAAA,WACA,OAAAr9C,KAAA4+C,cAQAJ,EAAAlgD,UAAAwmC,2BAAA,SAAAvS,EAAAytB,EAAAzrB,GACA,GAAAhC,EAAA,GAAAvyB,KAAAm/C,QAAA,CACA,OAAAn/C,KAAAk/C,YAAA,CACA,IAAA79C,EAAA,EAAAkxB,EAAA,GACAhxB,EAAA,EAAAgxB,EAAA,GACA,OAAuBQ,GAAuB1xB,IAAA,EAAAE,IAAA,EAAAy+C,GAE9C,IAAAC,EAAAjgD,KAAA6lC,mBAAAtT,EAAAgC,GACA,OAAAv0B,KAAAskC,0BAAA2b,EAAA1tB,EAAA,KAAAytB,GAEA,aASAxB,EAAAlgD,UAAA8hD,mBAAA,SAAAn8B,EAAAyO,EAAA6B,GACA,IAAAxjB,EAAA/Q,KAAAmgD,UAAAl8B,GACAkM,EAAAnwB,KAAAkkC,cAAAjgB,GACAw7B,EAAuBtD,GAAMn8C,KAAAm7C,YAAAl3B,GAAAjkB,KAAA2/C,UAC7Bt+C,EAAA0P,EAAA,GAAA2hB,EAAArxB,KAAAo+C,EAAA,GAAAtvB,EACA3uB,EAAAuP,EAAA,IAAA2hB,EAAAlxB,KAAA,GAAAi+C,EAAA,GAAAtvB,EAGA,OAAe8E,GAAc5zB,EAF7B0P,EAAA,GAAA2hB,EAAAnxB,KAAAk+C,EAAA,GAAAtvB,EAE6B3uB,EAD7BuP,EAAA,IAAA2hB,EAAAjxB,KAAA,GAAAg+C,EAAA,GAAAtvB,EAC6BoE,IAS7BiqB,EAAAlgD,UAAAgmC,0BAAA,SAAA3V,EAAA1K,EAAA+7B,GACA,IAAAztB,EAAA+rB,GACAt+C,KAAAqgD,uBAAA1xB,EAAA,GAAAA,EAAA,GAAA1K,GAAA,EAAAsO,GACA,IAAAlxB,EAAAkxB,EAAA,GACAhxB,EAAAgxB,EAAA,GAEA,OADAvyB,KAAAqgD,uBAAA1xB,EAAA,GAAAA,EAAA,GAAA1K,GAAA,EAAAsO,GACeQ,GAAuB1xB,EAAAkxB,EAAA,GAAAhxB,EAAAgxB,EAAA,GAAAytB,IAMtCxB,EAAAlgD,UAAA8pC,mBAAA,SAAA7V,GACA,IAAAxhB,EAAA/Q,KAAAmgD,UAAA5tB,EAAA,IACApC,EAAAnwB,KAAAkkC,cAAA3R,EAAA,IACAktB,EAAuBtD,GAAMn8C,KAAAm7C,YAAA5oB,EAAA,IAAAvyB,KAAA2/C,UAC7B,OACA5uC,EAAA,IAAAwhB,EAAA,OAAAktB,EAAA,GAAAtvB,EACApf,EAAA,IAAAwhB,EAAA,OAAAktB,EAAA,GAAAtvB,IAWAquB,EAAAlgD,UAAAunC,mBAAA,SAAAtT,EAAAgC,GACA,IAAAxjB,EAAA/Q,KAAAmgD,UAAA5tB,EAAA,IACApC,EAAAnwB,KAAAkkC,cAAA3R,EAAA,IACAktB,EAAuBtD,GAAMn8C,KAAAm7C,YAAA5oB,EAAA,IAAAvyB,KAAA2/C,UAC7Bt+C,EAAA0P,EAAA,GAAAwhB,EAAA,GAAAktB,EAAA,GAAAtvB,EACA5uB,EAAAwP,EAAA,IAAAwhB,EAAA,MAAAktB,EAAA,GAAAtvB,EAGA,OAAe8E,GAAc5zB,EAAAE,EAF7BF,EAAAo+C,EAAA,GAAAtvB,EACA5uB,EAAAk+C,EAAA,GAAAtvB,EAC6BoE,IAa7BiqB,EAAAlgD,UAAAgiD,kCAAA,SAAA3rB,EAAAxE,EAAA4a,GACA,OAAA/qC,KAAAugD,gCAAA5rB,EAAA,GAAAA,EAAA,GAAAxE,GAAA,EAAA4a,IAeAyT,EAAAlgD,UAAAiiD,gCAAA,SAAAh3C,EAAAmjB,EAAAyD,EAAAqwB,EAAAzV,GACA,IAAA9mB,EAAAjkB,KAAAgkC,kBAAA7T,GACA6O,EAAA7O,EAAAnwB,KAAAkkC,cAAAjgB,GACAlT,EAAA/Q,KAAAmgD,UAAAl8B,GACAw7B,EAAuBtD,GAAMn8C,KAAAm7C,YAAAl3B,GAAAjkB,KAAA2/C,UAC7Bc,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAzgD,KAAAmkB,OAAA9a,EAAAwH,EAAA,IAAAof,EAAAswB,GACAG,EAAA1gD,KAAAmkB,OAAAtT,EAAA,GAAA2b,GAAAyD,EAAAuwB,GACAG,EAAA7hB,EAAA2hB,EAAAlB,EAAA,GACAqB,EAAA9hB,EAAA4hB,EAAAnB,EAAA,GASA,OARAe,GACAK,EAAA3gD,KAAAG,KAAAwgD,GAAA,EACAC,EAAA5gD,KAAAG,KAAAygD,GAAA,IAGAD,EAAA3gD,KAAAmkB,MAAAw8B,GACAC,EAAA5gD,KAAAmkB,MAAAy8B,IAEehW,GAAuB7mB,EAAA48B,EAAAC,EAAA/V,IAiBtCyT,EAAAlgD,UAAA+hD,uBAAA,SAAA92C,EAAAmjB,EAAAzI,EAAAu8B,EAAAzV,GACA,IAAAh6B,EAAA/Q,KAAAmgD,UAAAl8B,GACAkM,EAAAnwB,KAAAkkC,cAAAjgB,GACAw7B,EAAuBtD,GAAMn8C,KAAAm7C,YAAAl3B,GAAAjkB,KAAA2/C,UAC7Bc,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAzgD,KAAAmkB,OAAA9a,EAAAwH,EAAA,IAAAof,EAAAswB,GACAG,EAAA1gD,KAAAmkB,OAAAtT,EAAA,GAAA2b,GAAAyD,EAAAuwB,GACAG,EAAAF,EAAAlB,EAAA,GACAqB,EAAAF,EAAAnB,EAAA,GASA,OARAe,GACAK,EAAA3gD,KAAAG,KAAAwgD,GAAA,EACAC,EAAA5gD,KAAAG,KAAAygD,GAAA,IAGAD,EAAA3gD,KAAAmkB,MAAAw8B,GACAC,EAAA5gD,KAAAmkB,MAAAy8B,IAEehW,GAAuB7mB,EAAA48B,EAAAC,EAAA/V,IAUtCyT,EAAAlgD,UAAAqnC,yBAAA,SAAAhR,EAAA1Q,EAAA8mB,GACA,OAAA/qC,KAAAqgD,uBAAA1rB,EAAA,GAAAA,EAAA,GAAA1Q,GAAA,EAAA8mB,IAMAyT,EAAAlgD,UAAAyiD,uBAAA,SAAAxuB,GACA,OAAAvyB,KAAA4+C,aAAArsB,EAAA,KAUAisB,EAAAlgD,UAAA68C,YAAA,SAAAl3B,GACA,OAAAjkB,KAAAw/C,UACAx/C,KAAAw/C,UAGAx/C,KAAAs/C,WAAAr7B,IAOAu6B,EAAAlgD,UAAAu9C,iBAAA,SAAA53B,GACA,OAAAjkB,KAAA0/C,gBAIA1/C,KAAA0/C,gBAAAz7B,GAHA,MAcAu6B,EAAAlgD,UAAA0lC,kBAAA,SAAA7T,EAAA6wB,GAEA,OAAex0B,EADCoxB,GAAiB59C,KAAA4+C,aAAAzuB,EAAA6wB,GAAA,GACbhhD,KAAA2+C,QAAA3+C,KAAAm/C,UAMpBX,EAAAlgD,UAAAuhD,qBAAA,SAAAlxB,GAGA,IAFA,IAAAjvB,EAAAM,KAAA4+C,aAAAl/C,OACAuhD,EAAA,IAAAhzC,MAAAvO,GACAukB,EAAAjkB,KAAA2+C,QAAkC16B,EAAAvkB,IAAYukB,EAC9Cg9B,EAAAh9B,GAAAjkB,KAAAskC,0BAAA3V,EAAA1K,GAEAjkB,KAAA0/C,gBAAAuB,GAEAzC,EA5bY,GC/BL,SAAA0C,GAAArhB,GACP,IAAAiE,EAAAjE,EAAAiP,qBAKA,OAJAhL,IACAA,EA0GO,SAAAjE,EAAAshB,EAAAC,EAAAC,GAEP,OA1EO,SAAA1yB,EAAAwyB,EAAAC,EAAAC,GACP,IAAAhrB,OAAAxmB,IAAAwxC,IAAyD/tB,GAAMG,SAC/DorB,EAAAyC,GAAA3yB,EAAAwyB,EAAAC,GACA,WAAe7C,GAAQ,CACvB5vB,SACA5d,OAAgBqlB,GAASzH,EAAA0H,GACzBwoB,cACAY,SAAA2B,IAmEAG,CADAC,GAAA3hB,GACAshB,EAAAC,EAAAC,GA5GAI,CAAA5hB,GACAA,EAAAkP,mBAAAjL,IAEAA,EA+EA,SAAAwd,GAAA3yB,EAAAwyB,EAAAC,GAUA,IATA,IAAAjC,OAAAtvC,IAAAsxC,EACAA,EAAsB1D,GACtBp7C,EAAiBuwB,GAASjE,GAC1BkJ,EAAgB/E,GAAQnE,GACxB8wB,EAAmBtD,QAAMtsC,IAAAuxC,EACzBA,EAAuB1D,IACvB5vB,EAAA5tB,KAAAC,IAAA03B,EAAA4nB,EAAA,GAAAp9C,EAAAo9C,EAAA,IACA//C,EAAAy/C,EAAA,EACAN,EAAA,IAAA5wC,MAAAvO,GACAukB,EAAA,EAAmBA,EAAAvkB,IAAYukB,EAC/B46B,EAAA56B,GAAA6J,EAAA5tB,KAAA8E,IAAA,EAAAif,GAEA,OAAA46B,EAqBO,SAAA2C,GAAA3hB,GAEP,IAAAlR,GADAkR,EAAiB6R,GAAa7R,IAC9BjR,YACA,IAAAD,EAAA,CACA,IAAA+yB,EAAA,IAAyBvU,GAAgBC,GAAKP,SAAAhN,EAAA4O,mBAC9C9f,EAAiBsG,IAAcysB,UAE/B,OAAA/yB,EC7IA,IAAIgzB,GAAyB,WAC7B,IAAAj5B,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+CzB04B,GAAU,SAAAx4B,GAKd,SAAAy4B,EAAAltC,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA48C,aAAAjoC,EAAAioC,aACAE,wBAAAnoC,EAAAmoC,wBACAjd,WAAAlrB,EAAAkrB,WACAzjB,MAAAzH,EAAAyH,MACA6gC,MAAAtoC,EAAAsoC,SACSj9C,KAKTspB,EAAAw4B,aAAAjyC,IAAA8E,EAAAotC,QAAAptC,EAAAotC,OAKAz4B,EAAA04B,qBAAAnyC,IAAA8E,EAAAwvB,eACAxvB,EAAAwvB,eAAA,EAKA7a,EAAAwa,cAAAj0B,IAAA8E,EAAAmvB,SAAAnvB,EAAAmvB,SAAA,KACA,IAAAme,EAAAttC,EAAAstC,UACA,QAAApyC,IAAAoyC,EAAA,CACA,IAAAxC,EAAA,UACA3b,EAAAnvB,EAAAmvB,SACAA,GACgBqY,GAAMrY,EAAAqX,YAAArX,EAAAmE,cAAAwX,GAEtB,IAAAyC,EAAA,WAAAzvC,KACAolB,EAAAqqB,EAAAC,OAAAC,YAAAD,OAAAtqB,MAAA,KACAx1B,EAAA6/C,EAAAC,OAAAE,aAAAF,OAAA9/C,OAAA,KACA4/C,EAAA,EAAA/hD,KAAAG,KAAAw3B,EAAA4nB,EAAA,IAAAv/C,KAAAG,KAAAgC,EAAAo9C,EAAA,IA8BA,OAxBAn2B,EAAAwe,UAAA,IAA8BoD,GAAS+W,GAKvC34B,EAAAg5B,QAAA,MAKAh5B,EAAA0R,KAAArmB,EAAA1W,KAAA,GAKAqrB,EAAAi5B,YAAA,CAA6Btb,WAAAtyB,EAAAsyB,YAQ7B3d,EAAA8Z,WACA9Z,EA6MA,OAjRIq4B,GAASE,EAAAz4B,GAyEby4B,EAAAvjD,UAAAq8B,eAAA,WACA,OAAA36B,KAAA8nC,UAAAnN,kBAMAknB,EAAAvjD,UAAAopC,YAAA,SAAA7H,EAAA4G,GACA,IAAAqB,EAAA9nC,KAAAwiD,0BAAA3iB,GACAiI,GACAA,EAAAJ,YAAAjB,IAYAob,EAAAvjD,UAAAwhC,kBAAA,SAAAD,EAAA5b,EAAAyO,EAAArqB,GACA,IAAAy/B,EAAA9nC,KAAAwiD,0BAAA3iB,GACA,IAAAiI,EACA,SAIA,IAFA,IACAnI,EAAAuG,EAAAuc,EADA1d,GAAA,EAEAx7B,EAAAmpB,EAAArxB,KAAoCkI,GAAAmpB,EAAAlxB,OAAqB+H,EACzD,QAAAmjB,EAAAgG,EAAAnxB,KAAwCmrB,GAAAgG,EAAAjxB,OAAqBirB,EAC7DwZ,EAA+B8E,GAAS/mB,EAAA1a,EAAAmjB,GACxC+1B,GAAA,EACA3a,EAAAjN,YAAAqL,KAEAuc,GADA9iB,EAAoEmI,EAAAvqC,IAAA2oC,IACpElV,aAAiDiC,GAASE,UAE1DsvB,GAAA,IAAAp6C,EAAAs3B,IAGA8iB,IACA1d,GAAA,GAIA,OAAAA,GAMA8c,EAAAvjD,UAAA0nC,uBAAA,SAAAnG,GACA,UAOAgiB,EAAAvjD,UAAAspC,OAAA,WACA,OAAA5nC,KAAAg7B,MAOA6mB,EAAAvjD,UAAAokD,OAAA,SAAAzkD,GACA+B,KAAAg7B,OAAA/8B,IACA+B,KAAAg7B,KAAA/8B,EACA+B,KAAAmc,YAOA0lC,EAAAvjD,UAAA6oC,UAAA,SAAAtH,GACA,OAAA7/B,KAAA8hD,SAKAD,EAAAvjD,UAAA++C,eAAA,WACA,OAAAr9C,KAAA8jC,SAAAuZ,kBAWAwE,EAAAvjD,UAAAilC,QAAA,SAAAtf,EAAA1a,EAAAmjB,EAAAwU,EAAArB,GACA,OAAejY,KAOfi6B,EAAAvjD,UAAAqkD,YAAA,WACA,OAAA3iD,KAAA8jC,UAMA+d,EAAAvjD,UAAAylC,yBAAA,SAAAlE,GACA,OAAA7/B,KAAA8jC,SAIA9jC,KAAA8jC,SAHmBod,GAAwBrhB,IAW3CgiB,EAAAvjD,UAAAkkD,0BAAA,SAAA3iB,GACA,IAAA+iB,EAAA5iD,KAAAo9C,gBACA,OAAAwF,IAAyBtQ,GAAUsQ,EAAA/iB,GACnC,KAGA7/B,KAAA8nC,WAUA+Z,EAAAvjD,UAAA8lC,kBAAA,SAAAlD,GACA,OAAAlhC,KAAAgiD,iBAQAH,EAAAvjD,UAAAgnC,iBAAA,SAAArhB,EAAAid,EAAArB,GACA,INxOqBpJ,EAAAosB,EAAAzG,EMwOrBtY,EAAA9jC,KAAA+jC,yBAAAlE,GACAsE,EAAAnkC,KAAAokC,kBAAAlD,GACAue,EAAuBtD,GAAMrY,EAAAqX,YAAAl3B,GAAAjkB,KAAAsiD,SAC7B,UAAAne,EACAsb,GN5OqBhpB,EM+OOgpB,EN/OPoD,EM+OO1e,ON9O5Bt0B,KADqBusC,EM+OOp8C,KAAAsiD,WN7O5BlG,EAAA,OAEAA,EAAA,GAAA3lB,EAAA,GAAAosB,EAAA,KACAzG,EAAA,GAAA3lB,EAAA,GAAAosB,EAAA,KACAzG,IMqPAyF,EAAAvjD,UAAAwkD,+BAAA,SAAAvwB,EAAAwwB,GACA,IAAAljB,OAAAhwB,IAAAkzC,EACAA,EAAA/iD,KAAAo9C,gBACAtZ,EAAA9jC,KAAA+jC,yBAAAlE,GAIA,OAHA7/B,KAAAs9C,YAAAzd,EAAA+O,aACArc,EDzQO,SAAAuR,EAAAvR,EAAAsN,GACP,IAAA5b,EAAAsO,EAAA,GACAgE,EAAAuN,EAAAsE,mBAAA7V,GACAywB,EAAAxB,GAAA3hB,GACA,GAASnL,GAAkBsuB,EAAAzsB,GAO3B,OAAAhE,EANA,IAAA0wB,EAAyBnwB,GAAQkwB,GACjCE,EAAAhjD,KAAAG,MAAA2iD,EAAA,GAAAzsB,EAAA,IAAA0sB,GAEA,OADA1sB,EAAA,IAAA0sB,EAAAC,EACApf,EAAA6B,yBAAApP,EAAAtS,GCiQwBg5B,CAAKnZ,EAAAvR,EAAAsN,IrBtOtB,SAAAtN,EAAAuR,GACP,IAAA7f,EAAAsO,EAAA,GACAhpB,EAAAgpB,EAAA,GACA7F,EAAA6F,EAAA,GACA,GAAAuR,EAAAmE,aAAAhkB,KAAA6f,EAAAoc,aACA,SAEA,IACAxtB,EADA/D,EAAAmV,EAAAlV,YAQA,QAFA8D,EAJA/D,EAIAmV,EAAAQ,0BAAA3V,EAAA1K,GAHA6f,EAAA+X,iBAAA53B,KASAyO,EAAAF,WAAAjpB,EAAAmjB,GqBqNey2B,CAAgB5wB,EAAAuR,GAAAvR,EAAA,MAM/BsvB,EAAAvjD,UAAAiC,MAAA,WACAP,KAAA8nC,UAAAvnC,SAKAshD,EAAAvjD,UAAAi/C,QAAA,WACAv9C,KAAAO,QACA6oB,EAAA9qB,UAAAi/C,QAAA1gD,KAAAmD,OAUA6hD,EAAAvjD,UAAA+pC,QAAA,SAAApkB,EAAA1a,EAAAmjB,EAAAmT,KACAgiB,EAlRc,CAmRZrF,IAMF4G,GAAA,SAAAh6B,GAMA,SAAAg6B,EAAAxkD,EAAA+gC,GACA,IAAArW,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAOA,OADAspB,EAAAqW,OACArW,EAEA,OAfIq4B,GAASyB,EAAAh6B,GAebg6B,EAhBA,CAiBEz6B,GAEa06B,GAAA,GCrVAC,GAMf,gBANeA,GAaf,cAbeA,GAmBf,gBCzBIC,GAAyB,WAC7B,IAAA76B,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAiNds6B,GAnKJ,SAAAp6B,GAKX,SAAAq6B,EAAA9uC,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA48C,aAAAjoC,EAAAioC,aACAqF,UAAAttC,EAAAstC,UACAF,OAAAptC,EAAAotC,OACAliB,WAAAlrB,EAAAkrB,WACAzjB,MAAAzH,EAAAyH,MACA0nB,SAAAnvB,EAAAmvB,SACAK,eAAAxvB,EAAAwvB,eACA8Y,MAAAtoC,EAAAsoC,MACAhW,WAAAtyB,EAAAsyB,WACAhpC,IAAA0W,EAAA1W,IACA6+C,wBAAAnoC,EAAAmoC,2BACS98C,KAgCT,OA3BAspB,EAAAo6B,0BAAA/uC,EAAAgvC,gBAKAr6B,EAAA4gB,iBAAAv1B,EAAAu1B,iBAKA5gB,EAAAq6B,gBAAAhvC,EAAAgvC,gBAAAhvC,EAAAgvC,gBAAAzlD,KAAAorB,GAAgG4yB,GAKhG5yB,EAAAs6B,KAAA,KACAjvC,EAAAivC,KACAt6B,EAAAu6B,QAAAlvC,EAAAivC,MAEAjvC,EAAAmvC,KACAx6B,EAAAy6B,OAAApvC,EAAAmvC,KAMAx6B,EAAA06B,iBAAA,GACA16B,EA+GA,OAhKIi6B,GAASE,EAAAr6B,GAwDbq6B,EAAAnlD,UAAA2lD,oBAAA,WACA,OAAAjkD,KAAAkqC,kBAOAuZ,EAAAnlD,UAAA4lD,mBAAA,WACA,OAAAlkD,KAAA2jD,iBASAF,EAAAnlD,UAAA6lD,QAAA,WACA,OAAAnkD,KAAA4jD,MAOAH,EAAAnlD,UAAA8lD,iBAAA,SAAAz6B,GACA,IAGA/qB,EAHA+gC,EAA2DhW,EAAA,OAC3D+a,EAAkB5c,EAAM6X,GACxB2D,EAAA3D,EAAA3O,WAEAsS,GAAyBrQ,GAASnD,SAClC9vB,KAAAgkD,iBAAAtf,IAAA,EACA9lC,EAAmB0kD,IAEnB5e,KAAA1kC,KAAAgkD,0BACAhkD,KAAAgkD,iBAAAtf,GACA9lC,EAAA0kC,GAAgCrQ,GAASpM,MAASy8B,GAClDhgB,GAA8BrQ,GAASE,QAAAmQ,GAAwBrQ,GAASI,MACpDiwB,QAAazzC,GAEjCA,MAAAjR,GACAoB,KAAA0pB,cAAA,IAAmC05B,GAAexkD,EAAA+gC,KAQlD8jB,EAAAnlD,UAAA+lD,oBAAA,SAAAna,GACAlqC,KAAA8nC,UAAAvnC,QACAP,KAAAkqC,mBACAlqC,KAAAmc,WAQAsnC,EAAAnlD,UAAAgmD,mBAAA,SAAAX,EAAA1lD,GACA+B,KAAA2jD,kBACA3jD,KAAA8nC,UAAAsD,0BACA,IAAAntC,EACA+B,KAAA0iD,OAAAzkD,GAGA+B,KAAAmc,WAQAsnC,EAAAnlD,UAAAylD,OAAA,SAAAD,GACA,IAAAF,EAAA5jD,KAAA4jD,KTvFO,SAAAE,GACP,IAAAF,EAAA,GACAz2C,EAAA,sBAAoCo3C,KAAAT,GACpC,GAAA32C,EAAA,CAEA,IAAAq3C,EAAAr3C,EAAA,GAAAs3C,WAAA,GACAC,EAAAv3C,EAAA,GAAAs3C,WAAA,GACAE,OAAA,EACA,IAAAA,EAAAH,EAAsCG,GAAAD,IAA0BC,EAChEf,EAAA9gD,KAAAghD,EAAAx6C,QAAA6D,EAAA,GAAA9D,OAAAu7C,aAAAD,KAEA,OAAAf,EAGA,GADAz2C,IAAA,kBAAoCo3C,KAAAT,GACpC,CAGA,IADA,IAAAe,EAAAC,SAAA33C,EAAA,OACAzQ,EAAAooD,SAAA33C,EAAA,OAA4CzQ,GAAAmoD,EAAanoD,IACzDknD,EAAA9gD,KAAAghD,EAAAx6C,QAAA6D,EAAA,GAAAzQ,EAAAkQ,aAEA,OAAAg3C,EAGA,OADAA,EAAA9gD,KAAAghD,GACAF,ESgE+BmB,CAASjB,GACxC9jD,KAAA6jD,QAAAD,IAOAH,EAAAnlD,UAAAulD,QAAA,SAAAD,GACA5jD,KAAA4jD,OACA,IAAA3lD,EAAA2lD,EAAA18C,KAAA,MACAlH,KAAA0jD,yBACA1jD,KAAAskD,mBAAoCxI,GAAmB8H,EAAA5jD,KAAA8jC,UAAA7lC,GAGvD+B,KAAA0iD,OAAAzkD,IAMAwlD,EAAAnlD,UAAA+pC,QAAA,SAAApkB,EAAA1a,EAAAmjB,GACA,IAAAwZ,EAA2B8E,GAAS/mB,EAAA1a,EAAAmjB,GACpC1sB,KAAA8nC,UAAAjN,YAAAqL,IACAlmC,KAAA8nC,UAAAvqC,IAAA2oC,IAGAud,EAjKW,CAkKTJ,IChNE2B,GAAyB,WAC7B,IAAAt8B,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4X7B,SAAA+7B,GAAAC,EAAAlb,GACiDkb,EAAA3d,WAAAyC,MAElC,IAAAmb,GArTF,SAAA/7B,GAKb,SAAAg8B,EAAAzwC,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA48C,aAAAjoC,EAAAioC,aACAqF,UAAAttC,EAAAstC,UACAF,OAAAptC,EAAAotC,OACAliB,WAAAlrB,EAAAkrB,WACAzjB,MAAAzH,EAAAyH,MACA0nB,SAAAnvB,EAAAmvB,SACAoG,iBAAAv1B,EAAAu1B,iBACAv1B,EAAAu1B,iBAAA+a,GACA9gB,eAAAxvB,EAAAwvB,eACAwf,gBAAAhvC,EAAAgvC,gBACAG,IAAAnvC,EAAAmvC,IACAF,KAAAjvC,EAAAivC,KACA3G,MAAAtoC,EAAAsoC,MACAhW,WAAAtyB,EAAAsyB,WACAhpC,IAAA0W,EAAA1W,IACA6+C,wBAAAnoC,EAAAmoC,2BACS98C,KAiCT,OA5BAspB,EAAA2gB,iBACAp6B,IAAA8E,EAAAs1B,YAAAt1B,EAAAs1B,YAAA,KAKA3gB,EAAA+7B,eAAAx1C,IAAA8E,EAAA0wC,UACA1wC,EAAA0wC,UAAgCvb,GAKhCxgB,EAAAg8B,uBAAA,GAKAh8B,EAAAi8B,sBAAA,GAKAj8B,EAAAk8B,4BAAA7wC,EAAA8wC,2BAKAn8B,EAAAo8B,0BAAA,EACAp8B,EAoPA,OA3SI07B,GAASI,EAAAh8B,GA4Dbg8B,EAAA9mD,UAAAq8B,eAAA,WAIA,GAAA36B,KAAA8nC,UAAAnN,iBACA,SAGA,QAAA18B,KAAA+B,KAAAslD,uBACA,GAAAtlD,KAAAslD,uBAAArnD,GAAA08B,iBACA,SAIA,UAKAyqB,EAAA9mD,UAAAopC,YAAA,SAAA7H,EAAA4G,GAKA,IAAAkf,EAAA3lD,KAAAwiD,0BAAA3iB,GAEA,QAAAhqB,KADA7V,KAAA8nC,UAAAJ,YAAA1nC,KAAA8nC,WAAA6d,EAAAlf,EAAA,IACAzmC,KAAAslD,uBAAA,CACA,IAAAxd,EAAA9nC,KAAAslD,uBAAAzvC,GACAiyB,EAAAJ,YAAAI,GAAA6d,EAAAlf,EAAA,MAMA2e,EAAA9mD,UAAA0nC,uBAAA,SAAAnG,GACA,OACA7/B,KAAAo9C,iBAAAvd,IAAmDyS,GAAUtyC,KAAAo9C,gBAAAvd,GAC7D,EAGA7/B,KAAA4lD,aAMAR,EAAA9mD,UAAAsnD,UAAA,WACA,UAKAR,EAAA9mD,UAAA6oC,UAAA,SAAAtH,GACA,QACA7/B,KAAAo9C,iBAAAvd,IAAmDyS,GAAUtyC,KAAAo9C,gBAAAvd,KAI7DzW,EAAA9qB,UAAA6oC,UAAAtqC,KAAAmD,KAAA6/B,IAMAulB,EAAA9mD,UAAAylC,yBAAA,SAAAlE,GAIA,IAAA+iB,EAAA5iD,KAAAo9C,gBACA,IAAAp9C,KAAA8jC,UAAA8e,IAA2CtQ,GAAUsQ,EAAA/iB,GAGrD,CACA,IAAAgmB,EAA0B/9B,EAAM+X,GAIhC,OAHAgmB,KAAA7lD,KAAAulD,wBACAvlD,KAAAulD,sBAAAM,GAAsD3E,GAAwBrhB,IAGZ7/B,KAAAulD,sBAAAM,GARlE,OAAA7lD,KAAA8jC,UAcAshB,EAAA9mD,UAAAkkD,0BAAA,SAAA3iB,GAIA,IAAA+iB,EAAA5iD,KAAAo9C,gBACA,IAAAwF,GAAyBtQ,GAAUsQ,EAAA/iB,GACnC,OAAA7/B,KAAA8nC,UAGA,IAAA+d,EAA0B/9B,EAAM+X,GAIhC,OAHAgmB,KAAA7lD,KAAAslD,yBACAtlD,KAAAslD,uBAAAO,GAAA,IAA2D3a,GAASlrC,KAAA8nC,UAAAxN,gBAEpEt6B,KAAAslD,uBAAAO,IAaAT,EAAA9mD,UAAAwnD,YAAA,SAAA7hC,EAAA1a,EAAAmjB,EAAAwU,EAAArB,EAAA5hC,GACA,IAAAs0B,EAAA,CAAAtO,EAAA1a,EAAAmjB,GACAq5B,EAAA/lD,KAAA8iD,+BAAAvwB,EAAAsN,GACAmmB,EAAAD,EACA/lD,KAAA2jD,gBAAAoC,EAAA7kB,EAAArB,QAAAhwB,EACA8vB,EAAA,IAAA3/B,KAAAqlD,UAAA9yB,OAAA1iB,IAAAm2C,EAAyE/yB,GAASC,KAAQD,GAASG,WAAAvjB,IAAAm2C,IAAA,GAAAhmD,KAAAiqC,YAAAjqC,KAAAkqC,iBAAAlqC,KAAAuiD,aAGnG,OAFA5iB,EAAA1hC,MACQ2nB,EAAM+Z,EAAOvZ,EAASC,OAAArmB,KAAAokD,iBAAApkD,MAC9B2/B,GAKAylB,EAAA9mD,UAAAilC,QAAA,SAAAtf,EAAA1a,EAAAmjB,EAAAwU,EAAArB,GACA,IAAA6S,EAAmF1yC,KAAAo9C,gBACnF,GACA1K,GAAA7S,IAAgDyS,GAAUI,EAAA7S,GAG1D,CACA,IAAA1H,EAAAn4B,KAAAwiD,0BAAA3iB,GACAtN,EAAA,CAAAtO,EAAA1a,EAAAmjB,GACAiT,OAAA,EACAuG,EAA+B0B,GAAMrV,GACrC4F,EAAA0C,YAAAqL,KACAvG,EAAgExH,EAAA56B,IAAA2oC,IAEhE,IAAAjoC,EAAA+B,KAAA4nC,SACA,GAAAjI,KAAA1hC,OACA,OAAA0hC,EAGA,IAAAyZ,EAAAp5C,KAAA+jC,yBAAA2O,GACA2G,EAAAr5C,KAAA+jC,yBAAAlE,GACAyZ,EAAAt5C,KAAA8iD,+BAAAvwB,EAAAsN,GACAomB,EAAA,IAAkC/M,GAAUxG,EAAA0G,EAAAvZ,EAAAwZ,EAAA9mB,EAAA+mB,EAAAt5C,KAAAokC,kBAAAlD,GAAAlhC,KAAA4lD,YAAA,SAAA3hC,EAAA1a,EAAAmjB,EAAAwU,GAC5C,OAAAlhC,KAAAkmD,gBAAAjiC,EAAA1a,EAAAmjB,EAAAwU,EAAAwR,IACiBx0C,KAAA8B,WAAAwlD,4BAAAxlD,KAAA0lD,0BAUjB,OATAO,EAAAhoD,MACA0hC,GACAsmB,EAAA/c,YAAAvJ,EACAsmB,EAAA3c,sBACAnR,EAAA7uB,QAAA48B,EAAA+f,IAGA9tB,EAAAvqB,IAAAs4B,EAAA+f,GAEAA,EA9BA,OAAAjmD,KAAAkmD,gBAAAjiC,EAAA1a,EAAAmjB,EAAAwU,EAAAwR,GAAA7S,IA2CAulB,EAAA9mD,UAAA4nD,gBAAA,SAAAjiC,EAAA1a,EAAAmjB,EAAAwU,EAAArB,GACA,IAAAF,EAAA,KACAuG,EAA2B8E,GAAS/mB,EAAA1a,EAAAmjB,GACpCzuB,EAAA+B,KAAA4nC,SACA,GAAA5nC,KAAA8nC,UAAAjN,YAAAqL,IAMA,IADAvG,EAAA3/B,KAAA8nC,UAAAvqC,IAAA2oC,IACAjoC,OAAA,CAIA,IAAAirC,EAAAvJ,EACAA,EAAA3/B,KAAA8lD,YAAA7hC,EAAA1a,EAAAmjB,EAAAwU,EAAArB,EAAA5hC,GAEAirC,EAAAlY,YAA8CiC,GAASC,KAEvDyM,EAAAuJ,0BAGAvJ,EAAAuJ,cAEAvJ,EAAA2J,sBACAtpC,KAAA8nC,UAAAx+B,QAAA48B,EAAAvG,SApBAA,EAAA3/B,KAAA8lD,YAAA7hC,EAAA1a,EAAAmjB,EAAAwU,EAAArB,EAAA5hC,GACA+B,KAAA8nC,UAAAl6B,IAAAs4B,EAAAvG,GAsBA,OAAAA,GAOAylB,EAAA9mD,UAAA6nD,2BAAA,SAAAj1B,GACA,GACAlxB,KAAA0lD,0BAAAx0B,EADA,CAKA,QAAArb,KADA7V,KAAA0lD,yBAAAx0B,EACAlxB,KAAAslD,uBACAtlD,KAAAslD,uBAAAzvC,GAAAtV,QAEAP,KAAAmc,YAcAipC,EAAA9mD,UAAA8nD,yBAAA,SAAAvmB,EAAAwmB,GAEA,IAAAC,EAAuB5U,GAAa7R,GACpC,GAAAymB,EAAA,CACA,IAAAT,EAA8B/9B,EAAMw+B,GACpCT,KAAA7lD,KAAAulD,wBACAvlD,KAAAulD,sBAAAM,GAAAQ,KAKAjB,EA5Sa,CA6SX5B,ICpXE+C,GAAyB,WAC7B,IAAA79B,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4Gds9B,GAtCR,SAAAp9B,GAKP,SAAAq9B,EAAA10B,GACA,IACApd,EAAAod,GAAA,GACA8N,OAAAhwB,IAAA8E,EAAAkrB,WACAlrB,EAAAkrB,WAAA,YACAiE,OAAAj0B,IAAA8E,EAAAmvB,SAAAnvB,EAAAmvB,SLLO,SAAA/R,GAEP,IAAA20B,EAAA30B,GAAA,GACApD,EAAA+3B,EAAA/3B,QAAsC+iB,GAAa,aAAA9iB,YAEnD+3B,EAAA,CACAh4B,SACAgwB,QAAA+H,EAAA/H,QACAc,SAAAiH,EAAAjH,SACAZ,YAAAyC,GAAA3yB,EAAA+3B,EAAAvH,QAAAuH,EAAAjH,WAEA,WAAelB,GAAQoI,GKLXC,CAAS,CACrBj4B,OAAwB6yB,GAAoB3hB,GAC5Csf,QAAAxqC,EAAAwqC,QACAR,QAAAhqC,EAAAgqC,QACAc,SAAA9qC,EAAA8qC,WAmBA,OAjBAr2B,EAAAvsB,KAAAmD,KAAA,CACA48C,aAAAjoC,EAAAioC,aACAqF,UAAAttC,EAAAstC,UACAhY,YAAAt1B,EAAAs1B,YACA8X,OAAAptC,EAAAotC,OACAliB,aACA4lB,2BAAA9wC,EAAA8wC,2BACA3hB,WACAoG,iBAAAv1B,EAAAu1B,iBACA/F,eAAAxvB,EAAAwvB,eACAwf,gBAAAhvC,EAAAgvC,gBACAG,IAAAnvC,EAAAmvC,IACAF,KAAAjvC,EAAAivC,KACA3G,WAAAptC,IAAA8E,EAAAsoC,OAAAtoC,EAAAsoC,MACAhW,WAAAtyB,EAAAsyB,WACA6V,wBAAAnoC,EAAAmoC,2BACS98C,KAGT,OAnCIumD,GAASE,EAAAr9B,GAmCbq9B,EApCO,CAqCLtB,ICxGa0B,GAAA,CACfC,OAAA,UCPIC,GAAyB,WAC7B,IAAAr+B,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgItB,SAAA89B,GAAAC,EAAAxd,EAAAyd,EAAAC,GACP,IAAAC,EAAAH,EAAAI,UACA,QAAAx3C,IAAAu3C,EAAA,CAGA,IAAAE,EAAAL,EAAAM,mBAAAH,EAAA3d,GACA+d,EAAAP,EAAAQ,qBAAAH,GACAL,EAAAS,gBACAT,EAAAU,mBAEAV,EAAA5f,QAAA,CACAlX,WAAAq3B,EACAI,OAAAV,EACAW,cAAAh4C,IAAAs3C,IAAA,IACAW,OAAgBlf,MAGD,IAAAmf,GAvGA,SAAA3+B,GAKf,SAAA4+B,EAAArzC,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,YAUA,OATA2U,EAAAszC,cACA3+B,EAAA2+B,YAAAtzC,EAAAszC,aAMA3+B,EAAA4+B,KAAA,KACA5+B,EAAA6+B,WAAA,GACA7+B,EA8CA,OA7DIy9B,GAASiB,EAAA5+B,GAuBb4+B,EAAA1pD,UAAA8pD,UAAA,WACA,OAAkCpoD,KAAAzC,IAAcspD,GAAmBC,SAOnEkB,EAAA1pD,UAAA+pD,OAAA,WACA,OAAAroD,KAAAkoD,MAQAF,EAAA1pD,UAAA2pD,YAAA,SAAAK,GACA,UAQAN,EAAA1pD,UAAA6pD,UAAA,SAAAI,GACAvoD,KAAA4N,IAAiBi5C,GAAmBC,OAAAyB,IAQpCP,EAAA1pD,UAAAqyB,OAAA,SAAAtjB,GACArN,KAAAkoD,KAAA76C,GAEA26C,EA9De,CA+Dbz8B,GCrGEi9B,GAAyB,WAC7B,IAAA9/B,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAiC7Bu/B,GAMA,cAOAC,GAAA,SAAAt/B,GAQA,SAAAs/B,EAAA9pD,EAAA+pD,EAAAC,EAAA7F,GACA,IAAAz5B,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAmBA,OAbAspB,EAAAu/B,SAAAD,EAMAt/B,EAAAq/B,OAMAr/B,EAAAuW,WAAAkjB,EACAz5B,EAEA,OA7BIk/B,GAASE,EAAAt/B,GA6Bbs/B,EA9BA,CA+BE//B,GAiJF,SAAAmgC,GAAAn/B,GAEA,IADA,IAAAo/B,EAAAp/B,EAAAq/B,aAAAD,MACArsD,EAAA,EAAA+C,EAAAspD,EAAArpD,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAisD,EAAAI,EAAAtoD,KAAA/D,GACAusD,EAAA,IAAAC,WACAD,EAAAvhD,iBAAgC0e,EAASY,KAAAhnB,KAAAmpD,cAAAjrD,KAAA8B,KAAA2oD,IACzCM,EAAAG,WAAAT,IAMA,SAAAU,GAAA1/B,GACAA,EAAAZ,kBACAY,EAAAb,iBACAa,EAAAq/B,aAAAM,WAAA,OAEe,IAAAC,GA1JA,SAAAngC,GAKf,SAAAogC,EAAAz3B,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GA+BA,OA9BAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACAioD,YAAyB1/B,KAChBvoB,MAKTypD,oBAAA90C,EAAA+0C,mBACA/0C,EAAA+0C,mBAAA,GAKApgC,EAAAozB,YAAA/nC,EAAAkrB,WACY6R,GAAa/8B,EAAAkrB,YAAA,KAKzBvW,EAAAqgC,gBAAA,KAKArgC,EAAAsgC,QAAAj1C,EAAAxV,QAAA,KAKAmqB,EAAAlT,OAAAzB,EAAAyB,OAAAzB,EAAAyB,OAAA,KACAkT,EA6FA,OAlIIk/B,GAASgB,EAAApgC,GA4CbogC,EAAAlrD,UAAA6qD,cAAA,SAAAR,EAAAh/B,GACA,IAAAvmB,EAAAumB,EAAAvT,OAAAhT,OACAiK,EAAArN,KAAAqoD,SACAxoB,EAAA7/B,KAAA08C,YACA7c,IAEAA,EADAxyB,EAAAw8C,UACAzM,iBAIA,IAFA,IAAAsM,EAAA1pD,KAAAypD,oBACAZ,EAAA,GACAnsD,EAAA,EAAA+C,EAAAiqD,EAAAhqD,OAAuDhD,EAAA+C,IAAQ/C,EAAA,CAC/D,IAAAqD,EAAA,IAAA2pD,EAAAhtD,GAIA,IAHAmsD,EAAA7oD,KAAA8pD,iBAAA/pD,EAAAqD,EAAA,CACA2mD,kBAAAlqB,MAEAgpB,EAAAnpD,OAAA,EACA,MAGAM,KAAA4pD,UACA5pD,KAAA4pD,QAAArpD,QACAP,KAAA4pD,QAAAI,YAAAnB,IAEA7oD,KAAA0pB,cAAA,IAAAg/B,GAAAD,GAAAE,EAAAE,EAAAhpB,KAKA2pB,EAAAlrD,UAAA2rD,mBAAA,WACA,IAAA58C,EAAArN,KAAAqoD,SACA,GAAAh7C,EAAA,CACA,IAAA68C,EAAAlqD,KAAAoW,OAAApW,KAAAoW,OAAA/I,EAAA88C,cACAnqD,KAAA2pD,gBAAA,CACgB/jC,EAAMskC,EAAW9jC,EAASQ,KAAAkiC,GAAA9oD,MAC1B4lB,EAAMskC,EAAW9jC,EAASM,UAAA2iC,GAAArpD,MAC1B4lB,EAAMskC,EAAW9jC,EAASO,SAAA0iC,GAAArpD,MAC1B4lB,EAAMskC,EAAW9jC,EAASQ,KAAAyiC,GAAArpD,SAO1CwpD,EAAAlrD,UAAA6pD,UAAA,SAAAI,GACAn/B,EAAA9qB,UAAA6pD,UAAAtrD,KAAAmD,KAAAuoD,GACAA,EACAvoD,KAAAiqD,qBAGAjqD,KAAAoqD,wBAMAZ,EAAAlrD,UAAAqyB,OAAA,SAAAtjB,GACArN,KAAAoqD,uBACAhhC,EAAA9qB,UAAAqyB,OAAA9zB,KAAAmD,KAAAqN,GACArN,KAAAooD,aACApoD,KAAAiqD,sBAUAT,EAAAlrD,UAAAwrD,iBAAA,SAAA/pD,EAAA68B,EAAAjoB,GACA,IACA,OAAA5U,EAAAsqD,aAAAztB,EAAAjoB,GAEA,MAAAtG,GACA,cAMAm7C,EAAAlrD,UAAA8rD,qBAAA,WACApqD,KAAA2pD,kBACA3pD,KAAA2pD,gBAAAt9C,QAAyC2Z,GACzChmB,KAAA2pD,gBAAA,OAGAH,EAnIe,CAoIbzB,IC7NEuC,GAAyB,WAC7B,IAAA5hC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAkSd,IAAAqhC,GA5NJ,SAAAnhC,GAQX,SAAAohC,EAAAC,GACA,IAAAnhC,EAAAF,EAAAvsB,KAAAmD,YA4BA,GAvBAspB,EAAAohC,SAAA76C,EAKAyZ,EAAAqhC,cAAA,WAMArhC,EAAAshC,OAAA,KAKAthC,EAAAuhC,oBAAAh7C,EAKAyZ,EAAAwhC,mBAAA,KACQllC,EAAM0D,EAAQ6B,EAAkB7B,EAAAqhC,eAAArhC,EAAAyhC,uBAAAzhC,GACxCmhC,EACA,GAAoC,qBAAAO,sBAAA,CACpC,IAAAC,EAA+E,EAC/E3hC,EAAA4hC,YAAAD,OAEA,CAEA,IAAAv9B,EAAA+8B,EACAnhC,EAAAwB,cAAA4C,GAGA,OAAApE,EA4IA,OA3LIghC,GAASE,EAAAphC,GAuDbohC,EAAAlsD,UAAAk2B,MAAA,WACA,IAAAA,EAAA,IAAAg2B,EAAAxqD,KAAAgrB,iBACAwJ,EAAA22B,gBAAAnrD,KAAAorD,mBACA,IAAAH,EAAAjrD,KAAAqrD,cACAJ,GACAz2B,EAAA02B,YAAAD,EAAAz2B,SAEA,IAAA9oB,EAAA1L,KAAAsrD,WAIA,OAHA5/C,GACA8oB,EAAA+2B,SAAA7/C,GAEA8oB,GAUAg2B,EAAAlsD,UAAA+sD,YAAA,WACA,OACkErrD,KAAAzC,IAAAyC,KAAA2qD,gBASlEH,EAAAlsD,UAAAktD,MAAA,WACA,OAAAxrD,KAAA0qD,KASAF,EAAAlsD,UAAA8sD,gBAAA,WACA,OAAAprD,KAAA2qD,eAQAH,EAAAlsD,UAAAgtD,SAAA,WACA,OAAAtrD,KAAA4qD,QAQAJ,EAAAlsD,UAAAmtD,iBAAA,WACA,OAAAzrD,KAAA6qD,gBAKAL,EAAAlsD,UAAAotD,sBAAA,WACA1rD,KAAAmc,WAKAquC,EAAAlsD,UAAAysD,uBAAA,WACA/qD,KAAA8qD,qBACY9kC,EAAahmB,KAAA8qD,oBACzB9qD,KAAA8qD,mBAAA,MAEA,IAAAG,EAAAjrD,KAAAqrD,cACAJ,IACAjrD,KAAA8qD,mBAAsCllC,EAAMqlC,EAAW7kC,EAASC,OAAArmB,KAAA0rD,sBAAA1rD,OAEhEA,KAAAmc,WASAquC,EAAAlsD,UAAA4sD,YAAA,SAAAD,GACAjrD,KAAA4N,IAAA5N,KAAA2qD,cAAAM,IAUAT,EAAAlsD,UAAAitD,SAAA,SAAA7/C,GACA1L,KAAA4qD,OAAAl/C,EACA1L,KAAA6qD,eAAAn/C,EAuCO,SAAAjD,GACP,sBAAAA,EACA,OAAAA,EAMA,IAAAkjD,EACA,GAAA19C,MAAApP,QAAA4J,GACAkjD,EAAAljD,MAEA,CACY4jB,EAA2B,qBAAAwC,UAAA,IACvC,IAAAnjB,EAAsE,EACtEigD,EAAA,CAAAjgD,GAEA,kBACA,OAAAigD,GAzDAC,CAAAlgD,QAAAmE,EACA7P,KAAAmc,WAWAquC,EAAAlsD,UAAAutD,MAAA,SAAAh2C,GACA7V,KAAA0qD,IAAA70C,EACA7V,KAAAmc,WASAquC,EAAAlsD,UAAA6sD,gBAAA,SAAAluD,GACQkpB,EAAQnmB,KAAOmrB,EAAkBnrB,KAAA2qD,eAAA3qD,KAAA+qD,uBAAA/qD,MACzCA,KAAA2qD,cAAA1tD,EACQ2oB,EAAM5lB,KAAOmrB,EAAkBnrB,KAAA2qD,eAAA3qD,KAAA+qD,uBAAA/qD,MACvCA,KAAA+qD,0BAEAP,EA5LW,CA6LTj/B,GC3PaugC,GAAA,CAOfC,YAAA,cAMAvlC,MAAWJ,EAASI,MAMpBC,SAAcL,EAASK,SAMvBulC,YAAA,cAOAC,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBC/CIC,GAAyB,WAC7B,IAAA/jC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+CdwjC,GAzBf,SAAAtjC,GAOA,SAAAujC,EAAA/tD,EAAAyO,EAAAmrB,GACA,IAAAlP,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAaA,OAPAspB,EAAAjc,MAMAic,EAAA6H,gBAAAthB,IAAA2oB,IAAA,KACAlP,EAEA,OAtBImjC,GAASE,EAAAvjC,GAsBbujC,EAvBA,CAwBEhkC,GC9CEikC,GAAyB,WAC7B,IAAAlkC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAoFd2jC,GA9Df,SAAAzjC,GASA,SAAA0jC,EAAAluD,EAAAyO,EAAA0/C,EAAAC,EAAAx0B,GACA,IAAAlP,EAAAF,EAAAvsB,KAAAmD,KAAApB,EAAAyO,EAAAmrB,IAAAx4B,KA4BA,OArBAspB,EAAA2jC,cAAAF,EAMAzjC,EAAA4W,MAAA7yB,EAAA6/C,cAAAH,GAMAzjC,EAAAqL,WAAAtnB,EAAA8/C,uBAAA7jC,EAAA4W,OAQA5W,EAAA8jC,cAAAv9C,IAAAm9C,KACA1jC,EAsBA,OA3DIsjC,GAASE,EAAA1jC,GA6Cb0jC,EAAAxuD,UAAAwqB,eAAA,WACAM,EAAA9qB,UAAAwqB,eAAAjsB,KAAAmD,MACAA,KAAAitD,cAAAnkC,kBAQAgkC,EAAAxuD,UAAAyqB,gBAAA,WACAK,EAAA9qB,UAAAyqB,gBAAAlsB,KAAAmD,MACAA,KAAAitD,cAAAlkC,mBAEA+jC,EA5DA,CA6DEJ,ICnFEW,GAAyB,WAC7B,IAAA3kC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAqCdokC,GApBf,SAAAlkC,GASA,SAAAmkC,EAAA3uD,EAAAyO,EAAAmgD,EAAAR,EAAAx0B,GACA,IAAAlP,EAAAF,EAAAvsB,KAAAmD,KAAApB,EAAAyO,EAAAmgD,EAAAP,cAAAD,EAAAx0B,IAAAx4B,KAMA,OADAspB,EAAAkkC,eACAlkC,EAEA,OAjBI+jC,GAASE,EAAAnkC,GAiBbmkC,EAlBA,CAmBEV,ICwCK,SAAAY,GAAA94B,EAAA+4B,GACP,IAYAnkD,EAAAmjB,EAZAwK,EAAAvC,EAAA,GACAyC,EAAAzC,EAAA,GACA6U,EAAAkkB,EAAA,GACAn4B,EAAAm4B,EAAA,GACA9gC,EAAA4c,EAAA,GACA3c,EAAA2c,EAAA,GACA1c,EAAAyI,EAAA,GACAxI,EAAAwI,EAAA,GACAvI,EAAAF,EAAAF,EACAK,EAAAF,EAAAF,EACA8gC,EAAA,IAAA3gC,GAAA,IAAAC,EAAA,GACAD,GAAAkK,EAAAtK,GAAAK,GAAAmK,EAAAvK,KAAAG,IAAAC,KAAA,GAcA,OAZA0gC,GAAA,GACApkD,EAAAqjB,EACAF,EAAAG,GAEA8gC,GAAA,GACApkD,EAAAujB,EACAJ,EAAAK,IAGAxjB,EAAAqjB,EAAA+gC,EAAA3gC,EACAN,EAAAG,EAAA8gC,EAAA1gC,GAEA,CAAA1jB,EAAAmjB,GAkHO,SAASkhC,GAAMC,EAAAC,GAEtB,IADA,IAAAn7B,GAAA,EACAj2B,EAAAmxD,EAAAnuD,OAAA,EAAwChD,GAAA,IAAQA,EAChD,GAAAmxD,EAAAnxD,IAAAoxD,EAAApxD,GAAA,CACAi2B,GAAA,EACA,MAGA,OAAAA,EAoBO,SAASo7B,GAAMp5B,EAAAgF,GACtB,IAAAq0B,EAAA9tD,KAAAy2B,IAAAgD,GACAs0B,EAAA/tD,KAAA22B,IAAA8C,GACApwB,EAAAorB,EAAA,GAAAq5B,EAAAr5B,EAAA,GAAAs5B,EACAvhC,EAAAiI,EAAA,GAAAq5B,EAAAr5B,EAAA,GAAAs5B,EAGA,OAFAt5B,EAAA,GAAAprB,EACAorB,EAAA,GAAAjI,EACAiI,EA6BO,SAASu5B,GAAeC,EAAAC,GAC/B,IAAAphC,EAAAmhC,EAAA,GAAAC,EAAA,GACAnhC,EAAAkhC,EAAA,GAAAC,EAAA,GACA,OAAAphC,IAAAC,IAOO,SAASohC,GAAQF,EAAAC,GACxB,OAAAluD,KAAAoF,KAAqB4oD,GAAeC,EAAAC,IAU7B,SAAAE,GAAA35B,EAAA+4B,GACP,OAAWQ,GAAev5B,EAAA84B,GAAA94B,EAAA+4B,IC3S1B,IAAAa,GAAA,oBAAAC,UACAA,UAAAC,UAAAr6C,cAAA,GAKOs6C,IAAA,IAAAH,GAAA3tD,QAAA,WAKA+tD,IAAA,IAAAJ,GAAA3tD,QAAA,eAAA2tD,GAAA3tD,QAAA,SAKAguD,IAAA,IAAAL,GAAA3tD,QAAA,eAAA2tD,GAAA3tD,QAAA,QAKAiuD,IAAA,IAAAN,GAAA3tD,QAAA,aAQAkuD,GAAAvnD,OAAAwnD,kBAAA,EAcAC,IAPAR,UAOA,iBAAAjnD,QAMA0nD,GAAA,iBAAA1nD,OAMA2nD,KAAAV,UAAA,iBCrCAW,GAAA,SAAA7G,GACP,IAAA2E,EAAuE3E,EAAA,cACvE,OAAA2E,EAAAmC,UACAnC,EAAAoC,SAAApC,EAAAqC,WACArC,EAAAsC,UAUOC,GAAA,SAAAlH,GACP,IAAA2E,EAAuE3E,EAAA,cACvE,OAAA2E,EAAAmC,UACAnC,EAAAoC,SAAApC,EAAAqC,UACArC,EAAAsC,UAUWE,GAAK,SAAA9lC,GAChB,OAAAA,EAAAvT,OAAAs5C,qBAAAz5C,SAAA05C,eASOC,GAAarnC,EAoBbsnC,GAAA,SAAAvH,GACP,IAAA2E,EAA8C3E,EAAA,cAC9C,UAAA2E,EAAA6C,UACUlB,IAAUC,IAAG5B,EAAAqC,UA4BhBS,GAAA,SAAAzH,GACP,OAAAA,EAAA1pD,MAAmCktD,GAAmBC,aAoB/CiE,GAAA,SAAA1H,GACP,IAAA2E,EAAuE3E,EAAA,cACvE,OAAA2E,EAAAmC,UACAnC,EAAAoC,SAAApC,EAAAqC,WACArC,EAAAsC,UAyBOU,GAAA,SAAA3H,GACP,IAAA2E,EAAuE3E,EAAA,cACvE,OAAA2E,EAAAmC,UACAnC,EAAAoC,SAAApC,EAAAqC,UACArC,EAAAsC,UAUOW,GAAA,SAAA5H,GACP,IACA6H,EADA7H,EAAA2E,cAAA72C,OACqC+5C,QACrC,gBAAAA,GACA,WAAAA,GACA,aAAAA,GASOC,GAAA,SAAA9H,GACP,IAAAkF,EAA8E,EAAAA,aAG9E,OAFInhC,OAAMxc,IAAA29C,EAAA,IAEV,SAAAA,EAAA6C,aAqCOC,GAAA,SAAAhI,GACP,IAAAkF,EAA8E,EAAAA,aAE9E,OADInhC,OAAMxc,IAAA29C,EAAA,IACVA,EAAA+C,WAAA,IAAA/C,EAAAsC,QC5NO,SAAAU,GAAAn7B,EAAAC,EAAAC,EAAAC,EAAA3gB,EAAA47C,GAGP,IAFA,IAAAvxD,EAAAuxD,GAAA,GACA/zD,EAAA,EACAuI,EAAAqwB,EAAwBrwB,EAAAswB,EAAStwB,GAAAuwB,EAAA,CACjC,IAAAjsB,EAAA8rB,EAAApwB,GACAynB,EAAA2I,EAAApwB,EAAA,GACA/F,EAAAxC,KAAAmY,EAAA,GAAAtL,EAAAsL,EAAA,GAAA6X,EAAA7X,EAAA,GACA3V,EAAAxC,KAAAmY,EAAA,GAAAtL,EAAAsL,EAAA,GAAA6X,EAAA7X,EAAA,GAKA,OAHA47C,GAAAvxD,EAAAQ,QAAAhD,IACAwC,EAAAQ,OAAAhD,GAEAwC,EAYO,SAASwxD,GAAMr7B,EAAAC,EAAAC,EAAAC,EAAAmE,EAAAiuB,EAAA6I,GAOtB,IANA,IAAAvxD,EAAAuxD,GAAA,GACA95B,EAAAz2B,KAAAy2B,IAAAgD,GACA9C,EAAA32B,KAAA22B,IAAA8C,GACAg3B,EAAA/I,EAAA,GACAgJ,EAAAhJ,EAAA,GACAlrD,EAAA,EACAuI,EAAAqwB,EAAwBrwB,EAAAswB,EAAStwB,GAAAuwB,EAAA,CACjC,IAAAq7B,EAAAx7B,EAAApwB,GAAA0rD,EACAG,EAAAz7B,EAAApwB,EAAA,GAAA2rD,EACA1xD,EAAAxC,KAAAi0D,EAAAE,EAAAl6B,EAAAm6B,EAAAj6B,EACA33B,EAAAxC,KAAAk0D,EAAAC,EAAAh6B,EAAAi6B,EAAAn6B,EACA,QAAAz1B,EAAA+D,EAAA,EAA2B/D,EAAA+D,EAAAuwB,IAAgBt0B,EAC3ChC,EAAAxC,KAAA24B,EAAAn0B,GAMA,OAHAuvD,GAAAvxD,EAAAQ,QAAAhD,IACAwC,EAAAQ,OAAAhD,GAEAwC,EA2CO,SAAS6xD,GAAS17B,EAAAC,EAAAC,EAAAC,EAAAq7B,EAAAC,EAAAL,GAGzB,IAFA,IAAAvxD,EAAAuxD,GAAA,GACA/zD,EAAA,EACAuI,EAAAqwB,EAAwBrwB,EAAAswB,EAAStwB,GAAAuwB,EAAA,CACjCt2B,EAAAxC,KAAA24B,EAAApwB,GAAA4rD,EACA3xD,EAAAxC,KAAA24B,EAAApwB,EAAA,GAAA6rD,EACA,QAAA5vD,EAAA+D,EAAA,EAA2B/D,EAAA+D,EAAAuwB,IAAgBt0B,EAC3ChC,EAAAxC,KAAA24B,EAAAn0B,GAMA,OAHAuvD,GAAAvxD,EAAAQ,QAAAhD,IACAwC,EAAAQ,OAAAhD,GAEAwC,EC/GA,IAAI8xD,GAAyB,WAC7B,IAAAtoC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA0B7B+nC,GnDIA,cmD0OeC,GAjOH,SAAA9nC,GAEZ,SAAA+nC,IACA,IAAA7nC,EAAAF,EAAAvsB,KAAAmD,YA0BA,OArBAspB,EAAAmkB,QvD6IA,CAAAnsC,SAAA,UuDxIAgoB,EAAA8nC,iBAAA,EAKA9nC,EAAA+nC,wBAAA,GAKA/nC,EAAAgoC,yCAAA,EAKAhoC,EAAAioC,2BAAA,EACAjoC,EAkMA,OA9NI0nC,GAASG,EAAA/nC,GAmCb+nC,EAAA7yD,UAAAk2B,MAAA,WACA,OAAe5M,KAUfupC,EAAA7yD,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,OAAe9pC,KAOfupC,EAAA7yD,UAAAk0B,WAAA,SAAAjpB,EAAAmjB,GACA,IAAAilC,EAAA3xD,KAAA4xD,gBAAA,CAAAroD,EAAAmjB,IACA,OAAAilC,EAAA,KAAApoD,GAAAooD,EAAA,KAAAjlC,GAUAykC,EAAA7yD,UAAAszD,gBAAA,SAAAjiB,EAAAkiB,GACA,IAAAJ,EAAAI,GAAA,CAAAC,SAEA,OADA9xD,KAAAwxD,eAAA7hB,EAAA,GAAAA,EAAA,GAAA8hB,EAAAnwD,KACAmwD,GASAN,EAAA7yD,UAAAyzD,qBAAA,SAAAp9B,GACA,OAAA30B,KAAAwyB,WAAAmC,EAAA,GAAAA,EAAA,KAQAw8B,EAAA7yD,UAAA0zD,cAAA,SAAArjC,GACA,OAAe/G,KAQfupC,EAAA7yD,UAAAswB,UAAA,SAAA2F,GAKA,OAJAv0B,KAAAoxD,iBAAApxD,KAAAqqB,gBACArqB,KAAAytC,QAAAztC,KAAAgyD,cAAAhyD,KAAAytC,SACAztC,KAAAoxD,gBAAApxD,KAAAqqB,evDkeO,SAAAsE,EAAA4F,GACP,OAAAA,GACAA,EAAA,GAAA5F,EAAA,GACA4F,EAAA,GAAA5F,EAAA,GACA4F,EAAA,GAAA5F,EAAA,GACA4F,EAAA,GAAA5F,EAAA,GACA4F,GAGA5F,EuDzeesjC,CAAcjyD,KAAAytC,QAAAlZ,IAU7B48B,EAAA7yD,UAAAkgC,OAAA,SAAA7E,EAAAiuB,GACQhgC,KAaRupC,EAAA7yD,UAAA0gC,MAAA,SAAAvF,EAAAy4B,EAAAhL,GACQt/B,KAYRupC,EAAA7yD,UAAA6zD,SAAA,SAAAC,GACA,OAAApyD,KAAAgrD,sBAAAoH,MAUAjB,EAAA7yD,UAAA0sD,sBAAA,SAAAqH,GACA,OAAezqC,KAOfupC,EAAA7yD,UAAAg0D,QAAA,WACA,OAAe1qC,KAUfupC,EAAA7yD,UAAAi0D,eAAA,SAAAnhB,GACQxpB,KAQRupC,EAAA7yD,UAAAk0D,iBAAA,SAAA7jC,GACA,OAAe/G,KAUfupC,EAAA7yD,UAAAigC,UAAA,SAAAsyB,EAAAC,GACQlpC,KAiBRupC,EAAA7yD,UAAAuW,UAAA,SAAA1V,EAAAgyC,GAEA,IAAA6E,EAAyBtE,GAAavyC,GACtCiyC,EAAA4E,EAAAxH,YAAmDpB,GAAKH,YACxD,SAAAwlB,EAAAC,EAAAl9B,GACA,IAAAm9B,EAAA3c,EAAApnB,YACAgkC,EAAA5c,EAAAtH,iBACA1P,EAA4BpM,GAASggC,GAAoBhgC,GAAS+/B,GAGlE,OAFgBr5B,GAAgB23B,GAAA2B,EAAA,GAAAA,EAAA,GAAA5zB,KAAA,OAChBwxB,GAAWiC,EAAA,EAAAA,EAAA/yD,OAAA81B,EAAAy7B,GAAAyB,GACJ5f,GAAYkD,EAAA7E,EAAZ2B,CAAY2f,EAAAC,EAAAl9B,IAEvBsd,GAAYkD,EAAA7E,GAExB,OADAnxC,KAAAuyD,eAAAnhB,GACApxC,MAEAmxD,EA/NY,CAgOV5lC,GC9PasnC,GAAA,CACfC,GAAA,KACArM,IAAA,MACAsM,IAAA,MACAC,KAAA,QCbIC,GAAyB,WAC7B,IAAAvqC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+QtB,SAAAgqC,GAAAC,GACP,IAAA39B,EAUA,OATA29B,GAAkBN,GAAcC,GAChCt9B,EAAA,EAEA29B,GAAuBN,GAAcpM,KAAA0M,GAAkBN,GAAcE,IACrEv9B,EAAA,EAEA29B,GAAuBN,GAAcG,OACrCx9B,EAAA,GAE6B,EAkBd,IAAA49B,GA9QG,SAAAhqC,GAElB,SAAAiqC,IACA,IAAA/pC,EAAAF,EAAAvsB,KAAAmD,YAgBA,OAXAspB,EAAA6pC,OAAuBN,GAAcC,GAKrCxpC,EAAAkM,OAAA,EAKAlM,EAAA+L,gBAAA,KACA/L,EAsMA,OAxNI2pC,GAASI,EAAAjqC,GAuBbiqC,EAAA/0D,UAAA0zD,cAAA,SAAArjC,GACA,OAAeyG,GAAiCp1B,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA7G,IAMhD0kC,EAAA/0D,UAAAg1D,eAAA,WACA,OAAe1rC,KAOfyrC,EAAA/0D,UAAAi1D,mBAAA,WACA,OAAAvzD,KAAAq1B,gBAAAzxB,MAAA,EAAA5D,KAAAw1B,SAKA69B,EAAA/0D,UAAAk1D,mBAAA,WACA,OAAAxzD,KAAAq1B,iBAOAg+B,EAAA/0D,UAAAm1D,kBAAA,WACA,OAAAzzD,KAAAq1B,gBAAAzxB,MAAA5D,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,SAOA69B,EAAA/0D,UAAAo1D,UAAA,WACA,OAAA1zD,KAAAmzD,QAKAE,EAAA/0D,UAAA0sD,sBAAA,SAAAqH,GAQA,GAPAryD,KAAAuxD,4BAAAvxD,KAAAqqB,gBACY9pB,EAAKP,KAAAqxD,yBACjBrxD,KAAAsxD,yCAAA,EACAtxD,KAAAuxD,2BAAAvxD,KAAAqqB,eAIAgoC,EAAA,GACA,IAAAryD,KAAAsxD,0CACAe,GAAAryD,KAAAsxD,yCACA,OAAAtxD,KAEA,IAAA/B,EAAAo0D,EAAAzlD,WACA,GAAA5M,KAAAqxD,wBAAA9yD,eAAAN,GACA,OAAA+B,KAAAqxD,wBAAApzD,GAGA,IAAA01D,EAAA3zD,KAAA4zD,8BAAAvB,GAEA,OADAsB,EAAAH,qBACA9zD,OAAAM,KAAAq1B,gBAAA31B,QACAM,KAAAqxD,wBAAApzD,GAAA01D,EACAA,IASA3zD,KAAAsxD,yCAAAe,EACAryD,OASAqzD,EAAA/0D,UAAAs1D,8BAAA,SAAAvB,GACA,OAAAryD,MAKAqzD,EAAA/0D,UAAAu1D,UAAA,WACA,OAAA7zD,KAAAw1B,QAMA69B,EAAA/0D,UAAAw1D,mBAAA,SAAAX,EAAA99B,GACAr1B,KAAAw1B,OAAA09B,GAAAC,GACAnzD,KAAAmzD,SACAnzD,KAAAq1B,mBAOAg+B,EAAA/0D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACQpsC,KAQRyrC,EAAA/0D,UAAA21D,UAAA,SAAAd,EAAAh/B,EAAA+/B,GAEA,IAAA1+B,EACA,GAAA29B,EACA39B,EAAA09B,GAAAC,OAEA,CACA,QAAAz2D,EAAA,EAA2BA,EAAAw3D,IAAax3D,EAAA,CACxC,OAAAy3B,EAAAz0B,OAGA,OAFAM,KAAAmzD,OAAkCN,GAAcC,QAChD9yD,KAAAw1B,OAAA,GAIArB,EAAmDA,EAAA,GAInDg/B,EAiEA,SAAA39B,GACA,IAAA29B,EACA,GAAA39B,EACA29B,EAAiBN,GAAcC,GAE/B,GAAAt9B,EACA29B,EAAiBN,GAAcpM,IAE/B,GAAAjxB,IACA29B,EAAiBN,GAAcG,MAE/B,SA5EAmB,CADA3+B,EAAArB,EAAAz0B,QAGAM,KAAAmzD,SACAnzD,KAAAw1B,UAMA69B,EAAA/0D,UAAAi0D,eAAA,SAAAnhB,GACApxC,KAAAq1B,kBACA+b,EAAApxC,KAAAq1B,gBAAAr1B,KAAAq1B,gBAAAr1B,KAAAw1B,QACAx1B,KAAAmc,YAOAk3C,EAAA/0D,UAAAkgC,OAAA,SAAA7E,EAAAiuB,GACA,IAAAvyB,EAAAr1B,KAAAwzD,qBACA,GAAAn+B,EAAA,CACA,IAAAG,EAAAx1B,KAAA6zD,YACYnD,GAAMr7B,EAAA,EAAAA,EAAA31B,OAAA81B,EAAAmE,EAAAiuB,EAAAvyB,GAClBr1B,KAAAmc,YAOAk3C,EAAA/0D,UAAA0gC,MAAA,SAAAvF,EAAAy4B,EAAAhL,GACA,IAAAxtB,EAAAw4B,OACAriD,IAAA6pB,IACAA,EAAAD,GAEA,IAAAmuB,EAAAV,EACAU,IACAA,EAAqBzxB,GAASn2B,KAAA4uB,cAE9B,IAAAyG,EAAAr1B,KAAAwzD,qBACA,GAAAn+B,EAAA,CACA,IAAAG,EAAAx1B,KAAA6zD,aHjKO,SAAcx+B,EAAAC,EAAAC,EAAAC,EAAAiE,EAAAC,EAAAkuB,EAAA6I,GAKrB,IAJA,IAAAvxD,EAAAuxD,GAAA,GACAE,EAAA/I,EAAA,GACAgJ,EAAAhJ,EAAA,GACAlrD,EAAA,EACAuI,EAAAqwB,EAAwBrwB,EAAAswB,EAAStwB,GAAAuwB,EAAA,CACjC,IAAAq7B,EAAAx7B,EAAApwB,GAAA0rD,EACAG,EAAAz7B,EAAApwB,EAAA,GAAA2rD,EACA1xD,EAAAxC,KAAAi0D,EAAAl3B,EAAAo3B,EACA3xD,EAAAxC,KAAAk0D,EAAAl3B,EAAAo3B,EACA,QAAA5vD,EAAA+D,EAAA,EAA2B/D,EAAA+D,EAAAuwB,IAAgBt0B,EAC3ChC,EAAAxC,KAAA24B,EAAAn0B,GAGAuvD,GAAAvxD,EAAAQ,QAAAhD,IACAwC,EAAAQ,OAAAhD,GGmJY03D,CAAK/+B,EAAA,EAAAA,EAAA31B,OAAA81B,EAAAiE,EAAAC,EAAAkuB,EAAAvyB,GACjBr1B,KAAAmc,YAOAk3C,EAAA/0D,UAAAigC,UAAA,SAAAsyB,EAAAC,GACA,IAAAz7B,EAAAr1B,KAAAwzD,qBACA,GAAAn+B,EAAA,CACA,IAAAG,EAAAx1B,KAAA6zD,YACY9C,GAAS17B,EAAA,EAAAA,EAAA31B,OAAA81B,EAAAq7B,EAAAC,EAAAz7B,GACrBr1B,KAAAmc,YAGAk3C,EAzNkB,CA0NhBnC,IC9OK,SAAAmD,GAAAh/B,EAAAC,EAAAX,EAAAa,GACP,QAAA94B,EAAA,EAAA+C,EAAAk1B,EAAAj1B,OAA2ChD,EAAA+C,IAAQ/C,EACnD24B,EAAAC,KAAAX,EAAAj4B,GAEA,OAAA44B,EASO,SAAAg/B,GAAAj/B,EAAAC,EAAAnB,EAAAqB,GACP,QAAA94B,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAA4ChD,EAAA+C,IAAQ/C,EAEpD,IADA,IAAAi4B,EAAAR,EAAAz3B,GACAuI,EAAA,EAAuBA,EAAAuwB,IAAYvwB,EACnCowB,EAAAC,KAAAX,EAAA1vB,GAGA,OAAAqwB,EAUO,SAAAi/B,GAAAl/B,EAAAC,EAAAk/B,EAAAh/B,EAAAi/B,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACA/3D,EAAA,EACAuI,EAAA,EAAA86C,EAAAyU,EAAA90D,OAA6CuF,EAAA86C,IAAQ96C,EAAA,CACrD,IAAAswB,EAAA++B,GAAAj/B,EAAAC,EAAAk/B,EAAAvvD,GAAAuwB,GACAk/B,EAAAh4D,KAAA64B,EACAD,EAAAC,EAGA,OADAm/B,EAAAh1D,OAAAhD,EACAg4D,ECjDA,IAAIC,GAAyB,WAC7B,IAAAjsC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA2BzB0rC,GAAM,SAAAxrC,GASV,SAAAyrC,EAAAt+B,EAAA6V,EAAA4nB,GACA,IAAA1qC,EAAAF,EAAAvsB,KAAAmD,YACA,QAAA6P,IAAAmkD,QAAAnkD,IAAAu8B,EACA9iB,EAAAwqC,mBAAAE,EAAAz9B,OAEA,CACA,IAAA8V,EAAAD,GAAA,EACA9iB,EAAAwrC,mBAAAv+B,EAAA8V,EAAA2nB,GAEA,OAAA1qC,EAyLA,OA1MIqrC,GAASE,EAAAzrC,GAyBbyrC,EAAAv2D,UAAAk2B,MAAA,WACA,WAAAqgC,EAAA70D,KAAAq1B,gBAAAzxB,aAAAiM,EAAA7P,KAAAmzD,SAKA0B,EAAAv2D,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,IAAAr8B,EAAAr1B,KAAAq1B,gBACArI,EAAAzjB,EAAA8rB,EAAA,GACApI,EAAAP,EAAA2I,EAAA,GACA0/B,EAAA/nC,IAAAC,IACA,GAAA8nC,EAAArD,EAAA,CACA,OAAAqD,EACA,QAAAr4D,EAAA,EAA+BA,EAAAsD,KAAAw1B,SAAiB94B,EAChD+0D,EAAA/0D,GAAA24B,EAAA34B,OAGA,CACA,IAAA+sC,EAAAzpC,KAAAg1D,YAAA90D,KAAAoF,KAAAyvD,GACAtD,EAAA,GAAAp8B,EAAA,GAAAoU,EAAAzc,EACAykC,EAAA,GAAAp8B,EAAA,GAAAoU,EAAAxc,EACA,IAAAvwB,EAAA,EAA+BA,EAAAsD,KAAAw1B,SAAiB94B,EAChD+0D,EAAA/0D,GAAA24B,EAAA34B,GAIA,OADA+0D,EAAA/xD,OAAAM,KAAAw1B,OACAu/B,EAGA,OAAArD,GAMAmD,EAAAv2D,UAAAk0B,WAAA,SAAAjpB,EAAAmjB,GACA,IAAA2I,EAAAr1B,KAAAq1B,gBACArI,EAAAzjB,EAAA8rB,EAAA,GACApI,EAAAP,EAAA2I,EAAA,GACA,OAAArI,IAAAC,KAAAjtB,KAAAi1D,qBAOAJ,EAAAv2D,UAAA63B,UAAA,WACA,OAAAn2B,KAAAq1B,gBAAAzxB,MAAA,EAAA5D,KAAAw1B,SAKAq/B,EAAAv2D,UAAA0zD,cAAA,SAAArjC,GACA,IAAA0G,EAAAr1B,KAAAq1B,gBACAgX,EAAAhX,EAAAr1B,KAAAw1B,QAAAH,EAAA,GACA,OAAeJ,GAAcI,EAAA,GAAAgX,EAAAhX,EAAA,GAAAgX,EAAAhX,EAAA,GAAAgX,EAAAhX,EAAA,GAAAgX,EAAA1d,IAO7BkmC,EAAAv2D,UAAA02D,UAAA,WACA,OAAA90D,KAAAoF,KAAAtF,KAAAi1D,sBAMAJ,EAAAv2D,UAAA22D,kBAAA,WACA,IAAAjoC,EAAAhtB,KAAAq1B,gBAAAr1B,KAAAw1B,QAAAx1B,KAAAq1B,gBAAA,GACApI,EAAAjtB,KAAAq1B,gBAAAr1B,KAAAw1B,OAAA,GAAAx1B,KAAAq1B,gBAAA,GACA,OAAArI,IAAAC,KAMA4nC,EAAAv2D,UAAAg0D,QAAA,WACA,OAAehnB,GAAYS,QAM3B8oB,EAAAv2D,UAAAk0D,iBAAA,SAAA7jC,GAEA,GAAY6I,GAAU7I,EADtB3uB,KAAA4uB,aACsB,CACtB,IAAA2H,EAAAv2B,KAAAm2B,YACA,OAAAxH,EAAA,IAAA4H,EAAA,IAAA5H,EAAA,IAAA4H,EAAA,KAGA5H,EAAA,IAAA4H,EAAA,IAAA5H,EAAA,IAAA4H,EAAA,IAGmBX,GAAajH,EAAA3uB,KAAA+xD,qBAAA7zD,KAAA8B,QAEhC,UAOA60D,EAAAv2D,UAAA42D,UAAA,SAAA3+B,GACA,IAAAf,EAAAx1B,KAAAw1B,OACA6W,EAAArsC,KAAAq1B,gBAAAG,GAAAx1B,KAAAq1B,gBAAA,GACAA,EAAAkB,EAAA3yB,QACAyxB,EAAAG,GAAAH,EAAA,GAAAgX,EACA,QAAA3vC,EAAA,EAAuBA,EAAA84B,IAAY94B,EACnC24B,EAAAG,EAAA94B,GAAA65B,EAAA75B,GAEAsD,KAAA8zD,mBAAA9zD,KAAAmzD,OAAA99B,GACAr1B,KAAAmc,WAUA04C,EAAAv2D,UAAAw2D,mBAAA,SAAAv+B,EAAA8V,EAAA2nB,GACAh0D,KAAAi0D,UAAAD,EAAAz9B,EAAA,GACAv2B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAGA,IAAAA,EAAAr1B,KAAAq1B,gBACAC,EAAqB++B,GAAiBh/B,EAAA,EAAAkB,EAAAv2B,KAAAw1B,QACtCH,EAAAC,KAAAD,EAAA,GAAAgX,EACA,QAAA3vC,EAAA,EAAA+C,EAAAO,KAAAw1B,OAAyC94B,EAAA+C,IAAQ/C,EACjD24B,EAAAC,KAAAD,EAAA34B,GAEA24B,EAAA31B,OAAA41B,EACAt1B,KAAAmc,WAKA04C,EAAAv2D,UAAAg1D,eAAA,WACA,aAKAuB,EAAAv2D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,KAMAa,EAAAv2D,UAAA62D,UAAA,SAAA9oB,GACArsC,KAAAq1B,gBAAAr1B,KAAAw1B,QAAAx1B,KAAAq1B,gBAAA,GAAAgX,EACArsC,KAAAmc,WAMA04C,EAAAv2D,UAAAkgC,OAAA,SAAA7E,EAAAiuB,GACA,IAAArxB,EAAAv2B,KAAAm2B,YACAX,EAAAx1B,KAAA6zD,YACA7zD,KAAAk1D,UAAuBxE,GAAMn6B,EAAA,EAAAA,EAAA72B,OAAA81B,EAAAmE,EAAAiuB,EAAArxB,IAC7Bv2B,KAAAmc,WAMA04C,EAAAv2D,UAAAigC,UAAA,SAAAsyB,EAAAC,GACA,IAAAv6B,EAAAv2B,KAAAm2B,YACAX,EAAAx1B,KAAA6zD,YACA7zD,KAAAk1D,UAAuBnE,GAASx6B,EAAA,EAAAA,EAAA72B,OAAA81B,EAAAq7B,EAAAC,EAAAv6B,IAChCv2B,KAAAmc,WAEA04C,EA3MU,CA4MRzB,IAuBFwB,GAAMt2D,UAAAuW,UACS,IAAAugD,GAAA,GC/Of,SAAAC,GAAAhgC,EAAAigC,EAAAC,EAAA//B,EAAAjsB,EAAAmjB,EAAA+kC,GACA,IAIAn8B,EAJA1I,EAAAyI,EAAAigC,GACAzoC,EAAAwI,EAAAigC,EAAA,GACAtoC,EAAAqI,EAAAkgC,GAAA3oC,EACAK,EAAAoI,EAAAkgC,EAAA,GAAA1oC,EAEA,OAAAG,GAAA,IAAAC,EACAqI,EAAAggC,MAEA,CACA,IAAA13D,IAAA2L,EAAAqjB,GAAAI,GAAAN,EAAAG,GAAAI,IAAAD,IAAAC,KACA,GAAArvB,EAAA,EACA03B,EAAAigC,MAEA,IAAA33D,EAAA,GACA,QAAAlB,EAAA,EAA2BA,EAAA84B,IAAY94B,EACvC+0D,EAAA/0D,GAAkC0W,EAAIiiB,EAAAigC,EAAA54D,GAAA24B,EAAAkgC,EAAA74D,GAAAkB,GAGtC,YADA6zD,EAAA/xD,OAAA81B,GAIAF,EAAAggC,GAGA,IAAA54D,EAAA,EAAmBA,EAAA84B,IAAY94B,EAC/B+0D,EAAA/0D,GAAA24B,EAAAC,EAAA54B,GAEA+0D,EAAA/xD,OAAA81B,EAYO,SAAAggC,GAAAngC,EAAAC,EAAAC,EAAAC,EAAAr1B,GACP,IAAAysB,EAAAyI,EAAAC,GACAzI,EAAAwI,EAAAC,EAAA,GACA,IAAAA,GAAAE,EAA0BF,EAAAC,EAAcD,GAAAE,EAAA,CACxC,IAAA1I,EAAAuI,EAAAC,GACAvI,EAAAsI,EAAAC,EAAA,GACAmgC,EAA2BvoC,EAASN,EAAAC,EAAAC,EAAAC,GACpC0oC,EAAAt1D,IACAA,EAAAs1D,GAEA7oC,EAAAE,EACAD,EAAAE,EAEA,OAAA5sB,EAUO,SAAAu1D,GAAArgC,EAAAC,EAAAo/B,EAAAl/B,EAAAr1B,GACP,QAAAzD,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACAyD,EAAAq1D,GAAAngC,EAAAC,EAAAC,EAAAC,EAAAr1B,GACAm1B,EAAAC,EAEA,OAAAp1B,EAgCO,SAAAw1D,GAAAtgC,EAAAC,EAAAC,EAAAC,EAAAogC,EAAAC,EAAAtsD,EAAAmjB,EAAA+kC,EAAAC,EAAAoE,GACP,GAAAxgC,GAAAC,EACA,OAAAm8B,EAEA,IAAAh1D,EAAAq4D,EACA,OAAAa,EAAA,CAGA,IADAb,EAA0B7nC,EAAS3jB,EAAAmjB,EAAA2I,EAAAC,GAAAD,EAAAC,EAAA,KACnCo8B,EAAA,CACA,IAAAh1D,EAAA,EAAuBA,EAAA84B,IAAY94B,EACnC+0D,EAAA/0D,GAAA24B,EAAAC,EAAA54B,GAGA,OADA+0D,EAAA/xD,OAAA81B,EACAu/B,EAGA,OAAArD,EAKA,IAFA,IAAAqE,EAAAD,GAAA,CAAAhE,SACA5tD,EAAAoxB,EAAAE,EACAtxB,EAAAqxB,GAGA,GAFA8/B,GAAAhgC,EAAAnxB,EAAAsxB,EAAAtxB,EAAAsxB,EAAAjsB,EAAAmjB,EAAAqpC,IACAhB,EAA0B7nC,EAAS3jB,EAAAmjB,EAAAqpC,EAAA,GAAAA,EAAA,KACnCrE,EAAA,CAEA,IADAA,EAAAqD,EACAr4D,EAAA,EAAuBA,EAAA84B,IAAY94B,EACnC+0D,EAAA/0D,GAAAq5D,EAAAr5D,GAEA+0D,EAAA/xD,OAAA81B,EACAtxB,GAAAsxB,OAaAtxB,GAAAsxB,EAAAt1B,KAAAC,KAAAD,KAAAoF,KAAAyvD,GACA70D,KAAAoF,KAAAosD,IAAAkE,EAAA,KAGA,GAAAC,IAEAR,GAAAhgC,EAAAE,EAAAC,EAAAF,EAAAE,EAAAjsB,EAAAmjB,EAAAqpC,IACAhB,EAA0B7nC,EAAS3jB,EAAAmjB,EAAAqpC,EAAA,GAAAA,EAAA,KACnCrE,GAAA,CAEA,IADAA,EAAAqD,EACAr4D,EAAA,EAAuBA,EAAA84B,IAAY94B,EACnC+0D,EAAA/0D,GAAAq5D,EAAAr5D,GAEA+0D,EAAA/xD,OAAA81B,EAGA,OAAAk8B,EAgBO,SAAAsE,GAAA3gC,EAAAC,EAAAo/B,EAAAl/B,EAAAogC,EAAAC,EAAAtsD,EAAAmjB,EAAA+kC,EAAAC,EAAAoE,GAEP,IADA,IAAAC,EAAAD,GAAA,CAAAhE,SACAp1D,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACAg1D,EAAAiE,GAAAtgC,EAAAC,EAAAC,EAAAC,EAAAogC,EAAAC,EAAAtsD,EAAAmjB,EAAA+kC,EAAAC,EAAAqE,GACAzgC,EAAAC,EAEA,OAAAm8B,EC5LO,SAAAuE,GAAA5gC,EAAAC,EAAAC,EAAAC,EAAA0gC,GAGP,IAFA,IAAA/hC,OAAAtkB,IAAAqmD,IAAA,GACAx5D,EAAA,EACAuI,EAAAqwB,EAAwBrwB,EAAAswB,EAAStwB,GAAAuwB,EACjCrB,EAAAz3B,KAAA24B,EAAAzxB,MAAAqB,IAAAuwB,GAGA,OADArB,EAAAz0B,OAAAhD,EACAy3B,EAUO,SAAAgiC,GAAA9gC,EAAAC,EAAAo/B,EAAAl/B,EAAA4gC,GAGP,IAFA,IAAA5B,OAAA3kD,IAAAumD,IAAA,GACA15D,EAAA,EACAuI,EAAA,EAAA86C,EAAA2U,EAAAh1D,OAAqCuF,EAAA86C,IAAQ96C,EAAA,CAC7C,IAAAswB,EAAAm/B,EAAAzvD,GACAuvD,EAAA93D,KAAAu5D,GAAA5gC,EAAAC,EAAAC,EAAAC,EAAAg/B,EAAA93D,IACA44B,EAAAC,EAGA,OADAi/B,EAAA90D,OAAAhD,EACA83D,EAWO,SAAA6B,GAAAhhC,EAAAC,EAAAghC,EAAA9gC,EAAA+gC,GAGP,IAFA,IAAAC,OAAA3mD,IAAA0mD,IAAA,GACA75D,EAAA,EACAuI,EAAA,EAAA86C,EAAAuW,EAAA52D,OAAsCuF,EAAA86C,IAAQ96C,EAAA,CAC9C,IAAAyvD,EAAA4B,EAAArxD,GACAuxD,EAAA95D,KAAAy5D,GAAA9gC,EAAAC,EAAAo/B,EAAAl/B,EAAAghC,EAAA95D,IACA44B,EAAAo/B,IAAAh1D,OAAA,GAGA,OADA82D,EAAA92D,OAAAhD,EACA85D,EC3CO,SAAAC,GAAAphC,EAAAC,EAAAC,EAAAC,EAAAkhC,EAAAjG,GACP,IAAAkG,EAAA7E,IACA8E,EAAA9E,IACA3zD,GAAAo3B,EAAAD,GAAAE,EACA,OAAAr3B,EACAw4D,EAAAthC,EAAAC,GACAshC,EAAAvhC,EAAAC,EAAA,QAEA,MAAAn3B,EACAw4D,GAAA,EAAAD,GAAArhC,EAAAC,GACAohC,EAAArhC,EAAAC,EAAAE,GACAohC,GAAA,EAAAF,GAAArhC,EAAAC,EAAA,GACAohC,EAAArhC,EAAAC,EAAAE,EAAA,QAEA,OAAAr3B,EAAA,CAKA,IAJA,IAAAyuB,EAAAyI,EAAAC,GACAzI,EAAAwI,EAAAC,EAAA,GACAuhC,EAAA,EACAC,EAAA,IACAp6D,EAAA44B,EAAAE,EAAqC94B,EAAA64B,EAAS74B,GAAA84B,EAAA,CAC9C,IAAA1I,EAAAuI,EAAA34B,GACAqwB,EAAAsI,EAAA34B,EAAA,GACAm6D,GAAA32D,KAAAoF,MAAAwnB,EAAAF,IAAAE,EAAAF,IAAAG,EAAAF,IAAAE,EAAAF,IACAiqC,EAAAh0D,KAAA+zD,GACAjqC,EAAAE,EACAD,EAAAE,EAEA,IAAA3W,EAAAsgD,EAAAG,EACA3yD,E3B9BO,SAAA6yD,EAAAC,EAAAC,GAMP,IALA,IAAAt0D,EAAAu0D,EACAC,EAAAF,GAAAtZ,GACAyZ,EAAA,EACAC,EAAAN,EAAAr3D,OACA43D,GAAA,EACAF,EAAAC,IAIAH,GAAAC,EAAAJ,EADAp0D,EAAAy0D,GAAAC,EAAAD,GAAA,IACAJ,IACA,EACAI,EAAAz0D,EAAA,GAGA00D,EAAA10D,EACA20D,GAAAJ,GAIA,OAAAI,EAAAF,K2BUoBG,CAAYT,EAAA1gD,GAChC,GAAAlS,EAAA,GACA,IAAAtG,GAAAwY,EAAA0gD,GAAA5yD,EAAA,KACA4yD,GAAA5yD,EAAA,GAAA4yD,GAAA5yD,EAAA,IACA/G,EAAAm4B,IAAApxB,EAAA,GAAAsxB,EACAmhC,EAAqBvjD,EAAIiiB,EAAAl4B,GAAAk4B,EAAAl4B,EAAAq4B,GAAA53B,GACzBg5D,EAAqBxjD,EAAIiiB,EAAAl4B,EAAA,GAAAk4B,EAAAl4B,EAAAq4B,EAAA,GAAA53B,QAGzB+4D,EAAAthC,EAAAC,EAAApxB,EAAAsxB,GACAohC,EAAAvhC,EAAAC,EAAApxB,EAAAsxB,EAAA,GAGA,OAAAi7B,GACAA,EAAA,GAAAkG,EACAlG,EAAA,GAAAmG,EACAnG,GAGA,CAAAkG,EAAAC,GAYO,SAAAY,GAAAniC,EAAAC,EAAAC,EAAAC,EAAA14B,EAAA26D,GACP,GAAAliC,GAAAD,EACA,YAEA,IAAAX,EACA,GAAA73B,EAAAu4B,EAAAC,EAAAE,EAAA,GACA,OAAAiiC,IACA9iC,EAAAU,EAAAzxB,MAAA0xB,IAAAE,IACAA,EAAA,GAAA14B,EACA63B,GAGA,KAGA,GAAAU,EAAAE,EAAA,GAAAz4B,EACA,OAAA26D,IACA9iC,EAAAU,EAAAzxB,MAAA2xB,EAAAC,EAAAD,IACAC,EAAA,GAAA14B,EACA63B,GAGA,KAIA,GAAA73B,GAAAu4B,EAAAC,EAAAE,EAAA,GACA,OAAAH,EAAAzxB,MAAA0xB,IAAAE,GAIA,IAFA,IAAAkiC,EAAApiC,EAAAE,EACAmiC,EAAApiC,EAAAC,EACAkiC,EAAAC,GAAA,CACA,IAAAh1D,EAAA+0D,EAAAC,GAAA,EACA76D,EAAAu4B,GAAA1yB,EAAA,GAAA6yB,EAAA,GACAmiC,EAAAh1D,EAGA+0D,EAAA/0D,EAAA,EAGA,IAAAi1D,EAAAviC,EAAAqiC,EAAAliC,EAAA,GACA,GAAA14B,GAAA86D,EACA,OAAAviC,EAAAzxB,OAAA8zD,EAAA,GAAAliC,GAAAkiC,EAAA,GAAAliC,KAEA,IACA53B,GAAAd,EAAA86D,IADAviC,GAAAqiC,EAAA,GAAAliC,EAAA,GACAoiC,GACAjjC,EAAA,GACA,QAAAj4B,EAAA,EAAmBA,EAAA84B,EAAA,IAAgB94B,EACnCi4B,EAAA7xB,KAAwBsQ,EAAIiiB,GAAAqiC,EAAA,GAAAliC,EAAA94B,GAAA24B,EAAAqiC,EAAAliC,EAAA94B,GAAAkB,IAG5B,OADA+2B,EAAA7xB,KAAAhG,GACA63B,EChHO,SAAAkjC,GAAAxiC,EAAAC,EAAAC,EAAAC,EAAA7G,GASP,OARkBiH,GAAajH,EAK/B,SAAAgG,GACA,OAAAmjC,GAAAziC,EAAAC,EAAAC,EAAAC,EAAAb,EAAA,GAAAA,EAAA,MAaO,SAAAmjC,GAAAziC,EAAAC,EAAAC,EAAAC,EAAAjsB,EAAAmjB,GAWP,IAHA,IAAAqrC,EAAA,EACAnrC,EAAAyI,EAAAE,EAAAC,GACA3I,EAAAwI,EAAAE,EAAAC,EAAA,GACUF,EAAAC,EAAcD,GAAAE,EAAA,CACxB,IAAA1I,EAAAuI,EAAAC,GACAvI,EAAAsI,EAAAC,EAAA,GACAzI,GAAAH,EACAK,EAAAL,IAAAI,EAAAF,IAAAF,EAAAG,IAAAtjB,EAAAqjB,IAAAG,EAAAF,GAAA,GACAkrC,IAGAhrC,GAAAL,IAAAI,EAAAF,IAAAF,EAAAG,IAAAtjB,EAAAqjB,IAAAG,EAAAF,GAAA,GACAkrC,IAEAnrC,EAAAE,EACAD,EAAAE,EAEA,WAAAgrC,EAWO,SAAAC,GAAA3iC,EAAAC,EAAAo/B,EAAAl/B,EAAAjsB,EAAAmjB,GACP,OAAAgoC,EAAAh1D,OACA,SAEA,IAAAo4D,GAAAziC,EAAAC,EAAAo/B,EAAA,GAAAl/B,EAAAjsB,EAAAmjB,GACA,SAEA,QAAAhwB,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAC7C,GAAAo7D,GAAAziC,EAAAq/B,EAAAh4D,EAAA,GAAAg4D,EAAAh4D,GAAA84B,EAAAjsB,EAAAmjB,GACA,SAGA,SChEO,SAAArgB,GAAAgpB,EAAAC,EAAAC,EAAAC,EAAAntB,GAIP,IAHA,IAEA0D,EAFAksD,EAAA,CAAA5iC,EAAAC,GAAAD,EAAAC,EAAA,IACA4iC,EAAA,GAEU5iC,EAAAE,EAAAD,EAAyBD,GAAAE,EAAA,CAInC,GAHA0iC,EAAA,GAAA7iC,EAAAC,EAAAE,GACA0iC,EAAA,GAAA7iC,EAAAC,EAAAE,EAAA,GACAzpB,EAAA1D,EAAA4vD,EAAAC,GAEA,OAAAnsD,EAEAksD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAEA,SChBO,SAAAC,GAAA9iC,EAAAC,EAAAC,EAAAC,EAAA7G,GACP,IAAAypC,EAA4B3iC,GjE6K5B,CAAAn0B,SAAA,UiE7K6D+zB,EAAAC,EAAAC,EAAAC,GAC7D,QAASgC,GAAU7I,EAAAypC,OAGXxjC,GAAcjG,EAAAypC,KAGtBA,EAAA,IAAAzpC,EAAA,IACAypC,EAAA,IAAAzpC,EAAA,KAGAypC,EAAA,IAAAzpC,EAAA,IACAypC,EAAA,IAAAzpC,EAAA,IAGWtiB,GAAcgpB,EAAAC,EAAAC,EAAAC,EAOzB,SAAAyiC,EAAAC,GACA,OjEumBO,SAAAvpC,EAAA6a,EAAAjU,GACP,IAAAnzB,GAAA,EACAi2D,EAAAtjC,GAAApG,EAAA6a,GACA8uB,EAAAvjC,GAAApG,EAAA4G,GACA,GAAA8iC,IAAqB1kC,GAAYE,cACjCykC,IAAmB3kC,GAAYE,aAC/BzxB,GAAA,MAEA,CACA,IAAAf,EAAAstB,EAAA,GACAptB,EAAAotB,EAAA,GACAntB,EAAAmtB,EAAA,GACAltB,EAAAktB,EAAA,GACA4pC,EAAA/uB,EAAA,GACAgvB,EAAAhvB,EAAA,GACAivB,EAAAljC,EAAA,GACAmjC,EAAAnjC,EAAA,GACAojC,GAAAD,EAAAF,IAAAC,EAAAF,GACAhvD,OAAA,EAAAmjB,OAAA,EACA4rC,EAAwB3kC,GAAYG,SACpCukC,EAAyB1kC,GAAYG,SAGrC1xB,GADAmH,EAAAkvD,GAAAC,EAAAj3D,GAAAk3D,IACAt3D,GAAAkI,GAAA/H,GAEAY,KAAAk2D,EAAuC3kC,GAAYI,QACnDskC,EAAyB1kC,GAAYI,QAGrC3xB,GADAsqB,EAAAgsC,GAAAD,EAAAj3D,GAAAm3D,IACAp3D,GAAAmrB,GAAAjrB,GAEAW,KAAAk2D,EAAuC3kC,GAAYK,QACnDqkC,EAAyB1kC,GAAYK,QAGrC5xB,GADAmH,EAAAkvD,GAAAC,EAAAn3D,GAAAo3D,IACAt3D,GAAAkI,GAAA/H,GAEAY,KAAAk2D,EAAuC3kC,GAAYM,OACnDokC,EAAyB1kC,GAAYM,OAGrC7xB,GADAsqB,EAAAgsC,GAAAD,EAAAp3D,GAAAs3D,IACAp3D,GAAAmrB,GAAAjrB,GAGA,OAAAW,EiEnpBew2D,CAAiBjqC,EAAAspC,EAAAC,QAsDzB,SAAAW,GAAAxjC,EAAAC,EAAAo/B,EAAAl/B,EAAA7G,GACP,IA3BO,SAAA0G,EAAAC,EAAAC,EAAAC,EAAA7G,GACP,SAAAwpC,GAAA9iC,EAAAC,EAAAC,EAAAC,EAAA7G,IAGQmpC,GAAoBziC,EAAAC,EAAAC,EAAAC,EAAA7G,EAAA,GAAAA,EAAA,KAGpBmpC,GAAoBziC,EAAAC,EAAAC,EAAAC,EAAA7G,EAAA,GAAAA,EAAA,KAGpBmpC,GAAoBziC,EAAAC,EAAAC,EAAAC,EAAA7G,EAAA,GAAAA,EAAA,KAGpBmpC,GAAoBziC,EAAAC,EAAAC,EAAAC,EAAA7G,EAAA,GAAAA,EAAA,KAc5BmqC,CAAAzjC,EAAAC,EAAAo/B,EAAA,GAAAl/B,EAAA7G,GACA,SAEA,OAAA+lC,EAAAh1D,OACA,SAEA,QAAAhD,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAC7C,GAAYm7D,GAAwBxiC,EAAAq/B,EAAAh4D,EAAA,GAAAg4D,EAAAh4D,GAAA84B,EAAA7G,KACpCwpC,GAAA9iC,EAAAq/B,EAAAh4D,EAAA,GAAAg4D,EAAAh4D,GAAA84B,EAAA7G,GACA,SAIA,SChGO,SAAAoqC,GAAA1jC,EAAAC,EAAAC,EAAAC,GAIP,IAHA,IAAA5I,EAAAyI,EAAAC,GACAzI,EAAAwI,EAAAC,EAAA,GACA51B,EAAA,EACAhD,EAAA44B,EAAAE,EAAiC94B,EAAA64B,EAAS74B,GAAA84B,EAAA,CAC1C,IAAA1I,EAAAuI,EAAA34B,GACAqwB,EAAAsI,EAAA34B,EAAA,GACAgD,GAAAQ,KAAAoF,MAAAwnB,EAAAF,IAAAE,EAAAF,IAAAG,EAAAF,IAAAE,EAAAF,IACAD,EAAAE,EACAD,EAAAE,EAEA,OAAArtB,EC0CO,SAAAs5D,GAAA3jC,EAAAC,EAAAC,EAAAC,EAAA68B,EAAA4G,EAAAC,GACP,IAAA/6D,GAAAo3B,EAAAD,GAAAE,EACA,GAAAr3B,EAAA,GACA,KAAcm3B,EAAAC,EAAcD,GAAAE,EAC5ByjC,EAAAC,KACA7jC,EAAAC,GACA2jC,EAAAC,KACA7jC,EAAAC,EAAA,GAEA,OAAA4jC,EAGA,IAAAC,EAAA,IAAAlrD,MAAA9P,GACAg7D,EAAA,KACAA,EAAAh7D,EAAA,KAIA,IAFA,IAAAyE,EAAA,CAAA0yB,EAAAC,EAAAC,GACAtxB,EAAA,EACAtB,EAAAlD,OAAA,IAQA,IAPA,IAAA05D,EAAAx2D,EAAAC,MACAw2D,EAAAz2D,EAAAC,MACAy2D,EAAA,EACA1sC,EAAAyI,EAAAgkC,GACAxsC,EAAAwI,EAAAgkC,EAAA,GACAvsC,EAAAuI,EAAA+jC,GACArsC,EAAAsI,EAAA+jC,EAAA,GACA18D,EAAA28D,EAAA7jC,EAAoC94B,EAAA08D,EAAU18D,GAAA84B,EAAA,CAC9C,IAEA+jC,EAAoC5sC,EAFpC0I,EAAA34B,GACA24B,EAAA34B,EAAA,GAC0DkwB,EAAAC,EAAAC,EAAAC,GAC1DwsC,EAAAD,IACAp1D,EAAAxH,EACA48D,EAAAC,GAGAD,EAAAjH,IACA8G,GAAAj1D,EAAAoxB,GAAAE,GAAA,EACA6jC,EAAA7jC,EAAAtxB,GACAtB,EAAAE,KAAAu2D,EAAAn1D,GAEAA,EAAAsxB,EAAA4jC,GACAx2D,EAAAE,KAAAoB,EAAAk1D,IAIA,IAAA18D,EAAA,EAAmBA,EAAAyB,IAAOzB,EAC1By8D,EAAAz8D,KACAu8D,EAAAC,KACA7jC,EAAAC,EAAA54B,EAAA84B,GACAyjC,EAAAC,KACA7jC,EAAAC,EAAA54B,EAAA84B,EAAA,IAGA,OAAA0jC,EAcO,SAAAM,GAAAnkC,EAAAC,EAAAo/B,EAAAl/B,EAAA68B,EAAA4G,EAAAC,EAAAO,GACP,QAAA/8D,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACAw8D,EAAAF,GAAA3jC,EAAAC,EAAAC,EAAAC,EAAA68B,EAAA4G,EAAAC,GACAO,EAAA32D,KAAAo2D,GACA5jC,EAAAC,EAEA,OAAA2jC,EA2EO,SAAAQ,GAAA/7D,EAAAy0D,GACP,OAAAA,EAAAlyD,KAAAmU,MAAA1W,EAAAy0D,GAqBO,SAAAuH,GAAAtkC,EAAAC,EAAAC,EAAAC,EAAA48B,EAAA6G,EAAAC,GAEP,GAAA5jC,GAAAC,EACA,OAAA2jC,EAGA,IAQApsC,EAAAC,EARAH,EAAA8sC,GAAArkC,EAAAC,GAAA88B,GACAvlC,EAAA6sC,GAAArkC,EAAAC,EAAA,GAAA88B,GACA98B,GAAAE,EAEAyjC,EAAAC,KAAAtsC,EACAqsC,EAAAC,KAAArsC,EAIA,GAIA,GAHAC,EAAA4sC,GAAArkC,EAAAC,GAAA88B,GACArlC,EAAA2sC,GAAArkC,EAAAC,EAAA,GAAA88B,IACA98B,GAAAE,IACAD,EAOA,OAFA0jC,EAAAC,KAAApsC,EACAmsC,EAAAC,KAAAnsC,EACAmsC,QAEKpsC,GAAAF,GAAAG,GAAAF,GACL,KAAAyI,EAAAC,GAAA,CAEA,IAAA4B,EAAAuiC,GAAArkC,EAAAC,GAAA88B,GACA/6B,EAAAqiC,GAAArkC,EAAAC,EAAA,GAAA88B,GAGA,GAFA98B,GAAAE,EAEA2B,GAAArK,GAAAuK,GAAAtK,EAAA,CAIA,IAAAwM,EAAAzM,EAAAF,EACA4M,EAAAzM,EAAAF,EAEA+M,EAAAzC,EAAAvK,EACAiN,EAAAxC,EAAAxK,EAIA0M,EAAAM,GAAAL,EAAAI,IACAL,EAAA,GAAAK,EAAAL,MAAAK,GAAAL,EAAA,GAAAK,EAAAL,KACAC,EAAA,GAAAK,EAAAL,MAAAK,GAAAL,EAAA,GAAAK,EAAAL,IAEA1M,EAAAqK,EACApK,EAAAsK,IAMA4hC,EAAAC,KAAApsC,EACAmsC,EAAAC,KAAAnsC,EACAH,EAAAE,EACAD,EAAAE,EACAD,EAAAqK,EACApK,EAAAsK,IAKA,OAFA4hC,EAAAC,KAAApsC,EACAmsC,EAAAC,KAAAnsC,EACAmsC,EAcO,SAAAU,GAAAvkC,EAAAC,EAAAo/B,EAAAl/B,EAAA48B,EAAA6G,EAAAC,EAAAO,GACP,QAAA/8D,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACAw8D,EAAAS,GAAAtkC,EAAAC,EAAAC,EAAAC,EAAA48B,EAAA6G,EAAAC,GACAO,EAAA32D,KAAAo2D,GACA5jC,EAAAC,EAEA,OAAA2jC,ECnUA,IAAIW,GAAyB,WAC7B,IAAAnxC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+Nd4wC,GA5LD,SAAA1wC,GAOd,SAAA2wC,EAAA5lC,EAAA6/B,GACA,IAAA1qC,EAAAF,EAAAvsB,KAAAmD,YA2BA,OAtBAspB,EAAA0wC,cAAA,KAKA1wC,EAAA2wC,uBAAA,EAKA3wC,EAAA4wC,WAAA,EAKA5wC,EAAA6wC,mBAAA,OACAtqD,IAAAmkD,GAAA/lD,MAAApP,QAAAs1B,EAAA,IAIA7K,EAAAyqC,eAAyF,EAAAC,GAHzF1qC,EAAAwqC,mBAAAE,EAA0E,GAK1E1qC,EAuJA,OAzLIuwC,GAASE,EAAA3wC,GAyCb2wC,EAAAz7D,UAAA87D,iBAAA,SAAAzlC,GACA30B,KAAAq1B,gBAIY2oB,GAAMh+C,KAAAq1B,gBAAAV,GAHlB30B,KAAAq1B,gBAAAV,EAAA/wB,QAKA5D,KAAAmc,WAQA49C,EAAAz7D,UAAAk2B,MAAA,WACA,WAAAulC,EAAA/5D,KAAAq1B,gBAAAzxB,QAAA5D,KAAAmzD,SAKA4G,EAAAz7D,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,OAAAA,EAAiCj9B,GAAwBz0B,KAAA4uB,YAAArlB,EAAAmjB,GACzDglC,GAEA1xD,KAAAm6D,mBAAAn6D,KAAAqqB,gBACArqB,KAAAk6D,UAAAh6D,KAAAoF,KAAuCkwD,GAAex1D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA,IACtDx1B,KAAAm6D,kBAAAn6D,KAAAqqB,eAEesrC,GAAkB31D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAAx1B,KAAAk6D,WAAA,EAAA3wD,EAAAmjB,EAAA+kC,EAAAC,KAajCqI,EAAAz7D,UAAA+7D,eAAA,SAAAhyD,GACA,OAAegE,GAAcrM,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAAntB,IAgB7B0xD,EAAAz7D,UAAAg8D,iBAAA,SAAAx9D,EAAAy9D,GACA,GAAAv6D,KAAAmzD,QAA2BN,GAAcE,KACzC/yD,KAAAmzD,QAA2BN,GAAcG,KACzC,YAEA,IAAAyE,OAAA5nD,IAAA0qD,KACA,OAAe/C,GAAuBx3D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA14B,EAAA26D,IAQtCsC,EAAAz7D,UAAAg1D,eAAA,WACA,OAAe2C,GAAkBj2D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,SAYjCukC,EAAAz7D,UAAAk8D,gBAAA,SAAA9D,EAAAjG,GACA,OAAegG,GAAgBz2D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAAkhC,EAAAjG,IAO/BsJ,EAAAz7D,UAAAm8D,UAAA,WACA,OAAe1B,GAAgB/4D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,SAK/BukC,EAAAz7D,UAAAo8D,gBAAA,WAKA,OAJA16D,KAAAi6D,uBAAAj6D,KAAAqqB,gBACArqB,KAAAg6D,cAAAh6D,KAAAw6D,gBAAA,GAAAx6D,KAAAg6D,eACAh6D,KAAAi6D,sBAAAj6D,KAAAqqB,eAEArqB,KAAAg6D,eAKAD,EAAAz7D,UAAAs1D,8BAAA,SAAAvB,GACA,IAAA4G,EAAA,GAEA,OADAA,EAAAv5D,OAA2Cs5D,GAAch5D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA68B,EAAA4G,EAAA,GACzD,IAAAc,EAAAd,EAAyDpG,GAAcC,KAMvEiH,EAAAz7D,UAAAg0D,QAAA,WACA,OAAehnB,GAAYE,aAM3BuuB,EAAAz7D,UAAAk0D,iBAAA,SAAA7jC,GACA,OAAewpC,GAAoBn4D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA7G,IASnCorC,EAAAz7D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACAh0D,KAAAi0D,UAAAD,EAAA7/B,EAAA,GACAn0B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAEAr1B,KAAAq1B,gBAAA31B,OAAsC40D,GAAkBt0D,KAAAq1B,gBAAA,EAAAlB,EAAAn0B,KAAAw1B,QACxDx1B,KAAAmc,WAEA49C,EA1Lc,CA2LZ3G,IC9NEuH,GAAyB,WAC7B,IAAAjyC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAmQd0xC,GAjOI,SAAAxxC,GASnB,SAAAyxC,EAAA1mC,EAAA6/B,EAAAS,GACA,IAAAnrC,EAAAF,EAAAvsB,KAAAmD,YAgBA,GAXAspB,EAAAwxC,MAAA,GAKAxxC,EAAA4wC,WAAA,EAKA5wC,EAAA6wC,mBAAA,EACAlsD,MAAApP,QAAAs1B,EAAA,IACA7K,EAAAyqC,eAAgG,EAAAC,QAEhG,QAAAnkD,IAAAmkD,GAAAS,EACAnrC,EAAAwqC,mBAAAE,EAA0E,GAC1E1qC,EAAAwxC,MAAArG,MAEA,CAKA,IAJA,IAAAtB,EAAA7pC,EAAAoqC,YACAqH,EAA2D,EAC3D1lC,EAAA,GACAq/B,EAAA,GACAh4D,EAAA,EAAA+C,EAAAs7D,EAAAr7D,OAAoDhD,EAAA+C,IAAQ/C,EAAA,CAC5D,IAAAs+D,EAAAD,EAAAr+D,GACA,IAAAA,IACAy2D,EAAA6H,EAAAtH,aAEgB1V,GAAM3oB,EAAA2lC,EAAAxH,sBACtBkB,EAAA5xD,KAAAuyB,EAAA31B,QAEA4pB,EAAAwqC,mBAAAX,EAAA99B,GACA/L,EAAAwxC,MAAApG,EAEA,OAAAprC,EA8KA,OA9NIqxC,GAASE,EAAAzxC,GAuDbyxC,EAAAv8D,UAAA28D,iBAAA,SAAAD,GACAh7D,KAAAq1B,gBAIY2oB,GAAMh+C,KAAAq1B,gBAAA2lC,EAAAxH,qBAAA5vD,SAHlB5D,KAAAq1B,gBAAA2lC,EAAAxH,qBAAA5vD,QAKA5D,KAAA86D,MAAAh4D,KAAA9C,KAAAq1B,gBAAA31B,QACAM,KAAAmc,WAQA0+C,EAAAv8D,UAAAk2B,MAAA,WACA,WAAAqmC,EAAA76D,KAAAq1B,gBAAAzxB,QAAA5D,KAAAmzD,OAAAnzD,KAAA86D,MAAAl3D,UAKAi3D,EAAAv8D,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,OAAAA,EAAiCj9B,GAAwBz0B,KAAA4uB,YAAArlB,EAAAmjB,GACzDglC,GAEA1xD,KAAAm6D,mBAAAn6D,KAAAqqB,gBACArqB,KAAAk6D,UAAAh6D,KAAAoF,KAAuCowD,GAAoB11D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAA,IAC3Dx1B,KAAAm6D,kBAAAn6D,KAAAqqB,eAEe2rC,GAAuBh2D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAAx1B,KAAAk6D,WAAA,EAAA3wD,EAAAmjB,EAAA+kC,EAAAC,KAwBtCmJ,EAAAv8D,UAAAg8D,iBAAA,SAAAx9D,EAAAy9D,EAAAW,GACA,GAAAl7D,KAAAmzD,QAA4BN,GAAcE,KAC1C/yD,KAAAmzD,QAA2BN,GAAcG,MACzC,IAAAhzD,KAAAq1B,gBAAA31B,OACA,YAEA,IAAA+3D,OAAA5nD,IAAA0qD,KACAY,OAAAtrD,IAAAqrD,KACA,OPhBO,SAAA7lC,EAAAC,EAAAo/B,EAAAl/B,EAAA14B,EAAA26D,EAAA0D,GACP,GAAAA,EACA,OAAA3D,GAAAniC,EAAAC,EAAAo/B,IAAAh1D,OAAA,GAAA81B,EAAA14B,EAAA26D,GAEA,IAAA9iC,EACA,GAAA73B,EAAAu4B,EAAAG,EAAA,GACA,OAAAiiC,IACA9iC,EAAAU,EAAAzxB,MAAA,EAAA4xB,IACAA,EAAA,GAAA14B,EACA63B,GAGA,KAGA,GAAAU,IAAA31B,OAAA,GAAA5C,EACA,OAAA26D,IACA9iC,EAAAU,EAAAzxB,MAAAyxB,EAAA31B,OAAA81B,IACAA,EAAA,GAAA14B,EACA63B,GAGA,KAGA,QAAAj4B,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACA,GAAA44B,GAAAC,EAAA,CAGA,GAAAz4B,EAAAu4B,EAAAC,EAAAE,EAAA,GACA,YAEA,GAAA14B,GAAAu4B,EAAAE,EAAA,GACA,OAAAiiC,GAAAniC,EAAAC,EAAAC,EAAAC,EAAA14B,GAAA,GAEAw4B,EAAAC,GAEA,YOtBe6lC,CAAwBp7D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAA14B,EAAA26D,EAAA0D,IAQvCN,EAAAv8D,UAAAg1D,eAAA,WACA,OAAe6C,GAAuBn2D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,SAKtCqlC,EAAAv8D,UAAA+8D,QAAA,WACA,OAAAr7D,KAAA86D,OAQAD,EAAAv8D,UAAAg9D,cAAA,SAAAp3D,GACA,OAAAA,EAAA,GAAAlE,KAAA86D,MAAAp7D,QAAAwE,EACA,KAEA,IAAmB41D,GAAU95D,KAAAq1B,gBAAAzxB,MAAA,IAAAM,EAAA,EAAAlE,KAAA86D,MAAA52D,EAAA,GAAAlE,KAAA86D,MAAA52D,IAAAlE,KAAAmzD,SAO7B0H,EAAAv8D,UAAAi9D,eAAA,WAOA,IANA,IAAAlmC,EAAAr1B,KAAAq1B,gBACAq/B,EAAA10D,KAAA86D,MACA3H,EAAAnzD,KAAAmzD,OAEA4H,EAAA,GACAzlC,EAAA,EACA54B,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAyChD,EAAA+C,IAAQ/C,EAAA,CACjD,IAAA64B,EAAAm/B,EAAAh4D,GACAs+D,EAAA,IAAiClB,GAAUzkC,EAAAzxB,MAAA0xB,EAAAC,GAAA49B,GAC3C4H,EAAAj4D,KAAAk4D,GACA1lC,EAAAC,EAEA,OAAAwlC,GAKAF,EAAAv8D,UAAAk9D,iBAAA,WAMA,IALA,IAAAC,EAAA,GACApmC,EAAAr1B,KAAAq1B,gBACAC,EAAA,EACAo/B,EAAA10D,KAAA86D,MACAtlC,EAAAx1B,KAAAw1B,OACA94B,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAyChD,EAAA+C,IAAQ/C,EAAA,CACjD,IAAA64B,EAAAm/B,EAAAh4D,GAEYshD,GAAMyd,EADShF,GAAgBphC,EAAAC,EAAAC,EAAAC,EAAA,KAE3CF,EAAAC,EAEA,OAAAkmC,GAKAZ,EAAAv8D,UAAAs1D,8BAAA,SAAAvB,GACA,IAAA4G,EAAA,GACAQ,EAAA,GAEA,OADAR,EAAAv5D,OAA2C85D,GAAmBx5D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAA68B,EAAA4G,EAAA,EAAAQ,GAC9D,IAAAoB,EAAA5B,EAA8DpG,GAAcC,GAAA2G,IAM5EoB,EAAAv8D,UAAAg0D,QAAA,WACA,OAAehnB,GAAYM,mBAM3BivB,EAAAv8D,UAAAk0D,iBAAA,SAAA7jC,GACA,OJ9LO,SAAA0G,EAAAC,EAAAo/B,EAAAl/B,EAAA7G,GACP,QAAAjyB,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,GAAAy7D,GAAA9iC,EAAAC,EAAAo/B,EAAAh4D,GAAA84B,EAAA7G,GACA,SAEA2G,EAAAo/B,EAAAh4D,GAEA,SIuLeg/D,CAAyB17D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAA7G,IASxCksC,EAAAv8D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACAh0D,KAAAi0D,UAAAD,EAAA7/B,EAAA,GACAn0B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAEA,IAAAq/B,EAAmBH,GAAuBv0D,KAAAq1B,gBAAA,EAAAlB,EAAAn0B,KAAAw1B,OAAAx1B,KAAA86D,OAC1C96D,KAAAq1B,gBAAA31B,OAAA,IAAAg1D,EAAAh1D,OAAA,EAAAg1D,IAAAh1D,OAAA,GACAM,KAAAmc,WAEA0+C,EA/NmB,CAgOjBzH,IClQEuI,GAAyB,WAC7B,IAAAjzC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6Gd0yC,GAlFN,SAAAxyC,GAMT,SAAAyyC,EAAA1nC,EAAA6/B,GACA,IAAA1qC,EAAAF,EAAAvsB,KAAAmD,YAEA,OADAspB,EAAAyqC,eAAA5/B,EAAA6/B,GACA1qC,EAuEA,OA/EIqyC,GAASE,EAAAzyC,GAgBbyyC,EAAAv9D,UAAAk2B,MAAA,WAEA,OADA,IAAAqnC,EAAA77D,KAAAq1B,gBAAAzxB,QAAA5D,KAAAmzD,SAMA0I,EAAAv9D,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,IAAAr8B,EAAAr1B,KAAAq1B,gBACA0/B,EAA8B7nC,EAAS3jB,EAAAmjB,EAAA2I,EAAA,GAAAA,EAAA,IACvC,GAAA0/B,EAAArD,EAAA,CAEA,IADA,IAAAl8B,EAAAx1B,KAAAw1B,OACA94B,EAAA,EAA2BA,EAAA84B,IAAY94B,EACvC+0D,EAAA/0D,GAAA24B,EAAA34B,GAGA,OADA+0D,EAAA/xD,OAAA81B,EACAu/B,EAGA,OAAArD,GASAmK,EAAAv9D,UAAAg1D,eAAA,WACA,OAAAtzD,KAAAq1B,gBAAAr1B,KAAAq1B,gBAAAzxB,QAAA,IAKAi4D,EAAAv9D,UAAA0zD,cAAA,SAAArjC,GACA,OAAewG,GAA4Bn1B,KAAAq1B,gBAAA1G,IAM3CktC,EAAAv9D,UAAAg0D,QAAA,WACA,OAAehnB,GAAYC,OAM3BswB,EAAAv9D,UAAAk0D,iBAAA,SAAA7jC,GACA,OAAe6D,GAAU7D,EAAA3uB,KAAAq1B,gBAAA,GAAAr1B,KAAAq1B,gBAAA,KAMzBwmC,EAAAv9D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACAh0D,KAAAi0D,UAAAD,EAAA7/B,EAAA,GACAn0B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAEAr1B,KAAAq1B,gBAAA31B,OAAsC20D,GAAiBr0D,KAAAq1B,gBAAA,EAAAlB,EAAAn0B,KAAAw1B,QACvDx1B,KAAAmc,WAEA0/C,EAhFS,CAiFPzI,IC5GE0I,GAAyB,WAC7B,IAAApzC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA2Kd6yC,GA7ID,SAAA3yC,GAOd,SAAA4yC,EAAA7nC,EAAA6/B,GACA,IAAA1qC,EAAAF,EAAAvsB,KAAAmD,YAOA,OANAg0D,IAAA/lD,MAAApP,QAAAs1B,EAAA,IACA7K,EAAAwqC,mBAAAE,EAA0E,GAG1E1qC,EAAAyqC,eAAyF,EAAAC,GAEzF1qC,EA4HA,OA1IIwyC,GAASE,EAAA5yC,GAqBb4yC,EAAA19D,UAAA29D,YAAA,SAAAtsB,GACA3vC,KAAAq1B,gBAIY2oB,GAAMh+C,KAAAq1B,gBAAAsa,EAAA6jB,sBAHlBxzD,KAAAq1B,gBAAAsa,EAAA6jB,qBAAA5vD,QAKA5D,KAAAmc,WAQA6/C,EAAA19D,UAAAk2B,MAAA,WAEA,OADA,IAAAwnC,EAAAh8D,KAAAq1B,gBAAAzxB,QAAA5D,KAAAmzD,SAMA6I,EAAA19D,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,GAAAA,EAAiCj9B,GAAwBz0B,KAAA4uB,YAAArlB,EAAAmjB,GACzD,OAAAglC,EAIA,IAFA,IAAAr8B,EAAAr1B,KAAAq1B,gBACAG,EAAAx1B,KAAAw1B,OACA94B,EAAA,EAAA+C,EAAA41B,EAAA31B,OAAoDhD,EAAA+C,EAAQ/C,GAAA84B,EAAA,CAC5D,IAAAu/B,EAAkC7nC,EAAS3jB,EAAAmjB,EAAA2I,EAAA34B,GAAA24B,EAAA34B,EAAA,IAC3C,GAAAq4D,EAAArD,EAAA,CACAA,EAAAqD,EACA,QAAA9vD,EAAA,EAA+BA,EAAAuwB,IAAYvwB,EAC3CwsD,EAAAxsD,GAAAowB,EAAA34B,EAAAuI,GAEAwsD,EAAA/xD,OAAA81B,GAGA,OAAAk8B,GAQAsK,EAAA19D,UAAAg1D,eAAA,WACA,OAAe2C,GAAkBj2D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,SAQjCwmC,EAAA19D,UAAA49D,SAAA,SAAAh4D,GACA,IAAA/F,EAAA6B,KAAAq1B,gBAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA,EACA,OAAAtxB,EAAA,GAAA/F,GAAA+F,EACA,KAEA,IAAmB03D,GAAK57D,KAAAq1B,gBAAAzxB,MAAAM,EAAAlE,KAAAw1B,QAAAtxB,EAAA,GAAAlE,KAAAw1B,QAAAx1B,KAAAmzD,SAOxB6I,EAAA19D,UAAA69D,UAAA,WAMA,IALA,IAAA9mC,EAAAr1B,KAAAq1B,gBACA89B,EAAAnzD,KAAAmzD,OACA39B,EAAAx1B,KAAAw1B,OAEA4mC,EAAA,GACA1/D,EAAA,EAAA+C,EAAA41B,EAAA31B,OAAoDhD,EAAA+C,EAAQ/C,GAAA84B,EAAA,CAC5D,IAAAma,EAAA,IAA4BisB,GAAKvmC,EAAAzxB,MAAAlH,IAAA84B,GAAA29B,GACjCiJ,EAAAt5D,KAAA6sC,GAEA,OAAAysB,GAMAJ,EAAA19D,UAAAg0D,QAAA,WACA,OAAehnB,GAAYK,aAM3BqwB,EAAA19D,UAAAk0D,iBAAA,SAAA7jC,GAGA,IAFA,IAAA0G,EAAAr1B,KAAAq1B,gBACAG,EAAAx1B,KAAAw1B,OACA94B,EAAA,EAAA+C,EAAA41B,EAAA31B,OAAoDhD,EAAA+C,EAAQ/C,GAAA84B,EAAA,CAG5D,GAAgBhD,GAAU7D,EAF1B0G,EAAA34B,GACA24B,EAAA34B,EAAA,IAEA,SAGA,UASAs/D,EAAA19D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACAh0D,KAAAi0D,UAAAD,EAAA7/B,EAAA,GACAn0B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAEAr1B,KAAAq1B,gBAAA31B,OAAsC40D,GAAkBt0D,KAAAq1B,gBAAA,EAAAlB,EAAAn0B,KAAAw1B,QACxDx1B,KAAAmc,WAEA6/C,EA3Ic,CA4IZ5I,IChKK,SAASiJ,GAAUhnC,EAAAC,EAAAC,EAAAC,GAI1B,IAHA,IAAA8mC,EAAA,EACA1vC,EAAAyI,EAAAE,EAAAC,GACA3I,EAAAwI,EAAAE,EAAAC,EAAA,GACUF,EAAAC,EAAcD,GAAAE,EAAA,CACxB,IAAA1I,EAAAuI,EAAAC,GACAvI,EAAAsI,EAAAC,EAAA,GACAgnC,GAAAzvC,EAAAC,EAAAF,EAAAG,EACAH,EAAAE,EACAD,EAAAE,EAEA,OAAAuvC,EAAA,EASO,SAASC,GAAWlnC,EAAAC,EAAAo/B,EAAAl/B,GAE3B,IADA,IAAA9vB,EAAA,EACAhJ,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACAgJ,GAAgB22D,GAAUhnC,EAAAC,EAAAC,EAAAC,GAC1BF,EAAAC,EAEA,OAAA7vB,ECrCA,IAAI82D,GAAyB,WAC7B,IAAA9zC,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAwIduzC,GAxGD,SAAArzC,GAOd,SAAAszC,EAAAvoC,EAAA6/B,GACA,IAAA1qC,EAAAF,EAAAvsB,KAAAmD,YAiBA,OAZAspB,EAAA4wC,WAAA,EAKA5wC,EAAA6wC,mBAAA,OACAtqD,IAAAmkD,GAAA/lD,MAAApP,QAAAs1B,EAAA,IAIA7K,EAAAyqC,eAAyF,EAAAC,GAHzF1qC,EAAAwqC,mBAAAE,EAA0E,GAK1E1qC,EA6EA,OArGIkzC,GAASE,EAAAtzC,GAgCbszC,EAAAp+D,UAAAk2B,MAAA,WACA,WAAAkoC,EAAA18D,KAAAq1B,gBAAAzxB,QAAA5D,KAAAmzD,SAKAuJ,EAAAp+D,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,OAAAA,EAAiCj9B,GAAwBz0B,KAAA4uB,YAAArlB,EAAAmjB,GACzDglC,GAEA1xD,KAAAm6D,mBAAAn6D,KAAAqqB,gBACArqB,KAAAk6D,UAAAh6D,KAAAoF,KAAuCkwD,GAAex1D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA,IACtDx1B,KAAAm6D,kBAAAn6D,KAAAqqB,eAEesrC,GAAkB31D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAAx1B,KAAAk6D,WAAA,EAAA3wD,EAAAmjB,EAAA+kC,EAAAC,KAOjCgL,EAAAp+D,UAAA23B,QAAA,WACA,OAAeomC,GAAcr8D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,SAQ7BknC,EAAAp+D,UAAAg1D,eAAA,WACA,OAAe2C,GAAkBj2D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,SAKjCknC,EAAAp+D,UAAAs1D,8BAAA,SAAAvB,GACA,IAAA4G,EAAA,GAEA,OADAA,EAAAv5D,OAA2Cs5D,GAAch5D,KAAAq1B,gBAAA,EAAAr1B,KAAAq1B,gBAAA31B,OAAAM,KAAAw1B,OAAA68B,EAAA4G,EAAA,GACzD,IAAAyD,EAAAzD,EAAyDpG,GAAcC,KAMvE4J,EAAAp+D,UAAAg0D,QAAA,WACA,OAAehnB,GAAYG,aAK3BixB,EAAAp+D,UAAAk0D,iBAAA,SAAA7jC,GACA,UASA+tC,EAAAp+D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACAh0D,KAAAi0D,UAAAD,EAAA7/B,EAAA,GACAn0B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAEAr1B,KAAAq1B,gBAAA31B,OAAsC40D,GAAkBt0D,KAAAq1B,gBAAA,EAAAlB,EAAAn0B,KAAAw1B,QACxDx1B,KAAAmc,WAEAugD,EAtGc,CAuGZtJ,ICrHK,SAAAuJ,GAAAtnC,EAAAC,EAAAo/B,EAAAl/B,EAAAonC,EAAAC,EAAApM,GAMP,IALA,IAAA/zD,EAAA+C,EAAA8J,EAAAqjB,EAAAE,EAAAD,EAAAE,EACAL,EAAAkwC,EAAAC,EAAA,GAEAC,EAAA,GAEAt/D,EAAA,EAAAu/D,EAAArI,EAAAh1D,OAAqClC,EAAAu/D,IAAQv/D,EAAA,CAC7C,IAAA+3B,EAAAm/B,EAAAl3D,GAGA,IAFAovB,EAAAyI,EAAAE,EAAAC,GACA3I,EAAAwI,EAAAE,EAAAC,EAAA,GACA94B,EAAA44B,EAAwB54B,EAAA64B,EAAS74B,GAAA84B,EACjC1I,EAAAuI,EAAA34B,GACAqwB,EAAAsI,EAAA34B,EAAA,IACAgwB,GAAAG,GAAAE,GAAAL,GAAAG,GAAAH,MAAAK,KACAxjB,GAAAmjB,EAAAG,IAAAE,EAAAF,IAAAC,EAAAF,KACAkwC,EAAAh6D,KAAAyG,IAEAqjB,EAAAE,EACAD,EAAAE,EAKA,IAAA4pC,EAAA7E,IACAkL,GAAA17D,IAGA,IAFAw7D,EAAAn2D,KAAuBg3C,IACvB/wB,EAAAkwC,EAAA,GACApgE,EAAA,EAAA+C,EAAAq9D,EAAAp9D,OAA0ChD,EAAA+C,IAAQ/C,EAAA,CAClDowB,EAAAgwC,EAAApgE,GACA,IAAAugE,EAAA/8D,KAAAg1C,IAAApoB,EAAAF,GACAqwC,EAAAD,GAEgBhF,GAAqB3iC,EAAAC,EAAAo/B,EAAAl/B,EADrCjsB,GAAAqjB,EAAAE,GAAA,EACqCJ,KACrCiqC,EAAAptD,EACAyzD,EAAAC,GAGArwC,EAAAE,EAOA,OALAlM,MAAA+1C,KAGAA,EAAAiG,EAAAC,IAEApM,GACAA,EAAA3tD,KAAA6zD,EAAAjqC,EAAAswC,GACAvM,GAGA,CAAAkG,EAAAjqC,EAAAswC,GC1DO,SAASE,GAAW7nC,EAAAC,EAAAC,EAAAC,GAC3B,KAAAF,EAAAC,EAAAC,GAAA,CACA,QAAA94B,EAAA,EAAuBA,EAAA84B,IAAY94B,EAAA,CACnC,IAAAonB,EAAAuR,EAAAC,EAAA54B,GACA24B,EAAAC,EAAA54B,GAAA24B,EAAAE,EAAAC,EAAA94B,GACA24B,EAAAE,EAAAC,EAAA94B,GAAAonB,EAEAwR,GAAAE,EACAD,GAAAC,GCNO,SAAA2nC,GAAA9nC,EAAAC,EAAAC,EAAAC,GAMP,IAHA,IAAA4nC,EAAA,EACAxwC,EAAAyI,EAAAE,EAAAC,GACA3I,EAAAwI,EAAAE,EAAAC,EAAA,GACUF,EAAAC,EAAcD,GAAAE,EAAA,CACxB,IAAA1I,EAAAuI,EAAAC,GACAvI,EAAAsI,EAAAC,EAAA,GACA8nC,IAAAtwC,EAAAF,IAAAG,EAAAF,GACAD,EAAAE,EACAD,EAAAE,EAEA,OAAAqwC,EAAA,EAeO,SAAAC,GAAAhoC,EAAAC,EAAAo/B,EAAAl/B,EAAA8nC,GAEP,IADA,IAAA76D,OAAAoN,IAAAytD,KACA5gE,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACA6gE,EAAAJ,GAAA9nC,EAAAC,EAAAC,EAAAC,GACA,OAAA94B,GACA,GAAA+F,GAAA86D,IAAA96D,IAAA86D,EACA,cAIA,GAAA96D,IAAA86D,IAAA96D,GAAA86D,EACA,SAGAjoC,EAAAC,EAEA,SAwCO,SAAAioC,GAAAnoC,EAAAC,EAAAo/B,EAAAl/B,EAAA8nC,GAEP,IADA,IAAA76D,OAAAoN,IAAAytD,KACA5gE,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAqChD,EAAA+C,IAAQ/C,EAAA,CAC7C,IAAA64B,EAAAm/B,EAAAh4D,GACA6gE,EAAAJ,GAAA9nC,EAAAC,EAAAC,EAAAC,IACA,IAAA94B,EACA+F,GAAA86D,IAAA96D,IAAA86D,EACA96D,IAAA86D,IAAA96D,GAAA86D,IAEYL,GAAkB7nC,EAAAC,EAAAC,EAAAC,GAE9BF,EAAAC,EAEA,OAAAD,EAeO,SAAAmoC,GAAApoC,EAAAC,EAAAghC,EAAA9gC,EAAA8nC,GACP,QAAA5gE,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAC9C44B,EAAAkoC,GAAAnoC,EAAAC,EAAAghC,EAAA55D,GAAA84B,EAAA8nC,GAEA,OAAAhoC,EChIA,IAAIooC,GAAyB,WAC7B,IAAAh1C,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAwCzBy0C,GAAO,SAAAv0C,GAaX,SAAAw0C,EAAAzpC,EAAA6/B,EAAAS,GACA,IAAAnrC,EAAAF,EAAAvsB,KAAAmD,YA2CA,OAtCAspB,EAAAwxC,MAAA,GAKAxxC,EAAAu0C,4BAAA,EAKAv0C,EAAAw0C,mBAAA,KAKAx0C,EAAA4wC,WAAA,EAKA5wC,EAAA6wC,mBAAA,EAKA7wC,EAAAy0C,mBAAA,EAKAz0C,EAAA00C,yBAAA,UACAnuD,IAAAmkD,GAAAS,GACAnrC,EAAAwqC,mBAAAE,EAA0E,GAC1E1qC,EAAAwxC,MAAArG,GAGAnrC,EAAAyqC,eAAgG,EAAAC,GAEhG1qC,EA8MA,OAtQIo0C,GAASE,EAAAx0C,GA+Dbw0C,EAAAt/D,UAAA2/D,iBAAA,SAAAC,GACAl+D,KAAAq1B,gBAIY2oB,GAAMh+C,KAAAq1B,gBAAA6oC,EAAA1K,sBAHlBxzD,KAAAq1B,gBAAA6oC,EAAA1K,qBAAA5vD,QAKA5D,KAAA86D,MAAAh4D,KAAA9C,KAAAq1B,gBAAA31B,QACAM,KAAAmc,WAQAyhD,EAAAt/D,UAAAk2B,MAAA,WACA,WAAAopC,EAAA59D,KAAAq1B,gBAAAzxB,QAAA5D,KAAAmzD,OAAAnzD,KAAA86D,MAAAl3D,UAKAg6D,EAAAt/D,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,OAAAA,EAAiCj9B,GAAwBz0B,KAAA4uB,YAAArlB,EAAAmjB,GACzDglC,GAEA1xD,KAAAm6D,mBAAAn6D,KAAAqqB,gBACArqB,KAAAk6D,UAAAh6D,KAAAoF,KAAuCowD,GAAoB11D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAA,IAC3Dx1B,KAAAm6D,kBAAAn6D,KAAAqqB,eAEe2rC,GAAuBh2D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAAx1B,KAAAk6D,WAAA,EAAA3wD,EAAAmjB,EAAA+kC,EAAAC,KAKtCkM,EAAAt/D,UAAAk0B,WAAA,SAAAjpB,EAAAmjB,GACA,OAAesrC,GAAqBh4D,KAAAm+D,6BAAA,EAAAn+D,KAAA86D,MAAA96D,KAAAw1B,OAAAjsB,EAAAmjB,IAOpCkxC,EAAAt/D,UAAA23B,QAAA,WACA,OAAesmC,GAAev8D,KAAAm+D,6BAAA,EAAAn+D,KAAA86D,MAAA96D,KAAAw1B,SAgB9BooC,EAAAt/D,UAAAg1D,eAAA,SAAAgK,GACA,IAAAjoC,EAQA,YAPAxlB,IAAAytD,EAEYE,GADZnoC,EAAAr1B,KAAAm+D,6BAAAv6D,QAC6B,EAAA5D,KAAA86D,MAAA96D,KAAAw1B,OAAA8nC,GAG7BjoC,EAAAr1B,KAAAq1B,gBAEe8gC,GAAuB9gC,EAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,SAKtCooC,EAAAt/D,UAAA+8D,QAAA,WACA,OAAAr7D,KAAA86D,OAKA8C,EAAAt/D,UAAA8/D,qBAAA,WACA,GAAAp+D,KAAA69D,4BAAA79D,KAAAqqB,cAAA,CACA,IAAAg0C,EAA6BloC,GAASn2B,KAAA4uB,aACtC5uB,KAAA89D,mBAAsCnB,GAAuB38D,KAAAm+D,6BAAA,EAAAn+D,KAAA86D,MAAA96D,KAAAw1B,OAAA6oC,EAAA,GAC7Dr+D,KAAA69D,2BAAA79D,KAAAqqB,cAEA,OAAArqB,KAAA89D,oBAQAF,EAAAt/D,UAAAggE,iBAAA,WACA,WAAmB1C,GAAK57D,KAAAo+D,uBAA8BvL,GAAcE,MASpE6K,EAAAt/D,UAAAigE,mBAAA,WACA,OAAAv+D,KAAA86D,MAAAp7D,QAYAk+D,EAAAt/D,UAAAkgE,cAAA,SAAAt6D,GACA,OAAAA,EAAA,GAAAlE,KAAA86D,MAAAp7D,QAAAwE,EACA,KAEA,IAAmBu4D,GAAUz8D,KAAAq1B,gBAAAzxB,MAAA,IAAAM,EAAA,EAAAlE,KAAA86D,MAAA52D,EAAA,GAAAlE,KAAA86D,MAAA52D,IAAAlE,KAAAmzD,SAO7ByK,EAAAt/D,UAAAmgE,eAAA,WAMA,IALA,IAAAtL,EAAAnzD,KAAAmzD,OACA99B,EAAAr1B,KAAAq1B,gBACAq/B,EAAA10D,KAAA86D,MACA4D,EAAA,GACAppC,EAAA,EACA54B,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAyChD,EAAA+C,IAAQ/C,EAAA,CACjD,IAAA64B,EAAAm/B,EAAAh4D,GACAwhE,EAAA,IAAiCzB,GAAUpnC,EAAAzxB,MAAA0xB,EAAAC,GAAA49B,GAC3CuL,EAAA57D,KAAAo7D,GACA5oC,EAAAC,EAEA,OAAAmpC,GAKAd,EAAAt/D,UAAA6/D,2BAAA,WACA,GAAAn+D,KAAA+9D,mBAAA/9D,KAAAqqB,cAAA,CACA,IAAAgL,EAAAr1B,KAAAq1B,gBACgBgoC,GAAsBhoC,EAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,QACtCx1B,KAAAg+D,yBAAA3oC,GAGAr1B,KAAAg+D,yBAAA3oC,EAAAzxB,QACA5D,KAAAg+D,yBAAAt+D,OACoB89D,GAAiBx9D,KAAAg+D,yBAAA,EAAAh+D,KAAA86D,MAAA96D,KAAAw1B,SAErCx1B,KAAA+9D,kBAAA/9D,KAAAqqB,cAEA,OAAArqB,KAAAg+D,0BAKAJ,EAAAt/D,UAAAs1D,8BAAA,SAAAvB,GACA,IAAA4G,EAAA,GACAQ,EAAA,GAEA,OADAR,EAAAv5D,OAA2Ck6D,GAAa55D,KAAAq1B,gBAAA,EAAAr1B,KAAA86D,MAAA96D,KAAAw1B,OAAAt1B,KAAAoF,KAAA+sD,GAAA4G,EAAA,EAAAQ,GACxD,IAAAmE,EAAA3E,EAAsDpG,GAAcC,GAAA2G,IAMpEmE,EAAAt/D,UAAAg0D,QAAA,WACA,OAAehnB,GAAYI,SAM3BkyB,EAAAt/D,UAAAk0D,iBAAA,SAAA7jC,GACA,OAAekqC,GAAyB74D,KAAAm+D,6BAAA,EAAAn+D,KAAA86D,MAAA96D,KAAAw1B,OAAA7G,IASxCivC,EAAAt/D,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACAh0D,KAAAi0D,UAAAD,EAAA7/B,EAAA,GACAn0B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAEA,IAAAq/B,EAAmBH,GAAuBv0D,KAAAq1B,gBAAA,EAAAlB,EAAAn0B,KAAAw1B,OAAAx1B,KAAA86D,OAC1C96D,KAAAq1B,gBAAA31B,OAAA,IAAAg1D,EAAAh1D,OAAA,EAAAg1D,IAAAh1D,OAAA,GACAM,KAAAmc,WAEAyhD,EAvQW,CAwQTxK,IACauL,GAAA,GA6BR,SAAAC,GAAAjwC,GACP,IAAAttB,EAAAstB,EAAA,GACAptB,EAAAotB,EAAA,GACAntB,EAAAmtB,EAAA,GACAltB,EAAAktB,EAAA,GACA0G,EAAA,CAAAh0B,EAAAE,EAAAF,EAAAI,EAAAD,EAAAC,EAAAD,EAAAD,EAAAF,EAAAE,GACA,WAAeo8D,GAAOtoC,EAAkBw9B,GAAcC,GAAA,CAAAz9B,EAAA31B,SAW/C,SAAAm/D,GAAAC,EAAAC,EAAAC,GAOP,IANA,IAAAC,EAAAF,GAAA,GACAvpC,EAAAspC,EAAAjL,YACAV,EAAA2L,EAAApL,YACAn9B,EAAAuoC,EAAA3oC,YACA+oC,EAAA1pC,GAAAypC,EAAA,GACA5pC,EAAA,IAAApnB,MAAAixD,GACAxiE,EAAA,EAAmBA,EAAAwiE,EAAiBxiE,GAAA84B,EAAA,CACpCH,EAAA34B,GAAA,EACA24B,EAAA34B,EAAA,KACA,QAAAuI,EAAA,EAAuBA,EAAAuwB,EAAYvwB,IACnCowB,EAAA34B,EAAAuI,GAAAsxB,EAAAtxB,GAGA,IAAAyvD,EAAA,CAAAr/B,EAAA31B,QACAy/D,EAAA,IAAsBxB,GAAOtoC,EAAA89B,EAAAuB,GAE7B,OADA0K,GAAAD,EAAA5oC,EAAAuoC,EAAA9J,YAAAgK,GACAG,EAUO,SAAAC,GAAAD,EAAA5oC,EAAA8V,EAAA2yB,GAKP,IAJA,IAAA3pC,EAAA8pC,EAAA3L,qBACAh+B,EAAA2pC,EAAAtL,YACAoL,EAAA5pC,EAAA31B,OAAA81B,EAAA,EACA6pC,EAAAL,GAAA,EACAtiE,EAAA,EAAmBA,GAAAuiE,IAAYviE,EAAA,CAC/B,IAAA44B,EAAA54B,EAAA84B,EACAmE,EAAA0lC,EAAwC,EAAN/xC,EAAM5wB,EAAAuiE,GAAA/+D,KAAAmtB,GAAA4xC,EACxC5pC,EAAAC,GAAAiB,EAAA,GAAA8V,EAAAnsC,KAAAy2B,IAAAgD,GACAtE,EAAAC,EAAA,GAAAiB,EAAA,GAAA8V,EAAAnsC,KAAA22B,IAAA8C,GAEAwlC,EAAAhjD,UCrYA,IAAImjD,GAAyB,WAC7B,IAAA52C,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6Vdq2C,GAtTC,SAAAn2C,GAQhB,SAAAo2C,EAAArrC,EAAA6/B,EAAAyL,GACA,IAAAn2C,EAAAF,EAAAvsB,KAAAmD,YAoCA,GA/BAspB,EAAAo2C,OAAA,GAKAp2C,EAAAq2C,6BAAA,EAKAr2C,EAAAs2C,oBAAA,KAKAt2C,EAAA4wC,WAAA,EAKA5wC,EAAA6wC,mBAAA,EAKA7wC,EAAAy0C,mBAAA,EAKAz0C,EAAA00C,yBAAA,MACAyB,IAAAxxD,MAAApP,QAAAs1B,EAAA,KAKA,IAJA,IAAAg/B,EAAA7pC,EAAAoqC,YACAmM,EAAqD,EACrDxqC,EAAA,GACAihC,EAAA,GACA55D,EAAA,EAAA+C,EAAAogE,EAAAngE,OAAiDhD,EAAA+C,IAAQ/C,EAAA,CACzD,IAAAyiE,EAAAU,EAAAnjE,GACA,IAAAA,IACAy2D,EAAAgM,EAAAzL,aAIA,IAFA,IAAAp+B,EAAAD,EAAA31B,OACAg1D,EAAAyK,EAAA9D,UACAp2D,EAAA,EAAA86C,EAAA2U,EAAAh1D,OAAiDuF,EAAA86C,IAAQ96C,EACzDyvD,EAAAzvD,IAAAqwB,EAEgB0oB,GAAM3oB,EAAA8pC,EAAA3L,sBACtB8C,EAAAxzD,KAAA4xD,GAEAV,EAAAb,EACAh/B,EAAAkB,EACAoqC,EAAAnJ,EASA,YAPAzmD,IAAAmkD,GAAAyL,GACAn2C,EAAAwqC,mBAAAE,EAA0E,GAC1E1qC,EAAAo2C,OAAAD,GAGAn2C,EAAAyqC,eAAuG,EAAAC,GAEvG1qC,EA0OA,OAnTIg2C,GAASE,EAAAp2C,GAgFbo2C,EAAAlhE,UAAAwhE,cAAA,SAAAX,GAEA,IAAAzK,EACA,GAAA10D,KAAAq1B,gBAKA,CACA,IAAAC,EAAAt1B,KAAAq1B,gBAAA31B,OACYs+C,GAAMh+C,KAAAq1B,gBAAA8pC,EAAA3L,sBAElB,QAAA92D,EAAA,EAAA+C,GADAi1D,EAAAyK,EAAA9D,UAAAz3D,SACAlE,OAA6ChD,EAAA+C,IAAQ/C,EACrDg4D,EAAAh4D,IAAA44B,OATAt1B,KAAAq1B,gBAAA8pC,EAAA3L,qBAAA5vD,QACA8wD,EAAAyK,EAAA9D,UAAAz3D,QACA5D,KAAA0/D,OAAA58D,OAUA9C,KAAA0/D,OAAA58D,KAAA4xD,GACA10D,KAAAmc,WAQAqjD,EAAAlhE,UAAAk2B,MAAA,WAGA,IAFA,IAAAnxB,EAAArD,KAAA0/D,OAAAhgE,OACAqgE,EAAA,IAAA9xD,MAAA5K,GACA3G,EAAA,EAAuBA,EAAA2G,IAAS3G,EAChCqjE,EAAArjE,GAAAsD,KAAA0/D,OAAAhjE,GAAAkH,QAEA,WAAA47D,EAAAx/D,KAAAq1B,gBAAAzxB,QAAA5D,KAAAmzD,OAAA4M,IAKAP,EAAAlhE,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,OAAAA,EAAiCj9B,GAAwBz0B,KAAA4uB,YAAArlB,EAAAmjB,GACzDglC,GAEA1xD,KAAAm6D,mBAAAn6D,KAAAqqB,gBACArqB,KAAAk6D,UAAAh6D,KAAAoF,KlBlEO,SAAA+vB,EAAAC,EAAAghC,EAAA9gC,EAAAr1B,GACP,QAAAzD,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACAyD,EAAAu1D,GAAArgC,EAAAC,EAAAo/B,EAAAl/B,EAAAr1B,GACAm1B,EAAAo/B,IAAAh1D,OAAA,GAEA,OAAAS,EkB4DuC6/D,CAAyBhgE,KAAAq1B,gBAAA,EAAAr1B,KAAA0/D,OAAA1/D,KAAAw1B,OAAA,IAChEx1B,KAAAm6D,kBAAAn6D,KAAAqqB,elBqDO,SAAAgL,EAAAC,EAAAghC,EAAA9gC,EAAAogC,EAAAC,EAAAtsD,EAAAmjB,EAAA+kC,EAAAC,EAAAoE,GAEP,IADA,IAAAC,EAAAD,GAAA,CAAAhE,SACAp1D,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACAg1D,EAAAsE,GAAA3gC,EAAAC,EAAAo/B,EAAAl/B,EAAAogC,EAAAC,EAAAtsD,EAAAmjB,EAAA+kC,EAAAC,EAAAqE,GACAzgC,EAAAo/B,IAAAh1D,OAAA,GAEA,OAAAgyD,EkB1DeuO,CAA4BjgE,KAAAm+D,6BAAA,EAAAn+D,KAAA0/D,OAAA1/D,KAAAw1B,OAAAx1B,KAAAk6D,WAAA,EAAA3wD,EAAAmjB,EAAA+kC,EAAAC,KAK3C8N,EAAAlhE,UAAAk0B,WAAA,SAAAjpB,EAAAmjB,GACA,Of/EO,SAAA2I,EAAAC,EAAAghC,EAAA9gC,EAAAjsB,EAAAmjB,GACP,OAAA4pC,EAAA52D,OACA,SAEA,QAAAhD,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACA,GAAAs7D,GAAA3iC,EAAAC,EAAAo/B,EAAAl/B,EAAAjsB,EAAAmjB,GACA,SAEA4I,EAAAo/B,IAAAh1D,OAAA,GAEA,SeoEewgE,CAAsBlgE,KAAAm+D,6BAAA,EAAAn+D,KAAA0/D,OAAA1/D,KAAAw1B,OAAAjsB,EAAAmjB,IAOrC8yC,EAAAlhE,UAAA23B,QAAA,WACA,ONpIO,SAAAZ,EAAAC,EAAAghC,EAAA9gC,GAEP,IADA,IAAA9vB,EAAA,EACAhJ,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACAgJ,GAAgB62D,GAAWlnC,EAAAC,EAAAo/B,EAAAl/B,GAC3BF,EAAAo/B,IAAAh1D,OAAA,GAEA,OAAAgG,EM6Hey6D,CAAgBngE,KAAAm+D,6BAAA,EAAAn+D,KAAA0/D,OAAA1/D,KAAAw1B,SAgB/BgqC,EAAAlhE,UAAAg1D,eAAA,SAAAgK,GACA,IAAAjoC,EAQA,YAPAxlB,IAAAytD,EAEYG,GADZpoC,EAAAr1B,KAAAm+D,6BAAAv6D,QACkC,EAAA5D,KAAA0/D,OAAA1/D,KAAAw1B,OAAA8nC,GAGlCjoC,EAAAr1B,KAAAq1B,gBAEeghC,GAA4BhhC,EAAA,EAAAr1B,KAAA0/D,OAAA1/D,KAAAw1B,SAK3CgqC,EAAAlhE,UAAA8hE,SAAA,WACA,OAAApgE,KAAA0/D,QAKAF,EAAAlhE,UAAA+hE,sBAAA,WACA,GAAArgE,KAAA2/D,6BAAA3/D,KAAAqqB,cAAA,CACA,IAAAuyC,EC7MO,SAAqBvnC,EAAAC,EAAAghC,EAAA9gC,GAG5B,IAFA,IAAAonC,EAAA,GACAjuC,E/E+KA,CAAArtB,SAAA,U+E9KA5E,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACAiyB,EAAiByG,GAAiCC,EAAAC,EAAAo/B,EAAA,GAAAl/B,GAClDonC,EAAA95D,MAAA6rB,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OACA2G,EAAAo/B,IAAAh1D,OAAA,GAEA,OAAAk9D,EDoM8B0D,CAAkBtgE,KAAAq1B,gBAAA,EAAAr1B,KAAA0/D,OAAA1/D,KAAAw1B,QAChDx1B,KAAA4/D,oBJ1IO,SAAAvqC,EAAAC,EAAAghC,EAAA9gC,EAAAonC,GAEP,IADA,IAAA2D,EAAA,GACA7jE,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACA6jE,EAAA5D,GAAAtnC,EAAAC,EAAAo/B,EAAAl/B,EAAAonC,EAAA,EAAAlgE,EAAA6jE,GACAjrC,EAAAo/B,IAAAh1D,OAAA,GAEA,OAAA6gE,EImIuCC,CAA6BxgE,KAAAm+D,6BAAA,EAAAn+D,KAAA0/D,OAAA1/D,KAAAw1B,OAAAonC,GACpE58D,KAAA2/D,4BAAA3/D,KAAAqqB,cAEA,OAAArqB,KAAA4/D,qBAQAJ,EAAAlhE,UAAAmiE,kBAAA,WACA,WAAmB1E,GAAU/7D,KAAAqgE,wBAAAz8D,QAAuCivD,GAAcE,MAKlFyM,EAAAlhE,UAAA6/D,2BAAA,WACA,GAAAn+D,KAAA+9D,mBAAA/9D,KAAAqqB,cAAA,CACA,IAAAgL,EAAAr1B,KAAAq1B,iBFrKO,SAAAA,EAAAC,EAAAghC,EAAA9gC,EAAA8nC,GACP,QAAA5gE,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACA,IAAA2gE,GAAAhoC,EAAAC,EAAAo/B,EAAAl/B,EAAA8nC,GACA,SAEA5I,EAAAh1D,SACA41B,EAAAo/B,IAAAh1D,OAAA,IAGA,SE4JgBghE,CAAuBrrC,EAAA,EAAAr1B,KAAA0/D,OAAA1/D,KAAAw1B,SAIvCx1B,KAAAg+D,yBAAA3oC,EAAAzxB,QACA5D,KAAAg+D,yBAAAt+D,OACoB+9D,GAAsBz9D,KAAAg+D,yBAAA,EAAAh+D,KAAA0/D,OAAA1/D,KAAAw1B,SAL1Cx1B,KAAAg+D,yBAAA3oC,EAOAr1B,KAAA+9D,kBAAA/9D,KAAAqqB,cAEA,OAAArqB,KAAAg+D,0BAKAwB,EAAAlhE,UAAAs1D,8BAAA,SAAAvB,GACA,IAAA4G,EAAA,GACA0H,EAAA,GAEA,OADA1H,EAAAv5D,OXkFO,SAAA21B,EAAAC,EAAAghC,EAAA9gC,EAAA48B,EAAA6G,EAAAC,EAAAyH,GACP,QAAAjkE,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACA+8D,EAAA,GACAP,EAAAU,GAAAvkC,EAAAC,EAAAo/B,EAAAl/B,EAAA48B,EAAA6G,EAAAC,EAAAO,GACAkH,EAAA79D,KAAA22D,GACAnkC,EAAAo/B,IAAAh1D,OAAA,GAEA,OAAAw5D,EW1F2C0H,CAAkB5gE,KAAAq1B,gBAAA,EAAAr1B,KAAA0/D,OAAA1/D,KAAAw1B,OAAAt1B,KAAAoF,KAAA+sD,GAAA4G,EAAA,EAAA0H,GAC7D,IAAAnB,EAAAvG,EAA2DpG,GAAcC,GAAA6N,IAQzEnB,EAAAlhE,UAAAuiE,WAAA,SAAA38D,GACA,GAAAA,EAAA,GAAAlE,KAAA0/D,OAAAhgE,QAAAwE,EACA,YAEA,IAAAoxB,EACA,OAAApxB,EACAoxB,EAAA,MAEA,CACA,IAAAwrC,EAAA9gE,KAAA0/D,OAAAx7D,EAAA,GACAoxB,EAAAwrC,IAAAphE,OAAA,GAEA,IAAAg1D,EAAA10D,KAAA0/D,OAAAx7D,GAAAN,QACA2xB,EAAAm/B,IAAAh1D,OAAA,GACA,OAAA41B,EACA,QAAA54B,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAA6ChD,EAAA+C,IAAQ/C,EACrDg4D,EAAAh4D,IAAA44B,EAGA,WAAmBqpC,GAAO3+D,KAAAq1B,gBAAAzxB,MAAA0xB,EAAAC,GAAAv1B,KAAAmzD,OAAAuB,IAO1B8K,EAAAlhE,UAAAyiE,YAAA,WAMA,IALA,IAAA5N,EAAAnzD,KAAAmzD,OACA99B,EAAAr1B,KAAAq1B,gBACAihC,EAAAt2D,KAAA0/D,OACAG,EAAA,GACAvqC,EAAA,EACA54B,EAAA,EAAA+C,EAAA62D,EAAA52D,OAA0ChD,EAAA+C,IAAQ/C,EAAA,CAClD,IAAAg4D,EAAA4B,EAAA55D,GAAAkH,QACA2xB,EAAAm/B,IAAAh1D,OAAA,GACA,OAAA41B,EACA,QAAArwB,EAAA,EAAA86C,EAAA2U,EAAAh1D,OAAiDuF,EAAA86C,IAAQ96C,EACzDyvD,EAAAzvD,IAAAqwB,EAGA,IAAA6pC,EAAA,IAA8BR,GAAOtpC,EAAAzxB,MAAA0xB,EAAAC,GAAA49B,EAAAuB,GACrCmL,EAAA/8D,KAAAq8D,GACA7pC,EAAAC,EAEA,OAAAsqC,GAMAL,EAAAlhE,UAAAg0D,QAAA,WACA,OAAehnB,GAAYO,eAM3B2zB,EAAAlhE,UAAAk0D,iBAAA,SAAA7jC,GACA,Ob9MO,SAAA0G,EAAAC,EAAAghC,EAAA9gC,EAAA7G,GACP,QAAAjyB,EAAA,EAAA+C,EAAA62D,EAAA52D,OAAsChD,EAAA+C,IAAQ/C,EAAA,CAC9C,IAAAg4D,EAAA4B,EAAA55D,GACA,GAAAm8D,GAAAxjC,EAAAC,EAAAo/B,EAAAl/B,EAAA7G,GACA,SAEA2G,EAAAo/B,IAAAh1D,OAAA,GAEA,SasMeshE,CAA8BhhE,KAAAm+D,6BAAA,EAAAn+D,KAAA0/D,OAAA1/D,KAAAw1B,OAAA7G,IAS7C6wC,EAAAlhE,UAAAy1D,eAAA,SAAA5/B,EAAA6/B,GACAh0D,KAAAi0D,UAAAD,EAAA7/B,EAAA,GACAn0B,KAAAq1B,kBACAr1B,KAAAq1B,gBAAA,IAEA,IAAAihC,EpBrRO,SAAAjhC,EAAAC,EAAAkhC,EAAAhhC,EAAAiqC,GAGP,IAFA,IAAAnJ,EAAAmJ,GAAA,GACA/iE,EAAA,EACAuI,EAAA,EAAA86C,EAAAyW,EAAA92D,OAA8CuF,EAAA86C,IAAQ96C,EAAA,CACtD,IAAAyvD,EAAAH,GAAAl/B,EAAAC,EAAAkhC,EAAAvxD,GAAAuwB,EAAA8gC,EAAA55D,IACA45D,EAAA55D,KAAAg4D,EACAp/B,EAAAo/B,IAAAh1D,OAAA,GAGA,OADA42D,EAAA52D,OAAAhD,EACA45D,EoB4QoB2K,CAA4BjhE,KAAAq1B,gBAAA,EAAAlB,EAAAn0B,KAAAw1B,OAAAx1B,KAAA0/D,QAChD,OAAApJ,EAAA52D,OACAM,KAAAq1B,gBAAA31B,OAAA,MAEA,CACA,IAAAwhE,EAAA5K,IAAA52D,OAAA,GACAM,KAAAq1B,gBAAA31B,OAAA,IAAAwhE,EAAAxhE,OACA,EAAAwhE,IAAAxhE,OAAA,GAEAM,KAAAmc,WAEAqjD,EApTgB,CAqTdpM,IEvTa+N,GAlCf,WAKA,SAAAC,EAAAC,EAAAC,GAIAthE,KAAAqhE,aAMArhE,KAAAuhE,SAAAD,EAiBA,OAXAF,EAAA9iE,UAAAkjE,UAAA,WACA,OAAApkE,OAAAsL,KAAA1I,KAAAuhE,WAOAH,EAAA9iE,UAAAmjE,mBAAA,SAAAv2C,GACA,OAAAlrB,KAAAuhE,SAAAr2C,IAEAk2C,EAhCA,GCAIM,GAAyB,WAC7B,IAAAh5C,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6CtBy4C,GAAA,EAIAC,GAAA,QAaP,SAAAC,GAAAC,GACA,IAAA9hE,KAAA+hE,2BAAAD,GAAA,CAGAH,GAAA/0D,aAAA5M,KAAAgiE,YACAhiE,KAAAiiE,OAAAH,GAEA,IAAAzzD,EAAA6zD,GAAAJ,EAAA9hE,KAAAqhE,YACArhE,KAAAgiE,WAAAL,GAAA/0D,YAAAk1D,EACA9hE,KAAAqhE,WAAAc,KAAA9zD,EAAAyzD,IASA,SAAAM,GAAAN,GACA,IAAA9hE,KAAA+hE,2BAAAD,GAAA,CACA,IAAAzzD,EAAA6zD,GAAAJ,EAAA9hE,KAAAqhE,YACArhE,KAAAqhE,WAAAgB,KAAAh0D,EAAAyzD,IASA,SAAAQ,GAAAR,GACA,IAAA9hE,KAAA+hE,2BAAAD,GAAA,CACA,IAAAtjE,EAAAwB,KAAAgiE,WAAAL,GAAA/0D,YACA,GAAApO,KAAAsxD,SAAAgS,EAAAhS,OAAA,CACA,IAAAzhD,EAAA6zD,GAAAJ,EAAA9hE,KAAAqhE,YACArhE,KAAAqhE,WAAAkB,GAAAl0D,EAAAyzD,GACA9hE,KAAAwiE,iBAUA,SAAAC,GAAAX,GACA,IAAA9hE,KAAA+hE,2BAAAD,GAAA,CACA,IAAAzzD,EAAA6zD,GAAAJ,EAAA9hE,KAAAqhE,YACArhE,KAAAqhE,WAAAqB,UAAAr0D,EAAAyzD,IASA,SAAAa,GAAAb,GACA,IAAA9hE,KAAA+hE,2BAAAD,GAAA,CACA,IAAAzzD,EAAA6zD,GAAAJ,EAAA9hE,KAAAqhE,YACArhE,KAAAqhE,WAAAuB,SAAAv0D,EAAAyzD,IA8FO,SAAAI,GAAAJ,EAAAT,GACP,IAAAhzD,EAAAgzD,EAAAwB,WAAAf,KAEAgB,EAAAz0D,EAAAya,eAQA,OAPAza,EAAAya,eAAA,WACAg5C,EAAAh5C,iBACAg6C,KAEAz0D,EAAA00D,UAAApB,GACAtzD,EAAAkiD,WAAA,EACAliD,EAAAgiD,YAAAuR,GACAvzD,EAEe,IAAA20D,GAxGf,SAAA55C,GAKA,SAAA65C,EAAA5B,GACA,IAAA/3C,EAAAtpB,KACAshE,EAAA,CACAO,aACAO,aACAE,WACAG,aACAE,aAaA,OAXAr5C,EAAAF,EAAAvsB,KAAAmD,KAAAqhE,EAAAC,IAAAthE,MAKAgiE,WAAAX,EAAAW,WAKA14C,EAAA45C,YAAA,GACA55C,EAwDA,OAhFIo4C,GAASuB,EAAA75C,GAkDb65C,EAAA3kE,UAAAyjE,2BAAA,SAAAD,GAIA,IAHA,IAAAqB,EAAAnjE,KAAAkjE,YACA35D,EAAAu4D,EAAAsB,QACA12C,EAAAo1C,EAAAuB,QACA3mE,EAAA,EAAAC,EAAAwmE,EAAAzjE,OAAA9B,OAAA,EAAmDlB,EAAAC,IAAAiB,EAAAulE,EAAAzmE,IAAuBA,IAAA,CAE1E,IAAAswB,EAAA9sB,KAAAg1C,IAAA3rC,EAAA3L,EAAA,IACAqvB,EAAA/sB,KAAAg1C,IAAAxoB,EAAA9uB,EAAA,IACA,GAAAovB,GAlIA,IAkIAC,GAlIA,GAmIA,SAGA,UAOAg2C,EAAA3kE,UAAA2jE,OAAA,SAAAH,GACA,IAAAzzD,EAAA6zD,GAAAJ,EAAA9hE,KAAAqhE,YACArhE,KAAAqhE,WAAAY,OAAA5zD,EAAAyzD,GACA9hE,KAAAwiE,gBAKAS,EAAA3kE,UAAAkkE,aAAA,kBACAxiE,KAAAgiE,WAAAL,GAAA/0D,aAEAq2D,EAjFA,CAkFE9B,ICnNEmC,GAAyB,WAC7B,IAAA56C,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAuMtB,SAASq6C,GAAQC,GAIxB,IAHA,IAAA9jE,EAAA8jE,EAAA9jE,OACA0jE,EAAA,EACAC,EAAA,EACA3mE,EAAA,EAAmBA,EAAAgD,EAAYhD,IAC/B0mE,GAAAI,EAAA9mE,GAAA0mE,QACAC,GAAAG,EAAA9mE,GAAA2mE,QAEA,OAAAD,EAAA1jE,EAAA2jE,EAAA3jE,GAae,IAAA+jE,GAtKO,SAAAr6C,GAKtB,SAAAs6C,EAAA3xC,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GAgCA,OA/BAzI,EAAAF,EAAAvsB,KAAAmD,KAA2F,IAAAA,KAC3F2U,EAAAgvD,kBACAr6C,EAAAq6C,gBAAAhvD,EAAAgvD,iBAEAhvD,EAAAivD,kBACAt6C,EAAAs6C,gBAAAjvD,EAAAivD,iBAEAjvD,EAAAkvD,kBACAv6C,EAAAu6C,gBAAAlvD,EAAAkvD,iBAEAlvD,EAAAmvD,gBACAx6C,EAAAw6C,cAAAnvD,EAAAmvD,eAEAnvD,EAAAovD,WACAz6C,EAAAy6C,SAAApvD,EAAAovD,UAMAz6C,EAAA06C,wBAAA,EAKA16C,EAAA26C,iBAAA,GAKA36C,EAAA46C,eAAA,GACA56C,EAoGA,OA1IIg6C,GAASI,EAAAt6C,GA8Cbs6C,EAAAplE,UAAAqlE,gBAAA,SAAArb,GACA,UAOAob,EAAAplE,UAAAslE,gBAAA,SAAAtb,KAQAob,EAAAplE,UAAA2pD,YAAA,SAAAK,GACA,IAAyE,eACzE,SAEA,IAAA6b,GAAA,EAEA,GADAnkE,KAAAokE,uBAAA9b,GACAtoD,KAAAgkE,wBACA,GAAA1b,EAAA1pD,MAAwCktD,GAAmBE,YAC3DhsD,KAAA4jE,gBAAAtb,QAEA,GAAAA,EAAA1pD,MAA6CktD,GAAmBK,UAAA,CAChE,IAAAkY,EAAArkE,KAAA8jE,cAAAxb,GACAtoD,KAAAgkE,uBAAAK,GAAArkE,KAAAkkE,eAAAxkE,OAAA,QAIA,GAAA4oD,EAAA1pD,MAAwCktD,GAAmBI,YAAA,CAC3D,IAAAoY,EAAAtkE,KAAA2jE,gBAAArb,GACAgc,GACAhc,EAAAx/B,iBAEA9oB,KAAAgkE,uBAAAM,EACAH,EAAAnkE,KAAA+jE,SAAAO,QAEAhc,EAAA1pD,MAA6CktD,GAAmBG,aAChEjsD,KAAA6jE,gBAAAvb,GAGA,OAAA6b,GAOAT,EAAAplE,UAAAulE,gBAAA,SAAAvb,KAOAob,EAAAplE,UAAAwlE,cAAA,SAAAxb,GACA,UAQAob,EAAAplE,UAAAylE,SAAA,SAAAO,GACA,OAAAA,GAMAZ,EAAAplE,UAAA8lE,uBAAA,SAAA9b,GACA,GAsCA,SAAAA,GACA,IAAA1pD,EAAA0pD,EAAA1pD,KACA,OAAAA,IAAoBktD,GAAmBI,aACvCttD,IAAiBktD,GAAmBE,aACpCptD,IAAiBktD,GAAmBK,UA1CpCoY,CAAAjc,GAAA,CACA,IAAApmB,EAAAomB,EAAAkF,aACA33C,EAAAqsB,EAAA6gC,UAAAn2D,WACA07C,EAAA1pD,MAAwCktD,GAAmBK,iBAC3DnsD,KAAAikE,iBAAApuD,GAEAyyC,EAAA1pD,MACgBktD,GAAmBI,YACnClsD,KAAAikE,iBAAApuD,GAAAqsB,EAEArsB,KAAA7V,KAAAikE,mBAEAjkE,KAAAikE,iBAAApuD,GAAAqsB,GAEAliC,KAAAkkE,eAAkCv/C,EAAS3kB,KAAAikE,oBAG3CP,EA3IsB,CA4IpB3b,IC/KFyc,GAAA,oDAOAC,GAAA,eAqCO,WAQP,IAIAtsC,EAAA,GAIA8pB,EAAA,EAhBO,GAsHA,SAAAyiB,GAAAC,GAKP,OAJAA,EAAA,GAAen4C,EAAKm4C,EAAA,eACpBA,EAAA,GAAen4C,EAAKm4C,EAAA,eACpBA,EAAA,GAAen4C,EAAKm4C,EAAA,eACpBA,EAAA,GAAen4C,EAAKm4C,EAAA,QACpBA,EAMO,SAASC,GAAQD,GACxB,IAAAnnE,EAAAmnE,EAAA,GACAnnE,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAqnE,EAAAF,EAAA,GACAE,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAhjE,EAAA8iE,EAAA,GAKA,OAJA9iE,IAAA,EAAAA,KACAA,IAAA,MAGA,QAAArE,EAAA,IAAAqnE,EAAA,IAAAhjE,EAAA,UADAgO,IAAA80D,EAAA,KAAAA,EAAA,IACA,IC1LO,SAAAG,GAAAH,GACP,OAAA12D,MAAApP,QAAA8lE,GACeC,GAAQD,GAGvBA,ECNA,IAsMeI,GAtMD,WAId,SAAAC,EAAArwD,GAKA3U,KAAAilE,SAAAtwD,EAAAgZ,QAKA3tB,KAAAklE,gBAAAvwD,EAAAwwD,eAKAnlE,KAAAolE,UAAAzwD,EAAA6hB,SAKAx2B,KAAAqlE,OAAA1wD,EAAAqqB,MA4KA,OArKAgmC,EAAA1mE,UAAAk2B,MAAA,WACA,WAAAwwC,EAAA,CACAr3C,QAAA3tB,KAAAuuB,aACAyQ,MAAAh/B,KAAAslE,WACA9uC,SAAAx2B,KAAAulE,cACAJ,eAAAnlE,KAAAwlE,uBAQAR,EAAA1mE,UAAAiwB,WAAA,WACA,OAAAvuB,KAAAilE,UAOAD,EAAA1mE,UAAAknE,kBAAA,WACA,OAAAxlE,KAAAklE,iBAOAF,EAAA1mE,UAAAinE,YAAA,WACA,OAAAvlE,KAAAolE,WAOAJ,EAAA1mE,UAAAgnE,SAAA,WACA,OAAAtlE,KAAAqlE,QAQAL,EAAA1mE,UAAAmnE,UAAA,WACA,OAAe79C,KAQfo9C,EAAA1mE,UAAAipC,SAAA,SAAArG,GACA,OAAetZ,KAOfo9C,EAAA1mE,UAAAonE,qBAAA,SAAAxkC,GACA,OAAetZ,KAMfo9C,EAAA1mE,UAAAqnE,cAAA,WACA,OAAe/9C,KAMfo9C,EAAA1mE,UAAAsnE,aAAA,WACA,OAAeh+C,KAMfo9C,EAAA1mE,UAAAunE,yBAAA,WACA,OAAej+C,KAOfo9C,EAAA1mE,UAAA6hD,UAAA,WACA,OAAev4B,KAOfo9C,EAAA1mE,UAAAu0B,QAAA,WACA,OAAejL,KAQfo9C,EAAA1mE,UAAAixB,WAAA,SAAA5B,GACA3tB,KAAAilE,SAAAt3C,GAQAq3C,EAAA1mE,UAAAwnE,kBAAA,SAAAX,GACAnlE,KAAAklE,gBAAAC,GAQAH,EAAA1mE,UAAAynE,YAAA,SAAAvvC,GACAx2B,KAAAolE,UAAA5uC,GAQAwuC,EAAA1mE,UAAA0nE,SAAA,SAAAhnC,GACAh/B,KAAAqlE,OAAArmC,GASAgmC,EAAA1mE,UAAA2nE,kBAAA,SAAAnhD,EAAAtH,GACA,OAAeoK,KAMfo9C,EAAA1mE,UAAAmF,KAAA,WACQmkB,KAQRo9C,EAAA1mE,UAAA4nE,oBAAA,SAAAphD,EAAAtH,GACQoK,KAERo9C,EApMc,GChBVmB,GAAyB,WAC7B,IAAAz9C,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA2bdk9C,GAzYC,SAAAh9C,GAKhB,SAAAi9C,EAAA1xD,GACA,IAAA2U,EAAAtpB,KAIAmlE,OAAAt1D,IAAA8E,EAAAwwD,gBACAxwD,EAAAwwD,eA0EA,OAzEA77C,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA2tB,QAAA,EACAw3C,iBACA3uC,cAAA3mB,IAAA8E,EAAA6hB,SAAA7hB,EAAA6hB,SAAA,EACAwI,MAAA,KACSh/B,MAKT45C,QAAA,KAKAtwB,EAAAg9C,oBAAA,KAKAh9C,EAAAi9C,WAAA12D,IAAA8E,EAAAyL,KAAAzL,EAAAyL,KAAA,KAKAkJ,EAAA81B,QAAA,MAKA91B,EAAAk9C,QAAA7xD,EAAAynD,OAKA9yC,EAAAm9C,aAA0C52D,IAAA8E,EAAA03B,OAC1C13B,EAAA03B,OAAA13B,EAAA+xD,QAKAp9C,EAAAq9C,SAAAhyD,EAAAiyD,QAKAt9C,EAAAu9C,YAAAh3D,IAAA8E,EAAAglB,MAAAhlB,EAAAglB,MAAA,EAKArQ,EAAAw9C,aAAAj3D,IAAA8E,EAAAihC,OAAAjhC,EAAAihC,OAAA,KAKAtsB,EAAAy9C,QAAA,KAKAz9C,EAAA09C,MAAA,KAKA19C,EAAA29C,WAAA,KAKA39C,EAAA49C,uBAAA,KACA59C,EAAA69C,UACA79C,EAkTA,OAtYI68C,GAASE,EAAAj9C,GA2Fbi9C,EAAA/nE,UAAAk2B,MAAA,WACA,IAAA9oB,EAAA,IAAA26D,EAAA,CACAjmD,KAAApgB,KAAAonE,UAAApnE,KAAAonE,UAAA5yC,aAAA3kB,EACAusD,OAAAp8D,KAAAm8D,YACA9vB,OAAArsC,KAAAg1D,YACA4R,QAAA5mE,KAAAqnE,aACA1tC,MAAA35B,KAAAsnE,WACA1xB,OAAA51C,KAAAunE,YAAAvnE,KAAAunE,YAAA/yC,aAAA3kB,EACA2mB,SAAAx2B,KAAAulE,cACAJ,eAAAnlE,KAAAwlE,sBAIA,OAFA95D,EAAA6jB,WAAAvvB,KAAAuuB,cACA7iB,EAAAs6D,SAAAhmE,KAAAslE,YACA55D,GAMA26D,EAAA/nE,UAAAmnE,UAAA,WACA,OAAAzlE,KAAA+mE,SAOAV,EAAA/nE,UAAAgpE,SAAA,WACA,OAAAtnE,KAAA6mE,QAOAR,EAAA/nE,UAAA8oE,QAAA,WACA,OAAApnE,KAAAumE,OAKAF,EAAA/nE,UAAAonE,qBAAA,SAAAxkC,GACA,OAAAlhC,KAAAsmE,qBAMAD,EAAA/nE,UAAAipC,SAAA,SAAArG,GACA,OAAAlhC,KAAA45C,SAKAysB,EAAA/nE,UAAAsnE,aAAA,WACA,OAAA5lE,KAAAinE,YAKAZ,EAAA/nE,UAAAunE,yBAAA,WACA,OAAA7lE,KAAAknE,wBAKAb,EAAA/nE,UAAAqnE,cAAA,WACA,OAAexmC,GAAUhM,QAMzBkzC,EAAA/nE,UAAA6hD,UAAA,WACA,OAAAngD,KAAAo/C,SAOAinB,EAAA/nE,UAAA69D,UAAA,WACA,OAAAn8D,KAAAwmE,SAOAH,EAAA/nE,UAAA02D,UAAA,WACA,OAAAh1D,KAAAymE,SAOAJ,EAAA/nE,UAAA+oE,WAAA,WACA,OAAArnE,KAAA2mE,UAMAN,EAAA/nE,UAAAu0B,QAAA,WACA,OAAA7yB,KAAAgnE,OAOAX,EAAA/nE,UAAAipE,UAAA,WACA,OAAAvnE,KAAA8mE,SAKAT,EAAA/nE,UAAA2nE,kBAAA,SAAAnhD,EAAAtH,KAMA6oD,EAAA/nE,UAAAmF,KAAA,aAIA4iE,EAAA/nE,UAAA4nE,oBAAA,SAAAphD,EAAAtH,KAIA6oD,EAAA/nE,UAAA6oE,QAAA,WACA,IAKA1xB,EALA+xB,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,KACAC,EAAA,EAEAC,EAAA,EACA7nE,KAAA8mE,UAEA,QADArxB,EAAAz1C,KAAA8mE,QAAAgB,cAEAryB,E/EvLO,Q+EyLPA,EAA0BqvB,GAAWrvB,QAErC5lC,KADAg4D,EAAA7nE,KAAA8mE,QAAAh0C,cAEA+0C,E/ExKO,G+E0KPF,EAAA3nE,KAAA8mE,QAAAiB,cACAH,EAAA5nE,KAAA8mE,QAAAkB,yBAEAn4D,KADA43D,EAAAznE,KAAA8mE,QAAAmB,iBAEAR,E/E5MO,c+E+MP53D,KADA23D,EAAAxnE,KAAA8mE,QAAAoB,gBAEAV,E/E/NO,c+EkOP33D,KADA63D,EAAA1nE,KAAA8mE,QAAAqB,mBAEAT,E/E/MO,K+EkNP,IAAAjxC,EAAA,GAAAz2B,KAAAymE,QAAAoB,GAAA,EAEAO,EAAA,CACA3yB,cACAoyB,cACApxC,OACA+wC,UACAG,WACAC,iBACAH,WACAC,cAEA9uC,EAAsBnB,GAAqBhB,KAC3Cz2B,KAAA45C,QAAAhhB,EAAAhB,OAGA,IAAAywC,EADA5xC,EAAAz2B,KAAA45C,QAAA/hB,MAEA73B,KAAAsoE,MAAAF,EAAAxvC,EAAA,KACA54B,KAAAuoE,0BAAAH,GACApoE,KAAA+mE,QAAA,CAAAtwC,EAAA,EAAAA,EAAA,GACAz2B,KAAAgnE,MAAA,CAAAvwC,KACAz2B,KAAAinE,WAAA,CAAAoB,MASAhC,EAAA/nE,UAAAgqE,MAAA,SAAAF,EAAAxvC,EAAArvB,EAAAmjB,GACA,IAAAhwB,EAAA8rE,EAAAC,EAEA7vC,EAAAsG,aAAA,aAEAtG,EAAA2F,UAAAh1B,EAAAmjB,GACAkM,EAAAgJ,YACA,IAAAw6B,EAAAp8D,KAAAwmE,QACA,GAAApK,IAAA96D,IACAs3B,EAAA8vC,IAAAN,EAAA3xC,KAAA,EAAA2xC,EAAA3xC,KAAA,EAAAz2B,KAAAymE,QAAA,IAAAvmE,KAAAmtB,IAAA,OAEA,CACA,IAAAu5C,OAAA/2D,IAAA7P,KAAA2mE,SAAA3mE,KAAA2mE,SACA3mE,KAAAymE,QAIA,IAHAG,IAAA5mE,KAAAymE,UACArK,GAAA,GAEA1/D,EAAA,EAAuBA,GAAA0/D,EAAa1/D,IACpC8rE,EAAA,EAAA9rE,EAAAwD,KAAAmtB,GAAA+uC,EAAAl8D,KAAAmtB,GAAA,EAAArtB,KAAA6mE,OACA4B,EAAA/rE,EAAA,KAAAsD,KAAAymE,QAAAG,EACAhuC,EAAAkJ,OAAAsmC,EAAA3xC,KAAA,EAAAgyC,EAAAvoE,KAAAy2B,IAAA6xC,GAAAJ,EAAA3xC,KAAA,EAAAgyC,EAAAvoE,KAAA22B,IAAA2xC,IAGA,GAAAxoE,KAAAumE,MAAA,CACA,IAAA5B,EAAA3kE,KAAAumE,MAAAuB,WACA,OAAAnD,IACAA,E/EnSO,Q+EqSP/rC,EAAAgR,UAAgCk7B,GAAWH,GAC3C/rC,EAAAxY,OAEApgB,KAAA8mE,UACAluC,EAAA6c,YAAA2yB,EAAA3yB,YACA7c,EAAA8c,UAAA0yB,EAAAP,YACAjvC,EAAA+vC,aAAAP,EAAAT,WACA/uC,EAAA+vC,YAAAP,EAAAT,UACA/uC,EAAAgvC,eAAAQ,EAAAR,gBAEAhvC,EAAA4uC,QAAuDY,EAAA,QACvDxvC,EAAA6uC,SAAyDW,EAAA,SACzDxvC,EAAA8uC,WAAAU,EAAAV,WACA9uC,EAAAgd,UAEAhd,EAAA+c,aAMA0wB,EAAA/nE,UAAAiqE,0BAAA,SAAAH,GAEA,GADApoE,KAAAknE,uBAAA,CAAAkB,EAAA3xC,KAAA2xC,EAAA3xC,MACAz2B,KAAAumE,MACAvmE,KAAAsmE,oBAAAtmE,KAAA45C,YADA,CAMA,IAAAhhB,EAAsBnB,GAAqB2wC,EAAA3xC,KAAA2xC,EAAA3xC,MAC3Cz2B,KAAAsmE,oBAAA1tC,EAAAhB,OACA53B,KAAA4oE,wBAAAR,EAAAxvC,EAAA,OASAytC,EAAA/nE,UAAAsqE,wBAAA,SAAAR,EAAAxvC,EAAArvB,EAAAmjB,GAEAkM,EAAAsG,aAAA,aAEAtG,EAAA2F,UAAAh1B,EAAAmjB,GACAkM,EAAAgJ,YACA,IAAAw6B,EAAAp8D,KAAAwmE,QACA,GAAApK,IAAA96D,IACAs3B,EAAA8vC,IAAAN,EAAA3xC,KAAA,EAAA2xC,EAAA3xC,KAAA,EAAAz2B,KAAAymE,QAAA,IAAAvmE,KAAAmtB,IAAA,OAEA,CACA,IAAAu5C,OAAA/2D,IAAA7P,KAAA2mE,SAAA3mE,KAAA2mE,SACA3mE,KAAAymE,QACAG,IAAA5mE,KAAAymE,UACArK,GAAA,GAEA,IAAA1/D,OAAA,EAAA+rE,OAAA,EAAAD,OAAA,EACA,IAAA9rE,EAAA,EAAuBA,GAAA0/D,EAAa1/D,IACpC8rE,EAAA,EAAA9rE,EAAAwD,KAAAmtB,GAAA+uC,EAAAl8D,KAAAmtB,GAAA,EAAArtB,KAAA6mE,OACA4B,EAAA/rE,EAAA,KAAAsD,KAAAymE,QAAAG,EACAhuC,EAAAkJ,OAAAsmC,EAAA3xC,KAAA,EAAAgyC,EAAAvoE,KAAAy2B,IAAA6xC,GAAAJ,EAAA3xC,KAAA,EAAAgyC,EAAAvoE,KAAA22B,IAAA2xC,IAGA5vC,EAAAgR,U/EpWO,O+EqWPhR,EAAAxY,OACApgB,KAAA8mE,UACAluC,EAAA6c,YAAA2yB,EAAA3yB,YACA7c,EAAA8c,UAAA0yB,EAAAP,YACAO,EAAAT,WACA/uC,EAAA+vC,YAAAP,EAAAT,UACA/uC,EAAAgvC,eAAAQ,EAAAR,gBAEAhvC,EAAAgd,UAEAhd,EAAA+c,aAEA0wB,EAvYgB,CAwYdtB,IC1bE8D,GAAyB,WAC7B,IAAAngD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAoEd4/C,GA3Cf,SAAA1/C,GAKA,SAAA2/C,EAAAh3C,GACA,IACApd,EAAAod,GAAwD,GAOxD,OANA3I,EAAAvsB,KAAAmD,KAAA,CACAo8D,OAAA96D,IACA8e,KAAAzL,EAAAyL,KACAisB,OAAA13B,EAAA03B,OACAuJ,OAAAjhC,EAAAihC,UACS51C,KA4BT,OAxCI6oE,GAASE,EAAA3/C,GAqBb2/C,EAAAzqE,UAAAk2B,MAAA,WACA,IAAA9oB,EAAA,IAAAq9D,EAAA,CACA3oD,KAAApgB,KAAAonE,UAAApnE,KAAAonE,UAAA5yC,aAAA3kB,EACA+lC,OAAA51C,KAAAunE,YAAAvnE,KAAAunE,YAAA/yC,aAAA3kB,EACAw8B,OAAArsC,KAAAg1D,cAIA,OAFAtpD,EAAA6jB,WAAAvvB,KAAAuuB,cACA7iB,EAAAs6D,SAAAhmE,KAAAslE,YACA55D,GAQAq9D,EAAAzqE,UAAA62D,UAAA,SAAA9oB,GACArsC,KAAAymE,QAAAp6B,GAEA08B,EAzCA,CA0CE3C,ICda4C,GA1Cf,WAIA,SAAAC,EAAAl3C,GACA,IAAApd,EAAAod,GAAA,GAKA/xB,KAAAkpE,YAAAr5D,IAAA8E,EAAAgwD,MAAAhwD,EAAAgwD,MAAA,KA8BA,OAvBAsE,EAAA3qE,UAAAk2B,MAAA,WACA,IAAAmwC,EAAA3kE,KAAA8nE,WACA,WAAAmB,EAAA,CACAtE,MAAA12D,MAAApP,QAAA8lE,KAAA/gE,QAAA+gE,QAAA90D,KAQAo5D,EAAA3qE,UAAAwpE,SAAA,WACA,OAAA9nE,KAAAkpE,QAQAD,EAAA3qE,UAAA6qE,SAAA,SAAAxE,GACA3kE,KAAAkpE,OAAAvE,GAEAsE,EAxCA,GCqMeG,GA1Lf,WAIA,SAAAC,EAAAt3C,GACA,IAAApd,EAAAod,GAAA,GAKA/xB,KAAAkpE,YAAAr5D,IAAA8E,EAAAgwD,MAAAhwD,EAAAgwD,MAAA,KAKA3kE,KAAAspE,SAAA30D,EAAA6yD,QAKAxnE,KAAAupE,eAAA15D,IAAA8E,EAAAgzD,SAAAhzD,EAAAgzD,SAAA,KAKA3nE,KAAAwpE,gBAAA70D,EAAAizD,eAKA5nE,KAAAypE,UAAA90D,EAAA8yD,SAKAznE,KAAA0pE,YAAA/0D,EAAA+yD,WAKA1nE,KAAA2pE,OAAAh1D,EAAAkjB,MAgJA,OAzIAwxC,EAAA/qE,UAAAk2B,MAAA,WACA,IAAAmwC,EAAA3kE,KAAA8nE,WACA,WAAAuB,EAAA,CACA1E,MAAA12D,MAAApP,QAAA8lE,KAAA/gE,QAAA+gE,QAAA90D,EACA23D,QAAAxnE,KAAAkoE,aACAP,SAAA3nE,KAAA+nE,cAAA/nE,KAAA+nE,cAAAnkE,aAAAiM,EACA+3D,eAAA5nE,KAAAgoE,oBACAP,SAAAznE,KAAAioE,cACAP,WAAA1nE,KAAAmoE,gBACAtwC,MAAA73B,KAAA8yB,cAQAu2C,EAAA/qE,UAAAwpE,SAAA,WACA,OAAA9nE,KAAAkpE,QAOAG,EAAA/qE,UAAA4pE,WAAA,WACA,OAAAloE,KAAAspE,UAOAD,EAAA/qE,UAAAypE,YAAA,WACA,OAAA/nE,KAAAupE,WAOAF,EAAA/qE,UAAA0pE,kBAAA,WACA,OAAAhoE,KAAAwpE,iBAOAH,EAAA/qE,UAAA2pE,YAAA,WACA,OAAAjoE,KAAAypE,WAOAJ,EAAA/qE,UAAA6pE,cAAA,WACA,OAAAnoE,KAAA0pE,aAOAL,EAAA/qE,UAAAw0B,SAAA,WACA,OAAA9yB,KAAA2pE,QAQAN,EAAA/qE,UAAA6qE,SAAA,SAAAxE,GACA3kE,KAAAkpE,OAAAvE,GAQA0E,EAAA/qE,UAAAsrE,WAAA,SAAApC,GACAxnE,KAAAspE,SAAA9B,GAcA6B,EAAA/qE,UAAAqqE,YAAA,SAAAhB,GACA3nE,KAAAupE,UAAA5B,GAQA0B,EAAA/qE,UAAAurE,kBAAA,SAAAjC,GACA5nE,KAAAwpE,gBAAA5B,GAQAyB,EAAA/qE,UAAAwrE,YAAA,SAAArC,GACAznE,KAAAypE,UAAAhC,GAQA4B,EAAA/qE,UAAAyrE,cAAA,SAAArC,GACA1nE,KAAA0pE,YAAAhC,GAQA2B,EAAA/qE,UAAA0rE,SAAA,SAAAnyC,GACA73B,KAAA2pE,OAAA9xC,GAEAwxC,EAxLA,GCkHAY,GAAA,WAIA,SAAAA,EAAAl4C,GACA,IAAApd,EAAAod,GAAA,GAKA/xB,KAAAkqE,UAAA,KAKAlqE,KAAAmqE,kBAAAC,QACAv6D,IAAA8E,EAAAs2C,UACAjrD,KAAAkrD,YAAAv2C,EAAAs2C,UAMAjrD,KAAAumE,WAAA12D,IAAA8E,EAAAyL,KAAAzL,EAAAyL,KAAA,KAKApgB,KAAAqqC,YAAAx6B,IAAA8E,EAAAgqB,MAAAhqB,EAAAgqB,MAAA,KAKA3+B,KAAA0wB,eAAA7gB,IAAA8E,EAAA01D,SAAA11D,EAAA01D,SAAA,KAKArqE,KAAA8mE,aAAAj3D,IAAA8E,EAAAihC,OAAAjhC,EAAAihC,OAAA,KAKA51C,KAAAsqE,WAAAz6D,IAAA8E,EAAAioB,KAAAjoB,EAAAioB,KAAA,KAKA58B,KAAAuqE,QAAA51D,EAAAkZ,OAwKA,OAjKAo8C,EAAA3rE,UAAAk2B,MAAA,WACA,IAAAy2B,EAAAjrD,KAAAqrD,cAIA,OAHAJ,GAAA,iBAAAA,IACAA,EAAwE,EAAAz2B,SAExE,IAAAy1C,EAAA,CACAhf,WACA7qC,KAAApgB,KAAAonE,UAAApnE,KAAAonE,UAAA5yC,aAAA3kB,EACA8uB,MAAA3+B,KAAAunC,WAAAvnC,KAAAunC,WAAA/S,aAAA3kB,EACA+lC,OAAA51C,KAAAunE,YAAAvnE,KAAAunE,YAAA/yC,aAAA3kB,EACA+sB,KAAA58B,KAAAwqE,UAAAxqE,KAAAwqE,UAAAh2C,aAAA3kB,EACAge,OAAA7tB,KAAA6uB,eASAo7C,EAAA3rE,UAAA+yB,YAAA,WACA,OAAArxB,KAAA0wB,WAQAu5C,EAAA3rE,UAAAmsE,YAAA,SAAAJ,GACArqE,KAAA0wB,UAAA25C,GASAJ,EAAA3rE,UAAA+sD,YAAA,WACA,OAAArrD,KAAAkqE,WAQAD,EAAA3rE,UAAAosE,oBAAA,WACA,OAAA1qE,KAAAmqE,mBAOAF,EAAA3rE,UAAA8oE,QAAA,WACA,OAAApnE,KAAAumE,OAOA0D,EAAA3rE,UAAAqsE,QAAA,SAAAvqD,GACApgB,KAAAumE,MAAAnmD,GAOA6pD,EAAA3rE,UAAAipC,SAAA,WACA,OAAAvnC,KAAAqqC,QAOA4/B,EAAA3rE,UAAAssE,SAAA,SAAAjsC,GACA3+B,KAAAqqC,OAAA1L,GAOAsrC,EAAA3rE,UAAAipE,UAAA,WACA,OAAAvnE,KAAA8mE,SAOAmD,EAAA3rE,UAAAusE,UAAA,SAAAj1B,GACA51C,KAAA8mE,QAAAlxB,GAOAq0B,EAAA3rE,UAAAksE,QAAA,WACA,OAAAxqE,KAAAsqE,OAOAL,EAAA3rE,UAAAwsE,QAAA,SAAAluC,GACA58B,KAAAsqE,MAAA1tC,GAOAqtC,EAAA3rE,UAAAuwB,UAAA,WACA,OAAA7uB,KAAAuqE,SAUAN,EAAA3rE,UAAA4sD,YAAA,SAAAD,GACA,mBAAAA,EACAjrD,KAAAmqE,kBAAAlf,EAEA,iBAAAA,EACAjrD,KAAAmqE,kBAAA,SAAAY,GACA,OACiEA,EAAAxtE,IAAA0tD,IAGjEA,OAGAp7C,IAAAo7C,IACAjrD,KAAAmqE,kBAAA,WACA,WAJAnqE,KAAAmqE,kBAAAC,GAQApqE,KAAAkqE,UAAAjf,GAQAgf,EAAA3rE,UAAAmxB,UAAA,SAAA5B,GACA7tB,KAAAuqE,QAAA18C,GAEAo8C,EAxNA,GA6PA,IAAAe,GAAA,KAMO,SAAAC,GAAAF,EAAA56C,GAMP,IAAA66C,GAAA,CACA,IAAA5qD,EAAA,IAAuB4oD,GAAI,CAC3BrE,MAAA,0BAEA/uB,EAAA,IAAyBwzB,GAAM,CAC/BzE,MAAA,UACA9sC,MAAA,OAEAmzC,GAAA,CACA,IAAAf,GAAA,CACAtrC,MAAA,IAA2BmqC,GAAW,CACtC1oD,OACAw1B,SACAvJ,OAAA,IAEAjsB,OACAw1B,YAIA,OAAAo1B,GAMO,SAAAE,KAEP,IAAAv/D,EAAA,GACAsD,EAAA,gBACAG,EAAA,cAgDA,OA9CAzD,EAAW2/B,GAAYI,SAAA,CACvB,IAAAu+B,GAAA,CACA7pD,KAAA,IAAsB4oD,GAAI,CAC1BrE,MAAA,sBAIAh5D,EAAW2/B,GAAYO,eACvBlgC,EAAe2/B,GAAYI,SAC3B//B,EAAW2/B,GAAYE,aAAA,CACvB,IAAAy+B,GAAA,CACAr0B,OAAA,IAAwBwzB,GAAM,CAC9BzE,MAAA11D,EACA4oB,YAGA,IAAAoyC,GAAA,CACAr0B,OAAA,IAAwBwzB,GAAM,CAC9BzE,MAAAv1D,EACAyoB,MApBA,OAwBAlsB,EAAW2/B,GAAYM,mBACvBjgC,EAAe2/B,GAAYE,aAC3B7/B,EAAW2/B,GAAYS,QACvBpgC,EAAe2/B,GAAYI,SAAAj3B,OAAA9I,EAAwB2/B,GAAYE,cAC/D7/B,EAAW2/B,GAAYC,OAAA,CACvB,IAAA0+B,GAAA,CACAtrC,MAAA,IAAuBmqC,GAAW,CAClCz8B,OAAAxU,EACAzX,KAAA,IAA0B4oD,GAAI,CAC9BrE,MAAAv1D,IAEAwmC,OAAA,IAA4BwzB,GAAM,CAClCzE,MAAA11D,EACA4oB,cAGAhK,OAAAvsB,OAGAqK,EAAW2/B,GAAYK,aACvBhgC,EAAe2/B,GAAYC,OAC3B5/B,EAAW2/B,GAAYQ,qBACvBngC,EAAe2/B,GAAYI,SAAAj3B,OAAA9I,EAAwB2/B,GAAYE,aAAA7/B,EAAsB2/B,GAAYC,QACjG5/B,EAOA,SAAAy+D,GAAAW,GACA,OAAAA,EAAA1f,cAEe,IAAA8f,GAAA,GC5eXC,GAAyB,WAC7B,IAAA1iD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4DzBmiD,GACJ,cA+IeC,GAlII,SAAAliD,GAKnB,SAAAmiD,EAAAx5C,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAC6C,GAC7CzB,EAA0B9L,EAAM,GAAG7P,GA0CnC,cAzCA2b,EAAA5kB,aACA4kB,EAAAk7C,oBACAl7C,EAAAm7C,4BACAn7C,EAAAo7C,wBACApiD,EAAAF,EAAAvsB,KAAAmD,KAAAswB,IAAAtwB,MAKA2rE,gBAAA97D,IAAA8E,EAAAi3D,WAAAj3D,EAAAi3D,UAKAtiD,EAAAuiD,mBAAAh8D,IAAA8E,EAAA62D,aACA72D,EAAA62D,aAAA,IAMAliD,EAAAshC,OAAA,KAMAthC,EAAAuhC,oBAAAh7C,EACAyZ,EAAAiiC,SAAA52C,EAAAjJ,OAKA4d,EAAAwiD,2BAAAj8D,IAAA8E,EAAA82D,sBACA92D,EAAA82D,qBAKAniD,EAAAyiD,6BAAAl8D,IAAA8E,EAAA+2D,wBACA/2D,EAAA+2D,uBACApiD,EA6EA,OA/HI8hD,GAASG,EAAAniD,GAuDbmiD,EAAAjtE,UAAA0tE,aAAA,WACA,OAAAhsE,KAAA2rE,YAKAJ,EAAAjtE,UAAA2tE,gBAAA,WACA,OAAAjsE,KAAA6rE,eAMAN,EAAAjtE,UAAA4tE,eAAA,WACA,OACuElsE,KAAAzC,IAAc8tE,KASrFE,EAAAjtE,UAAAgtD,SAAA,WACA,OAAAtrD,KAAA4qD,QAOA2gB,EAAAjtE,UAAAmtD,iBAAA,WACA,OAAAzrD,KAAA6qD,gBAMA0gB,EAAAjtE,UAAA6tE,wBAAA,WACA,OAAAnsE,KAAA8rE,uBAMAP,EAAAjtE,UAAA8tE,0BAAA,WACA,OAAApsE,KAAA+rE,yBAMAR,EAAAjtE,UAAA+tE,eAAA,SAAAC,GACAtsE,KAAA4N,IAAiBy9D,GAAQiB,IAYzBf,EAAAjtE,UAAAitD,SAAA,SAAA7/C,GACA1L,KAAA4qD,YAAA/6C,IAAAnE,IAAoDu/D,GACpDjrE,KAAA6qD,eAAA,OAAAn/C,OACAmE,EDsKO,SAAApH,GACP,IAAA8jE,EACA,sBAAA9jE,EACA8jE,EAAA9jE,MAEA,CAIA,IAAAkjD,EACA19C,MAAApP,QAAA4J,GACAkjD,EAAAljD,GAGY4jB,EAA2B,qBAAAwC,UAAA,IAEvC88B,EAAA,CADyC,IAGzC4gB,EAAA,WACA,OAAA5gB,GAGA,OAAA4gB,EC5LwBC,CAAexsE,KAAA4qD,QACvC5qD,KAAAmc,WAEAovD,EAhImB,CAiIjBn7C,ICrMaq8C,GACf,EADeA,GAEf,qBC2FeC,GA1Ff,WACA,SAAAC,KAuFA,OA9EAA,EAAAruE,UAAAsuE,WAAA,SAAA3hB,EAAA8f,EAAAV,KAMAsC,EAAAruE,UAAAuuE,aAAA,SAAA5hB,KAMA0hB,EAAAruE,UAAAitD,SAAA,SAAA7/C,KAKAihE,EAAAruE,UAAAwuE,WAAA,SAAAC,EAAAhC,KAKA4B,EAAAruE,UAAA0uE,YAAA,SAAAjC,EAAAr/D,KAKAihE,EAAAruE,UAAA2uE,uBAAA,SAAAC,EAAAnC,KAKA4B,EAAAruE,UAAA6uE,eAAA,SAAAC,EAAArC,KAKA4B,EAAAruE,UAAA+uE,oBAAA,SAAAC,EAAAvC,KAKA4B,EAAAruE,UAAAivE,eAAA,SAAAC,EAAAzC,KAKA4B,EAAAruE,UAAAmvE,iBAAA,SAAAC,EAAA3C,KAKA4B,EAAAruE,UAAAqvE,UAAA,SAAAC,EAAA7C,KAKA4B,EAAAruE,UAAAuvE,YAAA,SAAAC,EAAA/C,KAKA4B,EAAAruE,UAAAyvE,SAAA,SAAA9iB,EAAA8f,KAKA4B,EAAAruE,UAAA0vE,mBAAA,SAAApkC,EAAA6L,KAKAk3B,EAAAruE,UAAA2vE,cAAA,SAAAC,EAAAC,KAKAxB,EAAAruE,UAAA8vE,aAAA,SAAAC,EAAAF,KACAxB,EAxFA,GCHA2B,GAAA,CACAC,eAAA,EACAC,WAAA,EACAziC,OAAA,EACA0iC,WAAA,EACAC,OAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,KAAA,EACAC,gBAAA,EACAC,eAAA,GACAC,iBAAA,GACAC,OAAA,IAKWC,GAAe,CAAAb,GAAAQ,MAIfM,GAAiB,CAAAd,GAAAY,QAIrBG,GAAA,CAAAf,GAAAE,YAIAc,GAAA,CAAAhB,GAAAG,YACQc,GAAA,GCrCXC,GAAyB,WAC7B,IAAA9mD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+bdumD,GA7ZE,SAAArmD,GAQjB,SAAAsmD,EAAAtd,EAAAud,EAAAx/C,EAAA+Q,GACA,IAAA5X,EAAAF,EAAAvsB,KAAAmD,YAoEA,OA/DAspB,EAAA8oC,YAMA9oC,EAAAqmD,YAKArmD,EAAA4X,aAKA5X,EAAAsmD,aAAA,EAMAtmD,EAAA6G,aAKA7G,EAAAumD,2BAAA,KAKAvmD,EAAAwmD,2BAAA,KAKAxmD,EAAAymD,mBAAA,KAKAzmD,EAAA0mD,aAAA,GAKA1mD,EAAA6K,YAAA,GAKA7K,EAAA2mD,eAAA,GAKA3mD,EAAA4mD,yBAAA,GAKA5mD,EAAAlN,MAAwE,GACxEkN,EA8UA,OA1ZIkmD,GAASE,EAAAtmD,GAmFbsmD,EAAApxE,UAAA6xE,gBAAA,SAAAC,GACA,IAAAlvC,EAAAlhC,KAAAkhC,WACA,UAAAA,EAAAkvC,IAAA/iE,IAAA,SAAAgjE,GACA,OAAAA,EAAAnvC,KAaAwuC,EAAApxE,UAAAgyE,sBAAA,SAAAj7C,EAAAC,EAAAC,EAAAC,EAAA+6C,EAAAC,GACA,IAAAC,EAAAzwE,KAAAm0B,YAAAz0B,OACAivB,EAAA3uB,KAAA0wE,uBACAF,IACAl7C,GAAAE,GAEA,IAIA94B,EAAAi0E,EAAAC,EAJAC,EAAAx7C,EAAAC,GACAw7C,EAAAz7C,EAAAC,EAAA,GACAy7C,EAAA/wE,KAAAiwE,eACAe,GAAA,EAEA,IAAAt0E,EAAA44B,EAAAE,EAAiC94B,EAAA64B,EAAS74B,GAAA84B,EAC1Cu7C,EAAA,GAAA17C,EAAA34B,GACAq0E,EAAA,GAAA17C,EAAA34B,EAAA,IACAk0E,EAAsB77C,GAAsBpG,EAAAoiD,MAC5CJ,GACAK,IACAhxE,KAAAm0B,YAAAs8C,KAAAI,EACA7wE,KAAAm0B,YAAAs8C,KAAAK,GAEA9wE,KAAAm0B,YAAAs8C,KAAAM,EAAA,GACA/wE,KAAAm0B,YAAAs8C,KAAAM,EAAA,GACAC,GAAA,GAEAJ,IAAiCj9C,GAAYE,cAC7C7zB,KAAAm0B,YAAAs8C,KAAAM,EAAA,GACA/wE,KAAAm0B,YAAAs8C,KAAAM,EAAA,GACAC,GAAA,GAGAA,GAAA,EAEAH,EAAAE,EAAA,GACAD,EAAAC,EAAA,GACAJ,EAAAC,EAOA,OAJAL,GAAAS,GAAAt0E,IAAA44B,EAAAE,KACAx1B,KAAAm0B,YAAAs8C,KAAAI,EACA7wE,KAAAm0B,YAAAs8C,KAAAK,GAEAL,GAUAf,EAAApxE,UAAA2yE,uBAAA,SAAA57C,EAAAC,EAAAo/B,EAAAl/B,EAAA07C,GACA,QAAAx0E,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAyChD,EAAA+C,IAAQ/C,EAAA,CACjD,IAAA64B,EAAAm/B,EAAAh4D,GACAy0E,EAAAnxE,KAAAswE,sBAAAj7C,EAAAC,EAAAC,EAAAC,GAAA,MACA07C,EAAApuE,KAAAquE,GACA77C,EAAAC,EAEA,OAAAD,GAKAo6C,EAAApxE,UAAAsuE,WAAA,SAAA3hB,EAAA8f,EAAAV,GACArqE,KAAAoxE,cAAArG,GACA,IAGA11C,EAAA87C,EAAAD,EAAAG,EACA/7C,EAJA12B,EAAAqsD,EAAAqH,UACA98B,EAAAy1B,EAAA4I,YACAyd,EAAAtxE,KAAAm0B,YAAAz0B,OAGA,GAAAd,GAAoB0sC,GAAYO,cAAA,CAEhCxW,GADA41B,EAA+E,GAC/EkT,6BACAkT,EAAA,GACA,IAAA/a,EAAArL,EAAAmV,WACA9qC,EAAA,EACA,QAAA54B,EAAA,EAAA+C,EAAA62D,EAAA52D,OAA8ChD,EAAA+C,IAAQ/C,EAAA,CACtD,IAAA60E,EAAA,GACAj8C,EAAAt1B,KAAAixE,uBAAA57C,EAAAC,EAAAghC,EAAA55D,GAAA84B,EAAA+7C,GACAF,EAAAvuE,KAAAyuE,GAEAvxE,KAAAgwE,aAAAltE,KAAA,CAAoCysE,GAAiBb,OACrD4C,EAAAD,EAAApmB,EAAAof,EAAgEhU,UAEhEz3D,GAAyB0sC,GAAYI,SAAA9sC,GAAoB0sC,GAAYM,mBACrEslC,EAAA,GACA77C,EAAAz2B,GAAuC0sC,GAAYI,QACgB,EAAAyyB,6BACnElT,EAAAuI,qBACAl+B,EAAAt1B,KAAAixE,uBAAA57C,EAAA,EAC+G,EAAAgmC,UAAA7lC,EAAA07C,GAC/GlxE,KAAAgwE,aAAAltE,KAAA,CAAoCysE,GAAiBb,OACrD4C,EAAAJ,EAAAjmB,EAAAof,EAA+DlU,MAE/Dv3D,GAAyB0sC,GAAYE,aAAA5sC,GAAwB0sC,GAAYK,aACzEtW,EAAA41B,EAAAuI,qBACA2d,EAAAnxE,KAAAswE,sBAAAj7C,EAAA,EAAAA,EAAA31B,OAAA81B,GAAA,MACAx1B,KAAAgwE,aAAAltE,KAAA,CAAoCysE,GAAiBb,OACrD4C,EAAAH,EAAAlmB,EAAAof,EAA8DpU,MAE9Dr3D,GAAyB0sC,GAAYC,QACrClW,EAAA41B,EAAAuI,qBACAxzD,KAAAm0B,YAAArxB,KAAAuyB,EAAA,GAAAA,EAAA,IACA87C,EAAAnxE,KAAAm0B,YAAAz0B,OACAM,KAAAgwE,aAAAltE,KAAA,CAAoCysE,GAAiBb,OACrD4C,EAAAH,EAAAlmB,EAAAof,KAEArqE,KAAAwxE,YAAAzG,IAMA2E,EAAApxE,UAAA8yE,cAAA,SAAArG,GACA/qE,KAAA6vE,2BAAA,CAA2CN,GAAiBhB,eAAAxD,EAAA,GAC5D/qE,KAAAgwE,aAAAltE,KAAA9C,KAAA6vE,4BACA7vE,KAAA8vE,2BAAA,CAA2CP,GAAiBhB,eAAAxD,EAAA,GAC5D/qE,KAAAkwE,yBAAAptE,KAAA9C,KAAA8vE,6BAKAJ,EAAApxE,UAAAmzE,OAAA,WACA,OACAzB,aAAAhwE,KAAAgwE,aACAE,yBAAAlwE,KAAAkwE,yBACA/7C,YAAAn0B,KAAAm0B,cAMAu7C,EAAApxE,UAAAozE,gCAAA,WACA,IAIAh1E,EAJAwzE,EAAAlwE,KAAAkwE,yBAEAA,EAAAyB,UAGA,IACAC,EACAhzE,EAFAT,EAAA+xE,EAAAxwE,OAGAq+C,GAAA,EACA,IAAArhD,EAAA,EAAmBA,EAAAyB,IAAOzB,GAE1BkC,GADAgzE,EAAA1B,EAAAxzE,IACgD,KACxB6yE,GAAiBV,aACzC9wB,EAAArhD,EAEAkC,GAA6B2wE,GAAiBhB,iBAC9CqD,EAAA,GAAAl1E,EACgBohD,GAAe99C,KAAAkwE,yBAAAnyB,EAAArhD,GAC/BqhD,GAAA,IAOA2xB,EAAApxE,UAAA0vE,mBAAA,SAAApkC,EAAA6L,GACA,IAAAr5B,EAAApc,KAAAoc,MACA,GAAAwtB,EAAA,CACA,IAAAioC,EAAAjoC,EAAAk+B,WACA1rD,EAAAwtB,UAA8Bk7B,GAAW+M,GxF7NlC,awFiOPz1D,EAAAwtB,eAAA/5B,EAEA,GAAA4lC,EAAA,CACA,IAAAq8B,EAAAr8B,EAAAqyB,WACA1rD,EAAAq5B,YAAgCqvB,GAAWgN,GxFvMpC,QwFyMP,IAAAC,EAAAt8B,EAAAyyB,aACA9rD,EAAAorD,aAAA33D,IAAAkiE,EACAA,ExFpOO,QwFqOP,IAAAC,EAAAv8B,EAAAsyB,cACA3rD,EAAAurD,SAAAqK,EACAA,EAAApuE,QAA8Co4B,GAC9C,IAAAi2C,EAAAx8B,EAAAuyB,oBACA5rD,EAAAwrD,eAAAqK,GxF/NO,EwFiOP,IAAAC,EAAAz8B,EAAAwyB,cACA7rD,EAAAqrD,cAAA53D,IAAAqiE,EACAA,ExF9NO,QwF+NP,IAAAC,EAAA18B,EAAA3iB,WACA1W,EAAAs5B,eAAA7lC,IAAAsiE,EACAA,ExFnMO,EwFoMP,IAAAC,EAAA38B,EAAA0yB,gBACA/rD,EAAAsrD,gBAAA73D,IAAAuiE,EACAA,ExF/NO,GwFgOPh2D,EAAAs5B,UAAA11C,KAAA4vE,eACA5vE,KAAA4vE,aAAAxzD,EAAAs5B,UAEA11C,KAAA+vE,mBAAA,WAIA3zD,EAAAq5B,iBAAA5lC,EACAuM,EAAAorD,aAAA33D,EACAuM,EAAAurD,SAAA,KACAvrD,EAAAwrD,oBAAA/3D,EACAuM,EAAAqrD,cAAA53D,EACAuM,EAAAs5B,eAAA7lC,EACAuM,EAAAsrD,gBAAA73D,GAOA6/D,EAAApxE,UAAA+zE,WAAA,SAAAj2D,GACA,IAAAwtB,EAAAxtB,EAAAwtB,UAEA0oC,EAAA,CAA+B/C,GAAiBP,eAAAplC,GAKhD,MAJA,iBAAAA,GAEA0oC,EAAAxvE,MAAA,GAEAwvE,GAKA5C,EAAApxE,UAAAi0E,YAAA,SAAAn2D,GACApc,KAAAgwE,aAAAltE,KAAA9C,KAAAwyE,aAAAp2D,KAMAszD,EAAApxE,UAAAk0E,aAAA,SAAAp2D,GACA,OACYmzD,GAAiBN,iBAC7B7yD,EAAAq5B,YAAAr5B,EAAAs5B,UAAA11C,KAAAkhC,WAAA9kB,EAAAorD,QACAprD,EAAAqrD,SAAArrD,EAAAsrD,WACA1nE,KAAAmwE,gBAAA/zD,EAAAurD,UAAAvrD,EAAAwrD,eAAA5nE,KAAAkhC,aAOAwuC,EAAApxE,UAAAm0E,gBAAA,SAAAr2D,EAAAi2D,GACA,IAAAzoC,EAAAxtB,EAAAwtB,UACA,iBAAAA,GAAAxtB,EAAAs2D,kBAAA9oC,SACA/5B,IAAA+5B,GACA5pC,KAAAgwE,aAAAltE,KAAAuvE,EAAAx1E,KAAAmD,KAAAoc,IAEAA,EAAAs2D,iBAAA9oC,IAOA8lC,EAAApxE,UAAAq0E,kBAAA,SAAAv2D,EAAAm2D,GACA,IAAA98B,EAAAr5B,EAAAq5B,YACA+xB,EAAAprD,EAAAorD,QACAG,EAAAvrD,EAAAurD,SACAC,EAAAxrD,EAAAwrD,eACAH,EAAArrD,EAAAqrD,SACA/xB,EAAAt5B,EAAAs5B,UACAgyB,EAAAtrD,EAAAsrD,YACAtrD,EAAAw2D,oBAAAn9B,GACAr5B,EAAAy2D,gBAAArL,GACAG,GAAAvrD,EAAA02D,kBAAmD50B,GAAM9hC,EAAA02D,gBAAAnL,IACzDvrD,EAAA22D,uBAAAnL,GACAxrD,EAAA42D,iBAAAvL,GACArrD,EAAA62D,kBAAAv9B,GACAt5B,EAAA82D,mBAAAxL,UACA73D,IAAA4lC,GACA88B,EAAA11E,KAAAmD,KAAAoc,GAEAA,EAAAw2D,mBAAAn9B,EACAr5B,EAAAy2D,eAAArL,EACAprD,EAAA02D,gBAAAnL,EACAvrD,EAAA22D,sBAAAnL,EACAxrD,EAAA42D,gBAAAvL,EACArrD,EAAA62D,iBAAAv9B,EACAt5B,EAAA82D,kBAAAxL,IAMAgI,EAAApxE,UAAAkzE,YAAA,SAAAzG,GACA/qE,KAAA6vE,2BAAA,GAAA7vE,KAAAgwE,aAAAtwE,OACAM,KAAA6vE,2BAAA,KACA7vE,KAAA8vE,2BAAA,GAAA9vE,KAAAkwE,yBAAAxwE,OACAM,KAAA8vE,2BAAA,KACA,IAAAqD,EAAA,CAAsC5D,GAAiBV,aAAA9D,GACvD/qE,KAAAgwE,aAAAltE,KAAAqwE,GACAnzE,KAAAkwE,yBAAAptE,KAAAqwE,IASAzD,EAAApxE,UAAAoyE,qBAAA,WACA,IAAA1wE,KAAA+vE,qBACA/vE,KAAA+vE,mBAAsCv7C,GAAKx0B,KAAA2vE,WAC3C3vE,KAAA4vE,aAAA,IACA,IAAA/3C,EAAA73B,KAAAmwB,YAAAnwB,KAAA4vE,aAAA,KACgBt7C,GAAMt0B,KAAA+vE,mBAAAl4C,EAAA73B,KAAA+vE,oBAGtB,OAAA/vE,KAAA+vE,oBAEAL,EA3ZiB,CA4ZfhD,IC9bE0G,GAAyB,WAC7B,IAAA1qD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+MdmqD,GA7LO,SAAAjqD,GAQtB,SAAAkqD,EAAAlhB,EAAAud,EAAAx/C,EAAA+Q,GACA,IAAA5X,EAAAF,EAAAvsB,KAAAmD,KAAAoyD,EAAAud,EAAAx/C,EAAA+Q,IAAAlhC,KAkEA,OA7DAspB,EAAAiqD,gBAAA,KAKAjqD,EAAAkqD,mBAAA,KAKAlqD,EAAA+gB,OAAA,KAKA/gB,EAAAmqD,cAAA5jE,EAKAyZ,EAAAoqD,cAAA7jE,EAKAyZ,EAAAqqD,aAAA9jE,EAKAyZ,EAAA27C,cAAAp1D,EAKAyZ,EAAAsqD,cAAA/jE,EAKAyZ,EAAAuqD,cAAAhkE,EAKAyZ,EAAA47C,qBAAAr1D,EAKAyZ,EAAA87C,eAAAv1D,EAKAyZ,EAAA+7C,YAAAx1D,EAKAyZ,EAAAqgD,YAAA95D,EACAyZ,EAgHA,OA1LI8pD,GAASE,EAAAlqD,GAoFbkqD,EAAAh1E,UAAAw1E,iBAAA,SAAAz+C,EAAAC,EAAAC,EAAAC,GACA,OAAAx1B,KAAAswE,sBAAAj7C,EAAAC,EAAAC,EAAAC,GAAA,OAKA89C,EAAAh1E,UAAAqvE,UAAA,SAAAC,EAAA7C,GACA,GAAA/qE,KAAAqqC,OAAA,CAGArqC,KAAAoxE,cAAArG,GACA,IAAA11C,EAAAu4C,EAAApa,qBACAh+B,EAAAo4C,EAAA/Z,YACAkgB,EAAA/zE,KAAAm0B,YAAAz0B,OACA+wE,EAAAzwE,KAAA8zE,iBAAAz+C,EAAA,EAAAA,EAAA31B,OAAA81B,GACAx1B,KAAAgwE,aAAAltE,KAAA,CACYysE,GAAiBX,WAAAmF,EAAAtD,EAAAzwE,KAAAqqC,OAE7BrqC,KAAAyzE,SAAAzzE,KAAA0zE,SAAA1zE,KAAAuzE,gBAAAvzE,KAAA2zE,QAAA3zE,KAAAilE,SACAjlE,KAAA4zE,SAAA5zE,KAAA6zE,SAAA7zE,KAAAklE,gBAAAllE,KAAAolE,UACAplE,KAAAqlE,OAAArlE,KAAAkhC,WAAAlhC,KAAA2pE,SAEA3pE,KAAAkwE,yBAAAptE,KAAA,CACYysE,GAAiBX,WAAAmF,EAAAtD,EAAAzwE,KAAAwzE,mBAE7BxzE,KAAAyzE,SAAAzzE,KAAA0zE,SAAA1zE,KAAAuzE,gBAAAvzE,KAAA2zE,QAAA3zE,KAAAilE,SACAjlE,KAAA4zE,SAAA5zE,KAAA6zE,SAAA7zE,KAAAklE,gBAAAllE,KAAAolE,UACAplE,KAAAqlE,OAAArlE,KAAA2pE,SAEA3pE,KAAAwxE,YAAAzG,KAKAuI,EAAAh1E,UAAAivE,eAAA,SAAAC,EAAAzC,GACA,GAAA/qE,KAAAqqC,OAAA,CAGArqC,KAAAoxE,cAAArG,GACA,IAAA11C,EAAAm4C,EAAAha,qBACAh+B,EAAAg4C,EAAA3Z,YACAkgB,EAAA/zE,KAAAm0B,YAAAz0B,OACA+wE,EAAAzwE,KAAA8zE,iBAAAz+C,EAAA,EAAAA,EAAA31B,OAAA81B,GACAx1B,KAAAgwE,aAAAltE,KAAA,CACYysE,GAAiBX,WAAAmF,EAAAtD,EAAAzwE,KAAAqqC,OAE7BrqC,KAAAyzE,SAAAzzE,KAAA0zE,SAAA1zE,KAAAuzE,gBAAAvzE,KAAA2zE,QAAA3zE,KAAAilE,SACAjlE,KAAA4zE,SAAA5zE,KAAA6zE,SAAA7zE,KAAAklE,gBAAAllE,KAAAolE,UACAplE,KAAAqlE,OAAArlE,KAAAkhC,WAAAlhC,KAAA2pE,SAEA3pE,KAAAkwE,yBAAAptE,KAAA,CACYysE,GAAiBX,WAAAmF,EAAAtD,EAAAzwE,KAAAwzE,mBAE7BxzE,KAAAyzE,SAAAzzE,KAAA0zE,SAAA1zE,KAAAuzE,gBAAAvzE,KAAA2zE,QAAA3zE,KAAAilE,SACAjlE,KAAA4zE,SAAA5zE,KAAA6zE,SAAA7zE,KAAAklE,gBAAAllE,KAAAolE,UACAplE,KAAAqlE,OAAArlE,KAAA2pE,SAEA3pE,KAAAwxE,YAAAzG,KAKAuI,EAAAh1E,UAAAmzE,OAAA,WAeA,OAdAzxE,KAAA0xE,kCAEA1xE,KAAAyzE,cAAA5jE,EACA7P,KAAA0zE,cAAA7jE,EACA7P,KAAAwzE,mBAAA,KACAxzE,KAAAqqC,OAAA,KACArqC,KAAA2zE,aAAA9jE,EACA7P,KAAAqlE,YAAAx1D,EACA7P,KAAAilE,cAAAp1D,EACA7P,KAAA4zE,cAAA/jE,EACA7P,KAAA6zE,cAAAhkE,EACA7P,KAAAklE,qBAAAr1D,EACA7P,KAAAolE,eAAAv1D,EACA7P,KAAA2pE,YAAA95D,EACAuZ,EAAA9qB,UAAAmzE,OAAA50E,KAAAmD,OAKAszE,EAAAh1E,UAAA2vE,cAAA,SAAAC,EAAA8F,GACA,IAAApsB,EAAAsmB,EAAAzI,YACAhvC,EAAAy3C,EAAAr7C,UACAohD,EAAA/F,EAAAxI,qBAAA,GACA/mC,EAAAuvC,EAAA3mC,SAAA,GACAx2B,EAAAm9D,EAAA/tB,YACAngD,KAAAyzE,SAAA7rB,EAAA,GACA5nD,KAAA0zE,SAAA9rB,EAAA,GACA5nD,KAAAuzE,gBAAgF,EAChFvzE,KAAAwzE,mBAAAS,EACAj0E,KAAAqqC,OAAA1L,EACA3+B,KAAA2zE,QAAAl9C,EAAA,GACAz2B,KAAAilE,SAAAiJ,EAAA3/C,aACAvuB,KAAA4zE,SAAA7iE,EAAA,GACA/Q,KAAA6zE,SAAA9iE,EAAA,GACA/Q,KAAAklE,gBAAAgJ,EAAA1I,oBACAxlE,KAAAolE,UAAA8I,EAAA3I,cACAvlE,KAAAqlE,OAAA6I,EAAA5I,WACAtlE,KAAA2pE,OAAAlzC,EAAA,IAEA68C,EA3LsB,CA4LpB7D,IC9MEyE,GAAyB,WAC7B,IAAAxrD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAyHdirD,GAvGY,SAAA/qD,GAQ3B,SAAAgrD,EAAAhiB,EAAAud,EAAAx/C,EAAA+Q,GACA,OAAA9X,EAAAvsB,KAAAmD,KAAAoyD,EAAAud,EAAAx/C,EAAA+Q,IAAAlhC,KA4FA,OApGIk0E,GAASE,EAAAhrD,GAkBbgrD,EAAA91E,UAAA+1E,qBAAA,SAAAh/C,EAAAC,EAAAC,EAAAC,GACA,IAAAu+C,EAAA/zE,KAAAm0B,YAAAz0B,OACA+wE,EAAAzwE,KAAAswE,sBAAAj7C,EAAAC,EAAAC,EAAAC,GAAA,MACA8+C,EAAA,CAAuC/E,GAAiBR,gBAAAgF,EAAAtD,GAGxD,OAFAzwE,KAAAgwE,aAAAltE,KAAAwxE,GACAt0E,KAAAkwE,yBAAAptE,KAAAwxE,GACA/+C,GAKA6+C,EAAA91E,UAAA6uE,eAAA,SAAAC,EAAArC,GACA,IAAA3uD,EAAApc,KAAAoc,MACAq5B,EAAAr5B,EAAAq5B,YACAC,EAAAt5B,EAAAs5B,UACA,QAAA7lC,IAAA4lC,QAAA5lC,IAAA6lC,EAAA,CAGA11C,KAAA2yE,kBAAAv2D,EAAApc,KAAAuyE,aACAvyE,KAAAoxE,cAAArG,GACA/qE,KAAAkwE,yBAAAptE,KAAA,CACYysE,GAAiBN,iBAC7B7yD,EAAAq5B,YAAAr5B,EAAAs5B,UAAAt5B,EAAAorD,QAAAprD,EAAAqrD,SACArrD,EAAAsrD,WAAAtrD,EAAAurD,SAAAvrD,EAAAwrD,gBACWyH,IACX,IAAAh6C,EAAA+3C,EAAA5Z,qBACAh+B,EAAA43C,EAAAvZ,YACA7zD,KAAAq0E,qBAAAh/C,EAAA,EAAAA,EAAA31B,OAAA81B,GACAx1B,KAAAkwE,yBAAAptE,KAA2CssE,IAC3CpvE,KAAAwxE,YAAAzG,KAKAqJ,EAAA91E,UAAA+uE,oBAAA,SAAAC,EAAAvC,GACA,IAAA3uD,EAAApc,KAAAoc,MACAq5B,EAAAr5B,EAAAq5B,YACAC,EAAAt5B,EAAAs5B,UACA,QAAA7lC,IAAA4lC,QAAA5lC,IAAA6lC,EAAA,CAGA11C,KAAA2yE,kBAAAv2D,EAAApc,KAAAuyE,aACAvyE,KAAAoxE,cAAArG,GACA/qE,KAAAkwE,yBAAAptE,KAAA,CACYysE,GAAiBN,iBAC7B7yD,EAAAq5B,YAAAr5B,EAAAs5B,UAAAt5B,EAAAorD,QAAAprD,EAAAqrD,SACArrD,EAAAsrD,WAAAtrD,EAAAurD,SAAAvrD,EAAAwrD,gBACWyH,IAKX,IAJA,IAAA3a,EAAA4Y,EAAAjS,UACAhmC,EAAAi4C,EAAA9Z,qBACAh+B,EAAA83C,EAAAzZ,YACAv+B,EAAA,EACA54B,EAAA,EAAA+C,EAAAi1D,EAAAh1D,OAAyChD,EAAA+C,IAAQ/C,EACjD44B,EAAAt1B,KAAAq0E,qBAAAh/C,EAAAC,EAAAo/B,EAAAh4D,GAAA84B,GAEAx1B,KAAAkwE,yBAAAptE,KAA2CssE,IAC3CpvE,KAAAwxE,YAAAzG,KAKAqJ,EAAA91E,UAAAmzE,OAAA,WACA,IAAAr1D,EAAApc,KAAAoc,MAMA,OALAvM,MAAAuM,EAAAm4D,YAAAn4D,EAAAm4D,YAAAv0E,KAAAm0B,YAAAz0B,QACAM,KAAAgwE,aAAAltE,KAAmCssE,IAEnCpvE,KAAA0xE,kCACA1xE,KAAAoc,MAAA,KACAgN,EAAA9qB,UAAAmzE,OAAA50E,KAAAmD,OAKAo0E,EAAA91E,UAAAi0E,YAAA,SAAAn2D,GACAvM,MAAAuM,EAAAm4D,YAAAn4D,EAAAm4D,YAAAv0E,KAAAm0B,YAAAz0B,SACAM,KAAAgwE,aAAAltE,KAAmCssE,IACnChzD,EAAAm4D,WAAAv0E,KAAAm0B,YAAAz0B,QAEA0c,EAAAm4D,WAAA,EACAnrD,EAAA9qB,UAAAi0E,YAAA11E,KAAAmD,KAAAoc,GACApc,KAAAgwE,aAAAltE,KAA+BusE,KAE/B+E,EArG2B,CAsGzB3E,ICxHE+E,GAAyB,WAC7B,IAAA9rD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAoNdurD,GAhMS,SAAArrD,GAQxB,SAAAsrD,EAAAtiB,EAAAud,EAAAx/C,EAAA+Q,GACA,OAAA9X,EAAAvsB,KAAAmD,KAAAoyD,EAAAud,EAAAx/C,EAAA+Q,IAAAlhC,KAqLA,OA7LIw0E,GAASE,EAAAtrD,GAkBbsrD,EAAAp2E,UAAAq2E,sBAAA,SAAAt/C,EAAAC,EAAAo/B,EAAAl/B,GACA,IAAApZ,EAAApc,KAAAoc,MACAgE,OAAAvQ,IAAAuM,EAAAwtB,UACAgM,EAAA/lC,MAAAuM,EAAAq5B,YACAm/B,EAAAlgB,EAAAh1D,OACAM,KAAAgwE,aAAAltE,KAA+BusE,IAC/BrvE,KAAAkwE,yBAAAptE,KAA2CusE,IAC3C,QAAA3yE,EAAA,EAAuBA,EAAAk4E,IAAal4E,EAAA,CACpC,IAAA64B,EAAAm/B,EAAAh4D,GACAq3E,EAAA/zE,KAAAm0B,YAAAz0B,OACA+wE,EAAAzwE,KAAAswE,sBAAAj7C,EAAAC,EAAAC,EAAAC,GAAA,GAAAogB,GACA0+B,EAAA,CAA2C/E,GAAiBR,gBAAAgF,EAAAtD,GAC5DzwE,KAAAgwE,aAAAltE,KAAAwxE,GACAt0E,KAAAkwE,yBAAAptE,KAAAwxE,GACA1+B,IAGA51C,KAAAgwE,aAAAltE,KAAuCwsE,IACvCtvE,KAAAkwE,yBAAAptE,KAAmDwsE,KAEnDh6C,EAAAC,EAUA,OARAnV,IACApgB,KAAAgwE,aAAAltE,KAAmCqsE,IACnCnvE,KAAAkwE,yBAAAptE,KAA+CqsE,KAE/Cv5B,IACA51C,KAAAgwE,aAAAltE,KAAmCssE,IACnCpvE,KAAAkwE,yBAAAptE,KAA+CssE,KAE/C95C,GAKAo/C,EAAAp2E,UAAAwuE,WAAA,SAAAC,EAAAhC,GACA,IAAA3uD,EAAApc,KAAAoc,MACAwtB,EAAAxtB,EAAAwtB,UACA6L,EAAAr5B,EAAAq5B,YACA,QAAA5lC,IAAA+5B,QAAA/5B,IAAA4lC,EAAA,CAGAz1C,KAAA60E,uBACA70E,KAAAoxE,cAAArG,QACAl7D,IAAAuM,EAAAwtB,WACA5pC,KAAAkwE,yBAAAptE,KAAA,CACgBysE,GAAiBP,e3FV1B,c2FcPn/D,IAAAuM,EAAAq5B,aACAz1C,KAAAkwE,yBAAAptE,KAAA,CACgBysE,GAAiBN,iBACjC7yD,EAAAq5B,YAAAr5B,EAAAs5B,UAAAt5B,EAAAorD,QAAAprD,EAAAqrD,SACArrD,EAAAsrD,WAAAtrD,EAAAurD,SAAAvrD,EAAAwrD,iBAGA,IAAAvyC,EAAA03C,EAAAvZ,qBACAh+B,EAAAu3C,EAAAlZ,YACAkgB,EAAA/zE,KAAAm0B,YAAAz0B,OACAM,KAAAswE,sBAAAj7C,EAAA,EAAAA,EAAA31B,OAAA81B,GAAA,MACA,IAAAs/C,EAAA,CAAiCvF,GAAiBxjC,OAAAgoC,GAClD/zE,KAAAgwE,aAAAltE,KAA+BusE,GAAoByF,GACnD90E,KAAAkwE,yBAAAptE,KAA2CusE,GAAoByF,GAC/D90E,KAAAkwE,yBAAAptE,KAA2CqsE,SAC3Ct/D,IAAAuM,EAAAwtB,WACA5pC,KAAAgwE,aAAAltE,KAAmCqsE,SAEnCt/D,IAAAuM,EAAAq5B,cACAz1C,KAAAgwE,aAAAltE,KAAmCssE,IACnCpvE,KAAAkwE,yBAAAptE,KAA+CssE,KAE/CpvE,KAAAwxE,YAAAzG,KAKA2J,EAAAp2E,UAAAuvE,YAAA,SAAAC,EAAA/C,GACA,IAAA3uD,EAAApc,KAAAoc,MACAwtB,EAAAxtB,EAAAwtB,UACA6L,EAAAr5B,EAAAq5B,YACA,QAAA5lC,IAAA+5B,QAAA/5B,IAAA4lC,EAAA,CAGAz1C,KAAA60E,uBACA70E,KAAAoxE,cAAArG,QACAl7D,IAAAuM,EAAAwtB,WACA5pC,KAAAkwE,yBAAAptE,KAAA,CACgBysE,GAAiBP,e3FpD1B,c2FwDPn/D,IAAAuM,EAAAq5B,aACAz1C,KAAAkwE,yBAAAptE,KAAA,CACgBysE,GAAiBN,iBACjC7yD,EAAAq5B,YAAAr5B,EAAAs5B,UAAAt5B,EAAAorD,QAAAprD,EAAAqrD,SACArrD,EAAAsrD,WAAAtrD,EAAAurD,SAAAvrD,EAAAwrD,iBAGA,IAAAlT,EAAAoZ,EAAAzS,UACAhmC,EAAAy4C,EAAA3P,6BACA3oC,EAAAs4C,EAAAja,YACA7zD,KAAA20E,sBAAAt/C,EAAA,EAAAq/B,EAAAl/B,GACAx1B,KAAAwxE,YAAAzG,KAKA2J,EAAAp2E,UAAAmvE,iBAAA,SAAAC,EAAA3C,GACA,IAAA3uD,EAAApc,KAAAoc,MACAwtB,EAAAxtB,EAAAwtB,UACA6L,EAAAr5B,EAAAq5B,YACA,QAAA5lC,IAAA+5B,QAAA/5B,IAAA4lC,EAAA,CAGAz1C,KAAA60E,uBACA70E,KAAAoxE,cAAArG,QACAl7D,IAAAuM,EAAAwtB,WACA5pC,KAAAkwE,yBAAAptE,KAAA,CACgBysE,GAAiBP,e3FnF1B,c2FuFPn/D,IAAAuM,EAAAq5B,aACAz1C,KAAAkwE,yBAAAptE,KAAA,CACgBysE,GAAiBN,iBACjC7yD,EAAAq5B,YAAAr5B,EAAAs5B,UAAAt5B,EAAAorD,QAAAprD,EAAAqrD,SACArrD,EAAAsrD,WAAAtrD,EAAAurD,SAAAvrD,EAAAwrD,iBAOA,IAJA,IAAAtR,EAAAoX,EAAAtN,WACA/qC,EAAAq4C,EAAAvP,6BACA3oC,EAAAk4C,EAAA7Z,YACAv+B,EAAA,EACA54B,EAAA,EAAA+C,EAAA62D,EAAA52D,OAA0ChD,EAAA+C,IAAQ/C,EAClD44B,EAAAt1B,KAAA20E,sBAAAt/C,EAAAC,EAAAghC,EAAA55D,GAAA84B,GAEAx1B,KAAAwxE,YAAAzG,KAKA2J,EAAAp2E,UAAAmzE,OAAA,WACAzxE,KAAA0xE,kCACA1xE,KAAAoc,MAAA,KAKA,IAAAg2C,EAAApyD,KAAAoyD,UACA,OAAAA,EAEA,IADA,IAAAj+B,EAAAn0B,KAAAm0B,YACAz3B,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAoDhD,EAAA+C,IAAQ/C,EAC5Dy3B,EAAAz3B,GAAiCg9D,GAAIvlC,EAAAz3B,GAAA01D,GAGrC,OAAAhpC,EAAA9qB,UAAAmzE,OAAA50E,KAAAmD,OAKA00E,EAAAp2E,UAAAu2E,qBAAA,WACA,IAAAz4D,EAAApc,KAAAoc,WAEAvM,IADAuM,EAAAwtB,WAEA5pC,KAAAyyE,gBAAAr2D,EAAApc,KAAAqyE,iBAEAxiE,IAAAuM,EAAAq5B,aACAz1C,KAAA2yE,kBAAAv2D,EAAApc,KAAAuyE,cAGAmC,EA9LwB,CA+LtBjF,ICvMK,SAAAsF,GAAAC,EAAA3/C,EAAAC,EAAAC,EAAAC,GACP,IAKA94B,EAAAu4E,EAAAC,EAAAtoD,EAAAC,EAAAsoD,EAAAC,EAAAC,EAAAC,EALAC,EAAAjgD,EACAkgD,EAAAlgD,EACAmgD,EAAA,EACA34E,EAAA,EACA0sC,EAAAlU,EAEA,IAAA54B,EAAA44B,EAAoB54B,EAAA64B,EAAS74B,GAAA84B,EAAA,CAC7B,IAAA1I,EAAAuI,EAAA34B,GACAqwB,EAAAsI,EAAA34B,EAAA,QACAmT,IAAA+c,IACAyoD,EAAAvoD,EAAAF,EACA0oD,EAAAvoD,EAAAF,EACAqoD,EAAAh1E,KAAAoF,KAAA+vE,IAAAC,UACAzlE,IAAAslE,IACAr4E,GAAAm4E,EACA/0E,KAAAw1E,MAAAP,EAAAE,EAAAD,EAAAE,IAAAL,EAAAC,IACAF,IACAl4E,EAAA24E,IACAA,EAAA34E,EACAy4E,EAAA/rC,EACAgsC,EAAA94E,GAEAI,EAAA,EACA0sC,EAAA9sC,EAAA84B,IAGAy/C,EAAAC,EACAC,EAAAE,EACAD,EAAAE,GAEA1oD,EAAAE,EACAD,EAAAE,EAGA,OADAjwB,GAAAo4E,GACAO,EAAA,CAAAjsC,EAAA9sC,GAAA,CAAA64E,EAAAC,GCrCe,IAAAG,GAEf,OCZIC,GAAyB,WAC7B,IAAAltD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6BtB2sD,GAAA,CACPrzE,KAAA,EACA+yB,IAAA,EACAgB,OAAA,GACA9zB,MAAA,EACA+mC,MAAA,EACAssC,IAAA,EACAC,OAAA,GACAC,QAAA,GACAC,WAAA,GACAC,YAAA,GACAC,OAAA,GC5BAC,GAAA,CACAvhB,OAAc4f,GACd4B,QAAe5G,GACfnlC,MAAa+oC,GACbtZ,WAAkBoa,GAClBvW,QAAe6W,GACf6B,KDuBqB,SAAAltD,GAQrB,SAAAmtD,EAAAnkB,EAAAud,EAAAx/C,EAAA+Q,GACA,IAAA5X,EAAAF,EAAAvsB,KAAAmD,KAAAoyD,EAAAud,EAAAx/C,EAAA+Q,IAAAlhC,KA+EA,OA1EAspB,EAAAiqD,gBAKAjqD,EAAAktD,QAAA,KAKAltD,EAAAghD,MAAA,GAKAhhD,EAAAmtD,aAAA,EAKAntD,EAAAotD,aAAA,EAKAptD,EAAAqtD,yBAAA9mE,EAKAyZ,EAAAstD,cAAA,EAKAttD,EAAAutD,eAAA,KAIAvtD,EAAAwtD,WAAA,GAKAxtD,EAAAytD,iBAAA,KAIAztD,EAAA0tD,aAAA,GAKA1tD,EAAA2tD,WAAuE,GAIvE3tD,EAAA4tD,WAAA,GAKA5tD,EAAA6tD,SAAA,GAKA7tD,EAAA8tD,SAAA,GAKA9tD,EAAA+tD,WAAA,GACQn7C,GAAUL,QAClBvS,EAoTA,OA3YIssD,GAASW,EAAAntD,GA4FbmtD,EAAAj4E,UAAAmzE,OAAA,WACA,IAAAzB,EAAA5mD,EAAA9qB,UAAAmzE,OAAA50E,KAAAmD,MAIA,OAHAgwE,EAAAkH,WAAAl3E,KAAAk3E,WACAlH,EAAA8G,WAAA92E,KAAA82E,WACA9G,EAAAgH,aAAAh3E,KAAAg3E,aACAhH,GAKAuG,EAAAj4E,UAAAyvE,SAAA,SAAA9iB,EAAA8f,GACA,IAAAuM,EAAAt3E,KAAA62E,eACAU,EAAAv3E,KAAA+2E,iBACAS,EAAAx3E,KAAAi3E,WACA,QAAAj3E,KAAAsqE,OAAAkN,IAAAF,GAAAC,GAAA,CAGA,IAKA76E,EAAA+C,EALAs+C,EAAA/9C,KAAAm0B,YAAAz0B,OACA+3E,EAAAxsB,EAAAqH,UACAj9B,EAAA,KACAE,EAAA,EACAC,EAAA,EAEA,GAAAgiD,EAAAE,YAAoC/B,GAAa,CACjD,IAAiBn+C,GAAUx3B,KAAA0wE,uBAAAzlB,EAAAr8B,aAC3B,OAEA,IAAA8lC,OAAA,EAGA,GAFAr/B,EAAA41B,EAAAuI,qBACAh+B,EAAAy1B,EAAA4I,YACA4jB,GAAgCnsC,GAAYE,YAC5CkpB,EAAA,CAAAr/B,EAAA31B,aAEA,GAAA+3E,GAAqCnsC,GAAYM,kBACjD8oB,EAAAzJ,EAAAoQ,eAEA,GAAAoc,GAAqCnsC,GAAYI,QACjDgpB,EAAAzJ,EAAAoQ,UAAAz3D,MAAA,UAEA,GAAA6zE,GAAqCnsC,GAAYO,cAAA,CACjD,IAAAyqB,EAAArL,EAAAmV,WAEA,IADA1L,EAAA,GACAh4D,EAAA,EAAA+C,EAAA62D,EAAA52D,OAA8ChD,EAAA+C,IAAQ/C,EACtDg4D,EAAA5xD,KAAAwzD,EAAA55D,GAAA,IAGAsD,KAAAoxE,cAAArG,GAIA,IAHA,IAAA4M,EAAAH,EAAAG,UACAC,EAAA,EACAC,OAAA,EACA16E,EAAA,EAAA26E,EAAApjB,EAAAh1D,OAA6CvC,EAAA26E,IAAQ36E,EAAA,CACrD,GAAA0S,MAAA8nE,EAAA,CACA,IAAA/7B,EAAgCm5B,GAAayC,EAAAxC,SAAA3/C,EAAAuiD,EAAAljB,EAAAv3D,GAAAq4B,GAC7CoiD,EAAAh8B,EAAA,GACAi8B,EAAAj8B,EAAA,QAGAi8B,EAAAnjB,EAAAv3D,GAEA,IAAAT,EAAAk7E,EAAoCl7E,EAAAm7E,EAAan7E,GAAA84B,EACjDx1B,KAAAm0B,YAAArxB,KAAAuyB,EAAA34B,GAAA24B,EAAA34B,EAAA,IAEA64B,EAAAv1B,KAAAm0B,YAAAz0B,OACAk4E,EAAAljB,EAAAv3D,GACA6C,KAAA+3E,WAAAh6B,EAAAxoB,EAAAv1B,KAAAuzE,iBACAx1B,EAAAxoB,EAEAv1B,KAAAwxE,YAAAzG,OAEA,CACA,IAAAiN,EAAA,KAIA,OAHAR,EAAAS,WACAD,EAAA,IAEAP,GACA,KAAqBnsC,GAAYC,MACjC,KAAqBD,GAAYK,YAEjCpW,GADAF,EAAA41B,EAAAuI,sBACA9zD,OACA,MACA,KAAqB4rC,GAAYE,YACjCnW,EAA4F,EAAAqlC,kBAC5F,MACA,KAAqBpvB,GAAYS,OACjC1W,EAAwF,EAAAc,YACxF,MACA,KAAqBmV,GAAYM,kBAEjCrW,GADAF,EAAiG,EAAAmmC,oBACjG97D,OACA,MACA,KAAqB4rC,GAAYI,QACjCrW,EAAyF,EAAA+oC,uBACzFoZ,EAAAS,UACAD,EAAAl1E,KAAAuyB,EAAA,GAAAr1B,KAAAmwB,YAEAqF,EAAA,EACA,MACA,KAAqB8V,GAAYO,cACjC,IAAA00B,EAAiG,EAAAF,wBAEjG,IADAhrC,EAAA,GACA34B,EAAA,EAAA+C,EAAA8gE,EAAA7gE,OAA2DhD,EAAA+C,EAAQ/C,GAAA,EACnE86E,EAAAS,UACAD,EAAAl1E,KAAAy9D,EAAA7jE,EAAA,GAAAsD,KAAAmwB,YAEAkF,EAAAvyB,KAAAy9D,EAAA7jE,GAAA6jE,EAAA7jE,EAAA,IAGA,OADA64B,EAAAF,EAAA31B,QAEA,OAKA61B,EAAAv1B,KAAAswE,sBAAAj7C,EAAA,EAAAE,EAAAC,GAAA,MACAx1B,KAAAk4E,mBACAV,EAAAW,gBAAAX,EAAAY,oBACAp4E,KAAAguE,mBAAAwJ,EAAAW,eAAAX,EAAAY,kBACAZ,EAAAW,iBACAn4E,KAAAyyE,gBAAAzyE,KAAAoc,MAAApc,KAAAqyE,YACAryE,KAAAkwE,yBAAAptE,KAAA9C,KAAAqyE,WAAAryE,KAAAoc,SAEAo7D,EAAAY,mBACAp4E,KAAA2yE,kBAAA3yE,KAAAoc,MAAApc,KAAAuyE,aACAvyE,KAAAkwE,yBAAAptE,KAAA9C,KAAAwyE,aAAAxyE,KAAAoc,UAGApc,KAAAoxE,cAAArG,GAIA,IAAAsN,EAAAr4E,KAAAkhC,WACAlhC,KAAAgwE,aAAAltE,KAAA,CAAoCysE,GAAiBX,WAAA7wB,EAAAxoB,EACrD,KAAAu8B,QAAA9xD,KAAAuzE,gBAAAzhB,IAAA,MACA9xD,KAAA22E,oBAAA32E,KAAA42E,cAAA,EAAA9kB,IACA0lB,EAAA15C,SAAqC7B,GACjBA,GAAcu7C,EAAA15C,QAAAzwB,IAAA,SAAA7O,GAClC,OAAAA,EAAA65E,MAEAb,EAAAW,iBAAAX,EAAAY,iBACAp4E,KAAAsqE,MAAAtqE,KAAAm3E,SAAAn3E,KAAAq3E,WAAAr3E,KAAAo3E,SACAp3E,KAAAy2E,aAAAz2E,KAAA02E,aAAAsB,IAEAh4E,KAAAkwE,yBAAAptE,KAAA,CAAgDysE,GAAiBX,WAAA7wB,EAAAxoB,EACjE,KAAAu8B,QAAA9xD,KAAAuzE,gBAAAzhB,IAAA,MACA9xD,KAAA22E,oBAAA32E,KAAA42E,cAAA,EAAA52E,KAAAkhC,WAAA4wB,IACA0lB,EAAA15C,UACA05C,EAAAW,iBAAAX,EAAAY,iBACAp4E,KAAAsqE,MAAAtqE,KAAAm3E,SAAAn3E,KAAAq3E,WAAAr3E,KAAAo3E,SACAp3E,KAAAy2E,aAAAz2E,KAAA02E,aAAAsB,IAEAh4E,KAAAwxE,YAAAzG,MAMAwL,EAAAj4E,UAAA45E,gBAAA,WACA,IAAAX,EAAAv3E,KAAA+2E,iBACAS,EAAAx3E,KAAAi3E,WACAK,EAAAt3E,KAAA62E,eACAyB,EAAAt4E,KAAAq3E,WACAE,IACAe,KAAAt4E,KAAAg3E,eACAh3E,KAAAg3E,aAAAsB,GAAA,CACA7iC,YAAA8hC,EAAA9hC,YACA+xB,QAAA+P,EAAA/P,QACAI,eAAA2P,EAAA3P,eACAlyB,UAAA6hC,EAAA7hC,UACA+xB,SAAA8P,EAAA9P,SACAC,WAAA6P,EAAA7P,WACAC,SAAA4P,EAAA5P,YAIA,IAAA4Q,EAAAv4E,KAAAm3E,SACAoB,KAAAv4E,KAAAk3E,aACAl3E,KAAAk3E,WAAAqB,GAAA,CACAp/C,KAAAq+C,EAAAr+C,KACAw+C,UAAAH,EAAAG,W9F1MO,S8F2MPa,aAAAhB,EAAAgB,c9FtMO,S8FuMPx5C,MAAAw4C,EAAAx4C,QAGA,IAAAy5C,EAAAz4E,KAAAo3E,SACAE,IACAmB,KAAAz4E,KAAA82E,aACA92E,KAAA82E,WAAA2B,GAAA,CACA7uC,UAAA0tC,EAAA1tC,cAWA2sC,EAAAj4E,UAAAy5E,WAAA,SAAAh6B,EAAAxoB,EAAAy+C,GACA,IAAAuD,EAAAv3E,KAAA+2E,iBACAS,EAAAx3E,KAAAi3E,WACAqB,EAAAt4E,KAAAq3E,WACAkB,EAAAv4E,KAAAm3E,SACAsB,EAAAz4E,KAAAo3E,SACAp3E,KAAAk4E,kBACA,IAAAh3C,EAAAlhC,KAAAkhC,WACAw3C,EAAA7C,GAAA2B,EAAAgB,cACAl6C,EAAAt+B,KAAA02E,aAAAx1C,EACAtE,EAAA58B,KAAAsqE,MACAqO,EAAAnB,EAAAx4C,MACA6oC,EAAA0P,IAAA7hC,UAAAijC,EAAA,IACA34E,KAAAgwE,aAAAltE,KAAA,CAAgCysE,GAAiBZ,WACjD5wB,EAAAxoB,EAAAmjD,EAAA1E,EACAwD,EAAAS,SAAAQ,EAAAjB,EAAAxC,SACA9zC,EACA5C,EAAAg6C,EAAAzQ,EAAA3mC,EAAAtE,EAAA27C,EAAA,IAEAv4E,KAAAkwE,yBAAAptE,KAAA,CAA4CysE,GAAiBZ,WAC7D5wB,EAAAxoB,EAAAmjD,EAAA1E,EACAwD,EAAAS,SAAAQ,EAAAjB,EAAAxC,SACA,EACA12C,EAAAg6C,EAAAzQ,EAAAjrC,EAAA27C,EAAA,EAAAr3C,KAMAq1C,EAAAj4E,UAAA8vE,aAAA,SAAAC,EAAA2F,GACA,IAAAwD,EAAAF,EAAAC,EACA,GAAAlJ,EAGA,CACAruE,KAAAuzE,gBAAoF,EACpF,IAAAqF,EAAAvK,EAAAjH,UACAwR,IAIAtB,EAAAt3E,KAAA62E,kBAEAS,EAAAt3E,KAAA62E,eAAkG,IAElGS,EAAA1tC,UAAsCk7B,GAAW8T,EAAA9Q,Y9F9S1C,S8FuSPwP,EAAAt3E,KAAA62E,eAAA,KASA,IAAAgC,EAAAxK,EAAA9G,YACA,GAAAsR,EAGA,EACAtB,EAAAv3E,KAAA+2E,oBAEAQ,EAAAv3E,KAAA+2E,iBAAwG,IAExG,IAAApP,EAAAkR,EAAA9Q,cACAH,EAAAiR,EAAA7Q,oBACAtyB,EAAAmjC,EAAA/lD,WACA40C,EAAAmR,EAAA1Q,gBACAoP,EAAA/P,QAAAqR,EAAA3Q,c9FxTO,Q8FyTPqP,EAAA5P,aAAA/jE,QAAqEo4B,GACrEu7C,EAAA3P,oBACA/3D,IAAA+3D,E9FjTO,E8FiTiEA,EACxE2P,EAAA9P,SAAAoR,EAAA5Q,e9F7SO,Q8F8SPsP,EAAA7hC,eACA7lC,IAAA6lC,E9FjRO,E8FiRuDA,EAC9D6hC,EAAA7P,gBACA73D,IAAA63D,E9F5SO,G8F4SyDA,EAChE6P,EAAA9hC,YAA0CqvB,GAAW+T,EAAA/Q,Y9FxS9C,a8FoRPyP,EAAAv3E,KAAA+2E,iBAAA,KAsBAS,EAAAx3E,KAAAi3E,WACA,IAAA99C,EAAAk1C,EAAAyK,W9F9UO,kB8F+UKx8C,GAASnD,GACrB,IAAAw/C,EAAAtK,EAAA/I,WACAkS,EAAAS,SAAA5J,EAAA0K,cACAvB,EAAAr+C,OACAq+C,EAAAxC,SAAA3G,EAAA2K,cACAxB,EAAAE,UAAArJ,EAAA4K,eACAzB,EAAAG,UAAAtJ,EAAA6K,eACA1B,EAAAgB,aAAAnK,EAAA8K,mB9FzSO,S8F0SP3B,EAAAW,eAAA9J,EAAA+K,oBACA5B,EAAAY,iBAAA/J,EAAAgL,sBACA7B,EAAA15C,QAAAuwC,EAAAiL,cAA0Dr9C,GAC1Du7C,EAAAx4C,WAAAnvB,IAAA8oE,EAAA,EAAAA,EACA,IAAAY,EAAAlL,EAAAmL,aACAC,EAAApL,EAAAqL,aACAC,EAAAtL,EAAA7I,oBACAoU,EAAAvL,EAAA9I,cACAvlE,KAAAsqE,MAAA+D,EAAA7D,WAAA,GACAxqE,KAAAy2E,kBAAA5mE,IAAA0pE,EAAA,EAAAA,EACAv5E,KAAA02E,kBAAA7mE,IAAA4pE,EAAA,EAAAA,EACAz5E,KAAA22E,yBAAA9mE,IAAA8pE,KACA35E,KAAA42E,mBAAA/mE,IAAA+pE,EAAA,EAAAA,EACA55E,KAAAq3E,WAAAE,GACA,iBAAAA,EAAA9hC,YAAA8hC,EAAA9hC,YAAwF3tB,EAAMyvD,EAAA9hC,cAC9F8hC,EAAA/P,QAAA+P,EAAA3P,eAAA,IAAA2P,EAAA7hC,UACA6hC,EAAA9P,SAAA8P,EAAA7P,WAAA,IAAA6P,EAAA5P,SAAAzgE,OAAA,IACA,GACAlH,KAAAm3E,SAAAK,EAAAr+C,KAAAq+C,EAAAx4C,OAAAw4C,EAAAG,WAAA,KACA33E,KAAAo3E,SAAAE,EACA,iBAAAA,EAAA1tC,UAAA0tC,EAAA1tC,UAAA,IAAuF9hB,EAAMwvD,EAAA1tC,WAC7F,QAtEA5pC,KAAAsqE,MAAA,IAyEAiM,EA5YqB,CA6YnB9G,KC9TaoK,GApGC,WAQhB,SAAAC,EAAA1nB,EAAAud,EAAAx/C,EAAA+Q,EAAA0qC,GAKA5rE,KAAA2rE,WAAAC,EAKA5rE,KAAAuzE,gBAAA,KAKAvzE,KAAA+5E,WAAA3nB,EAKApyD,KAAAg6E,WAAArK,EAKA3vE,KAAA05C,YAAAxY,EAKAlhC,KAAAi6E,YAAA9pD,EAKAnwB,KAAAk6E,kBAAA,GAuDA,OAjDAJ,EAAAx7E,UAAA67E,aAAA,SAAAC,GACA,IAAAxO,EAAA,KAWA,OAVA5rE,KAAA2rE,aACAyO,GACAxO,EAAA5rE,KAAAuzE,iBACkC,MAGlC3H,EAAA5rE,KAAAuzE,gBtG+GA,CAAAjyE,SAAA,WsG9GAwB,KAAA,IAGA8oE,GAKAkO,EAAAx7E,UAAAmzE,OAAA,WACA,IAAA4I,EAAA,GACA,QAAAC,KAAAt6E,KAAAk6E,kBAAA,CACAG,EAAAC,GAAAD,EAAAC,IAAA,GACA,IAAAC,EAAAv6E,KAAAk6E,kBAAAI,GACA,QAAAE,KAAAD,EAAA,CACA,IAAAE,EAAAF,EAAAC,GAAA/I,SACA4I,EAAAC,GAAAE,GAAAC,GAGA,OAAAJ,GAOAP,EAAAx7E,UAAAo8E,WAAA,SAAA7sD,EAAA8sD,GACA,IAAAC,OAAA/qE,IAAAge,IAAAjhB,WAAA,IACAiuE,EAAA76E,KAAAk6E,kBAAAU,QACA/qE,IAAAgrE,IACAA,EAAA,GACA76E,KAAAk6E,kBAAAU,GAAAC,GAEA,IAAAC,EAAAD,EAAAF,QACA9qE,IAAAirE,IAEAA,EAAA,IAAAC,EADA3E,GAAAuE,IACA36E,KAAA+5E,WAAA/5E,KAAAg6E,WAAAh6E,KAAAi6E,YAAAj6E,KAAA05C,aACAmhC,EAAAF,GAAAG,GAEA,OAAAA,GAEAhB,EAlGgB,GCdDkB,GAAA,CACfjvC,OAAA,SACAkvC,QAAA,UACAC,MAAA,QACA1vC,YAAA,aACAE,QAAA,UACAyvC,KAAA,QCOO,SAAAC,GAAA/lD,EAAAC,EAAAC,EAAAC,EAAAoH,EAAAy+C,EAAArG,EAAAh2C,EAAAs8C,EAAAniD,EAAAhB,GAeP,IAdA,IAaAl1B,EAAAiB,EAAAq3E,EAbAn4E,EAAA,GAEAuuE,EAAAt8C,EAAAC,GAAAD,EAAAE,EAAAC,GACAgmD,EAAA5+C,EAAAl9B,OACAktB,EAAAyI,EAAAC,GACAzI,EAAAwI,EAAAC,EAAA,GAEAxI,EAAAuI,EADAC,GAAAE,GAEAzI,EAAAsI,EAAAC,EAAA,GACAmmD,EAAA,EACAxe,EAAA/8D,KAAAoF,KAAApF,KAAA8E,IAAA8nB,EAAAF,EAAA,GAAA1sB,KAAA8E,IAAA+nB,EAAAF,EAAA,IACA6uD,EAAA,GACAC,EAAA,EAEAj/E,EAAA,EAAmBA,EAAA8+E,IAAc9+E,EAAA,CACjCwH,EAAAytE,EAAA6J,EAAA9+E,EAAA,EAAAA,EACA,IAAAk/E,EAAAh/C,EAAAi/C,OAAA33E,GAEA43E,EAAA98C,EAAAs8C,EAAAniD,EADAuiD,EAAA/J,EAAAiK,EAAAF,IAAAE,EACAzjD,GAAAwjD,EACAA,GAAAG,EAEA,IADA,IAAAC,EAAAV,EAAAS,EAAA,EACAxmD,EAAAC,EAAAC,GAAAimD,EAAAxe,EAAA8e,GACAnvD,EAAAE,EACAD,EAAAE,EAEAD,EAAAuI,EADAC,GAAAE,GAEAzI,EAAAsI,EAAAC,EAAA,GACAmmD,GAAAxe,EACAA,EAAA/8D,KAAAoF,KAAApF,KAAA8E,IAAA8nB,EAAAF,EAAA,GAAA1sB,KAAA8E,IAAA+nB,EAAAF,EAAA,IAEA,IAAAmvD,EAAAD,EAAAN,EACA9hD,EAAAz5B,KAAAwsC,MAAA3f,EAAAF,EAAAC,EAAAF,GAIA,GAHA+kD,IACAh4C,KAAA,GAAAz5B,KAAAmtB,GAAAntB,KAAAmtB,SAEAxd,IAAA0rE,EAAA,CACA,IAAA9xC,EAAA9P,EAAA4hD,EAEA,GADA9xC,KAAAvpC,KAAAmtB,IAAA,EAAAntB,KAAAmtB,GAAAoc,GAAAvpC,KAAAmtB,GAAA,EAAAntB,KAAAmtB,GAAA,EACAntB,KAAAg1C,IAAAzL,GAAAurC,EACA,YAGA,IAAA7Z,EAAA6gB,EAAA/e,EACA1zD,EAAgB6J,EAAIwZ,EAAAE,EAAAquC,GACpBzuC,EAAgBtZ,EAAIyZ,EAAAE,EAAAouC,GACpBogB,GAAA5hD,GACAg4C,IACA1uE,EAAA,GAAAsG,EACAtG,EAAA,GAAAypB,EACAzpB,EAAA,GAAA64E,EAAA,GAEA74E,EAAA,GAAAy4E,IAIAC,EAAAG,EACA74E,EAAA,CAAAsG,EAAAmjB,EAAAovD,EAAA,EAAAniD,EAFA+hD,EAAAE,GAGAjK,EACAvuE,EAAA64E,QAAAh5E,GAGAG,EAAAN,KAAAG,GAEAs4E,EAAA5hD,GAEA0hD,GAAAS,EAEA,OAAA14E,ECvFA,IAAI84E,GAAyB,WAC7B,IAAAxzD,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA0CzBizD,GzGkJJ,CAAA76E,SAAA,UyG9II86E,GrGhBJ,cqGkBIC,GAAE,GAEFC,GAAE,GAENC,GAAA,GAEAC,GAAA,GAitBeC,GAhtBH,SAAArzD,GASZ,SAAAszD,EAAAvsD,EAAA+Q,EAAAy7C,EAAAC,EAAA5M,GACA,IAAA1mD,EAAAF,EAAAvsB,KAAAmD,YA8EA,OA1EAspB,EAAAszD,gBAKAtzD,EAAAqzD,WAKArzD,EAAA4X,aAMA5X,EAAA6G,aAKA7G,EAAAuzD,WAKAvzD,EAAA0mD,4BAKA1mD,EAAA6K,YAAA67C,EAAA77C,YAKA7K,EAAAwzD,iBAAA,GAKAxzD,EAAAyzD,mBrGhFA,cqGqFAzzD,EAAA4mD,yBAAAF,EAAAE,yBAKA5mD,EAAA0zD,kBAAA,KAKA1zD,EAAA2zD,cAAA,EAIA3zD,EAAAwtD,WAAA9G,EAAA8G,YAAA,GAIAxtD,EAAA0tD,aAAAhH,EAAAgH,cAAA,GAIA1tD,EAAA4tD,WAAAlH,EAAAkH,YAAA,GAKA5tD,EAAA4zD,QAAA,GACA5zD,EAsnBA,OA7sBI4yD,GAASQ,EAAAtzD,GA4FbszD,EAAAp+E,UAAAgqB,gBAAA,WACQ4T,GAAUH,QAAA/7B,MAClBopB,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OASA08E,EAAAp+E,UAAA6+E,aAAA,SAAAvgD,EAAA27C,EAAAE,EAAAH,GACA,IAAA8E,EACAn/E,EAAAq6E,EAAAC,EAAA37C,EAAA67C,EAAAz4E,KAAAkhC,WACA,IAAahF,GAAUrB,YAAA58B,GAAA,CACvB,IAAAs5E,EAAAe,EAAAt4E,KAAAg3E,aAAAsB,GAAA,KACAhB,EAAAmB,EAAAz4E,KAAA82E,WAAA2B,GAAA,KACAjB,EAAAx3E,KAAAk3E,WAAAqB,GACAr3C,EAAAlhC,KAAAkhC,WACAlC,EAAAw4C,EAAAx4C,MAAAkC,EACAm8C,EAAwBxH,GAAU2B,EAAAG,WlG1D3B,UkG2DP9P,EAAAyQ,GAAAf,EAAA7hC,UAAA6hC,EAAA7hC,UAAA,EACA4nC,EAAA1gD,EAAA/uB,MAAA,MACA0vE,EAAAD,EAAA59E,OACA89E,EAAA,GACA3lD,ElGwHO,SAAAsB,EAAAmkD,EAAAE,GAGP,IAFA,IAAAD,EAAAD,EAAA59E,OACAm4B,EAAA,EACAn7B,EAAA,EAAmBA,EAAA6gF,IAAc7gF,EAAA,CACjC,IAAA+gF,EAAAv/C,GAAA/E,EAAAmkD,EAAA5gF,IACAm7B,EAAA33B,KAAAC,IAAA03B,EAAA4lD,GACAD,EAAA16E,KAAA26E,GAEA,OAAA5lD,EkGhIwB6lD,CAAiBlG,EAAAr+C,KAAAmkD,EAAAE,GACzCG,EAA6B//C,GAAiB45C,EAAAr+C,MAC9C92B,EAAAs7E,EAAAJ,EACAK,EAAA/lD,EAAAgwC,EACAjvC,EAA0BnB,GAAqBv3B,KAAAG,KAAAu9E,EAAA5+C,GAAA9+B,KAAAG,MAAAgC,EAAAwlE,GAAA7oC,IAC/Co+C,EAAAxkD,EAAAhB,OACYsE,GAAUtuB,IAAA3P,EAAAm/E,GACtB,GAAAp+C,GACApG,EAAAoG,WAEApG,EAAAO,KAAAq+C,EAAAr+C,KACAm/C,IACA1/C,EAAA6c,YAAA8hC,EAAA9hC,YACA7c,EAAA8c,UAAAmyB,EACAjvC,EAAA4uC,QAA2D+P,EAAA,QAC3D3+C,EAAA6uC,SAA6D8P,EAAA,SAC7D3+C,EAAA8uC,WAAA6P,EAAA7P,WACA9uC,EAAA+vC,aAAA4O,EAAA5P,SAAAjoE,SACAk5B,EAAA+vC,YAAA4O,EAAA5P,UACA/uC,EAAAgvC,eAAA2P,EAAA3P,iBAGA6Q,IACA7/C,EAAAgR,UAAA0tC,EAAA1tC,WAEAhR,EAAA4/C,aAAA,SACA5/C,EAAA++C,UAAA,SACA,IAAAkG,EAAA,GAAAR,EACA9zE,EAAA8zE,EAAAD,EAAAvlD,MAAAmH,EAAA6+C,EAAAhW,EACAnrE,OAAA,EACA,GAAA47E,EACA,IAAA57E,EAAA,EAA2BA,EAAA6gF,IAAc7gF,EACzCk8B,EAAAklD,WAAAR,EAAA5gF,GAAA6M,EAAAs0E,EAAAL,EAAA9gF,GAAA,IAAAmrE,EAAA8V,GAAAjhF,EAAAihF,GAGA,GAAAlF,EACA,IAAA/7E,EAAA,EAA2BA,EAAA6gF,IAAc7gF,EACzCk8B,EAAAmlD,SAAAT,EAAA5gF,GAAA6M,EAAAs0E,EAAAL,EAAA9gF,GAAA,IAAAmrE,EAAA8V,GAAAjhF,EAAAihF,GAIA,OAAezhD,GAAU3+B,IAAAU,EAAA+B,OAWzB08E,EAAAp+E,UAAA0/E,sBAAA,SAAAplD,EAAA2c,EAAAC,EAAA+mC,EAAAC,EAAAlK,EAAA2L,GACArlD,EAAAgJ,YACAhJ,EAAAiJ,OAAAj9B,MAAAg0B,EAAA2c,GACA3c,EAAAkJ,OAAAl9B,MAAAg0B,EAAA4c,GACA5c,EAAAkJ,OAAAl9B,MAAAg0B,EAAA2jD,GACA3jD,EAAAkJ,OAAAl9B,MAAAg0B,EAAA4jD,GACA5jD,EAAAkJ,OAAAl9B,MAAAg0B,EAAA2c,GACA+8B,IACAtyE,KAAA68E,WAAiDvK,EAAA,GACjDtyE,KAAAumE,MAAA3tC,IAEAqlD,IACAj+E,KAAAk+E,gBAAAtlD,EAA8D,GAC9DA,EAAAgd,WAuBA8mC,EAAAp+E,UAAA6/E,aAAA,SAAAvlD,EAAArvB,EAAAmjB,EAAAiS,EAAAgyB,EAAAC,EAAAojB,EAAA3xE,EAAAsrB,EAAAiR,EAAAC,EAAArI,EAAAwI,EAAAo/C,EAAAvmD,EAAAiG,EAAAw0C,EAAA2L,GACA,IAAAI,EAAA/L,GAAA2L,EAGA10E,GAFAonD,GAAA3xB,EAGAtS,GAFAkkC,GAAA5xB,EAGA,IAAAF,EAAAjH,EAAA+G,EAAAD,EAAA9G,MAAA8G,EAAA9G,MAAA+G,EAAA/G,EACAkH,EAAA18B,EAAAw8B,EAAAF,EAAAt8B,OAAAs8B,EAAAt8B,OAAAw8B,EAAAx8B,EACAi8E,EAAAxgD,EAAA,GAAAgB,EAAAE,EAAAlB,EAAA,GACAygD,EAAAzgD,EAAA,GAAAiB,EAAAC,EAAAlB,EAAA,GACA0gD,EAAAj1E,EAAAu0B,EAAA,GACA2gD,EAAA/xD,EAAAoR,EAAA,IACAugD,GAAA,IAAA7nD,KACY6lD,GAAE,GAAAG,GAAA,GAAAgC,EACFnC,GAAE,GAAMC,GAAE,GAAAmC,EACVnC,GAAE,GAAAC,GAAA,GAAAiC,EAAAF,EACd/B,GAAA,GAAAC,GAAA,GAAAiC,EAAAF,GAEA,IAAA1pE,EAAA,KACA,OAAA2hB,EAAA,CACA,IAAAkoD,EAAAn1E,EAAAonD,EACAguB,EAAAjyD,EAAAkkC,EACA/7C,EAAwBykB,GAAiB8iD,GAAYsC,EAAAC,EAAA,IAAAnoD,GAAAkoD,GAAAC,GACzC/5E,GAAew3E,GAAcC,IAC7Bz3E,GAAew3E,GAAcE,IAC7B13E,GAAew3E,GAAYG,IAC3B33E,GAAew3E,GAAYI,IAC3BvnD,GAAc/0B,KAAA4B,IAAUu6E,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAAt8E,KAAA4B,IAA6Bu6E,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAAt8E,KAAAC,IAA6Bk8E,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAAt8E,KAAAC,IAA6Bk8E,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAoBL,SAGvKlnD,GAAcupD,EAAAC,EAAAD,EAAAF,EAAAG,EAAAF,EAAuCpC,IAEjE,IAAAvkD,EAAAgB,EAAAhB,OACAgnD,EAAAX,IAAA,GAAAj/C,EAAA,IACA58B,EAAyB+5E,GAAS,GAAAyC,GAAAhnD,EAAAC,OAAuCskD,GAAS,GAAAyC,GAAA,GACtEzC,GAAS,GAAAyC,GAAAhnD,EAAAv1B,QAAwC85E,GAAS,GAAAyC,GAAA,EAKtE,GAJAR,IACA70E,EAAArJ,KAAAmU,MAAA9K,GACAmjB,EAAAxsB,KAAAmU,MAAAqY,IAEAsnD,EAAA,CACA,IAAA5xE,GAAA,GAAA4xE,EAAA,GACA,OAEY/0E,GAAM+0E,EAAiBmI,IACnC,IAAA0C,EAAAz8E,EACA,CAAAw2B,EAAA/jB,IAAAjR,MAAA,QAAA+pB,EAAAgR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx1B,EAAAmjB,EAAAsS,GACA,KACA6/C,GAAAR,GACAQ,EAAA/7E,KAAAwvE,EAAA2L,EAAuE5B,GAAIC,GAAEC,GAAAC,IAE7ExI,EAAAlxE,KAAA+7E,QAEAz8E,IACAi8E,GACAr+E,KAAAg+E,sBAAAplD,EAAoDyjD,GAAIC,GAAEC,GAAAC,GACtB,EACA,GAExB99C,GAAS9F,EAAA/jB,EAAA8Y,EAAAgR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx1B,EAAAmjB,EAAAsS,KAOrB09C,EAAAp+E,UAAAioE,MAAA,SAAA3tC,GACA,GAAA54B,KAAA68E,WAAA,CACA,IAAA/2C,EAA2BlhC,GAAc5E,KAAA+8E,mBAAA,OACzC+B,EAAA,IAAA9+E,KAAAkhC,WACAtI,EAAA+I,OACA/I,EAAA2F,UAAAuH,EAAA,GAAAg5C,EAAAh5C,EAAA,GAAAg5C,GACAlmD,EAAA4F,OAAAx+B,KAAAi9E,eAEArkD,EAAAxY,OACApgB,KAAA68E,YACAjkD,EAAAiO,WAQA61C,EAAAp+E,UAAA4/E,gBAAA,SAAAtlD,EAAAg5C,GACAh5C,EAAA6c,YAAgFm8B,EAAA,GAChFh5C,EAAA8c,UAA8Ck8B,EAAA,GAC9Ch5C,EAAA4uC,QAAmDoK,EAAA,GACnDh5C,EAAA6uC,SAAqDmK,EAAA,GACrDh5C,EAAA8uC,WAA+CkK,EAAA,GAC/Ch5C,EAAA+vC,cACA/vC,EAAAgvC,eAAuDgK,EAAA,GACvDh5C,EAAA+vC,YAAyDiJ,EAAA,MAOzD8K,EAAAp+E,UAAAygF,iBAAA,SAAA/K,EAAAjJ,GACA,GAAAiJ,KAAAt0E,OAAA,GACA,IAAAs/E,EAAAhL,EAAA,GACA,MAAAgL,MAAAhL,EAAAt0E,OAAA,GAEA,IAAAu/E,EAAA,CACA59E,KAA4C2yE,EAAA,GAC5CzyE,KAA4CyyE,EAAA,GAC5CxyE,KAA4CwyE,EAAA,GAC5CvyE,KAA4CuyE,EAAA,GAC5Cr2E,MAAAotE,GAEA,IAAA/qE,KAAA48E,cAAAp5E,SAAAy7E,GAAA,CACAj/E,KAAA48E,cAAAl5E,OAAAu7E,GACA,QAAAh6E,EAAA,EAAA86C,EAAAi0B,EAAAt0E,OAA+DuF,EAAA86C,IAAQ96C,EAAA,CACvE,IAAAi6E,EAA6DlL,EAAA/uE,GAC7Di6E,IACAA,EAAAx/E,OAAA,IACAM,KAAAg+E,sBAAAkB,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAE4BxgD,GAAS95B,WAAAiL,EAAAqvE,KAIrClL,EAAAt0E,OAAA,EACgBw1B,GAAmB8+C,MAYnC0I,EAAAp+E,UAAA6gF,iCAAA,SAAAviD,EAAA27C,EAAAD,EAAAG,GACA,IAAAjB,EAAAx3E,KAAAk3E,WAAAqB,GACA6E,EAAAp9E,KAAAm9E,aAAAvgD,EAAA27C,EAAAE,EAAAH,GACAf,EAAAv3E,KAAAg3E,aAAAsB,GACAp3C,EAAAlhC,KAAAkhC,WACAm8C,EAAoBxH,GAAU2B,EAAAG,WlGpSvB,UkGqSPe,EAAuB7C,GAAU2B,EAAAgB,clGhS1B,UkGiSP3Q,EAAA0P,KAAA7hC,UAAA6hC,EAAA7hC,UAAA,EAGA,OACA0nC,QACAzsB,QAJA0sB,EAAAD,EAAAvlD,MAAAqJ,EAAA,MAAAm8C,GAAAxV,EAKAjX,QAJA8nB,EAAA0E,EAAA/6E,OAAA6+B,EAAA,MAAAw3C,GAAA7Q,IAqBA6U,EAAAp+E,UAAA8gF,SAAA,SAAAxmD,EAAA/jB,EAAAwqE,EAAArP,EAAAoO,EAAAkB,EAAAC,GAEA,IAAAC,ErG/UOC,EAAAC,EqGgVP1/E,KAAAg9E,mBAAsC9+B,GAAMrpC,EAAA7U,KAAA+8E,oBAC5CyC,EAAAx/E,KAAAg9E,mBAGAh9E,KAAAg9E,oBACAh9E,KAAAg9E,kBAAA,IAEAwC,EAA+BhvB,GAAWxwD,KAAAm0B,YAAA,EAAAn0B,KAAAm0B,YAAAz0B,OAAA,EAAAmV,EAAA7U,KAAAg9E,mBrGvVnCyC,EqGwV0Bz/E,KAAA+8E,mBrGxV1B2C,EqGwV0B7qE,ErGvVjC4qE,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,IqG4WA,IAxBA,IAIAC,EACAhvB,EAAAC,EAAAgvB,EAAAC,EAAAC,EAAAC,EAAA/L,EAAAr1C,EAAA/B,EAAA27C,EACAD,EAAAG,EAgB8D1N,EAC9DxhE,EAAAmjB,EAvBAszD,GAA4Bp7D,EAAOy6D,GACnC3iF,EAAA,EACA+C,EAAAuwE,EAAAtwE,OACA1C,EAAA,EAIAijF,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAArgF,KAAA88E,iBACAwD,EAAAtgF,KAAAi9E,cACA7gE,EAA+D,CAC/Dwc,UACAsI,WAAAlhC,KAAAkhC,WACA/Q,WAAAnwB,KAAAmwB,WACAqG,SAAA8pD,GAIAC,EAAAvgF,KAAAgwE,iBAAAhwE,KAAA28E,SAAA,MAGAjgF,EAAA+C,GAAA,CACA,IAAAmyE,EAAA5B,EAAAtzE,GAEA,OADoDk1E,EAAA,IAEpD,KAAqBrC,GAAiBhB,eACtCxD,EAAgF6G,EAAA,GAChFoO,GAAAX,EAA6Dv3D,EAAMijD,QAAA1f,cACnE3uD,EAA8Ck1E,EAAA,QAE9C/hE,IAAA0vE,GAA6D/nD,GAAU+nD,EAAAxU,EAAA1f,cAAAz8B,eAIvElyB,EAHAA,EAA8Ck1E,EAAA,KAK9C,MACA,KAAqBrC,GAAiBf,WACtCyR,EAAAM,IACAvgF,KAAAumE,MAAA3tC,GACAqnD,EAAA,GAEAC,EAAAK,IACA3nD,EAAAgd,SACAsqC,EAAA,GAEAD,GAAAC,IACAtnD,EAAAgJ,YACAg+C,EAAAC,EAAA/tB,OAEAp1D,EACA,MACA,KAAqB6yE,GAAiBxjC,OAEtC,IAAAnf,EAAA4yD,EADAxiF,EAA0C40E,EAAA,IAE1C/kD,EAAA2yD,EAAAxiF,EAAA,GAGAgwB,EAFAwyD,EAAAxiF,EAAA,GAEA4vB,EACAK,EAFAuyD,EAAAxiF,EAAA,GAEA6vB,EACArvB,EAAA0C,KAAAoF,KAAA0nB,IAAAC,KACA2L,EAAAiJ,OAAAjV,EAAApvB,EAAAqvB,GACA+L,EAAA8vC,IAAA97C,EAAAC,EAAArvB,EAAA,IAAA0C,KAAAmtB,IAAA,KACA3wB,EACA,MACA,KAAqB6yE,GAAiBd,WACtC71C,EAAA+c,cACAj5C,EACA,MACA,KAAqB6yE,GAAiBb,OACtC1xE,EAA0C40E,EAAA,GAC1C+N,EAAA/N,EAAA,GACA,IAAA3mB,EAA6F2mB,EAAA,GAC7FvH,EAAAuH,EAAA,GACA7nE,EAAA,GAAA6nE,EAAAlyE,OAAAkyE,EAAA,QAAA/hE,EACAuM,EAAA6uC,WACA7uC,EAAA2uD,UACAruE,KAAA2jF,IACAA,EAAA3jF,GAAA,IAEA,IAAA8jF,EAAAH,EAAA3jF,GACAqN,EACAA,EAAAy1E,EAAAxiF,EAAA2iF,EAAA,EAAAa,IAGAA,EAAA,GAAAhB,EAAAxiF,GACAwjF,EAAA,GAAAhB,EAAAxiF,EAAA,GACAwjF,EAAA9gF,OAAA,GAEA2qE,EAAAmW,EAAApkE,KACA1f,EACA,MACA,KAAqB6yE,GAAiBX,WACtC5xE,EAA0C40E,EAAA,GAC1C+N,EAA2C/N,EAAA,GAC3CjzC,EAA2FizC,EAAA,GAE3FjhB,EAAgDihB,EAAA,GAChDhhB,EAAgDghB,EAAA,GAChDoC,EAAAsL,EAAA,KAA+G1N,EAAA,GAC/G,IAAAvvE,EAAmDuvE,EAAA,GACnDjkD,EAAoDikD,EAAA,GACpDhzC,EAAoDgzC,EAAA,GACpD/yC,EAAoD+yC,EAAA,IACpDzM,GAA4DyM,EAAA,IAC5Dp7C,GAAqDo7C,EAAA,IACrD5yC,GAAkD4yC,EAAA,IAClD/5C,GAAkD+5C,EAAA,IAClD,IAAAjzC,GAAAizC,EAAAlyE,QAAA,IAEAk9B,EAAiDg1C,EAAA,IACjD2G,EAAoD3G,EAAA,IACpD0G,EAAsD1G,EAAA,IACtD6G,EAAoD7G,EAAA,IACpD,IAAA6O,GAAAzgF,KAAAm/E,iCAAAviD,EAAA27C,EAAAD,EAAAG,GACA95C,EAAAizC,EAAA,GAAA6O,GAAArD,MACA,IAAA7D,GAA4D3H,EAAA,IAC5DjhB,EAAAihB,EAAA,IAAA6O,GAAA9vB,QAAA4oB,IAAAv5E,KAAAkhC,WACA,IAAAu4C,GAA4D7H,EAAA,IAC5DhhB,EAAAghB,EAAA,IAAA6O,GAAA7vB,QAAA6oB,IAAAz5E,KAAAkhC,WACA7+B,EAAAuvE,EAAA,GAAAjzC,EAAAt8B,OACAw1B,GAAA+5C,EAAA,IAAAjzC,EAAA9G,MAEA,IAAAmgD,QAAA,EACApG,EAAAlyE,OAAA,KACAs4E,GAA2DpG,EAAA,KAE3D,IAAA9zC,QAAA,EAAAq6C,QAAA,EAAAC,QAAA,EACAxG,EAAAlyE,OAAA,IACAo+B,GAA2D8zC,EAAA,IAC3DuG,GAA4DvG,EAAA,IAC5DwG,GAA8DxG,EAAA,MAG9D9zC,GAAkC7B,GAClCk8C,GAAAC,IAAA,GAEAjT,KACA3uC,IAAA8pD,GAGA,IADA,IAAAI,GAAA,EAC0B1jF,EAAA2iF,EAAQ3iF,GAAA,EAClCg7E,OAAA0I,MAAA7oD,GAAA73B,KAAAkhC,YAGAlhC,KAAAm+E,aAAAvlD,EAAA4mD,EAAAxiF,GAAAwiF,EAAAxiF,EAAA,GAAA2hC,EAAAgyB,EAAAC,EAAAojB,EAAA3xE,EAAAsrB,EAAAiR,EAAAC,EAAArI,GAAAwI,GAAAo/C,EAAAvmD,GAAAiG,GAAAq6C,GAAgQ,OAAAC,GAAyE,QAEzUp4E,KAAA++E,iBAAA/K,EAAAjJ,KACAruE,EACA,MACA,KAAqB6yE,GAAiBZ,WACtC,IAAA5wB,GAAkD6zB,EAAA,GAClDr8C,GAAgDq8C,EAAA,GAChD8G,GAAqD9G,EAAA,GACrDoC,EAAAsL,EAAA,KAA+G1N,EAAA,GAC/G,IAAAqG,GAAqDrG,EAAA,GACrD6G,EAAgD7G,EAAA,GAChD,IAAAoD,GAAqDpD,EAAA,GACrD+O,GAA8D/O,EAAA,GAC9DtzC,GAAoDszC,EAAA,GACpD0G,EAAkD1G,EAAA,IAClD,IAAA/J,GAAwD+J,EAAA,IACxDh1C,EAA6Cg1C,EAAA,IAC7C2G,EAAgD3G,EAAA,IAChD,IAAAgP,GAA4DhP,EAAA,IAC5D4F,GAAAx3E,KAAAk3E,WAAAqB,GACAp/C,GAAAq+C,GAAAr+C,KACAw/C,GAAAnB,GAAAx4C,MAAA2hD,GACAE,QAAA,EAEAA,GADA1nD,MAAAn5B,KAAAk9E,QACAl9E,KAAAk9E,QAAA/jD,IAGAn5B,KAAAk9E,QAAA/jD,IAAA,GAEA,IAAA2nD,GAAqC/nB,GAAgBymB,EAAAzhC,GAAAxoB,GAAA,GACrDwrD,GAAApI,GAAiDx6C,GAAwBhF,GAAAyD,EAAAikD,IACzE,GAAA5I,IAAA8I,IAAAD,GAAA,CACA,IAAAnJ,GAAA33E,KAAAk3E,WAAAqB,GAAAZ,UAEA1gE,GAAoCmkE,GAAcoE,EAAAzhC,GAAAxoB,GAAA,EAAAqH,GADlDkkD,GAAAC,IAAiElL,GAAU8B,IACzB3C,GAAA2D,GAAqEx6C,GAAwBhF,GAAA0nD,IAC/I,GAAA5pE,GAAA,CACA,IAAAla,QAAA,EAAAikF,QAAA,EAAAC,QAAA,EAAA7D,QAAA,EAAA/lE,QAAA,EACA,GAAAihE,EACA,IAAAv7E,GAAA,EAAAikF,GAAA/pE,GAAAvX,OAA8D3C,GAAAikF,KAAQjkF,GAEtEkkF,IADA5pE,GAAAJ,GAAAla,KAC8D,GAC9DqgF,GAAAp9E,KAAAm9E,aAAA8D,GAAA1I,EAAA,GAAAD,GACA3nB,EAAgEt5C,GAAA,GAAAwwD,GAChEjX,EAAA8nB,GAAA0E,GAAA/6E,OAAA,MAAAq2E,IAAA7Q,GAAAvpC,GACAt+B,KAAAm+E,aAAAvlD,EACsDvhB,GAAA,GAAiCA,GAAA,GAAA+lE,GAAAzsB,EAAAC,EAAAojB,EAAAoJ,GAAA/6E,OAAA,MACjCgV,GAAA,GAAAupE,IAAA,EAAAxD,GAAAvlD,MAAoDoE,GAAc,WAGxH,GAAAw8C,EACA,IAAA17E,GAAA,EAAAikF,GAAA/pE,GAAAvX,OAA8D3C,GAAAikF,KAAQjkF,GAEtEkkF,IADA5pE,GAAAJ,GAAAla,KAC8D,GAC9DqgF,GAAAp9E,KAAAm9E,aAAA8D,GAAA1I,EAAAE,EAAA,IACA9nB,EAAgEt5C,GAAA,GAChEu5C,EAAA8nB,GAAA0E,GAAA/6E,OAAAi8B,GACAt+B,KAAAm+E,aAAAvlD,EACsDvhB,GAAA,GAAiCA,GAAA,GAAA+lE,GAAAzsB,EAAAC,EAAAojB,EAAAoJ,GAAA/6E,OAAA,MACjCgV,GAAA,GAAAupE,IAAA,EAAAxD,GAAAvlD,MAAoDoE,GAAc,YAKxHj8B,KAAA++E,iBAAA/K,EAAAjJ,KACAruE,EACA,MACA,KAAqB6yE,GAAiBV,aACtC,QAAAh/D,IAAAyvE,EAAA,CAEA,IAAAl8E,GAAAk8E,EADAvU,EAAoF6G,EAAA,IAEpF,GAAAxuE,GACA,OAAAA,KAGA1G,EACA,MACA,KAAqB6yE,GAAiBT,KACtCyR,EACAN,IAGAjgF,KAAAumE,MAAA3tC,KAEAl8B,EACA,MACA,KAAqB6yE,GAAiBR,gBAYtC,IAXA/xE,EAA0C40E,EAAA,GAC1C+N,EAA2C/N,EAAA,GAC3CroE,EAAAi2E,EAAAxiF,GAGA+iF,GAFArzD,EAAA8yD,EAAAxiF,EAAA,IAEA,MADA8iF,EAAAv2E,EAAA,QAEAq2E,GAAAG,IAAAF,IACAjnD,EAAAiJ,OAAAt4B,EAAAmjB,GACAkzD,EAAAE,EACAD,EAAAE,GAEA/iF,GAAA,EAAgCA,EAAA2iF,EAAQ3iF,GAAA,EAGxC8iF,GAFAv2E,EAAAi2E,EAAAxiF,IAEA,KACA+iF,GAFArzD,EAAA8yD,EAAAxiF,EAAA,IAEA,KACAA,GAAA2iF,EAAA,GAAAG,IAAAF,GAAAG,IAAAF,IACAjnD,EAAAkJ,OAAAv4B,EAAAmjB,GACAkzD,EAAAE,EACAD,EAAAE,KAGArjF,EACA,MACA,KAAqB6yE,GAAiBP,eACtCmR,EAAAvO,EACA5xE,KAAA68E,WAAAjL,EAAA,GACAqO,IACAjgF,KAAAumE,MAAA3tC,GACAqnD,EAAA,EACAC,IACAtnD,EAAAgd,SACAsqC,EAAA,IAGAtnD,EAAAgR,UAA0FgoC,EAAA,KAC1Fl1E,EACA,MACA,KAAqB6yE,GAAiBN,iBACtCmR,EAAAxO,EACAsO,IACAtnD,EAAAgd,SACAsqC,EAAA,GAEAlgF,KAAAk+E,gBAAAtlD,EAAsE,KACtEl8B,EACA,MACA,KAAqB6yE,GAAiBL,OACtCqR,EACAL,IAGAtnD,EAAAgd,WAEAl5C,EACA,MACA,UACAA,GAIAujF,GACAjgF,KAAAumE,MAAA3tC,GAEAsnD,GACAtnD,EAAAgd,UAYA8mC,EAAAp+E,UAAA4iF,QAAA,SAAAtoD,EAAA/jB,EAAAyrE,EAAAjB,EAAAjB,GACAp+E,KAAAi9E,cAAAqD,EACAtgF,KAAAo/E,SAAAxmD,EAAA/jB,EAAAwqE,EAAAr/E,KAAAgwE,aAAAoO,OAAAvuE,WAeA6sE,EAAAp+E,UAAA6iF,oBAAA,SAAAvoD,EAAA/jB,EAAAyrE,EAAAjB,EAAA+B,EAAA7B,GAEA,OADAv/E,KAAAi9E,cAAAqD,EACAtgF,KAAAo/E,SAAAxmD,EAAA/jB,EAAAwqE,EAAAr/E,KAAAkwE,0BAAA,EAAAkR,EAAA7B,IAEA7C,EA9sBY,CA+sBVx0D,GCnwBEm5D,GAAyB,WAC7B,IAAA34D,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA0B7Bo4D,GAAA,CACItG,GAAWtvC,QACXsvC,GAAWjvC,OACXivC,GAAWxvC,YACXwvC,GAAWE,MACXF,GAAWG,KACXH,GAAWC,SAEXsG,GAAa,SAAAn4D,GAejB,SAAAo4D,EAAA7R,EAAAx/C,EAAA+Q,EAAAy7C,EAAAC,EAAA6E,EAAAC,GACA,IAAAp4D,EAAAF,EAAAvsB,KAAAmD,YA+CA,OA1CAspB,EAAAq4D,eAAA/E,EAKAtzD,EAAA0wD,WAAArK,EAKArmD,EAAAs4D,UAAAjF,EAKArzD,EAAAowB,YAAAxY,EAKA5X,EAAA2wD,YAAA9pD,EAKA7G,EAAAuiD,cAAA6V,EAKAp4D,EAAAu4D,mBAAA,GAKAv4D,EAAAw4D,qBAAqCrqD,GAAqB,KAK1DnO,EAAAy4D,uBtGpEA,csGqEAz4D,EAAA04D,iBAAAP,GACAn4D,EAyOA,OAvSI+3D,GAASG,EAAAp4D,GAoEbo4D,EAAAljF,UAAA2iC,KAAA,SAAArI,EAAA/jB,GACA,IAAAotE,EAAAjiF,KAAAkiF,cAAArtE,GACA+jB,EAAAgJ,YACAhJ,EAAAiJ,OAAAogD,EAAA,GAAAA,EAAA,IACArpD,EAAAkJ,OAAAmgD,EAAA,GAAAA,EAAA,IACArpD,EAAAkJ,OAAAmgD,EAAA,GAAAA,EAAA,IACArpD,EAAAkJ,OAAAmgD,EAAA,GAAAA,EAAA,IACArpD,EAAAqI,QAOAugD,EAAAljF,UAAA0jF,iBAAA,SAAAP,GACA,QAAA5zD,KAAA4zD,EAAA,CACA,IAAAU,EAAAniF,KAAA6hF,mBAAAh0D,QACAhe,IAAAsyE,IACAniF,KAAA6hF,mBAAAh0D,GAAAs0D,EAAA,IAEA,IAAAC,EAAAX,EAAA5zD,GACA,QAAA8sD,KAAAyH,EAAA,CACA,IAAApS,EAAAoS,EAAAzH,GACAwH,EAAAxH,GAAA,IAA6C8B,GAAQz8E,KAAAi6E,YAAAj6E,KAAA05C,YAAA15C,KAAA4hF,UAAA5hF,KAAA2hF,eAAA3R,MAOrDwR,EAAAljF,UAAAgqB,gBAAA,WACA,QAAArE,KAAAjkB,KAAA6hF,mBAAA,CACA,IAAAM,EAAAniF,KAAA6hF,mBAAA59D,GACA,QAAAhmB,KAAAkkF,EACAA,EAAAlkF,GAAAqqB,kBAGA,IAAAsP,EAAA53B,KAAA8hF,qBAAAlqD,OACAA,EAAAC,MAAAD,EAAAv1B,OAAA,EACA+mB,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAMAwhF,EAAAljF,UAAA+jF,aAAA,SAAAF,GACA,QAAAt0D,KAAA7tB,KAAA6hF,mBAEA,IADA,IAAAS,EAAAtiF,KAAA6hF,mBAAAh0D,GACAnxB,EAAA,EAAA+C,EAAA0iF,EAAAziF,OAAkDhD,EAAA+C,IAAQ/C,EAC1D,GAAAylF,EAAAzlF,KAAA4lF,EACA,SAIA,UAaAd,EAAAljF,UAAAyhC,2BAAA,SAAApL,EAAAxE,EAAAqG,EAAAwJ,EAAAq/C,EAAAh3E,EAAAk6E,GAEA,IAaAC,EAbAC,EAAA,GADAziD,EAAA9/B,KAAAmU,MAAA2rB,IACA,EACAnrB,EAAwBykB,GAAgBt5B,KAAA+hF,uBAAA/hD,EAAA,GAAAA,EAAA,KAAA7P,GAAA,EAAAA,GAAAqG,GAAA7B,EAAA,IAAAA,EAAA,IACxCiE,EAAA54B,KAAA8hF,qBACAlpD,EAAAhB,OAAAC,QAAA4qD,GAAA7pD,EAAAhB,OAAAv1B,SAAAogF,GACA7pD,EAAAhB,OAAAC,MAAA4qD,EACA7pD,EAAAhB,OAAAv1B,OAAAogF,GAGA7pD,EAAAsM,UAAA,IAAAu9C,UAMA5yE,IAAA7P,KAAA6rE,gBAEYx3C,GADZmuD,E1GFA,CAAAlhF,SAAA,U0GG4BqzB,GAChBL,GAAMkuD,EAAAryD,GAAAnwB,KAAA6rE,cAAA7rC,GAAAwiD,IAElB,IACAE,EAMA/H,EAPAgI,EAkLO,SAAAt2C,GACP,QAAAx8B,IAAA+yE,GAAAv2C,GACA,OAAAu2C,GAAAv2C,GAIA,IAFA,IAAAw2C,EAAA,EAAAx2C,EAAA,EACA9pC,EAAA,IAAA0L,MAAA40E,GACAnmF,EAAA,EAAmBA,EAAAmmF,EAAenmF,IAClC6F,EAAA7F,GAAA,IAAAuR,MAAA40E,GAEA,IAAAt5E,EAAA8iC,EACA3f,EAAA,EACAliB,EAAA,EACA,KAAAjB,GAAAmjB,GACAo2D,GAAAvgF,EAAA8pC,EAAA9iC,EAAA8iC,EAAA3f,GACAo2D,GAAAvgF,EAAA8pC,EAAA3f,EAAA2f,EAAA9iC,GACAu5E,GAAAvgF,EAAA8pC,EAAA3f,EAAA2f,EAAA9iC,GACAu5E,GAAAvgF,EAAA8pC,EAAA9iC,EAAA8iC,EAAA3f,GACAo2D,GAAAvgF,EAAA8pC,EAAA9iC,EAAA8iC,EAAA3f,GACAo2D,GAAAvgF,EAAA8pC,EAAA3f,EAAA2f,EAAA9iC,GACAu5E,GAAAvgF,EAAA8pC,EAAA3f,EAAA2f,EAAA9iC,GACAu5E,GAAAvgF,EAAA8pC,EAAA9iC,EAAA8iC,EAAA3f,GAGA,IADAliB,GAAA,MADAkiB,GAEAnjB,GAAA,MAEAiB,GAAA,KADAjB,GAAA,IAKA,OADAq5E,GAAAv2C,GAAA9pC,EACAA,EA/MAwgF,CAAA/iD,GAYA,SAAAs/C,EAAAvU,GAEA,IADA,IAAAiY,EAAApqD,EAAA2J,aAAA,IAAAkgD,KAAAx/E,KACAggF,EAAA,EAA6BA,EAAAR,EAAmBQ,IAChD,QAAAC,EAAA,EAAiCA,EAAAT,EAAmBS,IACpD,GAAAP,EAAAM,GAAAC,IACAF,EAAA,GAAAE,EAAAT,EAAAQ,GAAA,MACA,IAAAE,OAAA,EAKA,QAJAT,GAAA/H,GAAyEK,GAAWE,OAAAP,GAAyBK,GAAWG,OACxH,IAAAuH,EAAA9hF,QAAAmqE,MACAoY,EAAA96E,EAAA0iE,IAEAoY,QAIAvqD,EAAAsM,UAAA,IAAAu9C,MAzBAziF,KAAA2hF,iBACAe,EAAA1iF,KAAA2hF,eAAA5+E,MAAAsK,IAAA,SAAAytB,GACA,OAAAA,EAAAn9B,SAgCA,IAEAjB,EAAAuI,EAAAk9E,EAAAiB,EAAAhgF,EAFA+hC,EAAA/nC,OAAAsL,KAAA1I,KAAA6hF,oBAAAx0E,IAAA7D,QAGA,IAFA27B,EAAAx+B,KAAgBg3C,IAEhBjhD,EAAAyoC,EAAAzlC,OAAA,EAA+BhD,GAAA,IAAQA,EAAA,CACvC,IAAAk+E,EAAAz1C,EAAAzoC,GAAAkQ,WAEA,IADAu1E,EAAAniF,KAAA6hF,mBAAAjH,GACA31E,EAAAq8E,GAAA5hF,OAAA,EAAsCuF,GAAA,IAAQA,EAG9C,QAAA4K,KADAuzE,EAAAjB,EADAxH,EAAA2G,GAAAr8E,KAGA,IAAAs9E,GACA5H,GAAwCK,GAAWE,OAAAP,GAAyBK,GAAWG,MAWvF,GADA/3E,EAAAggF,EAAAjC,oBAAAvoD,EAAA/jB,EAAA2hB,EAAA6oD,EAAAC,EAAAkD,GAEA,OAAAp/E,MAZuF,CACvF,IAAAwoE,EAAA2W,EAAA3H,GACAhP,EAIAA,EAAA9oE,KAAAsgF,EAAAvuE,EAAAjR,MAAA,IAHA2+E,EAAA3H,GAAA,CAAAwI,EAAAvuE,EAAAjR,MAAA,OAqBA49E,EAAAljF,UAAA4jF,cAAA,SAAArtE,GACA,IAAA86D,EAAA3vE,KAAAg6E,WACA,IAAArK,EACA,YAEA,IAAAtuE,EAAAsuE,EAAA,GACApuE,EAAAouE,EAAA,GACAnuE,EAAAmuE,EAAA,GACAluE,EAAAkuE,EAAA,GACAsS,EAAA,CAAA5gF,EAAAE,EAAAF,EAAAI,EAAAD,EAAAC,EAAAD,EAAAD,GAEA,OADQivD,GAAWyxB,EAAA,MAAAptE,EAAAotE,GACnBA,GAKAT,EAAAljF,UAAAsmB,QAAA,WACA,OAAeA,EAAO5kB,KAAA6hF,qBAYtBL,EAAAljF,UAAA4iF,QAAA,SAAAtoD,EAAA/jB,EAAAyrE,EAAAjB,EAAAjB,EAAAiF,EAAAC,GAEA,IAAAn+C,EAAA/nC,OAAAsL,KAAA1I,KAAA6hF,oBAAAx0E,IAAA7D,QACA27B,EAAAx+B,KAAgBg3C,IAGhB39C,KAAAg6E,aACAphD,EAAA+I,OACA3hC,KAAAihC,KAAArI,EAAA/jB,IAEA,IACAnY,EAAA+C,EAAAwF,EAAA86C,EAAA86B,EAAAC,EADAyI,EAAAF,GAAA/B,GAEA,IAAA5kF,EAAA,EAAA+C,EAAA0lC,EAAAzlC,OAAmChD,EAAA+C,IAAQ/C,EAAA,CAC3C,IAAAk+E,EAAAz1C,EAAAzoC,GAAAkQ,WAEA,IADAiuE,EAAA76E,KAAA6hF,mBAAAjH,GACA31E,EAAA,EAAA86C,EAAAwjC,EAAA7jF,OAAiDuF,EAAA86C,IAAQ96C,EAAA,CACzD,IAAA01E,EAAA4I,EAAAt+E,GAEA,QAAA4K,KADAirE,EAAAD,EAAAF,IAEA,IAAA2I,GACA3I,GAAwCK,GAAWE,OAAAP,GAAyBK,GAAWG,KAUvFL,EAAAoG,QAAAtoD,EAAA/jB,EAAAyrE,EAAAjB,EAAAjB,OAVuF,CACvF,IAAAxS,EAAA0X,EAAA1I,GACAhP,EAIAA,EAAA9oE,KAAAg4E,EAAAjmE,EAAAjR,MAAA,IAHA0/E,EAAA1I,GAAA,CAAAE,EAAAjmE,EAAAjR,MAAA,MAYA5D,KAAAg6E,YACAphD,EAAAiO,WAGA26C,EAxSiB,CAySft5D,GAMF06D,GAAA,CACAY,EAAA,QASA,SAAAV,GAAAtjF,EAAA+J,EAAAmjB,GACA,IAAAhwB,EACA2vC,EAAAnsC,KAAAmkB,MAAA7kB,EAAAE,OAAA,GACA,GAAA6J,GAAA8iC,EACA,IAAA3vC,EAAA2vC,EAAwB3vC,EAAA6M,EAAO7M,IAC/B8C,EAAA9C,GAAAgwB,IAAA,OAGA,GAAAnjB,EAAA8iC,EACA,IAAA3vC,EAAA6M,EAAA,EAAuB7M,EAAA2vC,EAAY3vC,IACnC8C,EAAA9C,GAAAgwB,IAAA,EA6De,IAAA+2D,GAAA,GC1ZfC,GAAA,GAOAC,GAAA,CACA9nB,MA4MA,SAAA+nB,EAAA34B,EAAAv/C,EAAAq/D,GACA,IAAAmD,EAAAxiE,EAAA67B,WACA,GAAA2mC,EAAA,CACA,GAAAA,EAAAvI,iBAA0CxmC,GAAUhM,OACpD,OAEA,IAAA0wD,EAAAD,EAAAlJ,WAAAhvE,EAAAmjB,YAAqEmsD,GAAWE,OAChF2I,EAAA5V,cAAAC,EAAA0V,EAAAzJ,cAAA,IACA0J,EAAAlW,UAAA1iB,EAAA8f,GAEA,IAAAsD,EAAA3iE,EAAA8+D,UACA,GAAA6D,EAAA,CACA,IAAAyV,EAAAF,EAAAlJ,WAAAhvE,EAAAmjB,YAAoEmsD,GAAWG,MAC/E2I,EAAA1V,aAAAC,EAAAuV,EAAAzJ,eAAAjM,IACA4V,EAAA/V,SAAA9iB,EAAA8f,KAzNAhR,WA8IA,SAAA6pB,EAAA34B,EAAAv/C,EAAAq/D,GACA,IAAAt1B,EAAA/pC,EAAA67D,YACA,GAAA9xB,EAAA,CACA,IAAAsuC,EAAAH,EAAAlJ,WAAAhvE,EAAAmjB,YAA0EmsD,GAAWxvC,aACrFu4C,EAAA/V,mBAAA,KAAAv4B,GACAsuC,EAAA5W,eAAAliB,EAAA8f,GAEA,IAAAsD,EAAA3iE,EAAA8+D,UACA,GAAA6D,EAAA,CACA,IAAAyV,EAAAF,EAAAlJ,WAAAhvE,EAAAmjB,YAAoEmsD,GAAWG,MAC/E2I,EAAA1V,aAAAC,EAAAuV,EAAAzJ,cAAA,IACA2J,EAAA/V,SAAA9iB,EAAA8f,KAxJAnN,QAwPA,SAAAgmB,EAAA34B,EAAAv/C,EAAAq/D,GACA,IAAAnhC,EAAAl+B,EAAA07D,UACA3xB,EAAA/pC,EAAA67D,YACA,GAAA39B,GAAA6L,EAAA,CACA,IAAAuuC,EAAAJ,EAAAlJ,WAAAhvE,EAAAmjB,YAAuEmsD,GAAWtvC,SAClFs4C,EAAAhW,mBAAApkC,EAAA6L,GACAuuC,EAAAnW,YAAA5iB,EAAA8f,GAEA,IAAAsD,EAAA3iE,EAAA8+D,UACA,GAAA6D,EAAA,CACA,IAAAyV,EAAAF,EAAAlJ,WAAAhvE,EAAAmjB,YAAoEmsD,GAAWG,MAC/E2I,EAAA1V,aAAAC,EAAAuV,EAAAzJ,cAAA,IACA2J,EAAA/V,SAAA9iB,EAAA8f,KAnQA/O,WAgOA,SAAA4nB,EAAA34B,EAAAv/C,EAAAq/D,GACA,IAAAmD,EAAAxiE,EAAA67B,WACA,GAAA2mC,EAAA,CACA,GAAAA,EAAAvI,iBAA0CxmC,GAAUhM,OACpD,OAEA,IAAA0wD,EAAAD,EAAAlJ,WAAAhvE,EAAAmjB,YAAqEmsD,GAAWE,OAChF2I,EAAA5V,cAAAC,EAAA0V,EAAAzJ,cAAA,IACA0J,EAAAtW,eAAAtiB,EAAA8f,GAEA,IAAAsD,EAAA3iE,EAAA8+D,UACA,GAAA6D,EAAA,CACA,IAAAyV,EAAAF,EAAAlJ,WAAAhvE,EAAAmjB,YAAoEmsD,GAAWG,MAC/E2I,EAAA1V,aAAAC,EAAAuV,EAAAzJ,eAAAjM,IACA4V,EAAA/V,SAAA9iB,EAAA8f,KA7OAlQ,gBA+JA,SAAA+oB,EAAA34B,EAAAv/C,EAAAq/D,GACA,IAAAt1B,EAAA/pC,EAAA67D,YACA,GAAA9xB,EAAA,CACA,IAAAsuC,EAAAH,EAAAlJ,WAAAhvE,EAAAmjB,YAA0EmsD,GAAWxvC,aACrFu4C,EAAA/V,mBAAA,KAAAv4B,GACAsuC,EAAA1W,oBAAApiB,EAAA8f,GAEA,IAAAsD,EAAA3iE,EAAA8+D,UACA,GAAA6D,EAAA,CACA,IAAAyV,EAAAF,EAAAlJ,WAAAhvE,EAAAmjB,YAAoEmsD,GAAWG,MAC/E2I,EAAA1V,aAAAC,EAAAuV,EAAAzJ,cAAA,IACA2J,EAAA/V,SAAA9iB,EAAA8f,KAzKAvL,aAkLA,SAAAokB,EAAA34B,EAAAv/C,EAAAq/D,GACA,IAAAnhC,EAAAl+B,EAAA07D,UACA3xB,EAAA/pC,EAAA67D,YACA,GAAA9xB,GAAA7L,EAAA,CACA,IAAAo6C,EAAAJ,EAAAlJ,WAAAhvE,EAAAmjB,YAAuEmsD,GAAWtvC,SAClFs4C,EAAAhW,mBAAApkC,EAAA6L,GACAuuC,EAAAvW,iBAAAxiB,EAAA8f,GAEA,IAAAsD,EAAA3iE,EAAA8+D,UACA,GAAA6D,EAAA,CACA,IAAAyV,EAAAF,EAAAlJ,WAAAhvE,EAAAmjB,YAAoEmsD,GAAWG,MAC/E2I,EAAA1V,aAAAC,EAAAuV,EAAAzJ,cAAA,IACA2J,EAAA/V,SAAA9iB,EAAA8f,KA7LAkZ,mBA2HA,SAAAC,EAAAj5B,EAAAv/C,EAAAq/D,GACA,IACAruE,EAAA+C,EADA0kF,EAAAl5B,EAAAm5B,qBAEA,IAAA1nF,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAAuChD,EAAA+C,IAAQ/C,EAAA,CAC/C,IAAA2nF,EAAAV,GAAAQ,EAAAznF,GAAA41D,WACA+xB,EAAAH,EAAAC,EAAAznF,GAAAgP,EAAAq/D,KA/HAlW,OAiCA,SAAA+uB,EAAA34B,EAAAv/C,EAAAq/D,GACA,IAAAnhC,EAAAl+B,EAAA07D,UACA3xB,EAAA/pC,EAAA67D,YACA,GAAA39B,GAAA6L,EAAA,CACA,IAAA6uC,EAAAV,EAAAlJ,WAAAhvE,EAAAmjB,YAAsEmsD,GAAWjvC,QACjFu4C,EAAAtW,mBAAApkC,EAAA6L,GACA6uC,EAAAxX,WAAA7hB,EAAA8f,GAEA,IAAAsD,EAAA3iE,EAAA8+D,UACA,GAAA6D,EAAA,CACA,IAAAyV,EAAAF,EAAAlJ,WAAAhvE,EAAAmjB,YAAoEmsD,GAAWG,MAC/E2I,EAAA1V,aAAAC,EAAAuV,EAAAzJ,cAAA,IACA2J,EAAA/V,SAAA9iB,EAAA8f,MAtCO,SAAAwZ,GAAAC,EAAAC,GACP,OAAA3/B,SAAoBh9B,EAAM08D,GAAA,IAAA1/B,SAA2Bh9B,EAAM28D,GAAA,IAOpD,SAAAC,GAAAv0D,EAAA+Q,GACP,IAAAkxB,EAAAuyB,GAAAx0D,EAAA+Q,GACA,OAAAkxB,IAOO,SAAAuyB,GAAAx0D,EAAA+Q,GACP,OAAAwiD,GAAAvzD,EAAA+Q,EAiCO,SAAA0jD,GAAAV,EAAAnZ,EAAAr/D,EAAA2mD,EAAAvtC,EAAAtH,GACP,IAAAu/B,GAAA,EACAmxB,EAAAxiE,EAAA67B,WACA,GAAA2mC,EAAA,CACA,IAAA1tC,EAAA0tC,EAAAvI,gBACAnlC,GAA0BrB,GAAUhM,QAAAqN,GAAyBrB,GAAUtY,MACvEqnD,EAAAhI,oBAAAphD,EAAAtH,IAGAgjB,GAA8BrB,GAAUjM,MACxCg7C,EAAAzqE,OAEA+8B,EAAA0tC,EAAAvI,gBACAuI,EAAAjI,kBAAAnhD,EAAAtH,GACAu/B,GAAA,GAIA,OAQA,SAAAmnC,EAAAnZ,EAAAr/D,EAAA2mD,GACA,IAAApH,EAAAv/C,EAAAg/D,qBAAAh/D,CAAAq/D,GACA,IAAA9f,EACA,OAEA,IAAA0I,EAAA1I,EAAAD,sBAAAqH,GAEA,GADA3mD,EAAA2lB,eAeA,SAAAwzD,EAAAX,EAAAj5B,EAAAv/C,EAAAq/D,GACA,GAAA9f,EAAAqH,WAA8BhnB,GAAYQ,oBAAA,CAE1C,IADA,IAAAq4C,EAAoF,EAAAW,gBACpFpoF,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvDmoF,EAAAX,EAAAC,EAAAznF,GAAAgP,EAAAq/D,GAEA,OAEA,IAAA+P,EAAAoJ,EAAAxJ,WAAAhvE,EAAAmjB,YAA2DmsD,GAAWC,SACtEH,EAAAlO,WAA6E,EAAA7B,EAAAr/D,EAAA2lB,eAtB7EwzD,CAAAX,EAAAvwB,EAAAjoD,EAAAq/D,OAEA,CACA,IAAAsZ,EAAAV,GAAAhwB,EAAArB,WACA+xB,EAAAH,EAAAvwB,EAAAjoD,EAAAq/D,IArBAga,CAAAb,EAAAnZ,EAAAr/D,EAAA2mD,GACAtV,ECtGA,IAAIioC,GAAyB,WAC7B,IAAAt8D,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAqVd+7D,GApTc,SAAA77D,GAK7B,SAAA87D,EAAAC,GACA,IAAA77D,EAAAF,EAAAvsB,KAAAmD,KAAAmlF,IAAAnlF,KA0CA,OArCAspB,EAAAq4D,eAAAwD,EAAAnZ,eAA4DoZ,KAAK,OAAAv1E,GAAA,KAKjEyZ,EAAA+7D,QAAA,EAKA/7D,EAAAg8D,mBAAA,EAKAh8D,EAAAi8D,oBAAAzzB,IAKAxoC,EAAAwZ,gB5G4HA,CAAAxhC,SAAA,U4GvHAgoB,EAAAk8D,qBAAA,KAKAl8D,EAAAm8D,aAAA,KAKAn8D,EAAAo8D,oBAAA,EACQ9/D,EAAOsW,GAAY9V,EAASE,MAAAgD,EAAAq8D,oBAAAr8D,GACpCA,EAkQA,OAjTI07D,GAASE,EAAA97D,GAoDb87D,EAAA5mF,UAAAgqB,gBAAA,WACQnC,EAAS+V,GAAY9V,EAASE,MAAAtmB,KAAA2lF,oBAAA3lF,MACtCopB,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAKAklF,EAAA5mF,UAAAizB,YAAA,SAAAJ,EAAAjB,GACA,IAAA0I,EAAA54B,KAAA44B,QACAhB,EAAAgB,EAAAhB,OACAssD,EAAAlkF,KAAAylF,aACA,IAAAvB,KAAAt/D,UAIA,OAHAgT,EAAAC,MAAA,IACAD,EAAAC,MAAA,GAEAD,EAEA,IAAAsJ,EAAA/P,EAAA+P,WxG6CAtzB,GwG3CiB5N,KAAA8gC,gBAAA,EAAAI,ExG2CjB,IwG3CiB,EAAAA,ExG2CjB,KwG1CQpH,GAAW95B,KAAA+gC,uBAAA/gC,KAAA8gC,iBAEnB,IAAAjJ,EAAA33B,KAAAmU,MAAA8c,EAAAsF,KAAA,GAAAyK,GACA7+B,EAAAnC,KAAAmU,MAAA8c,EAAAsF,KAAA,GAAAyK,GACA,GAAAtJ,EAAAC,UAAAD,EAAAv1B,UAAA,CACAu1B,EAAAC,QACAD,EAAAv1B,SACA,IAAA0kC,EAAkC9M,GAAiBj6B,KAAA8gC,iBACnDlJ,EAAAlsB,MAAAmJ,YAAAkyB,IACAnP,EAAAlsB,MAAAmJ,UAAAkyB,QAIAnO,EAAAsM,UAAA,IAAArN,EAAAx1B,GAEArC,KAAAmiC,UAAAvJ,EAAAzH,GACA,IAAAxC,EAAAwC,EAAAxC,OACA0S,EAAAlQ,EAAAkQ,UACAxB,EAAAwB,EAAAxB,WACArJ,EAAA6K,EAAA7K,SACAwsB,EAAAnjB,EAAAjR,YACAg3D,EAAA5lF,KAAAmgC,WAAApP,YAEA80D,EAAA31D,EAAAvB,OACAm3D,OAAAj2E,IAAAg2E,EACAC,GACA9lF,KAAAihC,KAAArI,EAAAzH,EAAA00D,GAEA7lF,KAAA2hF,gBACA3hF,KAAA2hF,eAAAphF,QAEA,IAAAwlF,EAAA50D,EAAA40D,UACA3H,IAAA2H,EAAsCtZ,KAAQsZ,EAAyBtZ,KACvE53D,EAAA7U,KAAAqiC,mBAAAlR,EAAA0G,EAAAx1B,EAAA,GACA2jF,EAAA91D,EAAA5B,QAAA6C,EAAA60D,mBAAA,GAEA,GADA9B,EAAAhD,QAAAtoD,EAAA/jB,EAAA2hB,EAAAwvD,EAAA5H,GACAwH,EAAAtoC,YAAAzd,EAAAyO,aAAiE1Z,GAAcouB,EAAAr0B,GAAA,CAK/E,IAJA,IAAA4pC,EAAA5pC,EAAA,GACAs0B,EAA6BnwB,GAAQkwB,GACrCijC,EAAA,EACA5nD,OAAA,EACAk6B,EAAAvV,EAAA,KAEA3kB,EAAA4kB,IADAgjC,EAEA,IAAAC,EAAAlmF,KAAAqiC,mBAAAlR,EAAA0G,EAAAx1B,EAAAg8B,GACA6lD,EAAAhD,QAAAtoD,EAAAstD,EAAA1vD,EAAAwvD,EAAA5H,GACA7lB,GAAAtV,EAIA,IAFAgjC,EAAA,EACA1tB,EAAA5pC,EAAA,GACA4pC,EAAAvV,EAAA,KAEA3kB,EAAA4kB,IADAgjC,EAEA,IAAAE,EAAAnmF,KAAAqiC,mBAAAlR,EAAA0G,EAAAx1B,EAAAg8B,GACA6lD,EAAAhD,QAAAtoD,EAAAutD,EAAA3vD,EAAAwvD,EAAA5H,GACA7lB,GAAAtV,GAGA6iC,GACAltD,EAAAiO,UAEA7mC,KAAAoiC,WAAAxJ,EAAAzH,GACA,IAAAxD,EAAAuC,EAAAvC,QAIA,OAHAA,IAAAmZ,WAAAlP,EAAAlsB,MAAAiiB,WACAiK,EAAAlsB,MAAAiiB,WAEAiK,GAKAstD,EAAA5mF,UAAAyhC,2BAAA,SAAApL,EAAAxD,EAAA6O,EAAA33B,EAAAmV,GACA,GAAAxd,KAAAylF,aAGA,CACA,IAAAt1D,EAAAgB,EAAAkQ,UAAAlR,WACAqG,EAAArF,EAAAkQ,UAAA7K,SACA4vD,EAAApmF,KAAAmgC,WAEAkmD,EAAA,GAaA,OAZArmF,KAAAylF,aAAA1lD,2BAAApL,EAAAxE,EAAAqG,EAAAwJ,EAAA,GAKA,SAAA+qC,GACA,IAAA9sE,EAA0B6pB,EAAMijD,GAChC,KAAA9sE,KAAAooF,GAEA,OADAA,EAAApoF,IAAA,EACAoK,EAAAxL,KAAA2gB,EAAAutD,EAAAqb,IAEa,QAOblB,EAAA5mF,UAAAqnF,oBAAA,SAAAh8D,GACA,IAAA0E,EAAAruB,KAAAmgC,WACA9R,EAAAK,cAAA1uB,KAAAylF,cACAp3D,EAAAlS,WAQA+oE,EAAA5mF,UAAAgoF,wBAAA,SAAA38D,GACA3pB,KAAAqgC,2BAKA6kD,EAAA5mF,UAAAgzB,aAAA,SAAAH,EAAAjB,GACA,IAAAi1D,EAA6EnlF,KAAAmgC,WAC7EylD,EAAAT,EAAAp0D,YACAw1D,EAAAp1D,EAAA40D,UAA6CtZ,IAC7C+Z,EAAAr1D,EAAA40D,UAA+CtZ,IAC/ChB,EAAA0Z,EAAAhZ,0BACAT,EAAAyZ,EAAA/Y,4BACA,IAAApsE,KAAAqlF,SAAA5Z,GAAA8a,IACA7a,GAAA8a,EACA,SAEA,IAAAC,EAAAt1D,EAAAxC,OACA0S,EAAAlQ,EAAAkQ,UACAxB,EAAAwB,EAAAxB,WACA1P,EAAAkR,EAAAlR,WACA+Q,EAAA/P,EAAA+P,WACAwlD,EAAAvB,EAAA96D,cACAs8D,EAAAxB,EAAAlZ,kBACA2a,EAAAzB,EAAAjZ,sBACAr8D,IAAA+2E,IACAA,EAAqCrC,IAErC,IAAA51D,EAAqB2F,GAAMmyD,EAAAE,EAAAx2D,GAC3B6yB,EAAA3hB,EAAAxB,WAAAjR,YACA,GAAAg3D,EAAAtoC,YAAAjc,EAAAxB,WAAAyO,aACa1Z,GAAcouB,EAAA7xB,EAAAxC,QAAA,CAM3B,IAAAs0B,EAA6BnwB,GAAQkwB,GACrChc,EAAA9mC,KAAAC,IAAkC2yB,GAAQnE,GAAA,EAAAs0B,GAC1Ct0B,EAAA,GAAAq0B,EAAA,GAAAhc,EACArY,EAAA,GAAAq0B,EAAA,GAAAhc,EAEA,IAAAhnC,KAAAqlF,QACArlF,KAAAulF,qBAAAp1D,GACAnwB,KAAAslF,mBAAAoB,GACA1mF,KAAAwlF,sBAAAoB,GACYhyD,GAAc50B,KAAA8iC,gBAAAnU,GAE1B,OADA3uB,KAAA0lF,oBAAA,GACA,EAEA1lF,KAAAylF,cACAzlF,KAAAylF,aAAAp9D,UAEAroB,KAAAylF,aAAA,KACAzlF,KAAAqlF,QAAA,EACA,IAAAnB,EAAA,IAA8BrK,GAAmB8K,GAAkBx0D,EAAA+Q,GAAAvS,EAAAwB,EAAA+Q,IAAAlhC,KAAA2hF,gBACnEiE,EAAAiB,aAAAl4D,EAAAwB,EAAA0P,GAKA,IAAA3O,EAAA,SAAA65C,GACA,IAAAp/D,EACA4gE,EAAAxB,EAAAtf,oBAAA05B,EAAA15B,mBAIA,GAHA8gB,IACA5gE,EAAA4gE,EAAAxB,EAAA56C,IAEAxkB,EAAA,CACA,IAAAm7E,EAAA9mF,KAAA4kF,cAAA7Z,EAAA56C,EAAA+Q,EAAAv1B,EAAAu4E,GACAlkF,KAAAqlF,OAAArlF,KAAAqlF,QAAAyB,IAES5oF,KAAA8B,MACT,GAAA4mF,EAAA,CAEA,IAAAG,EAAA,GACAnB,EAAAoB,uBAAAr4D,EAIA,SAAAo8C,GACAgc,EAAAjkF,KAAAioE,KAEAgc,EAAApgF,KAAAigF,GACA,QAAAlqF,EAAA,EAAA+C,EAAAsnF,EAAArnF,OAAmDhD,EAAA+C,IAAQ/C,EAC3Dw0B,EAAA61D,EAAArqF,SAIAkpF,EAAAoB,uBAAAr4D,EAAAuC,GAEA,IAAA+1D,EAAA/C,EAAAzS,SACAyV,EAAA,IAAgCzD,GAAa90D,EAAAwB,EAAA+Q,EAAA0kD,EAAAuB,cAAAnnF,KAAA2hF,eAAAsF,EAAA9B,EAAAlZ,mBAO7C,OANAjsE,KAAAulF,oBAAAp1D,EACAnwB,KAAAslF,kBAAAoB,EACA1mF,KAAAwlF,qBAAAoB,EACA5mF,KAAA8iC,gBAAAnU,EACA3uB,KAAAylF,aAAAyB,EACAlnF,KAAA0lF,oBAAA,GACA,GAUAR,EAAA5mF,UAAAsmF,cAAA,SAAA7Z,EAAA56C,EAAA+Q,EAAAv1B,EAAAi4E,GACA,IAAAj4E,EACA,SAEA,IAAAoxC,GAAA,EACA,GAAA9uC,MAAApP,QAAA8M,GACA,QAAAjP,EAAA,EAAA+C,EAAAkM,EAAAjM,OAA+ChD,EAAA+C,IAAQ/C,EACvDqgD,EAA0B6nC,GAAahB,EAAA7Y,EAAAp/D,EAAAjP,GAAmCgoF,GAAyBv0D,EAAA+Q,GAAAlhC,KAAAsmF,wBAAAtmF,OAAA+8C,OAInGA,EAAsB6nC,GAAahB,EAAA7Y,EAAAp/D,EAAgC+4E,GAAyBv0D,EAAA+Q,GAAAlhC,KAAAsmF,wBAAAtmF,MAE5F,OAAA+8C,GAEAmoC,EAlT6B,CAmT3BxkD,ICpVE0mD,GAAyB,WAC7B,IAAA1+D,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAiDdm+D,GAlBA,SAAAj+D,GAKf,SAAAk+D,EAAAv1D,GACA,OAAA3I,EAAAvsB,KAAAmD,KAAA+xB,IAAA/xB,KAUA,OAfIonF,GAASE,EAAAl+D,GAYbk+D,EAAAhpF,UAAAozB,eAAA,WACA,WAAmBuzD,GAAyBjlF,OAE5CsnF,EAhBe,CAiBbhc,IC1Caic,GAAA,CAMfC,IAAA,MAMAC,OAAA,UClBIC,GAAyB,WAC7B,IAAAh/D,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAwBzBy+D,GACJ,SAOAC,GAAA,SAAAx+D,GAOA,SAAAw+D,EAAAhpF,EAAAipF,EAAAC,GACA,IAAAx+D,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAaA,OAPAspB,EAAAy+D,QAAAF,EAMAv+D,EAAAplB,MAAA4jF,EACAx+D,EAEA,OAtBIo+D,GAASE,EAAAx+D,GAsBbw+D,EAvBA,CAwBEj/D,GA6Naq/D,GAzMD,SAAA5+D,GAMd,SAAA6+D,EAAAh5D,EAAA8C,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,YACA2U,EAAAod,GAAA,GAWA,GANAzI,EAAA4+D,UAAAvzE,EAAAwzE,OAKA7+D,EAAA8+D,OAAAn5D,GAAA,GACA3F,EAAA4+D,QACA,QAAAxrF,EAAA,EAAA+C,EAAA6pB,EAAA8+D,OAAA1oF,OAAqDhD,EAAA+C,IAAQ/C,EAC7D4sB,EAAA++D,cAAA/+D,EAAA8+D,OAAA1rF,MAIA,OADA4sB,EAAAg/D,gBACAh/D,EA8KA,OAtMIo+D,GAASO,EAAA7+D,GA8Bb6+D,EAAA3pF,UAAAiC,MAAA,WACA,KAAAP,KAAAy6D,YAAA,GACAz6D,KAAA6C,OAUAolF,EAAA3pF,UAAAW,OAAA,SAAAsD,GACA,QAAA7F,EAAA,EAAA+C,EAAA8C,EAAA7C,OAAwChD,EAAA+C,IAAQ/C,EAChDsD,KAAA8C,KAAAP,EAAA7F,IAEA,OAAAsD,MASAioF,EAAA3pF,UAAA+N,QAAA,SAAAvD,GAEA,IADA,IAAAtJ,EAAAQ,KAAAooF,OACA1rF,EAAA,EAAA+C,EAAAD,EAAAE,OAA0ChD,EAAA+C,IAAQ/C,EAClDoM,EAAAtJ,EAAA9C,KAAA8C,IAWAyoF,EAAA3pF,UAAAiqF,SAAA,WACA,OAAAvoF,KAAAooF,QAQAH,EAAA3pF,UAAAmC,KAAA,SAAAyD,GACA,OAAAlE,KAAAooF,OAAAlkF,IAQA+jF,EAAA3pF,UAAAm8D,UAAA,WACA,OAAAz6D,KAAAzC,IAAwBoqF,KAQxBM,EAAA3pF,UAAAoZ,SAAA,SAAAxT,EAAAskF,GACAxoF,KAAAkoF,SACAloF,KAAAqoF,cAAAG,GAEAxoF,KAAAooF,OAAA9jF,OAAAJ,EAAA,EAAAskF,GACAxoF,KAAAsoF,gBACAtoF,KAAA0pB,cAAA,IAAAk+D,GAA+CL,GAAmBC,IAAAgB,EAAAtkF,KAQlE+jF,EAAA3pF,UAAAuE,IAAA,WACA,OAAA7C,KAAAyoF,SAAAzoF,KAAAy6D,YAAA,IAQAwtB,EAAA3pF,UAAAwE,KAAA,SAAA0lF,GACAxoF,KAAAkoF,SACAloF,KAAAqoF,cAAAG,GAEA,IAAArqF,EAAA6B,KAAAy6D,YAEA,OADAz6D,KAAA0X,SAAAvZ,EAAAqqF,GACAxoF,KAAAy6D,aAQAwtB,EAAA3pF,UAAA0F,OAAA,SAAAwkF,GAEA,IADA,IAAAjmF,EAAAvC,KAAAooF,OACA1rF,EAAA,EAAA+C,EAAA8C,EAAA7C,OAAwChD,EAAA+C,IAAQ/C,EAChD,GAAA6F,EAAA7F,KAAA8rF,EACA,OAAAxoF,KAAAyoF,SAAA/rF,IAYAurF,EAAA3pF,UAAAmqF,SAAA,SAAAvkF,GACA,IAAAqJ,EAAAvN,KAAAooF,OAAAlkF,GAIA,OAHAlE,KAAAooF,OAAA9jF,OAAAJ,EAAA,GACAlE,KAAAsoF,gBACAtoF,KAAA0pB,cAAA,IAAAk+D,GAA+CL,GAAmBE,OAAAl6E,EAAArJ,IAClEqJ,GAQA06E,EAAA3pF,UAAAoqF,MAAA,SAAAxkF,EAAAskF,GACA,IAAArqF,EAAA6B,KAAAy6D,YACA,GAAAv2D,EAAA/F,EAAA,CACA6B,KAAAkoF,SACAloF,KAAAqoF,cAAAG,EAAAtkF,GAEA,IAAAqJ,EAAAvN,KAAAooF,OAAAlkF,GACAlE,KAAAooF,OAAAlkF,GAAAskF,EACAxoF,KAAA0pB,cAAA,IAAAk+D,GAAmDL,GAAmBE,OAAAl6E,EAAArJ,IACtElE,KAAA0pB,cAAA,IAAAk+D,GAAmDL,GAAmBC,IAAAgB,EAAAtkF,QAEtE,CACA,QAAAe,EAAA9G,EAA2B8G,EAAAf,IAAWe,EACtCjF,KAAA0X,SAAAzS,OAAA4K,GAEA7P,KAAA0X,SAAAxT,EAAAskF,KAMAP,EAAA3pF,UAAAgqF,cAAA,WACAtoF,KAAA4N,IAAiB+5E,GAAQ3nF,KAAAooF,OAAA1oF,SAOzBuoF,EAAA3pF,UAAA+pF,cAAA,SAAAG,EAAAG,GACA,QAAAjsF,EAAA,EAAA+C,EAAAO,KAAAooF,OAAA1oF,OAAgDhD,EAAA+C,IAAQ/C,EACxD,GAAAsD,KAAAooF,OAAA1rF,KAAA8rF,GAAA9rF,IAAAisF,EACA,UAA0B18D,EAAc,KAIxCg8D,EAvMc,CAwMZ18D,GC9Qaq9D,GAAA,CACfC,aAAA,cACAp/E,KAAA,OACA0xE,KAAA,OACA2N,IAAA,OCqGO,SAASC,GAAGjlC,EAAA/jD,GACnB,OArEO,SAAA+jD,EAAA/jD,EAAAipF,EAAAC,GACP,gBAOAt6D,EAAAwB,EAAA0P,GACA,IAAAqpD,EAAA,IAAAC,eACAD,EAAAE,KAAA,yBAAAtlC,IAAAn1B,EAAAwB,EAAA0P,GAAAikB,GAAA,GACA/jD,EAAAuyD,WAAgCs2B,GAAUC,eAC1CK,EAAAG,aAAA,eAMAH,EAAAI,OAAA,SAAA3/D,GAEA,IAAAu/D,EAAAK,QAAAL,EAAAK,QAAA,KAAAL,EAAAK,OAAA,KACA,IAAA3qF,EAAAmB,EAAAuyD,UAEAnzD,OAAA,EACAP,GAA4BgqF,GAAUn/E,MAAA7K,GAAiBgqF,GAAUzN,KACjEh8E,EAAA+pF,EAAAM,aAEA5qF,GAAiCgqF,GAAUE,KAC3C3pF,EAAA+pF,EAAAO,eAEAtqF,GAAA,IAAAuqF,WAAAC,gBAAAT,EAAAM,aAAA,oBAGA5qF,GAAiCgqF,GAAUC,eAC3C1pF,EAAoD+pF,EAAA,UAEpD/pF,EACA6pF,EAAAnsF,KAAAmD,KAAAD,EAAAsqD,aAAAlrD,EAAA,CACAwvB,SACAo7B,kBAAAlqB,IACqB9/B,EAAA6pF,eAAAzqF,IAGrB8pF,EAAApsF,KAAAmD,WAIAipF,EAAApsF,KAAAmD,OAES9B,KAAA8B,MAITkpF,EAAAW,QAAA,WACAZ,EAAApsF,KAAAmD,OACS9B,KAAA8B,MACTkpF,EAAAY,QAaAC,CAAAjmC,EAAA/jD,EAOA,SAAA8oD,EAAAmhC,GAEA,mBADwC,KACxChgC,aADwC,KAEiBA,YAAAnB,IAEzBpgC,GClHzB,SAASwhE,GAAGt7D,EAAAwB,GACnB,SAAA7uB,mBCLe,IAAA4oF,GAAA,CAMfC,WAAA,aAMAC,cAAA,gBAMA9jE,MAAA,QAOA+jE,cAAA,iBCyKeC,GAlLN,WAIT,SAAAC,EAAAC,GAIAxqF,KAAAyqF,OAAsBrF,KAAKoF,OAAA36E,GAO3B7P,KAAA0qF,OAAA,GAiKA,OA1JAH,EAAAjsF,UAAAoF,OAAA,SAAAirB,EAAAhxB,GAEA,IAAA8C,EAAA,CACAY,KAAAstB,EAAA,GACAptB,KAAAotB,EAAA,GACAntB,KAAAmtB,EAAA,GACAltB,KAAAktB,EAAA,GACAhxB,SAEAqC,KAAAyqF,OAAA/mF,OAAAjD,GACAT,KAAA0qF,OAAoB5iE,EAAMnqB,IAAA8C,GAO1B8pF,EAAAjsF,UAAAmF,KAAA,SAAAknF,EAAA9iF,GAEA,IADA,IAAAnH,EAAA,IAAAuN,MAAApG,EAAAnI,QACAhD,EAAA,EAAAC,EAAAkL,EAAAnI,OAA0ChD,EAAAC,EAAOD,IAAA,CACjD,IAAAiyB,EAAAg8D,EAAAjuF,GACAiB,EAAAkK,EAAAnL,GAEA+D,EAAA,CACAY,KAAAstB,EAAA,GACAptB,KAAAotB,EAAA,GACAntB,KAAAmtB,EAAA,GACAltB,KAAAktB,EAAA,GACAhxB,SAEA+C,EAAAhE,GAAA+D,EACAT,KAAA0qF,OAAwB5iE,EAAMnqB,IAAA8C,EAE9BT,KAAAyqF,OAAAhnF,KAAA/C,IAOA6pF,EAAAjsF,UAAA0F,OAAA,SAAArG,GACA,IAAA+mC,EAAkB5c,EAAMnqB,GAGxB8C,EAAAT,KAAA0qF,OAAAhmD,GAEA,cADA1kC,KAAA0qF,OAAAhmD,GACA,OAAA1kC,KAAAyqF,OAAAzmF,OAAAvD,IAOA8pF,EAAAjsF,UAAAmJ,OAAA,SAAAknB,EAAAhxB,GACA,IAAA8C,EAAAT,KAAA0qF,OAA+B5iE,EAAMnqB,IAExBg1B,GADb,CAAAlyB,EAAAY,KAAAZ,EAAAc,KAAAd,EAAAe,KAAAf,EAAAgB,MACmBktB,KACnB3uB,KAAAgE,OAAArG,GACAqC,KAAA0D,OAAAirB,EAAAhxB,KAOA4sF,EAAAjsF,UAAAssF,OAAA,WAEA,OADA5qF,KAAAyqF,OAAA1nF,MACAsK,IAAA,SAAA5M,GACA,OAAAA,EAAA9C,SAQA4sF,EAAAjsF,UAAAusF,YAAA,SAAAl8D,GAEA,IAAAxrB,EAAA,CACA9B,KAAAstB,EAAA,GACAptB,KAAAotB,EAAA,GACAntB,KAAAmtB,EAAA,GACAltB,KAAAktB,EAAA,IAGA,OADA3uB,KAAAyqF,OAAAvnF,OAAAC,GACAkK,IAAA,SAAA5M,GACA,OAAAA,EAAA9C,SAUA4sF,EAAAjsF,UAAA+N,QAAA,SAAAhE,GACA,OAAArI,KAAA8qF,SAAA9qF,KAAA4qF,SAAAviF,IAQAkiF,EAAAjsF,UAAAysF,gBAAA,SAAAp8D,EAAAtmB,GACA,OAAArI,KAAA8qF,SAAA9qF,KAAA6qF,YAAAl8D,GAAAtmB,IAQAkiF,EAAAjsF,UAAAwsF,SAAA,SAAAjjF,EAAAQ,GAEA,IADA,IAAAjF,EACA1G,EAAA,EAAAC,EAAAkL,EAAAnI,OAA0ChD,EAAAC,EAAOD,IAEjD,GADA0G,EAAAiF,EAAAR,EAAAnL,IAEA,OAAA0G,EAGA,OAAAA,GAKAmnF,EAAAjsF,UAAAsmB,QAAA,WACA,OAAeA,EAAO5kB,KAAA0qF,SAKtBH,EAAAjsF,UAAAiC,MAAA,WACAP,KAAAyqF,OAAAlqF,QACAP,KAAA0qF,OAAA,IAMAH,EAAAjsF,UAAAswB,UAAA,SAAA2F,GACA,IAAAtxB,EAAAjD,KAAAyqF,OAAA/lF,SACA,OAAeuwB,GAAchyB,EAAA5B,KAAA4B,EAAA1B,KAAA0B,EAAAzB,KAAAyB,EAAAxB,KAAA8yB,IAK7Bg2D,EAAAjsF,UAAAmW,OAAA,SAAA9U,GAEA,QAAAjD,KADAsD,KAAAyqF,OAAAhnF,KAAA9D,EAAA8qF,OAAA1nF,OACApD,EAAA+qF,OACA1qF,KAAA0qF,OAAAhuF,GAAAiD,EAAA+qF,OAAAhuF,IAGA6tF,EAhLS,GCnBLS,GAAyB,WAC7B,IAAAtiE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4C7B+hE,GAAA,SAAA7hE,GAMA,SAAA6hE,EAAArsF,EAAAssF,GACA,IAAA5hE,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAOA,OADAspB,EAAAyhD,QAAAmgB,EACA5hE,EAEA,OAfI0hE,GAASC,EAAA7hE,GAeb6hE,EAhBA,CAiBEtiE,GA02BawiE,GAvwBC,SAAA/hE,GAKhB,SAAAgiE,EAAAr5D,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,IACAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA48C,aAAAjoC,EAAAioC,aACA/c,gBAAAhwB,EACAuM,MAAmBwT,GAAWG,MAC9BktB,WAAAptC,IAAA8E,EAAAsoC,OAAAtoC,EAAAsoC,SACSj9C,MAKTqrF,QAAwB5iE,EAKxBa,EAAAgiE,QAAA32E,EAAA5U,OAKAupB,EAAAs4D,UAAA/xE,MAAA8E,EAAAgoE,UAAAhoE,EAAAgoE,SAKArzD,EAAAiiE,KAAA52E,EAAAmvC,SACAj0C,IAAA8E,EAAA62E,OACAliE,EAAA+hE,QAAA12E,EAAA62E,YAEA37E,IAAAyZ,EAAAiiE,OACYl/D,EAAM/C,EAAAgiE,QAAA,GAElBhiE,EAAA+hE,QAA4BtC,GAAGz/D,EAAAiiE,KAA+DjiE,EAAA,UAM9FA,EAAAmiE,eAAA57E,IAAA8E,EAAA+2E,SAAA/2E,EAAA+2E,SAA8EzB,GAC9E,IAsCA0B,EAAA9iC,EAtCA+iC,OAAA/7E,IAAA8E,EAAAi3E,iBAAAj3E,EAAAi3E,gBAuDA,OAlDAtiE,EAAAuiE,eAAAD,EAAA,IAAqDtB,GAAK,KAK1DhhE,EAAAwiE,oBAAA,IAAwCxB,GAKxChhE,EAAAyiE,sBAAA,GAMAziE,EAAA0iE,SAAA,GAMA1iE,EAAA2iE,cAAA,GAKA3iE,EAAA4iE,mBAAA,GAKA5iE,EAAA6iE,oBAAA,KAEAl+E,MAAApP,QAAA8V,EAAAk0C,UACAA,EAAAl0C,EAAAk0C,SAEAl0C,EAAAk0C,WAEAA,GADA8iC,EAAAh3E,EAAAk0C,UACA0/B,YAEAqD,QAAA/7E,IAAA87E,IACAA,EAAA,IAA6B3D,GAAUn/B,SAEvCh5C,IAAAg5C,GACAv/B,EAAA8iE,oBAAAvjC,QAEAh5C,IAAA87E,GACAriE,EAAA+iE,wBAAAV,GAEAriE,EA+pBA,OApwBI0hE,GAASI,EAAAhiE,GAgHbgiE,EAAA9sF,UAAAguF,WAAA,SAAAvhB,GACA/qE,KAAAusF,mBAAAxhB,GACA/qE,KAAAmc,WAOAivE,EAAA9sF,UAAAiuF,mBAAA,SAAAxhB,GACA,IAAAyhB,EAAyB1kE,EAAMijD,GAC/B,GAAA/qE,KAAAysF,YAAAD,EAAAzhB,GAAA,CAGA/qE,KAAA0sF,mBAAAF,EAAAzhB,GACA,IAAA9f,EAAA8f,EAAA1f,cACA,GAAAJ,EAAA,CACA,IAAAt8B,EAAAs8B,EAAAr8B,YACA5uB,KAAA6rF,gBACA7rF,KAAA6rF,eAAAnoF,OAAAirB,EAAAo8C,QAIA/qE,KAAA+rF,sBAAAS,GAAAzhB,EAEA/qE,KAAA0pB,cAAA,IAAAuhE,GAAiDf,GAAeC,WAAApf,MAOhEqgB,EAAA9sF,UAAAouF,mBAAA,SAAAF,EAAAzhB,GACA/qE,KAAAksF,mBAAAM,GAAA,CACY5mE,EAAMmlD,EAAU3kD,EAASC,OAAArmB,KAAA2sF,qBAAA3sF,MACzB4lB,EAAMmlD,EAAU9iD,EAAejoB,KAAA2sF,qBAAA3sF,QAU3CorF,EAAA9sF,UAAAmuF,YAAA,SAAAD,EAAAzhB,GACA,IAAA6hB,GAAA,EACA/2E,EAAAk1D,EAAAvf,QAaA,YAZA37C,IAAAgG,EACAA,EAAAjJ,aAAA5M,KAAAgsF,SAIAY,GAAA,EAHA5sF,KAAAgsF,SAAAn2E,EAAAjJ,YAAAm+D,GAOY1+C,IAAMmgE,KAAAxsF,KAAAisF,eAAA,IAClBjsF,KAAAisF,cAAAO,GAAAzhB,GAEA6hB,GAOAxB,EAAA9sF,UAAA0rD,YAAA,SAAAnB,GACA7oD,KAAAosF,oBAAAvjC,GACA7oD,KAAAmc,WAOAivE,EAAA9sF,UAAA8tF,oBAAA,SAAAvjC,GAIA,IAHA,IAAA8hC,EAAA,GACAkC,EAAA,GACAC,EAAA,GACApwF,EAAA,EAAAm6D,EAAAhO,EAAAnpD,OAAmDhD,EAAAm6D,EAAcn6D,IAAA,CACjE,IACA8vF,EAA6B1kE,EAD7BijD,EAAAliB,EAAAnsD,IAEAsD,KAAAysF,YAAAD,EAAAzhB,IACA8hB,EAAA/pF,KAAAioE,GAGAruE,EAAA,UAAAqwF,EAAAF,EAAAntF,OAAsDhD,EAAAqwF,EAAcrwF,IAAA,CACpE,IAAAquE,EACAyhB,EAA6B1kE,EAD7BijD,EAAA8hB,EAAAnwF,IAEAsD,KAAA0sF,mBAAAF,EAAAzhB,GACA,IAAA9f,EAAA8f,EAAA1f,cACA,GAAAJ,EAAA,CACA,IAAAt8B,EAAAs8B,EAAAr8B,YACA+7D,EAAA7nF,KAAA6rB,GACAm+D,EAAAhqF,KAAAioE,QAGA/qE,KAAA+rF,sBAAAS,GAAAzhB,EAGA/qE,KAAA6rF,gBACA7rF,KAAA6rF,eAAApoF,KAAAknF,EAAAmC,GAEApwF,EAAA,UAAAswF,EAAAH,EAAAntF,OAAsDhD,EAAAswF,EAActwF,IACpEsD,KAAA0pB,cAAA,IAAAuhE,GAAqDf,GAAeC,WAAA0C,EAAAnwF,MAOpE0uF,EAAA9sF,UAAA+tF,wBAAA,SAAAV,GACA,IAAAsB,GAAA,EACQrnE,EAAM5lB,KAAOkqF,GAAeC,WAIpC,SAAApkE,GACAknE,IACAA,GAAA,EACAtB,EAAA7oF,KAAAijB,EAAAglD,SACAkiB,GAAA,KAGQrnE,EAAM5lB,KAAOkqF,GAAeG,cAIpC,SAAAtkE,GACAknE,IACAA,GAAA,EACAtB,EAAA3nF,OAAA+hB,EAAAglD,SACAkiB,GAAA,KAGQrnE,EAAM+lE,EAAapE,GAAmBC,IAI9C,SAAAzhE,GACAknE,IACAA,GAAA,EACAjtF,KAAAssF,WAA2EvmE,EAAA,SAC3EknE,GAAA,IAESjtF,MACD4lB,EAAM+lE,EAAapE,GAAmBE,OAI9C,SAAA1hE,GACAknE,IACAA,GAAA,EACAjtF,KAAAktF,cAA8EnnE,EAAA,SAC9EknE,GAAA,IAESjtF,MACTA,KAAAmsF,oBAAAR,GAOAP,EAAA9sF,UAAAiC,MAAA,SAAA4sF,GACA,GAAAA,EAAA,CACA,QAAAC,KAAAptF,KAAAksF,mBAAA,CACAlsF,KAAAksF,mBAAAkB,GACA/gF,QAA6B2Z,GAE7BhmB,KAAAmsF,sBACAnsF,KAAAksF,mBAAA,GACAlsF,KAAAgsF,SAAA,GACAhsF,KAAAisF,cAAA,SAIA,GAAAjsF,KAAA6rF,eAEA,QAAAh2E,KADA7V,KAAA6rF,eAAAx/E,QAAArM,KAAAqtF,sBAAAnvF,KAAA8B,OACAA,KAAA+rF,sBACA/rF,KAAAqtF,sBAAArtF,KAAA+rF,sBAAAl2E,IAIA7V,KAAAmsF,qBACAnsF,KAAAmsF,oBAAA5rF,QAEAP,KAAA6rF,gBACA7rF,KAAA6rF,eAAAtrF,QAEAP,KAAA+rF,sBAAA,GACA,IAAAuB,EAAA,IAAArC,GAA+Cf,GAAe5jE,OAC9DtmB,KAAA0pB,cAAA4jE,GACAttF,KAAAmc,WAcAivE,EAAA9sF,UAAAivF,eAAA,SAAAllF,GACA,GAAArI,KAAA6rF,eACA,OAAA7rF,KAAA6rF,eAAAx/E,QAAAhE,GAEArI,KAAAmsF,qBACAnsF,KAAAmsF,oBAAA9/E,QAAAhE,IAeA+iF,EAAA9sF,UAAAkvF,iCAAA,SAAA74D,EAAAtsB,GACA,IAAAsmB,EAAA,CAAAgG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,OAAA30B,KAAAgnF,uBAAAr4D,EAAA,SAAAo8C,GAEA,OADAA,EAAA1f,cACA0G,qBAAAp9B,GACAtsB,EAAA0iE,QAGA,KAuBAqgB,EAAA9sF,UAAA0oF,uBAAA,SAAAr4D,EAAAtmB,GACA,GAAArI,KAAA6rF,eACA,OAAA7rF,KAAA6rF,eAAAd,gBAAAp8D,EAAAtmB,GAEArI,KAAAmsF,qBACAnsF,KAAAmsF,oBAAA9/E,QAAAhE,IAkBA+iF,EAAA9sF,UAAAmvF,iCAAA,SAAA9+D,EAAAtmB,GACA,OAAArI,KAAAgnF,uBAAAr4D,EAKA,SAAAo8C,GAEA,GADAA,EAAA1f,cACAmH,iBAAA7jC,GAAA,CACA,IAAAvrB,EAAAiF,EAAA0iE,GACA,GAAA3nE,EACA,OAAAA,MAYAgoF,EAAA9sF,UAAAovF,sBAAA,WACA,OAAA1tF,KAAAmsF,qBAOAf,EAAA9sF,UAAAqvF,YAAA,WACA,IAAA9kC,EAUA,OATA7oD,KAAAmsF,oBACAtjC,EAAA7oD,KAAAmsF,oBAAA5D,WAEAvoF,KAAA6rF,iBACAhjC,EAAA7oD,KAAA6rF,eAAAjB,SACiBhmE,EAAO5kB,KAAA+rF,wBACR/tC,GAAM6K,EAAWlkC,EAAS3kB,KAAA+rF,yBAG1C,GASAX,EAAA9sF,UAAAsvF,wBAAA,SAAAj5D,GACA,IAAAk0B,EAAA,GAIA,OAHA7oD,KAAAwtF,iCAAA74D,EAAA,SAAAo2C,GACAliB,EAAA/lD,KAAAioE,KAEAliB,GAaAuiC,EAAA9sF,UAAAuvF,oBAAA,SAAAl/D,GACA,OAAA3uB,KAAA6rF,eAAAhB,YAAAl8D,IAcAy8D,EAAA9sF,UAAAwvF,8BAAA,SAAAn5D,EAAAo5D,GAQA,IAAAxkF,EAAAorB,EAAA,GACAjI,EAAAiI,EAAA,GACAq5D,EAAA,KACAv8B,EAAA,CAAAK,SACAJ,EAAApwD,IACAqtB,EAAA,EAAArtB,kBACA8Y,EAAA2zE,GAA+CxlE,EAwB/C,OAvBAvoB,KAAA6rF,eAAAd,gBAAAp8D,EAIA,SAAAo8C,GACA,GAAA3wD,EAAA2wD,GAAA,CACA,IAAA9f,EAAA8f,EAAA1f,cACA4iC,EAAAv8B,EAEA,IADAA,EAAAzG,EAAAuG,eAAAjoD,EAAAmjB,EAAA+kC,EAAAC,IACAu8B,EAAA,CACAD,EAAAjjB,EAKA,IAAAmjB,EAAAhuF,KAAAoF,KAAAosD,GACA/iC,EAAA,GAAAplB,EAAA2kF,EACAv/D,EAAA,GAAAjC,EAAAwhE,EACAv/D,EAAA,GAAAplB,EAAA2kF,EACAv/D,EAAA,GAAAjC,EAAAwhE,MAIAF,GAYA5C,EAAA9sF,UAAAswB,UAAA,SAAA2F,GACA,OAAAv0B,KAAA6rF,eAAAj9D,UAAA2F,IAWA62D,EAAA9sF,UAAA6vF,eAAA,SAAAt4E,GACA,IAAAk1D,EAAA/qE,KAAAgsF,SAAAn2E,EAAAjJ,YACA,YAAAiD,IAAAk7D,IAAA,MAQAqgB,EAAA9sF,UAAA8vF,UAAA,WACA,OAAApuF,KAAAsrF,SAKAF,EAAA9sF,UAAA6oF,YAAA,WACA,OAAAnnF,KAAA4hF,WAQAwJ,EAAA9sF,UAAA+vF,OAAA,WACA,OAAAruF,KAAAurF,MAMAH,EAAA9sF,UAAAquF,qBAAA,SAAAhjE,GACA,IAAAohD,EAAiEphD,EAAA,OACjE6iE,EAAyB1kE,EAAMijD,GAC/B9f,EAAA8f,EAAA1f,cACA,GAAAJ,EAQA,CACA,IAAAt8B,EAAAs8B,EAAAr8B,YACA49D,KAAAxsF,KAAA+rF,8BACA/rF,KAAA+rF,sBAAAS,GACAxsF,KAAA6rF,gBACA7rF,KAAA6rF,eAAAnoF,OAAAirB,EAAAo8C,IAIA/qE,KAAA6rF,gBACA7rF,KAAA6rF,eAAApkF,OAAAknB,EAAAo8C,QAjBAyhB,KAAAxsF,KAAA+rF,wBACA/rF,KAAA6rF,gBACA7rF,KAAA6rF,eAAA7nF,OAAA+mE,GAEA/qE,KAAA+rF,sBAAAS,GAAAzhB,GAiBA,IAAAl1D,EAAAk1D,EAAAvf,QACA,QAAA37C,IAAAgG,EAAA,CACA,IAAAy4E,EAAAz4E,EAAAjJ,WACA4/E,KAAAxsF,KAAAisF,sBACAjsF,KAAAisF,cAAAO,GACAxsF,KAAAgsF,SAAAsC,GAAAvjB,GAGA/qE,KAAAgsF,SAAAsC,KAAAvjB,IACA/qE,KAAAuuF,mBAAAxjB,GACA/qE,KAAAgsF,SAAAsC,GAAAvjB,QAKAyhB,KAAAxsF,KAAAisF,gBACAjsF,KAAAuuF,mBAAAxjB,GACA/qE,KAAAisF,cAAAO,GAAAzhB,GAGA/qE,KAAAmc,UACAnc,KAAA0pB,cAAA,IAAAuhE,GAAiDf,GAAeE,cAAArf,KAQhEqgB,EAAA9sF,UAAAkwF,WAAA,SAAAzjB,GACA,IAAAl1D,EAAAk1D,EAAAvf,QACA,YAAA37C,IAAAgG,EACAA,KAAA7V,KAAAgsF,SAGmBlkE,EAAMijD,KAAA/qE,KAAAisF,eAMzBb,EAAA9sF,UAAAsmB,QAAA,WACA,OAAA5kB,KAAA6rF,eAAAjnE,WAAgDA,EAAO5kB,KAAA+rF,wBAOvDX,EAAA9sF,UAAAuoF,aAAA,SAAAl4D,EAAAwB,EAAA0P,GACA,IAAA4uD,EAAAzuF,KAAA8rF,oBACA4C,EAAA1uF,KAAAyrF,UAAA98D,EAAAwB,GACAnwB,KAAA+8C,SAAA,EAkBA,IAjBA,IAAA4xC,EAAA,SAAAjyF,EAAA+C,GACA,IAAAmvF,EAAAF,EAAAhyF,GACA+xF,EAAA1D,gBAAA6D,EAKA,SAAAxwF,GACA,OAAuBw2B,GAAcx2B,EAAAuwB,OAAAigE,OAGrCC,EAAAxD,QAAAxuF,KAAAgyF,EAAAD,EAAAz+D,EAAA0P,GACA4uD,EAAA/qF,OAAAkrF,EAAA,CAAyDjgE,OAAAigE,EAAAhrF,UACzDirF,EAAA9xC,QAAA8xC,EAAAxD,UAAoD5iE,IAGpDomE,EAAA7uF,KACAtD,EAAA,EAAA+C,EAAAivF,EAAAhvF,OAAkDhD,EAAA+C,IAAQ/C,EAC1DiyF,EAAAjyF,IAMA0uF,EAAA9sF,UAAAi/C,QAAA,WACAv9C,KAAAO,OAAA,GACAP,KAAA8rF,oBAAAvrF,QACA6oB,EAAA9qB,UAAAi/C,QAAA1gD,KAAAmD,OAOAorF,EAAA9sF,UAAAwwF,mBAAA,SAAAngE,GACA,IACAlmB,EADAgmF,EAAAzuF,KAAA8rF,oBAEA2C,EAAA1D,gBAAAp8D,EAAA,SAAAvwB,GACA,GAAgBu0B,GAAMv0B,EAAAuwB,UAEtB,OADAlmB,EAAArK,GACA,IAGAqK,GACAgmF,EAAAzqF,OAAAyE,IAUA2iF,EAAA9sF,UAAA4uF,cAAA,SAAAniB,GACA,IAAAyhB,EAAyB1kE,EAAMijD,GAC/ByhB,KAAAxsF,KAAA+rF,6BACA/rF,KAAA+rF,sBAAAS,GAGAxsF,KAAA6rF,gBACA7rF,KAAA6rF,eAAA7nF,OAAA+mE,GAGA/qE,KAAAqtF,sBAAAtiB,GACA/qE,KAAAmc,WAOAivE,EAAA9sF,UAAA+uF,sBAAA,SAAAtiB,GACA,IAAAyhB,EAAyB1kE,EAAMijD,GAC/B/qE,KAAAksF,mBAAAM,GAAAngF,QAAoD2Z,UACpDhmB,KAAAksF,mBAAAM,GACA,IAAA32E,EAAAk1D,EAAAvf,aACA37C,IAAAgG,SACA7V,KAAAgsF,SAAAn2E,EAAAjJ,mBAGA5M,KAAAisF,cAAAO,GAEAxsF,KAAA0pB,cAAA,IAAAuhE,GAAiDf,GAAeG,cAAAtf,KAShEqgB,EAAA9sF,UAAAiwF,mBAAA,SAAAxjB,GACA,IAAAgkB,GAAA,EACA,QAAAl5E,KAAA7V,KAAAgsF,SACA,GAAAhsF,KAAAgsF,SAAAn2E,KAAAk1D,EAAA,QACA/qE,KAAAgsF,SAAAn2E,GACAk5E,GAAA,EACA,MAGA,OAAAA,GAQA3D,EAAA9sF,UAAA0wF,UAAA,SAAAxD,GACAxrF,KAAAqrF,QAAAG,GAOAJ,EAAA9sF,UAAAylD,OAAA,SAAAD,GACQz3B,EAAMrsB,KAAAsrF,QAAA,GACdtrF,KAAAgvF,UAAuBjG,GAAGjlC,EAAA9jD,KAAAsrF,WAE1BF,EArwBgB,CAswBd5uC,ICz6BEyyC,GAAyB,WAC7B,IAAAvmE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAyH7BgmE,GAAA,CACA3jD,MAAA,QACAC,YAAA,aACAE,QAAA,UACAK,OAAA,UAKAojD,GAMA,YANAA,GAYA,UAOAC,GAAA,SAAAhmE,GAMA,SAAAgmE,EAAAxwF,EAAAmsE,GACA,IAAAzhD,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAOA,OADAspB,EAAAyhD,UACAzhD,EAEA,OAfI2lE,GAASG,EAAAhmE,GAebgmE,EAhBA,CAiBEzmE,GAq0Ba,IAAA0mE,GA7zBP,SAAAjmE,GAKR,SAAAkmE,EAAA36E,GACA,IAAA2U,EAAAtpB,KACAuvF,EAAuE,EACvEA,EAAAxrB,WACAwrB,EAAAxrB,SAAsCv7C,IAEtCc,EAAAF,EAAAvsB,KAAAmD,KAAAuvF,IAAAvvF,MAKAwvF,eAAA,EAKAlmE,EAAAmmE,QAAA,KAKAnmE,EAAAomE,aAKApmE,EAAAqmE,cAKArmE,EAAAsmE,WAAA,EAMAtmE,EAAAsgC,QAAAj1C,EAAAxV,OAAAwV,EAAAxV,OAAA,KAMAmqB,EAAAumE,UAAAl7E,EAAAk0C,SAAAl0C,EAAAk0C,SAAA,KAMAv/B,EAAAwmE,eAAAn7E,EAAAo7E,cAAAp7E,EAAAo7E,cAAA,GAMAzmE,EAAA0mE,MAA8Cr7E,EAAA,KAM9C2U,EAAA2mE,MAuuBA,SAAArxF,GACA,IAAAf,EACAe,IAAiB0sC,GAAYC,OAC7B3sC,IAAiB0sC,GAAYK,YAC7B9tC,EAAAqxF,GAAA3jD,MAEA3sC,IAAsB0sC,GAAYE,aAClC5sC,IAAiB0sC,GAAYM,kBAC7B/tC,EAAAqxF,GAAA1jD,YAEA5sC,IAAsB0sC,GAAYI,SAClC9sC,IAAiB0sC,GAAYO,cAC7BhuC,EAAAqxF,GAAAxjD,QAEA9sC,IAAsB0sC,GAAYS,SAClCluC,EAAAqxF,GAAAnjD,QAEA,SAxvBAmkD,CAAA5mE,EAAA0mE,OAOA1mE,EAAA6mE,aAAAx7E,EAAAy7E,UAQA9mE,EAAA+mE,WAAA17E,EAAA27E,UACA37E,EAAA27E,UACAhnE,EAAA2mE,QAAAf,GAAAxjD,QAAA,IAOApiB,EAAAinE,WAAA57E,EAAA67E,UAAA77E,EAAA67E,UAAAlvF,IAMAgoB,EAAAmnE,iBAAA97E,EAAA+7E,gBAAA/7E,EAAA+7E,gBAAqFnoE,EACrF,IAooBA5c,EApoBAglF,EAAAh8E,EAAAg8E,iBACA,IAAAA,EACA,GAAArnE,EAAA0mE,QAAgC1kD,GAAYS,OAM5C4kD,EAAA,SAAAx8D,EAAAy8D,GACA,IAAA9xB,EAAA8xB,GACA,IAA4Bx7B,GAAM,CAAAtD,UAClC++B,EAAwC3iC,GAAyB/5B,EAAA,GAAAA,EAAA,IAEjE,OADA2qC,EAAAhK,mBAAA3gC,EAAA,GAAAj0B,KAAAoF,KAAAurF,IACA/xB,OAGA,CACA,IAAAgyB,EACAC,EAAAznE,EAAA2mE,MACAc,IAAA7B,GAAA3jD,MACAulD,EAAoCl1B,GAEpCm1B,IAAA7B,GAAA1jD,YACAslD,EAAoCh3B,GAEpCi3B,IAAA7B,GAAAxjD,UACAolD,EAAoCnyB,IAOpCgyB,EAAA,SAAAx8D,EAAAy8D,GACA,IAAA3lC,EAAA2lC,EAkBA,OAjBA3lC,EACA8lC,IAAA7B,GAAAxjD,QACAvX,EAAA,GAAAz0B,OAEAurD,EAAA8I,eAAA,CAAA5/B,EAAA,GAAA1f,OAAA,CAAA0f,EAAA,UAGA82B,EAAA8I,eAAA,IAIA9I,EAAA8I,eAAA5/B,GAIA82B,EAAA,IAAA6lC,EAAA38D,GAEA82B,GAkGA,OA1FA3hC,EAAA6gD,kBAAAwmB,EAKArnE,EAAA0nE,sBAAAnhF,IAAA8E,EAAAs8E,gBAAAt8E,EAAAs8E,gBAAA,IAOA3nE,EAAA4nE,kBAAA,KAMA5nE,EAAA6nE,eAAA,KAMA7nE,EAAA8nE,aAAA,KAMA9nE,EAAA+nE,cAAA,KAMA/nE,EAAAgoE,YAAA,KAMAhoE,EAAAioE,kBAAA,KAQAjoE,EAAAkoE,uBAAA78E,EAAA88E,eACA98E,EAAA88E,eAAA98E,EAAA88E,eAAA,GAMAnoE,EAAAooE,SAAA,IAA6BrK,GAAW,CACxCloF,OAAA,IAAwBgsF,GAAY,CACpCS,iBAAA,EACA3uC,QAAAtoC,EAAAsoC,OAAAtoC,EAAAsoC,QAEAvxC,MAAAiJ,EAAAjJ,MAAAiJ,EAAAjJ,OA0gBAC,EAAiBu/D,KACjB,SAAAH,EAAA56C,GACA,OAAAxkB,EAAAo/D,EAAA1f,cAAAiH,aA1gBAoZ,wBAAA,IAOApiD,EAAAqhC,cAAAh2C,EAAAg9E,aAKAroE,EAAAsoE,WAAAj9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAmE7hC,GAKnE1mC,EAAAwoE,mBACAn9E,EAAAo9E,SACAzoE,EAAAwoE,mBAAuCliC,GAGvCtmC,EAAAwoE,mBAAAn9E,EAAAq9E,kBACAr9E,EAAAq9E,kBAA4C/hC,GAEpCrqC,EAAM0D,EAAQ6B,EAAmB07B,GAAmBC,QAAAx9B,EAAA2oE,aAAA3oE,GAC5DA,EAweA,OA9tBI2lE,GAASK,EAAAlmE,GA2PbkmE,EAAAhxF,UAAAqyB,OAAA,SAAAtjB,GACA+b,EAAA9qB,UAAAqyB,OAAA9zB,KAAAmD,KAAAqN,GACArN,KAAAiyF,gBAOA3C,EAAAhxF,UAAA4zF,WAAA,WACA,OAAAlyF,KAAA0xF,UAOApC,EAAAhxF,UAAA2pD,YAAA,SAAAt+B,GACAA,EAAAsjC,cAAAruD,OAAyCwnB,EAASG,aAElDoD,EAAAb,iBAEA9oB,KAAA4vF,UAAA5vF,KAAAiwF,QAAAf,GAAA3jD,OAAAvrC,KAAA8xF,mBAAAnoE,GACA,IAAA04C,EAAA14C,EAAA/qB,OAAkCktD,GAAmBG,YACrDkmC,GAAA,GACAnyF,KAAA4vF,WAAA5vF,KAAA2vF,eAAAhmE,EAAA/qB,OAAoEktD,GAAmBE,cACvFn/C,KAAAulF,MACApyF,KAAA2vF,eAAA3vF,KAAAgxF,kBACAhxF,KAAAyvF,QAAA9lE,EAAAuW,MACAlgC,KAAAwvF,eAAAxvF,KAAA4vF,UACAvtB,GAAA,GAGAriE,KAAA2vF,mBAAA9/E,EAEA7P,KAAAwvF,oBAAA3/E,IAAA7P,KAAA0vF,eACAh0E,aAAA1b,KAAA0vF,cACA1vF,KAAA0vF,kBAAA7/E,IA0BA,OAvBA7P,KAAA4vF,WACAjmE,EAAA/qB,OAA2BktD,GAAmBE,aAC9C,OAAAhsD,KAAAmxF,gBACAnxF,KAAAqyF,cAAA1oE,GACAwoE,GAAA,GAEAnyF,KAAA4vF,WACAjmE,EAAA/qB,OAA2BktD,GAAmBI,YAC9CimC,GAAA,EAEA9vB,GACA8vB,EAAAxoE,EAAA/qB,OAAkCktD,GAAmBG,cACrDjsD,KAAA4vF,UACAuC,EAAAnyF,KAAAsyF,mBAAA3oE,IAEwD,EAAA6jC,aAAA6C,aAAuCuR,IAC/Fj4C,EAAA/qB,OAAgCktD,GAAmBE,kBAAAn8C,IAAA7P,KAAA0vF,eACnD1vF,KAAAsyF,mBAAA3oE,GAGAA,EAAA/qB,OAAgCktD,GAAmBrlC,WACnD0rE,GAAA,GAEA/oE,EAAA9qB,UAAA2pD,YAAAprD,KAAAmD,KAAA2pB,IAAAwoE,GAKA7C,EAAAhxF,UAAAqlE,gBAAA,SAAAh6C,GAEA,OADA3pB,KAAAwvF,eAAAxvF,KAAA4vF,UACA5vF,KAAA4vF,WACA5vF,KAAAyvF,QAAA9lE,EAAAuW,MACAlgC,KAAAkxF,mBACAlxF,KAAAuyF,cAAA5oE,IAEA,GAEA3pB,KAAA4xF,WAAAjoE,IACA3pB,KAAA2vF,cAAA9iF,KAAAulF,MACApyF,KAAA0vF,aAAA/zE,WAAA,WACA3b,KAAAsyF,mBAAA,IAA4ChlC,GAAuBxB,GAAmBG,YAAAtiC,EAAAtc,IAAAsc,EAAA6jC,cAAA,EAAA7jC,EAAAwH,cACzEjzB,KAAA8B,WAAAgxF,kBACbhxF,KAAAyvF,QAAA9lE,EAAAuW,OACA,IAGAlgC,KAAA2vF,mBAAA9/E,GACA,IAMAy/E,EAAAhxF,UAAAwlE,cAAA,SAAAn6C,GACA,IAAAwoE,GAAA,EACAnyF,KAAA0vF,eACAh0E,aAAA1b,KAAA0vF,cACA1vF,KAAA0vF,kBAAA7/E,GAEA7P,KAAAsyF,mBAAA3oE,GACA,IAAA6oE,EAAAxyF,KAAAiwF,QAAAf,GAAAnjD,OA4BA,OA3BA/rC,KAAAwvF,eACAxvF,KAAAkxF,kBAMAlxF,KAAA4vF,WAAA4C,EACAxyF,KAAAyyF,gBAEAzyF,KAAA0yF,UAAA/oE,GACA3pB,KAAAywF,iBAAA9mE,IACA3pB,KAAAyyF,gBAIAzyF,KAAAqyF,cAAA1oE,IAdA3pB,KAAAuyF,cAAA5oE,GACA3pB,KAAAiwF,QAAAf,GAAA3jD,OACAvrC,KAAAyyF,iBAcAN,GAAA,GAEAnyF,KAAA4vF,YACA5vF,KAAAkxF,kBAAA,KACAlxF,KAAA2yF,kBAEAR,GAAAnyF,KAAAmwF,YACAxmE,EAAAZ,kBAEAopE,GAQA7C,EAAAhxF,UAAAg0F,mBAAA,SAAA3oE,GACA,GAAA3pB,KAAAyvF,WACAzvF,KAAA4vF,WAAA5vF,KAAAwvF,eACAxvF,KAAA4vF,YAAA5vF,KAAAwvF,eAAA,CACA,IAAAoD,EAAA5yF,KAAAyvF,QACAoD,EAAAlpE,EAAAuW,MACAlT,EAAA4lE,EAAA,GAAAC,EAAA,GACA5lE,EAAA2lE,EAAA,GAAAC,EAAA,GACA99B,EAAA/nC,IAAAC,IAIA,GAHAjtB,KAAAwvF,cAAAxvF,KAAA4vF,UACA76B,EAAA/0D,KAAAwxF,uBACAz8B,GAAA/0D,KAAAwxF,wBACAxxF,KAAAwvF,cACA,SASA,OANAxvF,KAAAkxF,kBACAlxF,KAAA8yF,eAAAnpE,GAGA3pB,KAAA+yF,2BAAAppE,IAEA,GAQA2lE,EAAAhxF,UAAAo0F,UAAA,SAAA/oE,GACA,IAAAqpE,GAAA,EACA,GAAAhzF,KAAAmxF,eAAA,CACA,IAAA8B,GAAA,EACAC,EAAA,CAAAlzF,KAAAkxF,mBACA,GAAAlxF,KAAAiwF,QAAAf,GAAA1jD,YACAynD,EAAAjzF,KAAAqxF,cAAA3xF,OAAAM,KAAAqwF,gBAEA,GAAArwF,KAAAiwF,QAAAf,GAAAxjD,QAAA,CACA,IAAAynD,EAA4DnzF,KAAA,cAC5DizF,EAAAE,EAAA,GAAAzzF,OAAAM,KAAAqwF,WACA6C,EAAA,CAAAC,EAAA,MAAAA,EAAA,GAAAA,EAAA,GAAAzzF,OAAA,IAEA,GAAAuzF,EAEA,IADA,IAAA5lF,EAAAsc,EAAAtc,IACA3Q,EAAA,EAAA+C,EAAAyzF,EAAAxzF,OAAyEhD,EAAA+C,EAAQ/C,IAAA,CACjF,IAAA02F,EAAAF,EAAAx2F,GACA22F,EAAAhmF,EAAAimF,uBAAAF,GACAlzD,EAAAvW,EAAAuW,MACAlT,EAAAkT,EAAA,GAAAmzD,EAAA,GACApmE,EAAAiT,EAAA,GAAAmzD,EAAA,GACAtD,EAAA/vF,KAAA4vF,UAAA,EAAA5vF,KAAA8vF,eAEA,GADAkD,EAAA9yF,KAAAoF,KAAA0nB,IAAAC,MAAA8iE,EACA,CACA/vF,KAAAkxF,kBAAAkC,EACA,QAKA,OAAAJ,GAMA1D,EAAAhxF,UAAAy0F,2BAAA,SAAAppE,GACA,IAAAwK,EAAAxK,EAAAgL,WAAA/wB,QACA5D,KAAAoxF,aAKmDpxF,KAAAoxF,aAAA/lC,cACnD0I,eAAA5/B,IALAn0B,KAAAoxF,aAAA,IAAoC7mC,GAAO,IAAKqR,GAAKznC,IACrDn0B,KAAAuzF,0BAYAjE,EAAAhxF,UAAAi0F,cAAA,SAAA5oE,GACA,IAAA6f,EAAA7f,EAAAgL,WACA30B,KAAAkxF,kBAAA1nD,EACAxpC,KAAAiwF,QAAAf,GAAA3jD,MACAvrC,KAAAqxF,cAAA7nD,EAAA5lC,QAEA5D,KAAAiwF,QAAAf,GAAAxjD,SACA1rC,KAAAqxF,cAAA,EAAA7nD,EAAA5lC,QAAA4lC,EAAA5lC,UACA5D,KAAAuxF,kBAAAvxF,KAAAqxF,cAAA,IAGArxF,KAAAqxF,cAAA,CAAA7nD,EAAA5lC,QAAA4lC,EAAA5lC,SAEA5D,KAAAuxF,oBACAvxF,KAAAsxF,YAAA,IAAmC/mC,GAAO,IAAKuP,GAAU95D,KAAAuxF,qBAEzD,IAAAtmC,EAAAjrD,KAAAmqE,kBAAAnqE,KAAAqxF,eACArxF,KAAAmxF,eAAA,IAAkC5mC,GAClCvqD,KAAA2qD,eACA3qD,KAAAmxF,eAAAhmC,gBAAAnrD,KAAA2qD,eAEA3qD,KAAAmxF,eAAAjmC,YAAAD,GACAjrD,KAAAuzF,wBACAvzF,KAAA0pB,cAAA,IAAA0lE,GAAAD,GAAAnvF,KAAAmxF,kBAOA7B,EAAAhxF,UAAAw0F,eAAA,SAAAnpE,GACA,IAEAwK,EAAAilC,EAwBAo6B,EA1BA7+D,EAAAhL,EAAAgL,WACAs2B,EAA8EjrD,KAAAmxF,eAAA9lC,eAE9ErrD,KAAAiwF,QAAAf,GAAA3jD,MACA6tB,EAAAp5D,KAAAqxF,cAEArxF,KAAAiwF,QAAAf,GAAAxjD,SAEA0tB,GADAjlC,EAAmDn0B,KAAA,kBACnDm0B,EAAAz0B,OAAA,GACAM,KAAA0yF,UAAA/oE,KAEAgL,EAAA30B,KAAAkxF,kBAAAttF,UAKAw1D,GADAjlC,EAAAn0B,KAAAqxF,eACAl9D,EAAAz0B,OAAA,GAEA05D,EAAA,GAAAzkC,EAAA,GACAykC,EAAA,GAAAzkC,EAAA,GACA30B,KAAAmqE,kBAAyDnqE,KAAA,cAAAirD,GACzDjrD,KAAAoxF,eACmDpxF,KAAAoxF,aAAA/lC,cACnD0I,eAAAp/B,GAIA,GAAAs2B,EAAAqH,WAAkChnB,GAAYI,SAC9C1rC,KAAAiwF,QAAAf,GAAAxjD,QAAA,CACA1rC,KAAAsxF,cACAtxF,KAAAsxF,YAAA,IAAuC/mC,IAEvC,IAAAkpC,EAA0C,EAAAj1B,cAAA,IAC1Cg1B,EAAmDxzF,KAAAsxF,YAAAjmC,gBAMnDmoC,EAAA1/B,mBAAA2/B,EAAA//B,YAAA+/B,EAAAjgC,sBACAggC,EAAAr3E,YALAq3E,EAAA,IAAqC15B,GAAU25B,EAAAjgC,qBAAAigC,EAAA//B,aAC/C1zD,KAAAsxF,YAAApmC,YAAAsoC,SAOAxzF,KAAAuxF,oBACAiC,EAAmDxzF,KAAAsxF,YAAAjmC,eACnD0I,eAAA/zD,KAAAuxF,mBAEAvxF,KAAAuzF,yBAOAjE,EAAAhxF,UAAA+zF,cAAA,SAAA1oE,GACA,IAEA0T,EACAlJ,EAHAQ,EAAAhL,EAAAgL,WACAs2B,EAA8EjrD,KAAAmxF,eAAA9lC,cAG9ErrD,KAAAiwF,QAAAf,GAAA1jD,aACAxrC,KAAAkxF,kBAAAv8D,EAAA/wB,SACAuwB,EAAmDn0B,KAAA,eACnDN,QAAAM,KAAAuwF,aACAvwF,KAAA4vF,UACAz7D,EAAAtxB,MAGAw6B,GAAA,GAGAlJ,EAAArxB,KAAA6xB,EAAA/wB,SACA5D,KAAAmqE,kBAAAh2C,EAAA82B,IAEAjrD,KAAAiwF,QAAAf,GAAAxjD,WACAvX,EAAmDn0B,KAAA,kBACnDN,QAAAM,KAAAuwF,aACAvwF,KAAA4vF,UACAz7D,EAAAtxB,MAGAw6B,GAAA,GAGAlJ,EAAArxB,KAAA6xB,EAAA/wB,SACAy5B,IACAr9B,KAAAkxF,kBAAA/8D,EAAA,IAEAn0B,KAAAmqE,kBAAAnqE,KAAAqxF,cAAApmC,IAEAjrD,KAAAuzF,wBACAl2D,GACAr9B,KAAAyyF,iBAOAnD,EAAAhxF,UAAAo1F,gBAAA,WACA,GAAA1zF,KAAAmxF,eAAA,CAGA,IACAh9D,EADA82B,EAA8EjrD,KAAAmxF,eAAA9lC,cAI9ErrD,KAAAiwF,QAAAf,GAAA1jD,cACArX,EAAmDn0B,KAAA,eACnDsE,QAAA,KACAtE,KAAAmqE,kBAAAh2C,EAAA82B,GACA92B,EAAAz0B,QAAA,IACAM,KAAAkxF,kBAAA/8D,IAAAz0B,OAAA,GAAAkE,UAGA5D,KAAAiwF,QAAAf,GAAAxjD,WACAvX,EAAmDn0B,KAAA,kBACnDsE,QAAA,KACmDtE,KAAAsxF,YAAAjmC,cACnD0I,eAAA5/B,GACAn0B,KAAAmqE,kBAAAnqE,KAAAqxF,cAAApmC,IAEA,IAAA92B,EAAAz0B,SACAM,KAAAkxF,kBAAA,MAEAlxF,KAAAuzF,0BAQAjE,EAAAhxF,UAAAm0F,cAAA,WACA,IAAAkB,EAAA3zF,KAAA2yF,gBACA,GAAAgB,EAAA,CAGA,IAAAx/D,EAAAn0B,KAAAqxF,cACApmC,EAA8E0oC,EAAAtoC,cAC9ErrD,KAAAiwF,QAAAf,GAAA1jD,aAEArX,EAAAtxB,MACA7C,KAAAmqE,kBAAAh2C,EAAA82B,IAEAjrD,KAAAiwF,QAAAf,GAAAxjD,UAEqC,KAAA7oC,MACrC7C,KAAAmqE,kBAAAh2C,EAAA82B,GACA92B,EAAA82B,EAAAqI,kBAGAtzD,KAAAgwF,QAA2B1kD,GAAYK,YACvCgoD,EAAAzoC,YAAA,IAA0C6Q,GAAU,CAA4B,KAEhF/7D,KAAAgwF,QAAgC1kD,GAAYM,kBAC5C+nD,EAAAzoC,YAAA,IAA0C0P,GAAe,CAA2B,KAEpF56D,KAAAgwF,QAAgC1kD,GAAYO,eAC5C8nD,EAAAzoC,YAAA,IAA0CqU,GAAY,CAA2B,KAGjFv/D,KAAA0pB,cAAA,IAAA0lE,GAAAD,GAAAwE,IAEA3zF,KAAA6vF,WACA7vF,KAAA6vF,UAAA/sF,KAAA6wF,GAEA3zF,KAAA4pD,SACA5pD,KAAA4pD,QAAA0iC,WAAAqH,KAQArE,EAAAhxF,UAAAq0F,cAAA,WACA3yF,KAAAkxF,kBAAA,KACA,IAAAyC,EAAA3zF,KAAAmxF,eAOA,OANAwC,IACA3zF,KAAAmxF,eAAA,KACAnxF,KAAAoxF,aAAA,KACApxF,KAAAsxF,YAAA,KACAtxF,KAAA0xF,SAAA3gE,YAAAxwB,OAAA,IAEAozF,GASArE,EAAAhxF,UAAAW,OAAA,SAAA8rE,GACA,IACA/P,EADA+P,EAAA1f,cAEArrD,KAAAmxF,eAAApmB,EACA/qE,KAAAqxF,cAAAr2B,EAAA1H,iBACA,IAAA8F,EAAAp5D,KAAAqxF,cAAArxF,KAAAqxF,cAAA3xF,OAAA,GACAM,KAAAkxF,kBAAA93B,EAAAx1D,QACA5D,KAAAqxF,cAAAvuF,KAAAs2D,EAAAx1D,SACA5D,KAAAuzF,wBACAvzF,KAAA0pB,cAAA,IAAA0lE,GAAAD,GAAAnvF,KAAAmxF,kBAMA7B,EAAAhxF,UAAAi1F,sBAAA,WACA,IAAAK,EAAA,GACA5zF,KAAAmxF,gBACAyC,EAAA9wF,KAAA9C,KAAAmxF,gBAEAnxF,KAAAsxF,aACAsC,EAAA9wF,KAAA9C,KAAAsxF,aAEAtxF,KAAAoxF,cACAwC,EAAA9wF,KAAA9C,KAAAoxF,cAEA,IAAAyC,EAAA7zF,KAAA0xF,SAAA3gE,YACA8iE,EAAAtzF,OAAA,GACAszF,EAAA7pC,YAAA4pC,IAKAtE,EAAAhxF,UAAA2zF,aAAA,WACA,IAAA5kF,EAAArN,KAAAqoD,SACAE,EAAAvoD,KAAAooD,YACA/6C,GAAAk7C,GACAvoD,KAAA2yF,gBAEA3yF,KAAA0xF,SAAA/gE,OAAA43B,EAAAl7C,EAAA,OAEAiiF,EA/tBQ,CAguBN7rB,ICptBaqwB,GAnIE,WACjB,SAAAC,IAKA/zF,KAAAgqF,eAAA,KAKAhqF,KAAAg0F,yBAAA,KAsHA,OA7GAD,EAAAz1F,UAAA21F,eAAA,SAAA90F,EAAA4yB,GACA,IAAApd,EAQA,OAPAod,IACApd,EAAA,CACAq1E,eAAAj4D,EAAAi4D,eACAj4D,EAAAi4D,eAAAhqF,KAAA4pF,eAAAzqF,GACA4qD,kBAAAh4B,EAAAg4B,oBAGA/pD,KAAAk0F,aAAAv/E,IAWAo/E,EAAAz1F,UAAA41F,aAAA,SAAAv/E,GACA,OAAe6P,EAAM,CACrBwlE,eAAAhqF,KAAAgqF,eACAjgC,kBAAA/pD,KAAAg0F,0BACSr/E,IAMTo/E,EAAAz1F,UAAAg0D,QAAA,WACA,OAAe1qC,KAUfmsE,EAAAz1F,UAAA61F,YAAA,SAAAh1F,EAAA4yB,GACA,OAAenK,KAUfmsE,EAAAz1F,UAAA+rD,aAAA,SAAAlrD,EAAA4yB,GACA,OAAenK,KAUfmsE,EAAAz1F,UAAA81F,aAAA,SAAAj1F,EAAA4yB,GACA,OAAenK,KASfmsE,EAAAz1F,UAAAsrF,eAAA,SAAAzqF,GACA,OAAeyoB,KAUfmsE,EAAAz1F,UAAA+1F,aAAA,SAAAtpB,EAAAh5C,GACA,OAAenK,KAUfmsE,EAAAz1F,UAAAg2F,cAAA,SAAAzrC,EAAA92B,GACA,OAAenK,KAUfmsE,EAAAz1F,UAAAi2F,cAAA,SAAAtpC,EAAAl5B,GACA,OAAenK,KAEfmsE,EAjIiB,GA0IV,SAAAS,GAAAvpC,EAAAwpC,EAAA1iE,GACP,IAEA2iE,EAFA3qC,EAAAh4B,EAA0C2f,GAAa3f,EAAAg4B,mBAAA,KACvDigC,EAAAj4D,EAAuC2f,GAAa3f,EAAAi4D,gBAAA,KAQpD,GALA0K,EADA3qC,GAAAigC,IAAgD13C,GAAoByX,EAAAigC,IACpEyK,EAAAxpC,EAAAz2B,QAAAy2B,GAAAp2C,UAAA4/E,EAAA1qC,EAAAigC,EAAAyK,EAAAzK,EAAAjgC,GAGAkB,EAEAwpC,GAAA1iE,QAAwDliB,IAAA,EAAA8kF,SAAA,CACxD,IAAAC,EAAA10F,KAAA8E,IAAA,GAA2D,EAAA2vF,UAY3DD,IAAAzpC,IACAypC,EAAAzpC,EAAAz2B,SAEAkgE,EAAAniC,eATA,SAAAp+B,GACA,QAAAz3B,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAoDhD,EAAA+C,IAAQ/C,EAC5Dy3B,EAAAz3B,GAAAwD,KAAAmU,MAAA8f,EAAAz3B,GAAAk4F,KAEA,OAAAzgE,IAOA,OAAAugE,EC7NA,IAAIG,GAAyB,WAC7B,IAAAnsE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4L7B,SAAA4rE,GAAA31F,GACA,oBAAAA,EAAA,CACA,IAAAf,EAAAqL,KAAAqX,MAAA3hB,GACA,OAAAf,GAA0C,KAE1C,cAAAe,EACAA,EAGA,KAGe,IAAA41F,GA7KA,SAAA3rE,GAEf,SAAA4rE,IACA,OAAA5rE,EAAAvsB,KAAAmD,YAwJA,OA1JI60F,GAASG,EAAA5rE,GAOb4rE,EAAA12F,UAAAg0D,QAAA,WACA,OAAes2B,GAAUn/E,MAWzBurF,EAAA12F,UAAA61F,YAAA,SAAAh1F,EAAA4yB,GACA,OAAA/xB,KAAAi1F,sBAAAH,GAAA31F,GAAAa,KAAAi0F,eAAA90F,EAAA4yB,KAWAijE,EAAA12F,UAAA+rD,aAAA,SAAAlrD,EAAA4yB,GACA,OAAA/xB,KAAAk1F,uBAAAJ,GAAA31F,GAAAa,KAAAi0F,eAAA90F,EAAA4yB,KASAijE,EAAA12F,UAAA22F,sBAAA,SAAA72F,EAAA2zB,GACA,OAAenK,KASfotE,EAAA12F,UAAA42F,uBAAA,SAAA92F,EAAA2zB,GACA,OAAenK,KAUfotE,EAAA12F,UAAA81F,aAAA,SAAAj1F,EAAA4yB,GACA,OAAA/xB,KAAAm1F,uBAAAL,GAAA31F,GAAAa,KAAAi0F,eAAA90F,EAAA4yB,KASAijE,EAAA12F,UAAA62F,uBAAA,SAAA/2F,EAAA2zB,GACA,OAAenK,KASfotE,EAAA12F,UAAAsrF,eAAA,SAAAzqF,GACA,OAAAa,KAAAo1F,yBAAAN,GAAA31F,KAQA61F,EAAA12F,UAAA82F,yBAAA,SAAAh3F,GACA,OAAewpB,KAUfotE,EAAA12F,UAAA+1F,aAAA,SAAAtpB,EAAAh5C,GACA,OAAAtoB,KAAAC,UAAA1J,KAAAq1F,mBAAAtqB,EAAAh5C,KAQAijE,EAAA12F,UAAA+2F,mBAAA,SAAAtqB,EAAAh5C,GACA,OAAenK,KAUfotE,EAAA12F,UAAAg2F,cAAA,SAAAzrC,EAAA92B,GACA,OAAAtoB,KAAAC,UAAA1J,KAAAs1F,oBAAAzsC,EAAA92B,KAQAijE,EAAA12F,UAAAg3F,oBAAA,SAAAzsC,EAAA92B,GACA,OAAenK,KAUfotE,EAAA12F,UAAAi2F,cAAA,SAAAtpC,EAAAl5B,GACA,OAAAtoB,KAAAC,UAAA1J,KAAAu1F,oBAAAtqC,EAAAl5B,KAQAijE,EAAA12F,UAAAi3F,oBAAA,SAAAtqC,EAAAl5B,GACA,OAAenK,KAEfotE,EA3Je,CA4JblB,ICvLE0B,GAAyB,WAC7B,IAAA9sE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgR7B,SAAAusE,GAAAtR,GAEA,IADA,IAAAuR,EAAA,GACAh5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA2ChD,EAAA+C,IAAQ/C,EACnDg5F,EAAA5yF,KAAAqhF,EAAAznF,GAAA83B,SAEA,OAAAkhE,EAEe,IAAAC,GA3PO,SAAAvsE,GAKtB,SAAA66D,EAAA2R,GACA,IAAAtsE,EAAAF,EAAAvsB,KAAAmD,YAOA,OAFAspB,EAAAusE,YAAAD,GAAA,KACAtsE,EAAAwsE,0BACAxsE,EAiOA,OA7OIksE,GAASvR,EAAA76D,GAiBb66D,EAAA3lF,UAAAy3F,0BAAA,WACA,GAAA/1F,KAAA61F,YAGA,QAAAn5F,EAAA,EAAA+C,EAAAO,KAAA61F,YAAAn2F,OAAqDhD,EAAA+C,IAAQ/C,EACjDypB,EAAQnmB,KAAA61F,YAAAn5F,GAAsB0pB,EAASC,OAAArmB,KAAAmc,QAAAnc,OAMnDikF,EAAA3lF,UAAAw3F,wBAAA,WACA,GAAA91F,KAAA61F,YAGA,QAAAn5F,EAAA,EAAA+C,EAAAO,KAAA61F,YAAAn2F,OAAqDhD,EAAA+C,IAAQ/C,EACjDkpB,EAAM5lB,KAAA61F,YAAAn5F,GAAsB0pB,EAASC,OAAArmB,KAAAmc,QAAAnc,OASjDikF,EAAA3lF,UAAAk2B,MAAA,WACA,IAAAwhE,EAAA,IAAA/R,EAAA,MAEA,OADA+R,EAAAC,cAAAj2F,KAAA61F,aACAG,GAKA/R,EAAA3lF,UAAAkzD,eAAA,SAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GACA,GAAAA,EAAiCj9B,GAAwBz0B,KAAA4uB,YAAArlB,EAAAmjB,GACzD,OAAAglC,EAGA,IADA,IAAAyyB,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvDg1D,EAAAyyB,EAAAznF,GAAA80D,eAAAjoD,EAAAmjB,EAAA+kC,EAAAC,GAEA,OAAAA,GAKAuyB,EAAA3lF,UAAAk0B,WAAA,SAAAjpB,EAAAmjB,GAEA,IADA,IAAAy3D,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvD,GAAAynF,EAAAznF,GAAA81B,WAAAjpB,EAAAmjB,GACA,SAGA,UAKAu3D,EAAA3lF,UAAA0zD,cAAA,SAAArjC,GACQuG,GAAmBvG,GAE3B,IADA,IAAAw1D,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EAC3CuC,GAAM0vB,EAAAw1D,EAAAznF,GAAAkyB,aAElB,OAAAD,GAOAs1D,EAAA3lF,UAAAwmF,cAAA,WACA,OAAA2Q,GAAAz1F,KAAA61F,cAKA5R,EAAA3lF,UAAA8lF,mBAAA,WACA,OAAApkF,KAAA61F,aAKA5R,EAAA3lF,UAAA0sD,sBAAA,SAAAqH,GAMA,GALAryD,KAAAuxD,4BAAAvxD,KAAAqqB,gBACY9pB,EAAKP,KAAAqxD,yBACjBrxD,KAAAsxD,yCAAA,EACAtxD,KAAAuxD,2BAAAvxD,KAAAqqB,eAEAgoC,EAAA,GACA,IAAAryD,KAAAsxD,0CACAe,EAAAryD,KAAAsxD,yCACA,OAAAtxD,KAEA,IAAA/B,EAAAo0D,EAAAzlD,WACA,GAAA5M,KAAAqxD,wBAAA9yD,eAAAN,GACA,OAAA+B,KAAAqxD,wBAAApzD,GAMA,IAHA,IAAAi4F,EAAA,GACA/R,EAAAnkF,KAAA61F,YACAM,GAAA,EACAz5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAAmDhD,EAAA+C,IAAQ/C,EAAA,CAC3D,IAAAuuD,EAAAk5B,EAAAznF,GACAi3D,EAAA1I,EAAAD,sBAAAqH,GACA6jC,EAAApzF,KAAA6wD,GACAA,IAAA1I,IACAkrC,GAAA,GAGA,GAAAA,EAAA,CACA,IAAAC,EAAA,IAAAnS,EAAA,MAGA,OAFAmS,EAAAC,mBAAAH,GACAl2F,KAAAqxD,wBAAApzD,GAAAm4F,EACAA,EAIA,OADAp2F,KAAAsxD,yCAAAe,EACAryD,MAQAikF,EAAA3lF,UAAAg0D,QAAA,WACA,OAAehnB,GAAYQ,qBAM3Bm4C,EAAA3lF,UAAAk0D,iBAAA,SAAA7jC,GAEA,IADA,IAAAw1D,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvD,GAAAynF,EAAAznF,GAAA81D,iBAAA7jC,GACA,SAGA,UAKAs1D,EAAA3lF,UAAAsmB,QAAA,WACA,WAAA5kB,KAAA61F,YAAAn2F,QAMAukF,EAAA3lF,UAAAkgC,OAAA,SAAA7E,EAAAiuB,GAEA,IADA,IAAAu8B,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvDynF,EAAAznF,GAAA8hC,OAAA7E,EAAAiuB,GAEA5nD,KAAAmc,WAMA8nE,EAAA3lF,UAAA0gC,MAAA,SAAAvF,EAAAy4B,EAAAhL,GACA,IAAAU,EAAAV,EACAU,IACAA,EAAqBzxB,GAASn2B,KAAA4uB,cAG9B,IADA,IAAAu1D,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvDynF,EAAAznF,GAAAsiC,MAAAvF,EAAAy4B,EAAAtK,GAEA5nD,KAAAmc,WAOA8nE,EAAA3lF,UAAA23F,cAAA,SAAA9R,GACAnkF,KAAAq2F,mBAAAZ,GAAAtR,KAKAF,EAAA3lF,UAAA+3F,mBAAA,SAAAlS,GACAnkF,KAAA+1F,4BACA/1F,KAAA61F,YAAA1R,EACAnkF,KAAA81F,0BACA91F,KAAAmc,WAMA8nE,EAAA3lF,UAAAi0D,eAAA,SAAAnhB,GAEA,IADA,IAAA+yC,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvDynF,EAAAznF,GAAA61D,eAAAnhB,GAEApxC,KAAAmc,WAMA8nE,EAAA3lF,UAAAigC,UAAA,SAAAsyB,EAAAC,GAEA,IADA,IAAAqzB,EAAAnkF,KAAA61F,YACAn5F,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvDynF,EAAAznF,GAAA6hC,UAAAsyB,EAAAC,GAEA9wD,KAAAmc,WAKA8nE,EAAA3lF,UAAAgqB,gBAAA,WACAtoB,KAAA+1F,4BACA3sE,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAEAikF,EA9OsB,CA+OpB/yB,ICxQEolC,GAAyB,WAC7B,IAAA5tE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgP7B,SAAAkrE,GAAAh2F,EAAA2zB,GACA,IAAA3zB,EACA,YAKA,IAAA6sD,EACA,OAAA7sD,EAAA,MACA,KAAaktC,GAAYC,MACzB0f,EAqDA,SAAA7sD,GACA,WAAew9D,GAAKx9D,EAAA,aAtDpBm4F,CAAiE,GACjE,MAEA,KAAajrD,GAAYE,YACzByf,EAwDA,SAAA7sD,GACA,WAAe07D,GAAU17D,EAAA,aAzDzBo4F,CAA2E,GAC3E,MAEA,KAAalrD,GAAYI,QACzBuf,EAgFA,SAAA7sD,GACA,WAAeugE,GAAOvgE,EAAA,aAjFtBq4F,CAAqE,GACrE,MAEA,KAAanrD,GAAYK,YACzBsf,EA8DA,SAAA7sD,GACA,WAAe29D,GAAU39D,EAAA,aA/DzBs4F,CAA2E,GAC3E,MAEA,KAAaprD,GAAYM,kBACzBqf,EAmDA,SAAA7sD,GACA,WAAew8D,GAAex8D,EAAA,aApD9Bu4F,CAAqF,GACrF,MAEA,KAAarrD,GAAYO,cACzBof,EA6DA,SAAA7sD,GACA,WAAemhE,GAAYnhE,EAAA,aA9D3Bw4F,CAA+E,GAC/E,MAEA,KAAatrD,GAAYQ,oBACzBmf,EAcA,SAAA7sD,EAAA2zB,GACA,IAAAoyD,EAAA/lF,EAAA,WAAAiP,IAKA,SAAA49C,GACA,OAAAmpC,GAAAnpC,EAAAl5B,KAEA,WAAe4jE,GAAkBxR,GAvBjC0S,CAA2F,GAC3F,MAEA,QACA,UAAAzsF,MAAA,6BAAAhM,EAAAQ,MAGA,OAAW41F,GAA4BvpC,GAAA,EAAAl5B,GAiEvC,SAAAwiE,GAAAtpC,EAAAl5B,GAEA,IAEA+kE,EAFAl4F,GADAqsD,EAAeupC,GAA4BvpC,GAAA,EAAAl5B,IAC3CugC,UAGA,OAAA1zD,GACA,KAAa0sC,GAAYC,MACzBurD,EA6GA,SAAA7rC,EAAAl5B,GACA,OACAnzB,KAAA,QACAu1B,YAAA82B,EAAAqI,kBAhHAyjC,CAA0D,GAC1D,MAEA,KAAazrD,GAAYE,YACzBsrD,EAyDA,SAAA7rC,EAAAl5B,GACA,OACAnzB,KAAA,aACAu1B,YAAA82B,EAAAqI,kBA5DA0jC,CAAoE,GACpE,MAEA,KAAa1rD,GAAYI,QACzBorD,EAgHA,SAAA7rC,EAAAl5B,GACA,IAAAtvB,EACAsvB,IACAtvB,EAAAsvB,EAAAklE,aAEA,OACAr4F,KAAA,UACAu1B,YAAA82B,EAAAqI,eAAA7wD,IAvHAy0F,CAA8D,EAAAnlE,GAC9D,MAEA,KAAauZ,GAAYK,YACzBmrD,EAuEA,SAAA7rC,EAAAl5B,GACA,OACAnzB,KAAA,aACAu1B,YAAA82B,EAAAqI,kBA1EA6jC,CAAoE,GACpE,MAEA,KAAa7rD,GAAYM,kBACzBkrD,EAwDA,SAAA7rC,EAAAl5B,GACA,OACAnzB,KAAA,kBACAu1B,YAAA82B,EAAAqI,kBA3DA8jC,CAA8E,GAC9E,MAEA,KAAa9rD,GAAYO,cACzBirD,EA0EA,SAAA7rC,EAAAl5B,GACA,IAAAtvB,EACAsvB,IACAtvB,EAAAsvB,EAAAklE,aAEA,OACAr4F,KAAA,eACAu1B,YAAA82B,EAAAqI,eAAA7wD,IAjFA40F,CAAwE,EAAAtlE,GACxE,MAEA,KAAauZ,GAAYQ,oBACzBgrD,EAqBA,SAAA7rC,EAAAl5B,GAMA,OACAnzB,KAAA,qBACAulF,WAPAl5B,EAAAm5B,qBAAA/2E,IAAA,SAAA49C,GACA,IAAAt2C,EAAsB6P,EAAM,GAAGuN,GAE/B,cADApd,EAAAo1C,kBACAwqC,GAAAtpC,EAAAt2C,MAzBA2iF,CAAoF,EAAAvlE,GACpF,MAEA,KAAauZ,GAAYS,OACzB+qD,EAAA,CACAl4F,KAAA,qBACAulF,WAAA,IAEA,MAEA,QACA,UAAA/5E,MAAA,8BAAAxL,GAGA,OAAAk4F,EA4Fe,IAAAS,GA1aJ,SAAAnuE,GAKX,SAAAouE,EAAAzlE,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GAsBA,OArBAzI,EAAAF,EAAAvsB,KAAAmD,aAIAgqF,eAA+Bt4C,GAAa/8B,EAAAq1E,eAC5Cr1E,EAAAq1E,eAAA,aACAr1E,EAAAo1C,oBACAzgC,EAAA0qE,yBAA6CtiD,GAAa/8B,EAAAo1C,oBAO1DzgC,EAAAqhC,cAAAh2C,EAAAg9E,aAMAroE,EAAAmuE,qBAAA9iF,EAAA+iF,oBACApuE,EAmJA,OA/KIgtE,GAASkB,EAAApuE,GAiCbouE,EAAAl5F,UAAA22F,sBAAA,SAAA72F,EAAA2zB,GAIA,IAAA4lE,EAAA,KAWA1sC,EAAAmpC,IATAuD,EADA,YAAAv5F,EAAA,KACuD,EAGvD,CACAQ,KAAA,UACAqsD,SAAuD,EACvDv9B,WAAA,OAGA,SAAAqE,GACAg5C,EAAA,IAA0BxgB,GAc1B,OAbAvqD,KAAA2qD,cACAogB,EAAA5f,gBAAAnrD,KAAA2qD,eAEA3qD,KAAAy3F,sBAAA,kBAAAE,SAAA9nF,GACAk7D,EAAA5f,gBAAAwsC,EAAA,eAEA5sB,EAAA7f,YAAAD,GACA,OAAA0sC,GACA5sB,EAAAlf,MAAA8rC,EAAA,IAEAA,EAAA,YACA5sB,EAAAjgD,cAAA6sE,EAAA,eAEA5sB,GAKAysB,EAAAl5F,UAAA42F,uBAAA,SAAA92F,EAAA2zB,GACA,IAEA82B,EAAA,KACA,yBAHqD,EAGrD,MAEAA,EAAA,GAEA,IADA,IAAA+uC,EAF+E,EAE/E,SACAl7F,EAAA,EAAA+C,EAAAm4F,EAAAl4F,OAAwDhD,EAAA+C,IAAQ/C,EAChEmsD,EAAA/lD,KAAA9C,KAAAi1F,sBAAA2C,EAAAl7F,GAAAq1B,SAIA82B,EAAA,CAAA7oD,KAAAi1F,sBAAA72F,EAAA2zB,IAEA,OAAA82B,GAKA2uC,EAAAl5F,UAAA62F,uBAAA,SAAA/2F,EAAA2zB,GACA,OAAAqiE,GAAuD,EAAAriE,IAKvDylE,EAAAl5F,UAAA82F,yBAAA,SAAAh3F,GACA,IACAyhC,EADAg4D,EAAAz5F,EAAA,IAaA,OAXAy5F,EACA,QAAAA,EAAA,KACAh4D,EAA6B6R,GAAammD,EAAA,iBAG1BxrE,GAAM,MAItBwT,EAAA7/B,KAAAgqF,eAEA,GAYAwN,EAAAl5F,UAAA+2F,mBAAA,SAAAtqB,EAAAh5C,GACAA,EAAA/xB,KAAAk0F,aAAAniE,GAEA,IAAA3zB,EAAA,CACAQ,KAAA,UACAqsD,SAAA,KACAv9B,WAAA,MAEA7X,EAAAk1D,EAAAvf,aACA37C,IAAAgG,IACAzX,EAAAyX,MAEA,IAAAo1C,EAAA8f,EAAA1f,cACAJ,IACA7sD,EAAA6sD,SAAAspC,GAAAtpC,EAAAl5B,IAEA,IAAArE,EAAAq9C,EAAA//C,gBAKA,cAJA0C,EAAAq9C,EAAA3f,mBACaxmC,EAAO8I,KACpBtvB,EAAAsvB,cAEAtvB,GAWAo5F,EAAAl5F,UAAAg3F,oBAAA,SAAAzsC,EAAA92B,GACAA,EAAA/xB,KAAAk0F,aAAAniE,GAEA,IADA,IAAA/oB,EAAA,GACAtM,EAAA,EAAA+C,EAAAopD,EAAAnpD,OAA6ChD,EAAA+C,IAAQ/C,EACrDsM,EAAAlG,KAAA9C,KAAAq1F,mBAAAxsC,EAAAnsD,GAAAq1B,IAEA,OACAnzB,KAAA,oBACAiqD,SAAA7/C,IAYAwuF,EAAAl5F,UAAAi3F,oBAAA,SAAAtqC,EAAAl5B,GACA,OAAAwiE,GAAAtpC,EAAAjrD,KAAAk0F,aAAAniE,KAEAylE,EAhLW,CAiLTzC,ICtOa+C,GAAA,CACf7rC,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBCXIurC,GAAyB,WAC7B,IAAArvE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6C7B8uE,GAAA,CACA,GACA,cACA,QACA,MACA,SAQA,SAAAC,GAAAn2B,GACA9hE,KAAAgiE,WAAAF,EAAAiB,UAAAn2D,YAAAk1D,EACA,IAAAzzD,EAAArO,KAAAk4F,cAAAp2B,GACA9hE,KAAAqhE,WAAAc,KAAA9zD,EAAAyzD,GAQA,SAAAq2B,GAAAr2B,GACA,IAAAzzD,EAAArO,KAAAk4F,cAAAp2B,GACA9hE,KAAAqhE,WAAAgB,KAAAh0D,EAAAyzD,GAQA,SAAAs2B,GAAAt2B,GACA,IAAAzzD,EAAArO,KAAAk4F,cAAAp2B,GACA9hE,KAAAqhE,WAAAkB,GAAAl0D,EAAAyzD,GACA9hE,KAAAq4F,QAAAv2B,EAAAiB,WAQA,SAAAu1B,GAAAx2B,GACA,IAAAzzD,EAAArO,KAAAk4F,cAAAp2B,GACA9hE,KAAAqhE,WAAAuB,SAAAv0D,EAAAyzD,GAQA,SAAAy2B,GAAAz2B,GACA,IAAAzzD,EAAArO,KAAAk4F,cAAAp2B,GACA9hE,KAAAqhE,WAAAqB,UAAAr0D,EAAAyzD,GAQA,SAAA02B,GAAA12B,GACA,IAAAzzD,EAAArO,KAAAk4F,cAAAp2B,GACA9hE,KAAAqhE,WAAAY,OAAA5zD,EAAAyzD,GACA9hE,KAAAq4F,QAAAv2B,EAAAiB,WAQA,SAAA01B,GAAA32B,GACA,IAAAzzD,EAAArO,KAAAqhE,WAAAq3B,UAAA,qBAAA52B,KACA9hE,KAAAqhE,WAAA33C,cAAArb,GAQA,SAAAsqF,GAAA72B,GACA,IAAAzzD,EAAArO,KAAAqhE,WAAAq3B,UAAA,oBAAA52B,KACA9hE,KAAAqhE,WAAA33C,cAAArb,GAEA,IAmDeuqF,GAnDf,SAAAxvE,GAKA,SAAAyvE,EAAAx3B,GACA,IAAA/3C,EAAAtpB,KACAshE,EAAA,CACAw3B,cAAAb,GACAc,cAAAZ,GACAa,YAAAZ,GACAa,aAAAX,GACAY,cAAAX,GACAY,gBAAAX,GACAY,oBAAAT,GACAU,qBAAAZ,IAQA,OANAnvE,EAAAF,EAAAvsB,KAAAmD,KAAAqhE,EAAAC,IAAAthE,MAKAgiE,WAAAX,EAAAW,WACA14C,EA0BA,OAhDIyuE,GAASc,EAAAzvE,GAgCbyvE,EAAAv6F,UAAA45F,cAAA,SAAAp2B,GAEA,IAAAzzD,EAAAyzD,EAKA,MAJA,iBAAAA,EAAAzR,eACAhiD,EAAArO,KAAAqhE,WAAAwB,WAAAf,MACAzR,YAAA2nC,GAAAl2B,EAAAzR,cAEAhiD,GAMAwqF,EAAAv6F,UAAA+5F,QAAA,SAAAt1B,UACA/iE,KAAAgiE,WAAAe,EAAAn2D,aAEAisF,EAjDA,CAkDE13B,IC1LEm4B,GAAyB,WAC7B,IAAA5wE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgD7B,SAAAqwE,GAAAz3B,GACA9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAQA,SAAS23B,GAAW33B,GACpB9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAQA,SAAA43B,GAAA53B,GACA9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAQA,SAAA63B,GAAA73B,GACA9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAQA,SAAA83B,GAAA93B,GACA9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAQA,SAAA+3B,GAAA/3B,GACA9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAQA,SAAAg4B,GAAAh4B,GACA9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAQA,SAAAi4B,GAAAj4B,GACA9hE,KAAAqhE,WAAAm4B,gBAAA13B,GAEA,IAsBek4B,GAtBf,SAAA5wE,GAKA,SAAA6wE,EAAA54B,GACA,IACAC,EAAA,CACA44B,YAAAX,GACAY,YAA2BV,GAC3BW,UAAAV,GACAW,WAAAV,GACAW,YAAAV,GACAW,cAAAV,GACAW,kBAAAT,GACAU,mBAAAX,IAGA,OADA1wE,EAAAvsB,KAAAmD,KAAAqhE,EAAAC,IAAAthE,KAGA,OAnBIs5F,GAASW,EAAA7wE,GAmBb6wE,EApBA,CAqBE94B,ICvIEu5B,GAAyB,WAC7B,IAAAhyE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA8C7ByxE,IAAA,EACAC,GAAA,SAAAxxE,GAaA,SAAAwxE,EAAAh8F,EAAAquD,EAAA4tC,GACA,IAAAvxE,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAKAspB,EAAA2jC,gBACA,IAAA6tC,EAAAD,GAAA,GA2GA,OAvGAvxE,EAAAyxE,QA+GA,SAAAD,GAsBA,IAAAC,EACA,GAAAD,EAAAC,SAAAJ,GACAI,EAAAD,EAAAC,aAGA,OAAAD,EAAAE,OACA,OACAD,EAAA,EACA,MACA,OACAA,EAAA,EACA,MACA,OACAA,EAAA,EACA,MACA,QAAAA,EAAA,EAGA,OAAAA,EAvJAE,CAAAH,GAIAxxE,EAAA4xE,SA0JA,SAAAJ,EAAAC,GAGA,IAAAG,EAAA,EAEAA,EADAJ,EAAAI,SACAJ,EAAAI,SAGAH,EAAA,KAEA,OAAAG,EApKAC,CAAAL,EAAAxxE,EAAAyxE,SAKAzxE,EAAA8xE,QAAA,YAAAN,KAAA,QAIAxxE,EAAA+xE,WAAA,eAAAP,KAAA,WAIAxxE,EAAA29B,KAAA,SAAA6zC,IAAA,UAIAxxE,EAAAgyE,OAAA,WAAAR,IAAA,YAIAxxE,EAAAiyE,QAAA,YAAAT,IAAA,UAIAxxE,EAAAkyE,QAAA,YAAAV,IAAA,UAIAxxE,EAAA85C,QAAA,YAAA03B,IAAA,UAIAxxE,EAAA+5C,QAAA,YAAAy3B,IAAA,UAIAxxE,EAAAgmC,QAAA,YAAAwrC,KAAA,QAIAxxE,EAAA8lC,OAAA,WAAA0rC,KAAA,OAIAxxE,EAAAimC,SAAA,aAAAurC,KAAA,SAIAxxE,EAAA+lC,QAAA,YAAAyrC,KAAA,QAIAxxE,EAAAwmC,OAAA,WAAAgrC,IAAA,SAIAxxE,EAAAmyE,cAAA,kBAAAX,EACAA,EAAA,mBAMAxxE,EAAAy5C,UAAA,cAAA+3B,IAAA,YAIAxxE,EAAAuO,MAAA,UAAAijE,IAAA,QAIAxxE,EAAAjnB,OAAA,WAAAy4F,IAAA,SAIAxxE,EAAAoyE,MAAA,UAAAZ,IAAA,QAIAxxE,EAAAqyE,MAAA,UAAAb,IAAA,QAIAxxE,EAAA+mC,YAAA,gBAAAyqC,IAAA,eAIAxxE,EAAAsyE,YAAA,gBAAAd,IAAA,cAIAxxE,EAAAinC,UAAA,cAAAuqC,KAAA,UAEA7tC,EAAAnkC,iBACAQ,EAAAR,eAAA,WACAmkC,EAAAnkC,mBAGAQ,EAEA,OAhIIoxE,GAASE,EAAAxxE,GAgIbwxE,EAjIA,CAkIEjyE,IAmEF,WACA,IACA,IAAAkzE,EAAA,IAAAC,WAAA,SAA0Cf,QAAA,IAC1CJ,GAAA,IAAAkB,EAAAd,QAEA,MAAA1sF,KALA,GASe,IAAA0tF,GAAA,GC7PXC,GAAyB,WAC7B,IAAAtzE,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA2D7B,SAAA+yE,GAAAn6B,GACA9hE,KAAAk8F,eAAAp6B,GACA9hE,KAAAm8F,iBAAAr6B,EAAAs6B,eAAA,IACAp8F,KAAAq8F,iBAAAv6B,GACA9hE,KAAAs8F,cACAt8F,KAAAu8F,gBAAAz6B,EAAA9hE,KAAAw8F,WAQA,SAAAC,GAAA36B,GACA9hE,KAAAu8F,gBAAAz6B,EAAA9hE,KAAA08F,cASA,SAAAC,GAAA76B,GACA9hE,KAAAq8F,iBAAAv6B,GACA9hE,KAAAu8F,gBAAAz6B,EAAA9hE,KAAA48F,QASA,SAAAC,GAAA/6B,GACA9hE,KAAAu8F,gBAAAz6B,EAAA9hE,KAAA88F,YAEA,IA6SeC,GA7SA,SAAA3zE,GAMf,SAAA4zE,EAAA37B,EAAA47B,GACA,IAAA3zE,EAAAtpB,KACAshE,EAAA,CACA26B,cACAQ,aACAE,YACAE,gBAmCA,OAjCAvzE,EAAAF,EAAAvsB,KAAAmD,KAAAqhE,EAAAC,IAAAthE,MAKAgiE,WAAAX,EAAAW,WAKA14C,EAAA2zE,cAKA3zE,EAAA4zE,mBAAArtF,EAKAyZ,EAAAgzE,YAAA,EAKAhzE,EAAA6zE,SAOA7zE,EAAA8zE,cAAA,KACA9zE,EA4PA,OA1SI0yE,GAASgB,EAAA5zE,GAqDb4zE,EAAA1+F,UAAA++F,gBAAA,SAAAC,GACA,OAAAt9F,KAAAk9F,gBAAAI,EAAAC,YAOAP,EAAA1+F,UAAA69F,iBAAA,SAAAmB,GACA,IAAAh+F,EAAAlC,OAAAsL,KAAA1I,KAAAgiE,YAAAtiE,QACA,IAAAJ,GAAA,IAAAA,GAA2CqiE,GAAU/0D,aAAA5M,KAAAgiE,cACrDhiE,KAAAk9F,cAAAI,EAAAC,WACAv9F,KAAAw9F,2BAOAR,EAAA1+F,UAAAm/F,sBAAA,SAAAC,GACAA,EAAAntC,YACAvwD,KAAAk9F,mBAAArtF,EACA7P,KAAA29F,qBAMAX,EAAA1+F,UAAAq/F,iBAAA,WACA39F,KAAAm9F,SAAAxhF,WAAA3b,KAAA49F,wBAAA1/F,KAAA8B,MApIA,MAyIAg9F,EAAA1+F,UAAAs/F,wBAAA,WACA59F,KAAAs8F,YAAA,EACAt8F,KAAAm9F,cAAAttF,GAKAmtF,EAAA1+F,UAAAk/F,uBAAA,gBACA3tF,IAAA7P,KAAAm9F,UACAzhF,aAAA1b,KAAAm9F,WASAH,EAAA1+F,UAAAu/F,gBAAA,SAAA9wC,EAAAuwC,GACA,IAAAjvF,EAAArO,KAAAqhE,WAAAwB,WAAA9V,EAAAuwC,GAuBA,OAnBAjvF,EAAA00D,UAAAu6B,EAAAC,WAAA,EAGAlvF,EAAA+sF,SAAA,EACA/sF,EAAAgtF,YAAA,EACAhtF,EAAAitF,OAAAt7F,KAAAs8F,YACAjuF,EAAAyhD,OAAA,EACAzhD,EAAA0sF,QAAA,EACA1sF,EAAAwpB,MAAAylE,EAAAQ,SAAA,EACAzvF,EAAAhM,OAAAi7F,EAAAS,SAAA,EACA1vF,EAAA6sF,SAAAoC,EAAAU,OAAA,GACA3vF,EAAAkiD,UAAAvwD,KAAAq9F,gBAAAC,GACAjvF,EAAAgiD,YAxKgB,QA2KhBhiD,EAAA+0D,QAAAk6B,EAAAl6B,QACA/0D,EAAAg1D,QAAAi6B,EAAAj6B,QACAh1D,EAAAktF,QAAA+B,EAAA/B,QACAltF,EAAAmtF,QAAA8B,EAAA9B,QACAntF,GAOA2uF,EAAA1+F,UAAAi+F,gBAAA,SAAAz6B,EAAAm8B,GACA,IAAAC,EAAAjwF,MAAA3P,UAAAsF,MAAA/G,KAAAilE,EAAAs6B,gBACA98F,EAAA4+F,EAAAx+F,OACA,SAAAopB,IACAg5C,EAAAh5C,iBAEA,QAAApsB,EAAA,EAAuBA,EAAA4C,IAAW5C,EAAA,CAClC,IAAAyhG,EAAAn+F,KAAA69F,gBAAA/7B,EAAAo8B,EAAAxhG,IAEAyhG,EAAAr1E,iBACAm1E,EAAAphG,KAAAmD,KAAA8hE,EAAAq8B,KASAnB,EAAA1+F,UAAA8/F,WAAA,SAAAC,EAAAC,GAEA,IADA,IAAA3hG,EAAA0hG,EAAA3+F,OACAhD,EAAA,EAAuBA,EAAAC,EAAOD,IAAA,CAE9B,GADA2hG,EAAA3hG,GACA6gG,aAAAe,EACA,SAGA,UAaAtB,EAAA1+F,UAAA49F,eAAA,SAAAp6B,GACA,IAAAu8B,EAAAv8B,EAAAo8B,QAGAx1F,EAAAtL,OAAAsL,KAAA1I,KAAAgiE,YACA1iE,EAAAoJ,EAAAhJ,OACA,GAAAJ,GAAA++F,EAAA3+F,OAAA,CAEA,IADA,IAAA1C,EAAA,GACAN,EAAA,EAA2BA,EAAA4C,IAAW5C,EAAA,CACtC,IAAAuB,EAAAuL,OAAAd,EAAAhM,IACAiB,EAAAqC,KAAAgiE,WAAA/jE,GAIAA,GAA2B0jE,IAAU3hE,KAAAo+F,WAAAC,EAAApgG,EAAA,IACrCjB,EAAA8F,KAAAnF,EAAA4gG,KAGA,IAAA7hG,EAAA,EAA2BA,EAAAM,EAAA0C,SAAchD,EACzCsD,KAAA88F,WAAAh7B,EAAA9kE,EAAAN,MASAsgG,EAAA1+F,UAAAk+F,UAAA,SAAAzvC,EAAA2wC,GACA19F,KAAAgiE,WAAA07B,EAAA36B,WAAA,CACA3sD,OAAAsnF,EAAAtnF,OACAmoF,IAAAb,EACAc,UAAAd,EAAAtnF,QAEApW,KAAAqhE,WAAAo9B,KAAAf,EAAA3wC,GACA/sD,KAAAqhE,WAAAq9B,MAAAhB,EAAA3wC,GACA/sD,KAAAqhE,WAAAc,KAAAu7B,EAAA3wC,IAOAiwC,EAAA1+F,UAAAo+F,aAAA,SAAA3vC,EAAA2wC,GACA,IAAA/zE,EAAA+zE,EACAS,EAAAn+F,KAAAgiE,WAAAr4C,EAAAo5C,WAEA,GAAAo7B,EAAA,CAGA,IAAAQ,EAAAR,EAAAI,IACAC,EAAAL,EAAAK,UACAx+F,KAAAqhE,WAAAgB,KAAA14C,EAAAojC,GACA4xC,GAAAH,IAAA70E,EAAAvT,SACAuoF,EAAAlD,cAAA9xE,EAAAvT,OAC8B,EAAAqlF,cAAA+C,EAE9BG,EAAAvoF,OAAAooF,EACA70E,EAAAvT,QACApW,KAAAqhE,WAAAuB,SAAA+7B,EAAA5xC,GACA/sD,KAAAqhE,WAAAqB,UAAA/4C,EAAAojC,KAIkC,EAAA32C,OAAAooF,EACA,EAAA/C,cAAA,KAClCz7F,KAAA88F,WAAA/vC,EAAApjC,KAGAw0E,EAAAI,IAAA50E,EACAw0E,EAAAK,UAAA70E,EAAAvT,SAOA4mF,EAAA1+F,UAAAs+F,OAAA,SAAA7vC,EAAA2wC,GACA19F,KAAAqhE,WAAAkB,GAAAm7B,EAAA3wC,GACA/sD,KAAAqhE,WAAAk9B,IAAAb,EAAA3wC,GACA/sD,KAAAqhE,WAAAu9B,MAAAlB,EAAA3wC,GACA/sD,KAAA6+F,gBAAAnB,IAOAV,EAAA1+F,UAAAw+F,WAAA,SAAA/vC,EAAA2wC,GACA19F,KAAAqhE,WAAAY,OAAAy7B,EAAA3wC,GACA/sD,KAAAqhE,WAAAk9B,IAAAb,EAAA3wC,GACA/sD,KAAAqhE,WAAAu9B,MAAAlB,EAAA3wC,GACA/sD,KAAA6+F,gBAAAnB,IAMAV,EAAA1+F,UAAAugG,gBAAA,SAAAnB,UACA19F,KAAAgiE,WAAA07B,EAAA36B,WACA/iE,KAAAy9F,sBAAAC,IAQAV,EAAA1+F,UAAA+9F,iBAAA,SAAAv6B,GACA,IAAAqB,EAAAnjE,KAAAi9F,YAAA/5B,YACAtlE,EAAAkkE,EAAAs6B,eAAA,GAEA,GAAAp8F,KAAAq9F,gBAAAz/F,GAAA,CAEA,IAAAkhG,EAAA,CAAAlhG,EAAAwlE,QAAAxlE,EAAAylE,SACAF,EAAArgE,KAAAg8F,GACAnjF,WAAA,W5FjQO,IAAepZ,EAAAkG,EACtB/L,EADsB+L,E4FmQAq2F,E5FlQtBpiG,GADsB6F,E4FmQA4gE,G5FlQtBviE,QAAA6H,GACA/L,GAAA,GAEA6F,EAAA+B,OAAA5H,EAAA,I4FgQasD,KAAAo9F,iBAGbJ,EA3Se,CA4Sb77B,IC5YE49B,GAAyB,WAC7B,IAAAr2E,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAsD7B81E,GAAA,CAEA,eACA,kBACA,cACA,gBACA,cACA,cACA,cACA,cACA,eACA,cACA,gBACA,eACA,aACA,uBAEA,cAEA,gBACA,YACA,aACA,eACA,YACA,YACA,mBACA,kBACA,iBAEA,YACA,gBACA,uBACA,aA4SeC,GA1SQ,SAAA71E,GAKvB,SAAA81E,EAAAnX,GACA,IAAAz+D,EAAAF,EAAAvsB,KAAAmD,YAuBA,OAjBAspB,EAAA61E,SAAApX,EAKAz+D,EAAA04C,WAAA,GAKA14C,EAAA81E,UAAA,GAKA91E,EAAA+1E,iBAAA,GACA/1E,EAAAg2E,kBACAh2E,EA2QA,OAvSIy1E,GAASG,EAAA91E,GAkCb81E,EAAA5gG,UAAAghG,gBAAA,WACA,GAAYrwC,GACZjvD,KAAAu/F,eAAA,aAA8CvF,GAAYh6F,YAE1D,GAAiBkvD,GACjBlvD,KAAAu/F,eAAA,SAA0C3G,GAAQ54F,WAElD,CACA,IAAAi9F,EAAA,IAAkCj6B,GAAWhjE,MAC7CA,KAAAu/F,eAAA,QAAAtC,GACgBjuC,IAChBhvD,KAAAu/F,eAAA,YAAiDxC,GAAW/8F,KAAAi9F,IAI5Dj9F,KAAAw/F,aAQAN,EAAA5gG,UAAAihG,eAAA,SAAAtiG,EAAAkC,GACA,IAAAV,EAAAU,EACAsgG,EAAAhhG,EAAA+iE,YACAi+B,IACAA,EAAApzF,QAAA,SAAAgC,GACA,IAAAqxF,EAAAjhG,EAAAgjE,mBAAApzD,GACAqxF,IACA1/F,KAAAo/F,UAAA/wF,GAAAqxF,EAAAxhG,KAAAO,KAEaP,KAAA8B,OACbA,KAAAq/F,iBAAAv8F,KAAArE,KAOAygG,EAAA5gG,UAAAkhG,UAAA,WAEA,IADA,IAAA7iG,EAAAqD,KAAAq/F,iBAAA3/F,OACAhD,EAAA,EAAuBA,EAAAC,EAAOD,IAAA,CAC9B,IAAAijG,EAAA3/F,KAAAq/F,iBAAA3iG,GACAsD,KAAA4/F,WAAAD,EAAAn+B,eAOA09B,EAAA5gG,UAAAuhG,YAAA,WAEA,IADA,IAAAljG,EAAAqD,KAAAq/F,iBAAA3/F,OACAhD,EAAA,EAAuBA,EAAAC,EAAOD,IAAA,CAC9B,IAAAijG,EAAA3/F,KAAAq/F,iBAAA3iG,GACAsD,KAAA8/F,cAAAH,EAAAn+B,eAQA09B,EAAA5gG,UAAAyhG,cAAA,SAAAj+B,GACA,IAAAljE,EAAAkjE,EAAAljE,KACA8gG,EAAA1/F,KAAAo/F,UAAAxgG,GACA8gG,GACAA,EAAA59B,IAQAo9B,EAAA5gG,UAAAshG,WAAA,SAAAI,GACAA,EAAA3zF,QAAA,SAAA4zF,GACYr6E,EAAM5lB,KAAAm/F,SAAAc,EAAAjgG,KAAA+/F,cAAA//F,OACT9B,KAAA8B,QAOTk/F,EAAA5gG,UAAAwhG,cAAA,SAAAE,GACAA,EAAA3zF,QAAA,SAAAgC,GACY8X,EAAQnmB,KAAAm/F,SAAA9wF,EAAArO,KAAA+/F,cAAA//F,OACX9B,KAAA8B,QAWTk/F,EAAA5gG,UAAAukE,WAAA,SAAAl5C,EAAAm4C,GAEA,IADA,IAAAo+B,EAAA,GACAxjG,EAAA,EAAA+C,EAAAu/F,GAAAt/F,OAAgDhD,EAAA+C,EAAQ/C,IAAA,CACxD,IAAA8B,EAAAwgG,GAAAtiG,GAAA,GACAwjG,EAAA1hG,GAAAmrB,EAAAnrB,IAAAsjE,EAAAtjE,IAAAwgG,GAAAtiG,GAAA,GAEA,OAAAwjG,GAQAhB,EAAA5gG,UAAA6jE,KAAA,SAAAl/D,EAAA0mB,GACA3pB,KAAAmgG,UAAuBrI,GAAgB5rC,YAAAjpD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAA+jE,KAAA,SAAAp/D,EAAA0mB,GACA3pB,KAAAmgG,UAAuBrI,GAAgB7rC,YAAAhpD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAAikE,GAAA,SAAAt/D,EAAA0mB,GACA3pB,KAAAmgG,UAAuBrI,GAAgB3rC,UAAAlpD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAAogG,MAAA,SAAAz7F,EAAA0mB,GACA1mB,EAAAm4F,SAAA,EACAp7F,KAAAmgG,UAAuBrI,GAAgBxrC,aAAArpD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAAsgG,MAAA,SAAA37F,EAAA0mB,GACA1mB,EAAAm4F,SAAA,EACAp7F,KAAAmgG,UAAuBrI,GAAgBvrC,aAAAtpD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAAmgG,KAAA,SAAAx7F,EAAA0mB,GACA1mB,EAAAm4F,SAAA,EACAp7F,KAAAmgG,UAAuBrI,GAAgB1rC,YAAAnpD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAAigG,IAAA,SAAAt7F,EAAA0mB,GACA1mB,EAAAm4F,SAAA,EACAp7F,KAAAmgG,UAAuBrI,GAAgBzrC,WAAAppD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAA2jE,OAAA,SAAAh/D,EAAA0mB,GACA3pB,KAAAmgG,UAAuBrI,GAAgBtrC,cAAAvpD,EAAA0mB,IAOvCu1E,EAAA5gG,UAAAskE,SAAA,SAAA3/D,EAAA0mB,GACA3pB,KAAAu+F,IAAAt7F,EAAA0mB,GACA3pB,KAAAogG,UAAAn9F,EAAAmT,OAAAnT,EAAAw4F,gBACAz7F,KAAA4+F,MAAA37F,EAAA0mB,IAQAu1E,EAAA5gG,UAAAokE,UAAA,SAAAz/D,EAAA0mB,GACA3pB,KAAAy+F,KAAAx7F,EAAA0mB,GACA3pB,KAAAogG,UAAAn9F,EAAAmT,OAAAnT,EAAAw4F,gBACAz7F,KAAA0+F,MAAAz7F,EAAA0mB,IAUAu1E,EAAA5gG,UAAA8hG,UAAA,SAAAC,EAAAC,GACA,SAAAD,IAAAC,IAGAD,EAAAl+F,SAAAm+F,IAYApB,EAAA5gG,UAAAo6F,UAAA,SAAA6H,EAAAt9F,EAAA0mB,GACA,WAAmBoyE,GAAYwE,EAAA52E,EAAA1mB,IAQ/Bi8F,EAAA5gG,UAAA6hG,UAAA,SAAAI,EAAAt9F,EAAA0mB,GACA,IAAAtb,EAAArO,KAAA04F,UAAA6H,EAAAt9F,EAAA0mB,GACA3pB,KAAA0pB,cAAArb,IAOA6wF,EAAA5gG,UAAAk7F,gBAAA,SAAA7vE,GACA,IAAAtb,EAAArO,KAAA04F,UAAA/uE,EAAA/qB,KAAA+qB,KACA3pB,KAAA0pB,cAAArb,IASA6wF,EAAA5gG,UAAAkiG,eAAA,SAAAt1E,EAAAvB,GAEA,OADA3pB,KAAA04F,UAAAxtE,EAAqDg3C,GAAiBv4C,EAAA3pB,MAAA2pB,IAMtEu1E,EAAA5gG,UAAAgqB,gBAAA,WACAtoB,KAAA6/F,cACAz2E,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAEAk/F,EAxSuB,CAySrB/1E,GCpYEs3E,GAAyB,WAC7B,IAAA/3E,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4Rdw3E,GArQW,SAAAt3E,GAM1B,SAAAu3E,EAAAtzF,EAAAuzF,GACA,IAAAt3E,EAAAF,EAAAvsB,KAAAmD,YAMAspB,EAAA4+B,KAAA76C,EAKAic,EAAAu3E,gBAKAv3E,EAAAw3E,WAAA,EAKAx3E,EAAAy3E,kBAAA,GAKAz3E,EAAA03E,eAAAJ,EACAA,EAA4B9xC,GAAqBA,GAOjDxlC,EAAA23E,MAAA,KACA,IAAAlZ,EAAAz+D,EAAA4+B,KAAAiC,cAqCA,OAhCA7gC,EAAA43E,gBAAA,EAKA53E,EAAA63E,gBAAA,GAQA73E,EAAA83E,qBAAA,IAAyCnC,GAAmBlX,GAQ5Dz+D,EAAA+3E,6BAAA,KAKA/3E,EAAAg4E,wBAAwC17E,EAAM0D,EAAA83E,qBAA6BtJ,GAAgB5rC,YAAA5iC,EAAAi4E,mBAAAj4E,GAK3FA,EAAAk4E,oBAAoC57E,EAAM0D,EAAA83E,qBAA6BtJ,GAAgB7rC,YAAA3iC,EAAAm4E,YAAAn4E,GACvFA,EAoLA,OAlQIm3E,GAASE,EAAAv3E,GAqFbu3E,EAAAriG,UAAAojG,cAAA,SAAAl0C,GACA,IAAAm0C,EAAA,IAA2Br0C,GAAuBxB,GAAmBtlC,MAAAxmB,KAAAkoD,KAAAsF,GACrExtD,KAAA0pB,cAAAi4E,QACA9xF,IAAA7P,KAAA6gG,iBAEAnlF,aAAA1b,KAAA6gG,iBACA7gG,KAAA6gG,qBAAAhxF,EACA8xF,EAAA,IAA2Br0C,GAAuBxB,GAAmBrlC,SAAAzmB,KAAAkoD,KAAAsF,GACrExtD,KAAA0pB,cAAAi4E,IAIA3hG,KAAA6gG,gBAAAllF,WAAA,WACA3b,KAAA6gG,qBAAAhxF,EACA,IAAA8xF,EAAA,IAAmCr0C,GAAuBxB,GAAmBC,YAAA/rD,KAAAkoD,KAAAsF,GAC7ExtD,KAAA0pB,cAAAi4E,IACazjG,KAAA8B,MAAA,MAUb2gG,EAAAriG,UAAAsjG,sBAAA,SAAAp0C,GACA,IAAA7jC,EAAA6jC,EACA7jC,EAAA/qB,MAA0BktD,GAAmBK,WAC7CxiC,EAAA/qB,MAA0BktD,GAAmBU,qBAC7CxsD,KAAAmhG,gBAAAx3E,EAAAo5C,WAEAp5C,EAAA/qB,MAA+BktD,GAAmBI,cAClDlsD,KAAAmhG,gBAAAx3E,EAAAo5C,YAAA,GAEA/iE,KAAAkhG,gBAAA9jG,OAAAsL,KAAA1I,KAAAmhG,iBAAAzhG,QAOAihG,EAAAriG,UAAAujG,iBAAA,SAAAr0C,GACAxtD,KAAA4hG,sBAAAp0C,GACA,IAAAm0C,EAAA,IAA2Br0C,GAAuBxB,GAAmBK,UAAAnsD,KAAAkoD,KAAAsF,GACrExtD,KAAA0pB,cAAAi4E,GAOAA,EAAA94E,oBAAA7oB,KAAA8gG,YAAA9gG,KAAA8hG,qBAAAt0C,IACAxtD,KAAA0hG,cAAA1hG,KAAAihG,OAEA,IAAAjhG,KAAAkhG,kBACAlhG,KAAA+gG,kBAAA10F,QAA2C2Z,GAC3ChmB,KAAA+gG,kBAAArhG,OAAA,EACAM,KAAA8gG,WAAA,EACA9gG,KAAAihG,MAAA,KACAjhG,KAAAqhG,6BAAAh5E,UACAroB,KAAAqhG,6BAAA,OASAV,EAAAriG,UAAAwjG,qBAAA,SAAAt0C,GACA,WAAAA,EAAAsC,QAOA6wC,EAAAriG,UAAAijG,mBAAA,SAAA/zC,GACAxtD,KAAA4hG,sBAAAp0C,GACA,IAAAm0C,EAAA,IAA2Br0C,GAAuBxB,GAAmBI,YAAAlsD,KAAAkoD,KAAAsF,GACrExtD,KAAA0pB,cAAAi4E,GACA3hG,KAAAihG,MAAAzzC,EACA,IAAAxtD,KAAA+gG,kBAAArhG,SAKAM,KAAAqhG,6BACA,IAAoBpC,GAAmBhpF,UACvCjW,KAAA+gG,kBAAAj+F,KAAwC8iB,EAAM5lB,KAAAqhG,6BAAoCv1C,GAAmBG,YAAAjsD,KAAAsyF,mBAAAtyF,MAA8C4lB,EAAM5lB,KAAAqhG,6BAAoCv1C,GAAmBK,UAAAnsD,KAAA6hG,iBAAA7hG,MAcpM4lB,EAAM5lB,KAAAohG,qBAA4Bt1C,GAAmBU,cAAAxsD,KAAA6hG,iBAAA7hG,SAQjE2gG,EAAAriG,UAAAg0F,mBAAA,SAAA9kC,GAIA,GAAAxtD,KAAA+hG,UAAAv0C,GAAA,CACAxtD,KAAA8gG,WAAA,EACA,IAAAa,EAAA,IAA+Br0C,GAAuBxB,GAAmBE,YAAAhsD,KAAAkoD,KAAAsF,EAAAxtD,KAAA8gG,WACzE9gG,KAAA0pB,cAAAi4E,GAMAn0C,EAAA1kC,kBASA63E,EAAAriG,UAAAmjG,YAAA,SAAAj0C,GACA,IAAAJ,KAAAptD,KAAAihG,QAAAjhG,KAAA+hG,UAAAv0C,IACAxtD,KAAA0pB,cAAA,IAA+B4jC,GAAsBE,EAAA5uD,KAAAoB,KAAAkoD,KAAAsF,EAAAJ,KAQrDuzC,EAAAriG,UAAAyjG,UAAA,SAAAv0C,GACA,OAAAxtD,KAAA8gG,WACA5gG,KAAAg1C,IAAAsY,EAAA4V,QAAApjE,KAAAihG,MAAA79B,SAAApjE,KAAAghG,gBACA9gG,KAAAg1C,IAAAsY,EAAA6V,QAAArjE,KAAAihG,MAAA59B,SAAArjE,KAAAghG,gBAKAL,EAAAriG,UAAAgqB,gBAAA,WACAtoB,KAAAwhG,sBACYx7E,EAAahmB,KAAAwhG,qBACzBxhG,KAAAwhG,oBAAA,MAEAxhG,KAAAshG,0BACYt7E,EAAahmB,KAAAshG,yBACzBthG,KAAAshG,wBAAA,MAEAthG,KAAA+gG,kBAAA10F,QAAuC2Z,GACvChmB,KAAA+gG,kBAAArhG,OAAA,EACAM,KAAAqhG,+BACArhG,KAAAqhG,6BAAAh5E,UACAroB,KAAAqhG,6BAAA,MAEArhG,KAAAohG,uBACAphG,KAAAohG,qBAAA/4E,UACAroB,KAAAohG,qBAAA,MAEAh4E,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAEA2gG,EAnQ0B,CAoQxBx3E,GCrRa64E,GAMf,aANeA,GAYf,YAZeA,GAkBf,UClBeC,GAAA,CACfC,WAAA,aACAC,KAAA,OACAC,OAAA,SACAC,KAAA,QCoOeC,GAzNE,WAKjB,SAAAC,EAAAC,EAAAC,GAKAziG,KAAA0iG,kBAAAF,EAKAxiG,KAAA2iG,aAAAF,EAKAziG,KAAA4iG,UAAA,GAKA5iG,KAAA6iG,YAAA,GAKA7iG,KAAA8iG,gBAAA,GAyLA,OApLAP,EAAAjkG,UAAAiC,MAAA,WACAP,KAAA4iG,UAAAljG,OAAA,EACAM,KAAA6iG,YAAAnjG,OAAA,EACQa,EAAKP,KAAA8iG,kBAMbP,EAAAjkG,UAAAykG,QAAA,WACA,IAAAC,EAAAhjG,KAAA4iG,UACAK,EAAAjjG,KAAA6iG,YACA9a,EAAAib,EAAA,GACA,GAAAA,EAAAtjG,QACAsjG,EAAAtjG,OAAA,EACAujG,EAAAvjG,OAAA,IAGAsjG,EAAA,GAAAA,EAAAngG,MACAogG,EAAA,GAAAA,EAAApgG,MACA7C,KAAAkjG,QAAA,IAEA,IAAAC,EAAAnjG,KAAA2iG,aAAA5a,GAEA,cADA/nF,KAAA8iG,gBAAAK,GACApb,GAOAwa,EAAAjkG,UAAA6pC,QAAA,SAAA4/C,GACQ17D,IAAMrsB,KAAA2iG,aAAA5a,KAAA/nF,KAAA8iG,iBAAA,IACd,IAAAM,EAAApjG,KAAA0iG,kBAAA3a,GACA,OAAAqb,GAlFO9hG,MAmFPtB,KAAA4iG,UAAA9/F,KAAAilF,GACA/nF,KAAA6iG,YAAA//F,KAAAsgG,GACApjG,KAAA8iG,gBAAA9iG,KAAA2iG,aAAA5a,KAAA,EACA/nF,KAAAqjG,UAAA,EAAArjG,KAAA4iG,UAAAljG,OAAA,IACA,IAOA6iG,EAAAjkG,UAAAs8B,SAAA,WACA,OAAA56B,KAAA4iG,UAAAljG,QAQA6iG,EAAAjkG,UAAAglG,mBAAA,SAAAp/F,GACA,SAAAA,EAAA,GAQAq+F,EAAAjkG,UAAAilG,oBAAA,SAAAr/F,GACA,SAAAA,EAAA,GAQAq+F,EAAAjkG,UAAAklG,gBAAA,SAAAt/F,GACA,OAAAA,EAAA,MAMAq+F,EAAAjkG,UAAAmlG,SAAA,WACA,IAAA/mG,EACA,IAAAA,GAAAsD,KAAA4iG,UAAAljG,QAAA,KAAkDhD,GAAA,EAAQA,IAC1DsD,KAAAkjG,QAAAxmG,IAMA6lG,EAAAjkG,UAAAsmB,QAAA,WACA,WAAA5kB,KAAA4iG,UAAAljG,QAMA6iG,EAAAjkG,UAAA4pC,YAAA,SAAAjqC,GACA,OAAAA,KAAA+B,KAAA8iG,iBAMAP,EAAAjkG,UAAAolG,SAAA,SAAA3b,GACA,OAAA/nF,KAAAkoC,YAAAloC,KAAA2iG,aAAA5a,KAMAwa,EAAAjkG,UAAA4kG,QAAA,SAAAh/F,GAOA,IANA,IAAA8+F,EAAAhjG,KAAA4iG,UACAK,EAAAjjG,KAAA6iG,YACAvjG,EAAA0jG,EAAAtjG,OACAqoF,EAAAib,EAAA9+F,GACAk/F,EAAAH,EAAA/+F,GACAy/F,EAAAz/F,EACAA,EAAA5E,GAAA,IACA,IAAAskG,EAAA5jG,KAAAsjG,mBAAAp/F,GACA2/F,EAAA7jG,KAAAujG,oBAAAr/F,GACA4/F,EAAAD,EAAAvkG,GACA2jG,EAAAY,GAAAZ,EAAAW,GACAC,EAAAD,EACAZ,EAAA9+F,GAAA8+F,EAAAc,GACAb,EAAA/+F,GAAA++F,EAAAa,GACA5/F,EAAA4/F,EAEAd,EAAA9+F,GAAA6jF,EACAkb,EAAA/+F,GAAAk/F,EACApjG,KAAAqjG,UAAAM,EAAAz/F,IAOAq+F,EAAAjkG,UAAA+kG,UAAA,SAAAM,EAAAz/F,GAKA,IAJA,IAAA8+F,EAAAhjG,KAAA4iG,UACAK,EAAAjjG,KAAA6iG,YACA9a,EAAAib,EAAA9+F,GACAk/F,EAAAH,EAAA/+F,GACAA,EAAAy/F,GAAA,CACA,IAAAI,EAAA/jG,KAAAwjG,gBAAAt/F,GACA,KAAA++F,EAAAc,GAAAX,GAMA,MALAJ,EAAA9+F,GAAA8+F,EAAAe,GACAd,EAAA/+F,GAAA++F,EAAAc,GACA7/F,EAAA6/F,EAMAf,EAAA9+F,GAAA6jF,EACAkb,EAAA/+F,GAAAk/F,GAKAb,EAAAjkG,UAAA0lG,aAAA,WACA,IAKAjc,EAAArrF,EAAA0mG,EALAZ,EAAAxiG,KAAA0iG,kBACAM,EAAAhjG,KAAA4iG,UACAK,EAAAjjG,KAAA6iG,YACA3+F,EAAA,EACA/F,EAAA6kG,EAAAtjG,OAEA,IAAAhD,EAAA,EAAmBA,EAAAyB,IAAOzB,GAE1B0mG,EAAAZ,EADAza,EAAAib,EAAAtmG,MAtNO4E,WAyNPtB,KAAA8iG,gBAAA9iG,KAAA2iG,aAAA5a,KAGAkb,EAAA/+F,GAAAk/F,EACAJ,EAAA9+F,KAAA6jF,GAGAib,EAAAtjG,OAAAwE,EACA++F,EAAAvjG,OAAAwE,EACAlE,KAAAyjG,YAEAlB,EAvNiB,GCrBb0B,GAAyB,WAC7B,IAAAv7E,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgIdg7E,GAzGF,SAAA96E,GAMb,SAAA+6E,EAAAC,EAAAC,GACA,IAAA/6E,EAAAF,EAAAvsB,KAAAmD,KAKA,SAAA+nF,GACA,OAAAqc,EAAAx/F,MAAA,KAAAmjF,IAMA,SAAAA,GACA,OAA4DA,EAAA,GAAAngD,YACnD5nC,KAgBT,OAXAspB,EAAAg7E,oBAAAD,EAKA/6E,EAAAi7E,cAAA,EAKAj7E,EAAAk7E,kBAAA,GACAl7E,EAkEA,OAtGI26E,GAASE,EAAA/6E,GAyCb+6E,EAAA7lG,UAAA6pC,QAAA,SAAA4/C,GACA,IAAA0c,EAAAr7E,EAAA9qB,UAAA6pC,QAAAtrC,KAAAmD,KAAA+nF,GACA0c,GAEY7+E,EADZmiE,EAAA,GACyB3hE,EAASC,OAAArmB,KAAAokD,iBAAApkD,MAElC,OAAAykG,GAKAN,EAAA7lG,UAAAomG,gBAAA,WACA,OAAA1kG,KAAAukG,eAMAJ,EAAA7lG,UAAA8lD,iBAAA,SAAAz6B,GACA,IAAAgW,EAA0DhW,EAAA,OAC1DvN,EAAAujB,EAAA3O,WACA,GAAA2O,EAAAwJ,MAAA/sB,IAAmC6W,GAASE,QAAA/W,IAAqB6W,GAASpM,OAC1EzK,IAAsB6W,GAASG,OAAAhX,IAAoB6W,GAASI,MAAA,CAChDlN,EAAQwZ,EAAOvZ,EAASC,OAAArmB,KAAAokD,iBAAApkD,MACpC,IAAA2kG,EAAAhlE,EAAAiI,SACA+8D,KAAA3kG,KAAAwkG,2BACAxkG,KAAAwkG,kBAAAG,KACA3kG,KAAAukG,eAEAvkG,KAAAskG,wBAOAH,EAAA7lG,UAAAsmG,cAAA,SAAAC,EAAAC,GAIA,IAHA,IAEA1oF,EAAAujB,EAAAglE,EAFAI,EAAA,EACAC,GAAA,EAEAhlG,KAAAukG,cAAAM,GAAAE,EAAAD,GACA9kG,KAAA46B,WAAA,GAEA+pE,GADAhlE,EAA0D3/B,KAAA+iG,UAAA,IAC1Dn7D,UACAxrB,EAAAujB,EAAA3O,cAC0BiC,GAASI,MACnC2xE,GAAA,EAEA5oF,IAA+B6W,GAASC,MAAAyxE,KAAA3kG,KAAAwkG,oBACxCxkG,KAAAwkG,kBAAAG,IAAA,IACA3kG,KAAAukG,gBACAQ,EACAplE,EAAAl8B,QAGA,IAAAshG,GAAAC,GAGAhlG,KAAAskG,uBAGAH,EAvGa,CAwGX7B,ICnEK,SAAA2C,GAAA1uE,GACP,OAAAA,EC5CA,SAAA2uE,GAAA/0E,EAAAw/C,EAAAw1B,GACA,IAAAC,EAAsBtyE,GAAQ68C,GAAAw1B,EAAA,GAC9BE,EAAsBzyE,GAAS+8C,GAAAw1B,EAAA,GAC/B,OAAAjlG,KAAA4B,IAAAquB,EAAAjwB,KAAA4B,IAAAsjG,EAAAC,IAcA,SAAAC,GAAAn1E,EAAArC,EAAAC,GACA,IAAA3qB,EAAAlD,KAAA4B,IAAAquB,EAAArC,GAOA,OALA1qB,GAAAlD,KAAA6E,IAAA,EADA,GACA7E,KAAAC,IAAA,EAAAgwB,EAAArC,EAAA,IADA,GACA,EACAC,IACA3qB,EAAAlD,KAAAC,IAAAiD,EAAA2qB,GACA3qB,GAAAlD,KAAA6E,IAAA,EAJA,GAIA7E,KAAAC,IAAA,EAAA4tB,EAAAoC,EAAA,IAJA,GAIA,GAEW3D,EAAKppB,EAAA2qB,EAAA,IAAAD,GA0FT,SAAAy3E,GAAAz3E,EAAAC,EAAAy3E,EAAAC,GACP,gBAQAt1E,EAAA0tB,EAAApnB,EAAAivE,GACA,QAAA71F,IAAAsgB,EAAA,CACA,IAAAw1E,EAAAF,EACAP,GAAAp3E,EAAA23E,EAAAhvE,GACA3I,EAEA,YADAje,IAAA21F,OACAE,EAGAJ,GAAAn1E,EAAAw1E,EAAA53E,GAFuBvB,EAAK2D,EAAApC,EAAA43E,KCzIrB,SAAAC,GAAApvE,GACP,YAAA3mB,IAAA2mB,EACA,OAGA,EAOO,SAASqvE,GAAIrvE,GACpB,YAAA3mB,IAAA2mB,EACAA,OAGA,ECtBe,IAAAsvE,GACf,SADeA,GAEf,aAFeA,GAGf,WCTIC,GAAyB,WAC7B,IAAAr9E,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAsL7B88E,GAAA,EA6lCA,SAAAC,GAAA59F,EAAA69F,GACAvqF,WAAA,WACAtT,EAAA69F,IACK,GAoIE,SAAAC,GAAAC,GACP,QAAAA,EAAA7rD,cAAA6rD,EAAA9rD,eACasT,GAAgBw4C,EAAA7rD,aAAA6rD,EAAA9rD,iBAI7B8rD,EAAA7yD,mBAAA6yD,EAAA3yD,kBAGA2yD,EAAAC,iBAAAD,EAAAE,gBAKe,IAAAC,GAzqCP,SAAAn9E,GAKR,SAAAo9E,EAAAz0E,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,YACA2U,EAAsB6P,EAAM,GAAGuN,GAsC/B,OAjCAzI,EAAAm9E,OAAA,MAKAn9E,EAAAo9E,YAAA,GAKAp9E,EAAAq9E,oBAMAr9E,EAAAozB,YAA4BtK,GAAgBz9B,EAAAkrB,WAAA,aAK5CvW,EAAAs9E,cAAA,KAKAt9E,EAAAu9E,kBAKAv9E,EAAAw9E,gBACAx9E,EAAAy9E,cAAApyF,GACA2U,EAi+BA,OA7gCIy8E,GAASS,EAAAp9E,GAkDbo9E,EAAAloG,UAAAyoG,cAAA,SAAApyF,GAIA,IACAqyF,EAk/BO,SAAAryF,GACP,IAAAsyF,EACAn5E,EACAC,EAKA4wB,OAAA9uC,IAAA8E,EAAAgqC,QACAhqC,EAAAgqC,QAAAqnD,GACA7mD,OAAAtvC,IAAA8E,EAAAwqC,QACAxqC,EAAAwqC,QALA,GAMAT,OAAA7uC,IAAA8E,EAAA+pC,WACA/pC,EAAA+pC,WANA,EAOAwoD,OAAAr3F,IAAA8E,EAAAuyF,YACAvyF,EAAAuyF,WACAC,OAAAt3F,IAAA8E,EAAAyyF,4BAAAzyF,EAAAyyF,2BACA,QAAAv3F,IAAA8E,EAAAkqC,YAAA,CACA,IAAAA,EAAAlqC,EAAAkqC,YACA/wB,EAAA+wB,EAAAF,GACA5wB,OAAAle,IAAAgvC,EAAAM,GACAN,EAAAM,GAAAN,IAAAn/C,OAAA,GAEAunG,EADAtyF,EAAA0yF,oBH7wCO,SAAAxoD,EAAA2mD,EAAAC,GACP,gBAQAt1E,EAAA0tB,EAAApnB,EAAAivE,GACA,QAAA71F,IAAAsgB,EAAA,CACA,IAAArC,EAAA+wB,EAAA,GACA9wB,EAAA8wB,IAAAn/C,OAAA,GACAimG,EAAAF,EACAP,GAAAp3E,EAAA23E,EAAAhvE,GACA3I,EAEA,GAAA43E,EAEA,YADA71F,IAAA21F,KAIAF,GAAAn1E,EAAAw1E,EAAA53E,GAF2BvB,EAAK2D,EAAApC,EAAA43E,GAIhC,IAAA2B,EAAApnG,KAAA4B,IAAA6jG,EAAAx1E,GACAlM,EAAA/jB,KAAAmkB,MAA+Bu5B,GAAiBiB,EAAAyoD,EAAAzpD,IAChD,OAAAgB,EAAA56B,KGovCmCsjF,CAAuB1oD,EAAAsoD,GAAAxyF,EAAA6yF,qBAAA7yF,EAAAga,QAGvB42E,GAAsBz3E,EAAAC,EAAAo5E,GAAAxyF,EAAA6yF,qBAAA7yF,EAAAga,YAGzD,CAEA,IAAAkR,EAAyBuS,GAAgBz9B,EAAAkrB,WAAA,aACzClR,EAAAkR,EAAAjR,YACA6H,EAAA9H,EAIAzuB,KAAAC,IAAqB2yB,GAAQnE,GAAUiE,GAASjE,IAFhD,IAAkBwe,GAAgBC,GAAKP,SACvChN,EAAA4O,mBAEAg5D,EAAAhxE,EAA0CinB,GAAiBx9C,KAAA8E,IA/B3D,EA+B2DghG,IAC3D0B,EAAAD,EAAAvnG,KAAA8E,IAhCA,EADA,GAiCAghG,IA2BA,QAxBAn2F,KADAie,EAAAnZ,EAAAmZ,eAEA6wB,EAAA,EAGA7wB,EAAA25E,EAAAvnG,KAAA8E,IAAA05C,EAAAC,QAIA9uC,KADAke,EAAApZ,EAAAoZ,iBAIAA,OAFAle,IAAA8E,EAAAwqC,aACAtvC,IAAA8E,EAAAmZ,cACAA,EAAA5tB,KAAA8E,IAAA05C,EAAAS,GAGAsoD,EAAAvnG,KAAA8E,IAAA05C,EAAAS,GAIAuoD,GAIAvoD,EAAAR,EAAAz+C,KAAAmkB,MAAAnkB,KAAA6E,IAAA+oB,EAAAC,GAAA7tB,KAAA6E,IAAA25C,IACA3wB,EAAAD,EAAA5tB,KAAA8E,IAAA05C,EAAAS,EAAAR,GACAhqC,EAAA0yF,oBACAJ,EHjxCO,SAAAU,EAAA75E,EAAA85E,EAAApC,EAAAC,GACP,gBAQAt1E,EAAA0tB,EAAApnB,EAAAivE,GACA,QAAA71F,IAAAsgB,EAAA,CACA,IAAAw1E,EAAAF,EACAP,GAAAp3E,EAAA23E,EAAAhvE,GACA3I,EACAC,OAAAle,IAAA+3F,IAAA,EAEA,GAAAlC,EAEA,YADA71F,IAAA21F,KAIAF,GAAAn1E,EAAAw1E,EAAA53E,GAF2BvB,EAAK2D,EAAApC,EAAA43E,GAIhC,IAAArwE,GAAAuoB,GAAA,YACAypD,EAAApnG,KAAA4B,IAAA6jG,EAAAx1E,GACA03E,EAAA3nG,KAAAmkB,MAAAnkB,KAAA6E,IAAA+oB,EAAAw5E,GAAApnG,KAAA6E,IAAA4iG,GAAAryE,GAEA,OAAmB9I,EADnBsB,EAAA5tB,KAAA8E,IAAA2iG,EAAAE,GACwB95E,EAAA43E,KGsvCWmC,CAAiBppD,EAAA5wB,EAAAC,EAAAo5E,GAAAxyF,EAAA6yF,qBAAA7yF,EAAAga,YAEpD,CACA,IAAA64E,EAAA7yF,EAAA6yF,oBACAO,EAAApzF,EAAAga,OACAu4E,GAAAa,IAAAloE,EAAA+O,aACA44D,GAAA,EACAO,EAAAloE,EAAAjR,aAEAq4E,EAAmC1B,GAAsBz3E,EAAAC,EAAAo5E,GAAAK,GAAAO,IAGzD,OAAYC,WAAAf,EAAAn5E,gBACZC,gBAAA4wB,UAAAD,cAlkCAupD,CAAAtzF,GAKA3U,KAAAkoG,eAAAlB,EAAAl5E,cAKA9tB,KAAAmoG,eAAAnB,EAAAj5E,cAKA/tB,KAAAk/C,YAAA8nD,EAAAtoD,WAKA1+C,KAAA4+C,aAAAjqC,EAAAkqC,YAKA7+C,KAAAooG,SAAApB,EAAAroD,QACA,IAAA0pD,EA28BO,SAAA1zF,GACP,YAAA9E,IAAA8E,EAAAga,QJ/wCOA,EIgxCoBha,EAAAga,OJhxCpB25E,EIgxCoB3zF,EAAA6yF,oBJhxCpBL,OIgxCoBt3F,IAAA8E,EAAA4zF,wBAAA5zF,EAAA4zF,uBJ/wC3B,SAQAhyE,EAAApG,EAAAsG,EAAAivE,GACA,GAAAnvE,EAAA,CACA,IAAAiyE,EAAAF,EAAA,EAAA7xE,EAAA,GAAAtG,EACAs4E,EAAAH,EAAA,EAAA7xE,EAAA,GAAAtG,EACA9uB,EAAAstB,EAAA,GAAA65E,EAAA,EACAhnG,EAAAmtB,EAAA,GAAA65E,EAAA,EACAjnG,EAAAotB,EAAA,GAAA85E,EAAA,EACAhnG,EAAAktB,EAAA,GAAA85E,EAAA,EAGApnG,EAAAG,IACAH,EAAAG,KAAAH,GAAA,GAEAE,EAAAE,IACAF,EAAAE,KAAAF,GAAA,GAEA,IAAAgI,EAAoBijB,EAAK+J,EAAA,GAAAl1B,EAAAG,GACzBkrB,EAAoBF,EAAK+J,EAAA,GAAAh1B,EAAAE,GACzBohD,EAAA,GAAA1yB,EAQA,OANAu1E,GAAAyB,IACA59F,IAAAs5C,EAAA3iD,KAAA6E,IAAA,EAAA7E,KAAAC,IAAA,EAAAkB,EAAAk1B,EAAA,IAAAssB,GACAA,EAAA3iD,KAAA6E,IAAA,EAAA7E,KAAAC,IAAA,EAAAo2B,EAAA,GAAA/0B,GAAAqhD,GACAn2B,IAAAm2B,EAAA3iD,KAAA6E,IAAA,EAAA7E,KAAAC,IAAA,EAAAoB,EAAAg1B,EAAA,IAAAssB,GACAA,EAAA3iD,KAAA6E,IAAA,EAAA7E,KAAAC,IAAA,EAAAo2B,EAAA,GAAA90B,GAAAohD,IAEA,CAAAt5C,EAAAmjB,MIgvCeu4E,GJnxCR,IAAAt2E,EAAA25E,EAAAnB,EImUPuB,CAAA/zF,GACAsyF,EAAAD,EAAAgB,WACAW,EA4iCO,SAAAh0F,GAGP,QAFA9E,IAAA8E,EAAAi0F,gBACAj0F,EAAAi0F,eACA,CACA,IAAAC,EAAAl0F,EAAAk0F,kBACA,YAAAh5F,IAAAg5F,IAAA,IAAAA,GFv0CAz2C,EAAA02C,GAAqC37E,EAAS,GAC9C,SAMAqJ,EAAAkvE,GACA,OAAAA,EACAlvE,OAEA3mB,IAAA2mB,EACAt2B,KAAAg1C,IAAA1e,IAAA47B,EACA,EAGA57B,OAIA,KEszCA,IAAAqyE,EACmBhD,GAEnB,iBAAAgD,GFv2CO1qG,EEw2CyB0qG,EFv2ChCE,EAAA,EAAA7oG,KAAAmtB,GAAAlvB,EACA,SAMAq4B,EAAAkvE,GACA,OAAAA,EACAlvE,OAEA3mB,IAAA2mB,EACAA,EAAAt2B,KAAAmkB,MAAAmS,EAAAuyE,EAAA,IAAAA,OAIA,IE01CmBlD,GAInB,OAAeD,GF/2CR,IAAAznG,EACP4qG,EAwBO,IAAAD,EACP12C,EEsRA42C,CAAAr0F,GAKA3U,KAAAipG,aAAA,CACA1yE,OAAA8xE,EACAl4E,WAAA82E,EACAzwE,SAAAmyE,GAEA3oG,KAAA+lE,iBAAAl2D,IAAA8E,EAAA6hB,SAAA7hB,EAAA6hB,SAAA,GACAx2B,KAAAk1D,eAAArlD,IAAA8E,EAAA4hB,OAAA5hB,EAAA4hB,OAAA,WACA1mB,IAAA8E,EAAAwb,WACAnwB,KAAAkpG,cAAAv0F,EAAAwb,iBAEAtgB,IAAA8E,EAAA+qB,MACA1/B,KAAAmpG,QAAAx0F,EAAA+qB,MAEA1/B,KAAAopG,mBAAA,GACAppG,KAAA8qB,cAhDA,IAqDA9qB,KAAAqpG,SAAA10F,GAUA6xF,EAAAloG,UAAAgrG,mBAAA,SAAAC,GACA,IAAA50F,EAAsB6P,EAAM,GAAGxkB,KAAAqpG,UAY/B,YAVAx5F,IAAA8E,EAAAwb,WACAxb,EAAAwb,WAAAnwB,KAAAkkC,gBAGAvvB,EAAA+qB,KAAA1/B,KAAAqnD,UAGA1yC,EAAA4hB,OAAAv2B,KAAAm2B,YAEAxhB,EAAA6hB,SAAAx2B,KAAAulE,cACe/gD,EAAM,GAAG7P,EAAA40F,IAmCxB/C,EAAAloG,UAAA+oC,QAAA,SAAAmiE,GACAxpG,KAAAypG,UAAAzpG,KAAA0nD,gBACA1nD,KAAAopG,mBAAA,GAEAppG,KAAA0pG,SAAA9kG,MAAA5E,KAAAiJ,YAMAu9F,EAAAloG,UAAAorG,SAAA,SAAAF,GACA,IACAnhG,EADAshG,EAAA1gG,UAAAvJ,OAMA,GAJAiqG,EAAA,sBAAA1gG,UAAA0gG,EAAA,KACAthG,EAAAY,UAAA0gG,EAAA,KACAA,IAEA3pG,KAAAypG,QAAA,CAEA,IAAArtF,EAAAnT,UAAA0gG,EAAA,GAaA,OAZAvtF,EAAAma,QACAv2B,KAAAk1D,UAAA94C,EAAAma,aAEA1mB,IAAAuM,EAAAsjB,MACA1/B,KAAAmpG,QAAA/sF,EAAAsjB,WAEA7vB,IAAAuM,EAAAoa,UACAx2B,KAAA+lE,YAAA3pD,EAAAoa,eAEAnuB,GACA49F,GAAA59F,GAAA,IASA,IALA,IAAAmhC,EAAA38B,KAAAulF,MACA77D,EAAAv2B,KAAA4mG,cAAAhjG,QACAusB,EAAAnwB,KAAA6mG,kBACArwE,EAAAx2B,KAAA8mG,gBACA8C,EAAA,GACAltG,EAAA,EAAuBA,EAAAitG,IAAoBjtG,EAAA,CAC3C,IAAAiY,EAAsD1L,UAAAvM,GACtD0pG,EAAA,CACA58D,QACAqgE,UAAA,EACAjiD,OAAAjzC,EAAAizC,OACAC,cAAAh4C,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IACAC,OAAAnzC,EAAAmzC,QAA0Cjf,GAC1CxgC,YAiBA,GAfAsM,EAAA4hB,SACA6vE,EAAA7rD,aAAAhkB,EACA6vE,EAAA9rD,aAAA3lC,EAAA4hB,OAAA3yB,QACA2yB,EAAA6vE,EAAA9rD,mBAEAzqC,IAAA8E,EAAA+qB,MACA0mE,EAAA7yD,iBAAApjB,EACAi2E,EAAA3yD,iBAAAzzC,KAAAynD,qBAAA9yC,EAAA+qB,MACAvP,EAAAi2E,EAAA3yD,kBAEA9+B,EAAAwb,aACAi2E,EAAA7yD,iBAAApjB,EACAi2E,EAAA3yD,iBAAA9+B,EAAAwb,WACAA,EAAAi2E,EAAA3yD,uBAEA5jC,IAAA8E,EAAA6hB,SAAA,CACA4vE,EAAAC,eAAA7vE,EACA,IAAAiT,EAA4Bnc,EAAM3Y,EAAA6hB,WAAAt2B,KAAAmtB,GAAA,EAAAntB,KAAAmtB,IAAAntB,KAAAmtB,GAClC+4E,EAAAE,eAAA9vE,EAAAiT,EACAjT,EAAA4vE,EAAAE,eAGAH,GAAAC,GACAA,EAAAyD,UAAA,EAIArgE,GAAA48D,EAAAv+C,SAEA+hD,EAAA9mG,KAAAsjG,GAEApmG,KAAA0mG,YAAA5jG,KAAA8mG,GACA5pG,KAAA8pG,QAAqBr9B,GAAQ,GAC7BzsE,KAAA+pG,qBAOAvD,EAAAloG,UAAAopD,aAAA,WACA,OAAA1nD,KAAAymG,OAA2Bh6B,IAAQ,GAOnC+5B,EAAAloG,UAAA0rG,eAAA,WACA,OAAAhqG,KAAAymG,OAA2Bh6B,IAAQ,GAMnC+5B,EAAAloG,UAAAqpD,iBAAA,WACA3nD,KAAA8pG,QAAqBr9B,IAAQzsE,KAAAymG,OAAyBh6B,KACtD,QAAA/vE,EAAA,EAAA+C,EAAAO,KAAA0mG,YAAAhnG,OAAqDhD,EAAA+C,IAAQ/C,EAAA,CAC7D,IAAAktG,EAAA5pG,KAAA0mG,YAAAhqG,GACAktG,EAAA,GAAAvhG,UACA49F,GAAA2D,EAAA,GAAAvhG,UAAA,GAGArI,KAAA0mG,YAAAhnG,OAAA,GAKA8mG,EAAAloG,UAAAyrG,kBAAA,WAKA,QAJAl6F,IAAA7P,KAAA2mG,sBACAsD,qBAAAjqG,KAAA2mG,qBACA3mG,KAAA2mG,yBAAA92F,GAEA7P,KAAA0nD,eAAA,CAKA,IAFA,IAAA0qC,EAAAvlF,KAAAulF,MACA30E,GAAA,EACA/gB,EAAAsD,KAAA0mG,YAAAhnG,OAAA,EAAiDhD,GAAA,IAAQA,EAAA,CAGzD,IAFA,IAAAktG,EAAA5pG,KAAA0mG,YAAAhqG,GACAwtG,GAAA,EACAjlG,EAAA,EAAA86C,EAAA6pD,EAAAlqG,OAA+CuF,EAAA86C,IAAQ96C,EAAA,CACvD,IAAAmhG,EAAAwD,EAAA3kG,GACA,IAAAmhG,EAAAyD,SAAA,CAGA,IAAAM,EAAA/X,EAAAgU,EAAA58D,MACAktB,EAAA0vC,EAAAv+C,SAAA,EAAAsiD,EAAA/D,EAAAv+C,SAAA,EACA6O,GAAA,GACA0vC,EAAAyD,UAAA,EACAnzC,EAAA,GAGAwzC,GAAA,EAEA,IAAAE,EAAAhE,EAAAt+C,OAAA4O,GACA,GAAA0vC,EAAA7rD,aAAA,CACA,IAAArjB,EAAAkvE,EAAA7rD,aAAA,GACAnjB,EAAAgvE,EAAA7rD,aAAA,GAGAhxC,EAAA2tB,EAAAkzE,GAFAhE,EAAA9rD,aAAA,GAEApjB,GACAxK,EAAA0K,EAAAgzE,GAFAhE,EAAA9rD,aAAA,GAEAljB,GACAp3B,KAAA4mG,cAAA,CAAAr9F,EAAAmjB,GAEA,GAAA05E,EAAA7yD,kBAAA6yD,EAAA3yD,iBAAA,CACA,IAAAtjB,EAAA,IAAAi6E,EACAhE,EAAA3yD,iBACA2yD,EAAA7yD,iBAAA62D,GAAAhE,EAAA3yD,iBAAA2yD,EAAA7yD,kBACA,GAAA6yD,EAAAx+C,OAAA,CACA,IAAAnxB,EAAAz2B,KAAAqqG,qBAAArqG,KAAAulE,eACA+kC,EAAAtqG,KAAAipG,aAAA94E,aAAA,EAAAsG,GAAA,GACAz2B,KAAA4mG,cAAA5mG,KAAAuqG,oBAAAD,EAAAlE,EAAAx+C,QAEA5nD,KAAA6mG,kBAAA12E,EACAnwB,KAAAwqG,mBAAA,GAEA,QAAA36F,IAAAu2F,EAAAC,qBAAAx2F,IAAAu2F,EAAAE,eAAA,CACA,IAAA9vE,EAAA,IAAA4zE,EACwB98E,EAAM84E,EAAAE,eAAApmG,KAAAmtB,GAAA,EAAAntB,KAAAmtB,IAAAntB,KAAAmtB,GAC9B+4E,EAAAC,eAAA+D,GAAAhE,EAAAE,eAAAF,EAAAC,gBACA,GAAAD,EAAAx+C,OAAA,CACA,IAAA6iD,EAAAzqG,KAAAipG,aAAAzyE,YAAA,GACAx2B,KAAA4mG,cAAA5mG,KAAA0qG,sBAAAD,EAAArE,EAAAx+C,QAEA5nD,KAAA8mG,gBAAAtwE,EAIA,GAFAx2B,KAAAwqG,mBAAA,GACA/sF,GAAA,GACA2oF,EAAAyD,SACA,OAGA,GAAAK,EAAA,CACAlqG,KAAA0mG,YAAAhqG,GAAA,KACAsD,KAAA8pG,QAA6Br9B,IAAQ,GACrC,IAAApkE,EAAAuhG,EAAA,GAAAvhG,SACAA,GACA49F,GAAA59F,GAAA,IAKArI,KAAA0mG,YAAA1mG,KAAA0mG,YAAAtsF,OAAAC,SACAoD,QAAA5N,IAAA7P,KAAA2mG,sBACA3mG,KAAA2mG,oBAAAgE,sBAAA3qG,KAAA+pG,kBAAA7rG,KAAA8B,UAQAwmG,EAAAloG,UAAAosG,sBAAA,SAAAl0E,EAAAoxB,GACA,IAAArxB,EvF7kBmB5B,EAAA8U,EuF8kBnBmhE,EAAA5qG,KAAAm2B,YAMA,YALAtmB,IAAA+6F,IAEY78C,GADZx3B,EAAA,CAAAq0E,EAAA,GAAAhjD,EAAA,GAAAgjD,EAAA,GAAAhjD,EAAA,IAC4BpxB,EAAAx2B,KAAAulE,evFjlBT97B,EuFklBMme,GvFllBNjzB,EuFklBM4B,GvFjlBzB,KAAAkT,EAAA,GACA9U,EAAA,KAAA8U,EAAA,IuFklBAlT,GAOAiwE,EAAAloG,UAAAisG,oBAAA,SAAAp6E,EAAAy3B,GACA,IAAArxB,EACAq0E,EAAA5qG,KAAAm2B,YACA00E,EAAA7qG,KAAAkkC,qBACAr0B,IAAA+6F,QAAA/6F,IAAAg7F,IAGAt0E,EAAA,CAFAqxB,EAAA,GAAAz3B,GAAAy3B,EAAA,GAAAgjD,EAAA,IAAAC,EACAjjD,EAAA,GAAAz3B,GAAAy3B,EAAA,GAAAgjD,EAAA,IAAAC,IAGA,OAAAt0E,GAOAiwE,EAAAloG,UAAA+rG,qBAAA,SAAAS,GACA,IAAAr0E,EAAA,UACAs0E,EAAA,2BAAoDjjF,EAAM9nB,MAAA,KAC1D+nF,EAAA9xE,SAAAK,cAAAy0F,GACA,GAAAhjB,EAAA,CACA,IAAAijB,EAAAC,iBAAAljB,GACAtxD,EAAA,GAAAquB,SAAAkmD,EAAAnzE,MAAA,IACApB,EAAA,GAAAquB,SAAAkmD,EAAA3oG,OAAA,IAEA,GAAAyoG,EAAA,CACA,IAAAhsE,EAAArI,EAAA,GACAsI,EAAAtI,EAAA,GACAA,EAAA,GAAAv2B,KAAAg1C,IAAApW,EAAA5+B,KAAAy2B,IAAAm0E,IAAA5qG,KAAAg1C,IAAAnW,EAAA7+B,KAAA22B,IAAAi0E,IACAr0E,EAAA,GAAAv2B,KAAAg1C,IAAApW,EAAA5+B,KAAA22B,IAAAi0E,IAAA5qG,KAAAg1C,IAAAnW,EAAA7+B,KAAAy2B,IAAAm0E,IAEA,OAAAr0E,GAQA+vE,EAAAloG,UAAA63B,UAAA,WACA,OACkEn2B,KAAAzC,IAAcuoG,KAKhFU,EAAAloG,UAAA4sG,eAAA,WACA,OAAAlrG,KAAAipG,cAMAzC,EAAAloG,UAAA6sG,SAAA,SAAAC,GACA,YAAAv7F,IAAAu7F,GACAA,EAAA,GAAAprG,KAAAymG,OAAA,GACA2E,EAAA,GAAAprG,KAAAymG,OAAA,GACA2E,GAGAprG,KAAAymG,OAAA7iG,SAaA4iG,EAAAloG,UAAA+sG,gBAAA,SAAAjvD,GACA,IAAA3lB,EAAA2lB,GAAAp8C,KAAAqqG,uBACA9zE,EAAsEv2B,KAAAm2B,YAC9D9J,EAAMkK,EAAA,GACd,IAAApG,EAA4CnwB,KAAAkkC,gBACpC7X,OAAMxc,IAAAsgB,EAAA,GACd,IAAAqG,EAA0Cx2B,KAAAulE,cAE1C,OADQl5C,OAAMxc,IAAA2mB,EAAA,GACCF,GAAiBC,EAAApG,EAAAqG,EAAAC,IAOhC+vE,EAAAloG,UAAAwwB,iBAAA,WACA,OAAA9uB,KAAAkoG,gBAOA1B,EAAAloG,UAAAywB,iBAAA,WACA,OAAA/uB,KAAAmoG,gBAOA3B,EAAAloG,UAAA4hD,WAAA,WACA,OAAiClgD,KAAAsrG,qBAAAtrG,KAAAmoG,iBAOjC3B,EAAAloG,UAAAitG,WAAA,SAAA7rE,GACA1/B,KAAA+mG,cAAA/mG,KAAAspG,mBAAA,CAAoDnqD,QAAAzf,MAOpD8mE,EAAAloG,UAAA2pC,WAAA,WACA,OAAiCjoC,KAAAsrG,qBAAAtrG,KAAAkoG,iBAOjC1B,EAAAloG,UAAAktG,WAAA,SAAA9rE,GACA1/B,KAAA+mG,cAAA/mG,KAAAspG,mBAAA,CAAoD3qD,QAAAjf,MAOpD8mE,EAAAloG,UAAAmtG,uBAAA,SAAAC,GACA1rG,KAAA+mG,cAAA/mG,KAAAspG,mBAAA,CAAoDjC,oBAAAqE,MAOpDlF,EAAAloG,UAAA8+C,cAAA,WACA,OAAAp9C,KAAA08C,aAQA8pD,EAAAloG,UAAA4lC,cAAA,WACA,OAA2ClkC,KAAAzC,IAAcuoG,KAQzDU,EAAAloG,UAAA++C,eAAA,WACA,OAAAr9C,KAAA4+C,cAUA4nD,EAAAloG,UAAAqtG,uBAAA,SAAAh9E,EAAAytB,GACA,IAAA3lB,EAAA2lB,GAAAp8C,KAAAqqG,uBACAjF,EAA0BtyE,GAAQnE,GAAA8H,EAAA,GAClC4uE,EAA0BzyE,GAASjE,GAAA8H,EAAA,GACnC,OAAAv2B,KAAAC,IAAAilG,EAAAC,IAQAmB,EAAAloG,UAAAstG,8BAAA,SAAAC,GACA,IAAAlE,EAAAkE,GAAA,EACA/9E,EAAA9tB,KAAAkoG,eACAn6E,EAAA/tB,KAAAmoG,eACAhoG,EAAAD,KAAA6E,IAAA+oB,EAAAC,GAAA7tB,KAAA6E,IAAA4iG,GACA,gBAKAhqG,GAEA,OADAmwB,EAAA5tB,KAAA8E,IAAA2iG,EAAAhqG,EAAAwC,KAUAqmG,EAAAloG,UAAAinE,YAAA,WACA,OAAiCvlE,KAAAzC,IAAcuoG,KAQ/CU,EAAAloG,UAAAwtG,8BAAA,SAAAD,GACA,IAAAlE,EAAAkE,GAAA,EACA/9E,EAAA9tB,KAAAkoG,eACAn6E,EAAA/tB,KAAAmoG,eACAhoG,EAAAD,KAAA6E,IAAA+oB,EAAAC,GAAA7tB,KAAA6E,IAAA4iG,GACA,gBAKAx3E,GAEA,OADAjwB,KAAA6E,IAAA+oB,EAAAqC,GAAAjwB,KAAA6E,IAAA4iG,GAAAxnG,IAQAqmG,EAAAloG,UAAA0yB,SAAA,SAAAkQ,GACA,IAAA3K,EAAqEv2B,KAAAm2B,YACrE0J,EAAA7/B,KAAAo9C,gBACAjtB,EAA2CnwB,KAAAkkC,gBAC3C1N,EAAAx2B,KAAAulE,cACA,OACAhvC,SAAA3yB,MAAA,GACAi8B,gBAAAhwB,IAAAgwB,IAAA,KACA1P,aACAqG,WACAkJ,KAAA1/B,KAAAqnD,YAUAm/C,EAAAloG,UAAA+oD,QAAA,WACA,IAAA3nB,EACAvP,EAAAnwB,KAAAkkC,gBAIA,YAHAr0B,IAAAsgB,IACAuP,EAAA1/B,KAAAsrG,qBAAAn7E,IAEAuP,GAQA8mE,EAAAloG,UAAAgtG,qBAAA,SAAAn7E,GACA,IACAhwB,EAAAu+C,EADAppB,EAAAt1B,KAAAooG,UAAA,EAEA,GAAApoG,KAAA4+C,aAAA,CACA,IAAAmtD,EAA0BnuD,GAAiB59C,KAAA4+C,aAAAzuB,EAAA,GAC3CmF,EAAAy2E,EACA5rG,EAAAH,KAAA4+C,aAAAmtD,GAEArtD,EADAqtD,GAAA/rG,KAAA4+C,aAAAl/C,OAAA,EACA,EAGAS,EAAAH,KAAA4+C,aAAAmtD,EAAA,QAIA5rG,EAAAH,KAAAkoG,eACAxpD,EAAA1+C,KAAAk/C,YAEA,OAAA5pB,EAAAp1B,KAAA6E,IAAA5E,EAAAgwB,GAAAjwB,KAAA6E,IAAA25C,IAQA8nD,EAAAloG,UAAAmpD,qBAAA,SAAA/nB,GACA,GAAA1/B,KAAA4+C,aAAA,CACA,GAAA5+C,KAAA4+C,aAAAl/C,QAAA,EACA,SAEA,IAAAssG,EAA4Bx/E,EAAKtsB,KAAAmkB,MAAAqb,GAAA,EAAA1/B,KAAA4+C,aAAAl/C,OAAA,GACjCg/C,EAAA1+C,KAAA4+C,aAAAotD,GAAAhsG,KAAA4+C,aAAAotD,EAAA,GACA,OAAAhsG,KAAA4+C,aAAAotD,GAAA9rG,KAAA8E,IAAA05C,EAAuElyB,EAAKkT,EAAAssE,EAAA,MAG5E,OAAAhsG,KAAAkoG,eAAAhoG,KAAA8E,IAAAhF,KAAAk/C,YAAAxf,EAAA1/B,KAAAooG,WAaA5B,EAAAloG,UAAA2tG,IAAA,SAAAC,EAAAn6E,GACA,IAMAk5B,EANAt2C,EAAAod,GAAA,GACA0E,EAAA9hB,EAAA8hB,KACAA,IACAA,EAAAz2B,KAAAqqG,wBAIQh+E,EAAMpe,MAAApP,QAAAqtG,IAAwD,qBAAAlhD,sBAAA,IACtE/8C,MAAApP,QAAAqtG,IACY7/E,GAAQ6J,GAAOg2E,GAAA,IAC3BjhD,EAAuB2T,GAAiBstC,IAExCA,EAAA55C,YAAgDhnB,GAAYS,QAE5Dkf,EAAuB2T,GADvBstC,IAAAt9E,cAEA4P,OAAAx+B,KAAAulE,cAAgDpvC,GAAS+1E,IAGzDjhD,EAAAihD,EAEA,IAEAn+E,EAFA+P,OAAAjuB,IAAA8E,EAAAmpB,QAAAnpB,EAAAmpB,QAAA,UACAiuE,OAAAl8F,IAAA8E,EAAAo3F,SAAAp3F,EAAAo3F,QAGAh+E,OADAle,IAAA8E,EAAAoZ,cACApZ,EAAAoZ,mBAEAle,IAAA8E,EAAAwqC,QACAn/C,KAAAynD,qBAAA9yC,EAAAwqC,SAGA,EAYA,IAVA,IAAAqhC,EAAAv1B,EAAAuI,qBAEAh9B,EAAAx2B,KAAAulE,cACAvX,EAAA9tD,KAAAy2B,KAAAH,GACAy3B,EAAA/tD,KAAA22B,KAAAL,GACA21E,EAAA7qG,IACA8qG,EAAA9qG,IACA+qG,GAAA/qG,IACAgrG,GAAAhrG,IACAk0B,EAAAy1B,EAAA4I,YACAn3D,EAAA,EAAA+C,EAAA+gF,EAAA9gF,OAA2ChD,EAAA+C,EAAQ/C,GAAA84B,EAAA,CACnD,IAAA+2E,EAAA/rB,EAAA9jF,GAAAsxD,EAAAwyB,EAAA9jF,EAAA,GAAAuxD,EACAu+C,EAAAhsB,EAAA9jF,GAAAuxD,EAAAuyB,EAAA9jF,EAAA,GAAAsxD,EACAm+C,EAAAjsG,KAAA4B,IAAAqqG,EAAAI,GACAH,EAAAlsG,KAAA4B,IAAAsqG,EAAAI,GACAH,EAAAnsG,KAAAC,IAAAksG,EAAAE,GACAD,EAAApsG,KAAAC,IAAAmsG,EAAAE,GAGA,IAAAr8E,EAAAnwB,KAAA2rG,uBAAA,CAAAQ,EAAAC,EAAAC,EAAAC,GAAA,CAAA71E,EAAA,GAAAqH,EAAA,GAAAA,EAAA,GAAArH,EAAA,GAAAqH,EAAA,GAAAA,EAAA,KACA3N,EAAAvP,MAAAuP,GAAApC,EACA7tB,KAAAC,IAAAgwB,EAAApC,GACAoC,EAAAnwB,KAAAysG,yBAAAt8E,EAAA47E,EAAA,KAEA99C,KACA,IAAAy+C,GAAAP,EAAAE,GAAA,EACAM,GAAAP,EAAAE,GAAA,EAKA/1E,EAAA,EAJAm2E,IAAA5uE,EAAA,GAAAA,EAAA,MAAA3N,GAEA69B,GADA2+C,IAAA7uE,EAAA,GAAAA,EAAA,MAAA3N,GACA89B,EACA0+C,EAAA3+C,EAAA0+C,EAAAz+C,GAEA5lD,EAAAsM,EAAAtM,SAAAsM,EAAAtM,SAA6DogB,OAC7D5Y,IAAA8E,EAAAkzC,SACA7nD,KAAA0pG,SAAA,CACAv5E,aACAoG,OAAAv2B,KAAA4sG,qBAAAr2E,EAAApG,GACA03B,SAAAlzC,EAAAkzC,SACAC,OAAAnzC,EAAAmzC,QACaz/C,IAGbrI,KAAA6mG,kBAAA12E,EACAnwB,KAAA4mG,cAAArwE,EACAv2B,KAAAwqG,mBAAA,MACAvE,GAAA59F,GAAA,KAUAm+F,EAAAloG,UAAAuuG,SAAA,SAAAl4E,EAAA8B,EAAAsH,GAEA,IAAAvH,EAAAx2B,KAAAulE,cACAvX,EAAA9tD,KAAAy2B,KAAAH,GACAy3B,EAAA/tD,KAAA22B,KAAAL,GACA+1E,EAAA53E,EAAA,GAAAq5B,EAAAr5B,EAAA,GAAAs5B,EACAu+C,EAAA73E,EAAA,GAAAq5B,EAAAr5B,EAAA,GAAAs5B,EACA99B,EAAAnwB,KAAAkkC,gBAKAw6C,GAJA6tB,IAAA91E,EAAA,KAAAsH,EAAA,IAAA5N,GAIA69B,GAHAw+C,IAAAzuE,EAAA,GAAAtH,EAAA,MAAAtG,IAEA89B,MAEA0wB,EAAA6tB,EAAAx+C,EAAAu+C,EAAAt+C,EACAjuD,KAAAk1D,UAAA,CAAAwpB,EAAAC,KAKA6nB,EAAAloG,UAAAmrG,MAAA,WACA,QAAAzpG,KAAAm2B,kBAAAtmB,IAAA7P,KAAAkkC,iBAOAsiE,EAAAloG,UAAAwuG,aAAA,SAAAC,GACA,IAAAx2E,EAAAv2B,KAAA4mG,cACA5mG,KAAAk1D,UAAA,CAAA3+B,EAAA,GAAAw2E,EAAA,GAAAx2E,EAAA,GAAAw2E,EAAA,MAUAvG,EAAAloG,UAAA0uG,iBAAA,SAAAnqD,EAAAqE,GACA,IAAA+lD,EAAAjtG,KAAA0nD,gBAAA1nD,KAAAgqG,iBACAvzE,EAAAz2B,KAAAqqG,qBAAArqG,KAAAulE,eACA/d,EAAAxnD,KAAAipG,aAAA94E,WAAAnwB,KAAA6mG,kBAAAhkD,EAAA,EAAApsB,EAAAw2E,QACAp9F,IAAAq3C,IACAlnD,KAAA4mG,cAAA5mG,KAAAuqG,oBAAA/iD,EAAAN,IAEAlnD,KAAA6mG,mBAAAhkD,EACA7iD,KAAAwqG,qBASAhE,EAAAloG,UAAA4uG,WAAA,SAAAzjE,EAAAyd,GACAlnD,KAAAgtG,iBAAA9sG,KAAA8E,IAAAhF,KAAAk/C,aAAAzV,GAAAyd,IAUAs/C,EAAAloG,UAAA6uG,eAAA,SAAA1jE,EAAAyd,GACA,IAAA+lD,EAAAjtG,KAAA0nD,gBAAA1nD,KAAAgqG,iBACAoD,EAAAptG,KAAAipG,aAAAzyE,SAAAx2B,KAAA8mG,gBAAAr9D,EAAAwjE,QACAp9F,IAAAq3C,IACAlnD,KAAA4mG,cAAA5mG,KAAA0qG,sBAAA0C,EAAAlmD,IAEAlnD,KAAA8mG,iBAAAr9D,EACAzpC,KAAAwqG,qBAQAhE,EAAAloG,UAAA42D,UAAA,SAAA3+B,GACAv2B,KAAA4mG,cAAArwE,EACAv2B,KAAAwqG,qBAOAhE,EAAAloG,UAAAwrG,QAAA,SAAAuD,EAAA5jE,GAGA,OAFAzpC,KAAAymG,OAAA4G,IAAA5jE,EACAzpC,KAAAmc,UACAnc,KAAAymG,OAAA4G,IAQA7G,EAAAloG,UAAA4qG,cAAA,SAAA/4E,GACAnwB,KAAA6mG,kBAAA12E,EACAnwB,KAAAwqG,qBAQAhE,EAAAloG,UAAAynE,YAAA,SAAAvvC,GACAx2B,KAAA8mG,gBAAAtwE,EACAx2B,KAAAwqG,qBAOAhE,EAAAloG,UAAA6qG,QAAA,SAAAzpE,GACA1/B,KAAAkpG,cAAAlpG,KAAAynD,qBAAA/nB,KAUA8mE,EAAAloG,UAAAksG,kBAAA,SAAA8C,EAAAC,GACA,IAAAN,EAAAjtG,KAAA0nD,gBAAA1nD,KAAAgqG,kBAAAuD,EAEAH,EAAAptG,KAAAipG,aAAAzyE,SAAAx2B,KAAA8mG,gBAAAmG,GACAx2E,EAAAz2B,KAAAqqG,qBAAA+C,GACA5lD,EAAAxnD,KAAAipG,aAAA94E,WAAAnwB,KAAA6mG,kBAAA,EAAApwE,EAAAw2E,GACAO,EAAAxtG,KAAAipG,aAAA1yE,OAAAv2B,KAAA4mG,cAAAp/C,EAAA/wB,EAAAw2E,GACAjtG,KAAAzC,IAAqBuoG,MAAYsH,GACjCptG,KAAA4N,IAAqBk4F,GAAYsH,GAEjCptG,KAAAzC,IAAqBuoG,MAAYt+C,GACjCxnD,KAAA4N,IAAqBk4F,GAAYt+C,GAEjCxnD,KAAAzC,IAAsBuoG,KAAyBl4C,GAAM5tD,KAAAzC,IAAUuoG,IAAY0H,IAC3ExtG,KAAA4N,IAAqBk4F,GAAY0H,GAEjCxtG,KAAA0nD,iBAAA4lD,GACAttG,KAAA2nD,oBAYA6+C,EAAAloG,UAAA8qG,mBAAA,SAAAjiD,EAAAsmD,EAAAvmD,GACA,IAAAW,OAAAh4C,IAAAs3C,IAAA,IACAtJ,EAAA4vD,GAAA,EACAL,EAAAptG,KAAAipG,aAAAzyE,SAAAx2B,KAAA8mG,iBACArwE,EAAAz2B,KAAAqqG,qBAAA+C,GACA5lD,EAAAxnD,KAAAipG,aAAA94E,WAAAnwB,KAAA6mG,kBAAAhpD,EAAApnB,GACA+2E,EAAAxtG,KAAAipG,aAAA1yE,OAAAv2B,KAAA4mG,cAAAp/C,EAAA/wB,GACA,OAAAoxB,EAKA,OAJA7nD,KAAA6mG,kBAAAr/C,EACAxnD,KAAA8mG,gBAAAsG,EACAptG,KAAA4mG,cAAA4G,OACAxtG,KAAAwqG,oBAGAxqG,KAAAkkC,kBAAAsjB,GACAxnD,KAAAulE,gBAAA6nC,GACAptG,KAAAm2B,aACay3B,GAAM5tD,KAAAm2B,YAAAq3E,KACnBxtG,KAAA0nD,gBACA1nD,KAAA2nD,mBAEA3nD,KAAA0pG,SAAA,CACAlzE,SAAA42E,EACA72E,OAAAi3E,EACAr9E,WAAAq3B,EACAK,WACAC,OAAwBlf,GACxBgf,OAAAV,MAUAs/C,EAAAloG,UAAAovG,iBAAA,WACA1tG,KAAAopG,mBAAA,GACAppG,KAAA8pG,QAAqBr9B,GAAQ,IAU7B+5B,EAAAloG,UAAAqvG,eAAA,SAAAxmD,EAAAsmD,EAAAvmD,GACAlnD,KAAA8pG,QAAqBr9B,IAAQ,GAC7BzsE,KAAAopG,mBAAAjiD,EAAAsmD,EAAAvmD,IASAs/C,EAAAloG,UAAAsuG,qBAAA,SAAAtyD,EAAAszD,GACA,IAAAn3E,EAAAz2B,KAAAqqG,qBAAArqG,KAAAulE,eACA,OAAAvlE,KAAAipG,aAAA1yE,OAAA+jB,EAAAszD,GAAA5tG,KAAAkkC,gBAAAzN,IAUA+vE,EAAAloG,UAAAipD,mBAAA,SAAAsmD,EAAA7sD,GACA,IAAA8sD,EAAA9tG,KAAAynD,qBAAAomD,GACA,OAAA7tG,KAAAsrG,qBAAAtrG,KAAAysG,yBAAAqB,KAUAtH,EAAAloG,UAAAmuG,yBAAA,SAAAh5D,EAAAuN,GACA,IAAAnD,EAAAmD,GAAA,EACAvqB,EAAAz2B,KAAAqqG,qBAAArqG,KAAAulE,eACA,OAAAvlE,KAAAipG,aAAA94E,WAAAsjB,EAAAoK,EAAApnB,IAEA+vE,EA9gCQ,CA+gCNj7E,GC9wCEwiF,GAAyB,WAC7B,IAAArlF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgDzB8kF,GAAQ,CACZC,OAAA,UAsKeC,GA5JD,SAAA9kF,GAKd,SAAA+kF,EAAAp8E,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACAzB,EAAkD9L,EAAM,GAAG7P,UAC3D2b,EAAA89E,OACA,IAAAA,EAAAz5F,EAAAy5F,OAyBA,OAxBA9kF,EAAAF,EAAAvsB,KAAAmD,KAAAswB,IAAAtwB,MAKAquG,oBAAA,GAKA/kF,EAAAglF,cAAA,GACQ1oF,EAAM0D,EAAQ6B,EAAmB6iF,GAAQC,QAAA3kF,EAAAilF,qBAAAjlF,GACjD8kF,EACAngG,MAAApP,QAAAuvG,GACAA,EAAA,IAA6BpmB,GAAUomB,EAAAxqG,QAAA,CAAkBukF,QAAA,IAGzC97D,EAA2B,qBAAAk8D,SAAA,IAI3C6lB,EAAA,IAAyBpmB,QAAUn4E,EAAA,CAAas4E,QAAA,IAEhD7+D,EAAAklF,UAAAJ,GACA9kF,EAuHA,OAzJIykF,GAASI,EAAA/kF,GAuCb+kF,EAAA7vG,UAAAmwG,mBAAA,WACAzuG,KAAAmc,WAKAgyF,EAAA7vG,UAAAiwG,qBAAA,WACAvuG,KAAAquG,oBAAAhiG,QAAyC2Z,GACzChmB,KAAAquG,oBAAA3uG,OAAA,EACA,IAAA0uG,EAAApuG,KAAA0uG,YAEA,QAAA74F,KADA7V,KAAAquG,oBAAAvrG,KAAsC8iB,EAAMwoF,EAAS7mB,GAAmBC,IAAAxnF,KAAA2uG,iBAAA3uG,MAAoC4lB,EAAMwoF,EAAS7mB,GAAmBE,OAAAznF,KAAA4uG,oBAAA5uG,OAC9IA,KAAAsuG,cACAtuG,KAAAsuG,cAAAz4F,GAAAxJ,QAA2C2Z,GAEnCzlB,EAAKP,KAAAsuG,eAEb,IADA,IAAAO,EAAAT,EAAA7lB,WACA7rF,EAAA,EAAA+C,EAAAovG,EAAAnvG,OAAgDhD,EAAA+C,EAAQ/C,IAAA,CACxD,IAAA2xB,EAAAwgF,EAAAnyG,GACAsD,KAAAsuG,cAA+BxmF,EAAMuG,IAAA,CACrBzI,EAAMyI,EAAQpG,EAAejoB,KAAAyuG,mBAAAzuG,MAC7B4lB,EAAMyI,EAAQjI,EAASC,OAAArmB,KAAAyuG,mBAAAzuG,OAGvCA,KAAAmc,WAMAgyF,EAAA7vG,UAAAqwG,iBAAA,SAAAG,GACA,IAAAzgF,EAA2DygF,EAAA,QAC3D9uG,KAAAsuG,cAA2BxmF,EAAMuG,IAAA,CACrBzI,EAAMyI,EAAQpG,EAAejoB,KAAAyuG,mBAAAzuG,MAC7B4lB,EAAMyI,EAAQjI,EAASC,OAAArmB,KAAAyuG,mBAAAzuG,OAEnCA,KAAAmc,WAMAgyF,EAAA7vG,UAAAswG,oBAAA,SAAAE,GACA,IACA7wG,EAAkB6pB,EADyCgnF,EAAA,SAE3D9uG,KAAAsuG,cAAArwG,GAAAoO,QAAwC2Z,UACxChmB,KAAAsuG,cAAArwG,GACA+B,KAAAmc,WAUAgyF,EAAA7vG,UAAAowG,UAAA,WACA,OACoF1uG,KAAAzC,IAAcywG,GAAQC,SAU1GE,EAAA7vG,UAAAkwG,UAAA,SAAAJ,GACApuG,KAAA4N,IAAiBogG,GAAQC,OAAAG,IAKzBD,EAAA7vG,UAAA0wB,eAAA,SAAAC,GACA,IAAAzvB,OAAAqQ,IAAAof,IAAA,GAIA,OAHAjvB,KAAA0uG,YAAAriG,QAAA,SAAAgiB,GACAA,EAAAW,eAAAxvB,KAEAA,GAKA2uG,EAAA7vG,UAAA4wB,oBAAA,SAAAC,GACA,IAAA2B,OAAAjhB,IAAAsf,IAAA,GACA4/E,EAAAj+E,EAAApxB,OACAM,KAAA0uG,YAAAriG,QAAA,SAAAgiB,GACAA,EAAAa,oBAAA4B,KAGA,IADA,IAAAk+E,EAAAhvG,KAAAouB,gBACA1xB,EAAAqyG,EAAAtvG,EAAAqxB,EAAApxB,OAA6ChD,EAAA+C,EAAQ/C,IAAA,CACrD,IAAAwzB,EAAAY,EAAAp0B,GACAwzB,EAAAvC,SAAAqhF,EAAArhF,QACAuC,EAAAtC,QAAAsC,EAAAtC,SAAAohF,EAAAphF,QACAsC,EAAApC,cAAA5tB,KAAA4B,IAAAouB,EAAApC,cAAAkhF,EAAAlhF,eACAoC,EAAAnC,cAAA7tB,KAAAC,IAAA+vB,EAAAnC,cAAAihF,EAAAjhF,oBACAle,IAAAm/F,EAAArgF,cACA9e,IAAAqgB,EAAAvB,OACAuB,EAAAvB,OAAwC2I,GAAepH,EAAAvB,OAAAqgF,EAAArgF,QAGvDuB,EAAAvB,OAAAqgF,EAAArgF,QAIA,OAAAmC,GAKAq9E,EAAA7vG,UAAAmwB,eAAA,WACA,OAAemB,GAAWG,OAE1Bo+E,EA1Jc,CA2JZ3gF,GCtNEyhF,GAAyB,WAC7B,IAAAvmF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAiuCd,IAAAgmF,GA7lCC,SAAA9lF,GAKhB,SAAA+lF,EAAAx6F,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,YACAovG,EAyhCA,SAAAz6F,GAIA,IAAA06F,EAAA,UACAx/F,IAAA8E,EAAA06F,sBACAA,EAAA,iBAAA16F,EAAA06F,oBACAp5F,SAAAq5F,eAAA36F,EAAA06F,qBACA16F,EAAA06F,qBAKA,IAOAE,EAUAC,EAUAC,EA3BA5nG,EAAA,GACA6nG,EAAA/6F,EAAAy5F,QAA2D,mBAAAz5F,EAAA,OAAA+5F,UAC7B/5F,EAAA,WAA2Bu5F,GAAU,CAAEE,OAA+Bz5F,EAAA,SACpG9M,EAAWo6F,GAAWC,YAAAwN,EACtB7nG,EAAWo6F,GAAWG,QAAAztF,EAAAyB,OACtBvO,EAAWo6F,GAAWI,WAAAxyF,IAAA8E,EAAAsyC,KACtBtyC,EAAAsyC,KAAA,IAA2Bs/C,QAE3B12F,IAAA8E,EAAA46F,WACAthG,MAAApP,QAAA8V,EAAA46F,UACAA,EAAA,IAA2BvnB,GAAUrzE,EAAA46F,SAAA3rG,UAGzByoB,EAA2B,mBAAA1X,EAAA,SAAA4zE,SAAA,IACvCgnB,EAA6C56F,EAAA,gBAI7C9E,IAAA8E,EAAA66F,eACAvhG,MAAApP,QAAA8V,EAAA66F,cACAA,EAAA,IAA+BxnB,GAAUrzE,EAAA66F,aAAA5rG,UAG7ByoB,EAA2B,mBAAA1X,EAAA,aAAA4zE,SAAA,IACvCinB,EAAiD76F,EAAA,oBAIjD9E,IAAA8E,EAAA86F,SACAxhG,MAAApP,QAAA8V,EAAA86F,UACAA,EAAA,IAA2BznB,GAAUrzE,EAAA86F,SAAA7rG,UAGzByoB,EAA2B,mBAAA1X,EAAA,SAAA4zE,SAAA,IACvCknB,EAAA96F,EAAA86F,UAIAA,EAAA,IAAuBznB,GAEvB,OACAunB,WACAC,eACAH,sBACAI,WACA5nG,UAnlCA8nG,CAAAh7F,GAyGA,QAAA1W,KApGAqrB,EAAAsmF,sBAAA//F,IAAA8E,EAAAk7F,gBAAAl7F,EAAAk7F,gBAAA,GAKAvmF,EAAAowB,iBAAA7pC,IAAA8E,EAAAusB,WACAvsB,EAAAusB,WAAiC4tB,GAKjCxlC,EAAAwmF,mBAIAxmF,EAAAymF,gBAAA,WACA/vG,KAAA8vG,wBAAAjgG,EACA7P,KAAAgwG,aAAAnjG,KAAAulF,QACSl0F,KAAAorB,GAKTA,EAAA2mF,4BxIzIA,cwI8IA3mF,EAAA4mF,4BxI9IA,cwImJA5mF,EAAA6mF,YAAA,EAKA7mF,EAAA8mF,YAAA,KAMA9mF,EAAA+mF,gBAAA,KAKA/mF,EAAAgnF,yBAAA,KAKAhnF,EAAAinF,uBAAA,KAKAjnF,EAAAknF,gCAAA,KAKAlnF,EAAAmnF,UAAAx6F,SAAAmC,cAAA,OACAkR,EAAAmnF,UAAAxiF,UAAA,eAAqD+gC,GAAK,gBAC1D1lC,EAAAmnF,UAAA/kG,MAAAqyB,SAAA,WACAzU,EAAAmnF,UAAA/kG,MAAAusE,SAAA,SACA3uD,EAAAmnF,UAAA/kG,MAAAmsB,MAAA,OACAvO,EAAAmnF,UAAA/kG,MAAArJ,OAAA,OAEAinB,EAAAmnF,UAAA/kG,MAAAglG,cAAA,OACApnF,EAAAmnF,UAAA/kG,MAAAilG,YAAA,OAKArnF,EAAAsnF,kBAAA36F,SAAAmC,cAAA,OACAkR,EAAAsnF,kBAAAllG,MAAAqyB,SAAA,WACAzU,EAAAsnF,kBAAAllG,MAAAmiB,OAAA,IACAvE,EAAAsnF,kBAAAllG,MAAAmsB,MAAA,OACAvO,EAAAsnF,kBAAAllG,MAAArJ,OAAA,OACAinB,EAAAsnF,kBAAA3iF,UAAA,sBACA3E,EAAAmnF,UAAA54F,YAAAyR,EAAAsnF,mBAKAtnF,EAAAunF,2BAAA56F,SAAAmC,cAAA,OACAkR,EAAAunF,2BAAAnlG,MAAAqyB,SAAA,WACAzU,EAAAunF,2BAAAnlG,MAAAmiB,OAAA,IACAvE,EAAAunF,2BAAAnlG,MAAAmsB,MAAA,OACAvO,EAAAunF,2BAAAnlG,MAAArJ,OAAA,OACAinB,EAAAunF,2BAAA5iF,UAAA,gCACA3E,EAAAmnF,UAAA54F,YAAAyR,EAAAunF,4BAKAvnF,EAAAwnF,wBAAA,IAA4CpQ,GAAsBp3E,EAAA3U,EAAAisF,eAC1C90C,GACZlmC,EAAM0D,EAAAwnF,wBAAgChlD,GAAmB7tD,GAAAqrB,EAAAynF,sBAAAznF,GA0IrE,OApIAA,EAAA0nF,qBAAA5B,EAAAC,oBAKA/lF,EAAA2nF,gBAAA,KACQrrF,EAAM0D,EAAAmnF,UAAkBrqF,EAASG,YAAA+C,EAAA4nF,mBAAA5nF,GACjC1D,EAAM0D,EAAAmnF,UAAkBrqF,EAASuB,MAAA2B,EAAA4nF,mBAAA5nF,GACjC1D,EAAM0D,EAAAmnF,UAAkBrqF,EAASiB,WAAAiC,EAAA4nF,mBAAA5nF,GAKzCA,EAAAimF,SAAAH,EAAAG,UAAA,IAAyDvnB,GAKzD1+D,EAAAkmF,aAAAJ,EAAAI,cAAA,IAAiExnB,GAKjE1+D,EAAA6nF,UAAA/B,EAAAK,SAMAnmF,EAAA8nF,gBAAA,GAKA9nF,EAAAoH,UAAApH,EAAAoI,iBAKApI,EAAA+nF,cAKA/nF,EAAAgoF,OAAA,KAKAhoF,EAAAioF,qBAAA,GAKAjoF,EAAAkoF,WAAA,IAA+BtN,GAAS56E,EAAAmoF,gBAAAvzG,KAAAorB,KAAAooF,kBAAAxzG,KAAAorB,IAMxCA,EAAAqoF,oBAAA,GACQ/rF,EAAM0D,EAAQ6B,EAAmB82E,GAAWC,YAAA54E,EAAAsoF,yBAAAtoF,GAC5C1D,EAAM0D,EAAQ6B,EAAmB82E,GAAWI,MAAA/4E,EAAAuoF,mBAAAvoF,GAC5C1D,EAAM0D,EAAQ6B,EAAmB82E,GAAWE,MAAA74E,EAAAwoF,mBAAAxoF,GAC5C1D,EAAM0D,EAAQ6B,EAAmB82E,GAAWG,QAAA94E,EAAAyoF,qBAAAzoF,GAGpDA,EAAAwB,cAAAskF,EAAAvnG,QACAyhB,EAAAimF,SAAAljG,QAKA,SAAA2lG,GACAA,EAAArhF,OAAA3wB,OACS9B,KAAAorB,IACD1D,EAAM0D,EAAAimF,SAAiBhoB,GAAmBC,IAIlD,SAAA79D,GACAA,EAAAo+D,QAAAp3D,OAAA3wB,OACSspB,GACD1D,EAAM0D,EAAAimF,SAAiBhoB,GAAmBE,OAIlD,SAAA99D,GACAA,EAAAo+D,QAAAp3D,OAAA,OACSrH,GACTA,EAAAkmF,aAAAnjG,QAKA,SAAA4lG,GACAA,EAAAthF,OAAA3wB,OACS9B,KAAAorB,IACD1D,EAAM0D,EAAAkmF,aAAqBjoB,GAAmBC,IAItD,SAAA79D,GACAA,EAAAo+D,QAAAp3D,OAAA3wB,OACSspB,GACD1D,EAAM0D,EAAAkmF,aAAqBjoB,GAAmBE,OAItD,SAAA99D,GACAA,EAAAo+D,QAAAp3D,OAAA,OACSrH,GACTA,EAAA6nF,UAAA9kG,QAAAid,EAAA4oF,oBAAAh0G,KAAAorB,IACQ1D,EAAM0D,EAAA6nF,UAAkB5pB,GAAmBC,IAInD,SAAA79D,GACA3pB,KAAAkyG,oBAA+EvoF,EAAA,UACtEL,GACD1D,EAAM0D,EAAA6nF,UAAkB5pB,GAAmBE,OAInD,SAAA99D,GACA,IACA9T,EADoE8T,EAAA,QACpE6hC,aACA37C,IAAAgG,UACA7V,KAAAoxG,gBAAAv7F,EAAAjJ,YAEA+c,EAAAo+D,QAAAp3D,OAAA,OACSrH,GACTA,EA+xBA,OAzhCI2lF,GAASE,EAAA/lF,GAgQb+lF,EAAA7wG,UAAAozB,eAAA,WACA,UAAAtnB,MAAA,oDAOA+kG,EAAA7wG,UAAA6zG,WAAA,SAAAH,GACAhyG,KAAAoyG,cAAAtvG,KAAAkvG,IAWA7C,EAAA7wG,UAAA+zG,eAAA,SAAAJ,GACAjyG,KAAAsyG,kBAAAxvG,KAAAmvG,IASA9C,EAAA7wG,UAAAi0G,SAAA,SAAAlkF,GACAruB,KAAAwyG,gBAAA9D,YACA5rG,KAAAurB,IAOA8gF,EAAA7wG,UAAAm0G,WAAA,SAAAC,GACA1yG,KAAA2yG,cAAA7vG,KAAA4vG,IAOAvD,EAAA7wG,UAAA4zG,oBAAA,SAAAQ,GACA,IAAA78F,EAAA68F,EAAAlnD,aACA37C,IAAAgG,IACA7V,KAAAoxG,gBAAAv7F,EAAAjJ,YAAA8lG,GAEAA,EAAA/hF,OAAA3wB,OAMAmvG,EAAA7wG,UAAAgqB,gBAAA,WACAtoB,KAAA8wG,wBAAAzoF,UACQlC,EAAQnmB,KAAAywG,UAAiBrqF,EAASG,YAAAvmB,KAAAkxG,mBAAAlxG,MAClCmmB,EAAQnmB,KAAAywG,UAAiBrqF,EAASuB,MAAA3nB,KAAAkxG,mBAAAlxG,MAClCmmB,EAAQnmB,KAAAywG,UAAiBrqF,EAASiB,WAAArnB,KAAAkxG,mBAAAlxG,WAC1C6P,IAAA7P,KAAAqxG,gBACA7pG,oBAAgC4e,EAASmB,OAAAvnB,KAAAqxG,eAAA,GACzCrxG,KAAAqxG,mBAAAxhG,GAEA7P,KAAA8vG,qBACA7F,qBAAAjqG,KAAA8vG,oBACA9vG,KAAA8vG,wBAAAjgG,GAEA7P,KAAA4yG,UAAA,MACAxpF,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAqBAmvG,EAAA7wG,UAAAu0G,sBAAA,SAAA3yE,EAAA73B,EAAA0pB,GACA,GAAA/xB,KAAAowG,YAAA,CAGA,IAAAz7E,EAAA30B,KAAAmtD,uBAAAjtB,GAGAF,OAAAnwB,KAFAkiB,OAAAliB,IAAAkiB,IACsC,IACtCiO,aACAjO,EAAAiO,aAAAhgC,KAAAowG,YAAAlvE,WAAA,EACA4xE,OAAAjjG,IAAAkiB,EAAA+gF,YACA/gF,EAAA+gF,YAAsCvqF,EACtC,OAAAvoB,KAAA0wB,UAAAqP,2BAAApL,EAAA30B,KAAAowG,YAAApwE,EAAA33B,EAAA,KAAAyqG,EAAA,QAUA3D,EAAA7wG,UAAAy0G,mBAAA,SAAA7yE,EAAAnO,GACA,IAAA82B,EAAA,KAOA,OANA7oD,KAAA6yG,sBAAA3yE,EAAA,SAAA6qC,GACAliB,IACAA,EAAA,IAEAA,EAAA/lD,KAAAioE,IACSh5C,GACT82B,GAmBAsmD,EAAA7wG,UAAA00G,oBAAA,SAAA9yE,EAAA73B,EAAA0pB,GACA,GAAA/xB,KAAAowG,YAAA,CAGA,IAAAz7F,EAAAod,GAA+D,GAC/DiO,OAAAnwB,IAAA8E,EAAAqrB,aACAjO,EAAAiO,aAAAhgC,KAAAowG,YAAAlvE,WAAA,EACA4xE,EAAAn+F,EAAAm+F,aAAiDvqF,EACjD,OAAAvoB,KAAA0wB,UAAAsiF,oBAAA9yE,EAAAlgC,KAAAowG,YAAApwE,EAAA33B,EAAAyqG,KAUA3D,EAAA7wG,UAAA20G,kBAAA,SAAA/yE,EAAAnO,GACA,IAAA/xB,KAAAowG,YACA,SAEA,IAAAz7E,EAAA30B,KAAAmtD,uBAAAjtB,GAGA4yE,OAAAjjG,KAFAkiB,OAAAliB,IAAAkiB,IACsC,IACtC+gF,YAAA/gF,EAAA+gF,YAA4FvqF,EAC5FyX,OAAAnwB,IAAAkiB,EAAAiO,aACAjO,EAAAiO,aAAAhgC,KAAAowG,YAAAlvE,WAAA,EACA,OAAAlhC,KAAA0wB,UAAA4P,uBAAA3L,EAAA30B,KAAAowG,YAAApwE,EAAA8yE,EAAA,OAQA3D,EAAA7wG,UAAA40G,mBAAA,SAAAvpF,GACA,OAAA3pB,KAAAmtD,uBAAAntD,KAAAktD,cAAAvjC,KAQAwlF,EAAA7wG,UAAA4uD,cAAA,SAAAvjC,GACA,IAAAwpF,EAAAnzG,KAAAywG,UAAA2C,wBACAC,EAAA,mBAAA1pF,EACkC,EAAAyyE,eAAA,GACA,EAClC,OACAiX,EAAAjwC,QAAA+vC,EAAA3wG,KACA6wG,EAAAhwC,QAAA8vC,EAAAr9B,MAYAq5B,EAAA7wG,UAAAg1G,UAAA,WACA,OAAuDtzG,KAAAzC,IAAc0kG,GAAWG,SAShF+M,EAAA7wG,UAAAoxD,iBAAA,WACA,IAAAt5C,EAAApW,KAAAszG,YACA,YAAAzjG,IAAAuG,EACA,iBAAAA,EAAAH,SAAAq5F,eAAAl5F,KAGA,MAUA+4F,EAAA7wG,UAAA6uD,uBAAA,SAAAjtB,GACA,IAAA/O,EAAAnxB,KAAAowG,YACA,OAAAj/E,EAImBvsB,GAAcusB,EAAAoiF,2BAAArzE,EAAAt8B,SAHjC,MAYAurG,EAAA7wG,UAAA8zG,YAAA,WACA,OAAApyG,KAAAuvG,UAQAJ,EAAA7wG,UAAAq0G,YAAA,WACA,OAAA3yG,KAAAmxG,WAUAhC,EAAA7wG,UAAAk1G,eAAA,SAAA39F,GACA,IAAA68F,EAAA1yG,KAAAoxG,gBAAAv7F,EAAAjJ,YACA,YAAAiD,IAAA6iG,IAAA,MAUAvD,EAAA7wG,UAAAg0G,gBAAA,WACA,OAAAtyG,KAAAwvG,cAQAL,EAAA7wG,UAAAk0G,cAAA,WACA,OAC8BxyG,KAAAzC,IAAc0kG,GAAWC,aAOvDiN,EAAA7wG,UAAAowG,UAAA,WAEA,OADA1uG,KAAAwyG,gBAAA9D,aAUAS,EAAA7wG,UAAAg1F,uBAAA,SAAA3+D,GACA,IAAAxD,EAAAnxB,KAAAowG,YACA,OAAAj/E,EAImBvsB,GAAcusB,EAAAuQ,2BAAA/M,EAAA/wB,MAAA,MAHjC,MAUAurG,EAAA7wG,UAAA+yB,YAAA,WACA,OAAArxB,KAAA0wB,WAQAy+E,EAAA7wG,UAAAu0B,QAAA,WACA,OACsD7yB,KAAAzC,IAAc0kG,GAAWE,OAS/EgN,EAAA7wG,UAAAurD,QAAA,WACA,OACwB7pD,KAAAzC,IAAc0kG,GAAWI,OAOjD8M,EAAA7wG,UAAA6rD,YAAA,WACA,OAAAnqD,KAAAywG,WASAtB,EAAA7wG,UAAAm1G,oBAAA,WACA,OAAAzzG,KAAA4wG,mBASAzB,EAAA7wG,UAAAo1G,6BAAA,WACA,OAAA1zG,KAAA6wG,4BASA1B,EAAA7wG,UAAAmzG,gBAAA,SAAA9xE,EAAA8H,EAAAksE,EAAA1vE,GAGA,IAAA9S,EAAAnxB,KAAAowG,YACA,KAAAj/E,GAAAsW,KAAAtW,EAAA0W,aACA,OR7vBOvmC,IQ+vBP,IAAA6vB,EAAA0W,YAAAJ,GAAA9H,EAAAiI,UACA,ORhwBOtmC,IQwwBP,IAAAuvD,EAAA8iD,EAAA,GAAAxiF,EAAAyiF,MAAA,GACA9iD,EAAA6iD,EAAA,GAAAxiF,EAAAyiF,MAAA,GACA,aAAA1zG,KAAA6E,IAAAk/B,GACA/jC,KAAAoF,KAAAurD,IAAAC,KAAA7sB,GAMAkrE,EAAA7wG,UAAA4yG,mBAAA,SAAAnkD,EAAA/iC,GACA,IAAAprB,EAAAorB,GAAA+iC,EAAAnuD,KACA0pD,EAAA,IAAkCuE,GAAejuD,EAAAoB,KAAA+sD,GACjD/sD,KAAA+wG,sBAAAzoD,IAKA6mD,EAAA7wG,UAAAyyG,sBAAA,SAAAzoD,GACA,GAAAtoD,KAAAowG,YAAA,CAMA,IADA,IAAAh6F,EAAAkyC,EAAA2E,cAAA72C,OACAA,aAAAy9F,aAAA,CACA,GAAAz9F,EAAA09F,gBAAA9zG,KAAA6wG,2BACA,OAEAz6F,IAAA09F,cAEA9zG,KAAAsxG,OAAAhpD,EAAA3zB,WACA2zB,EAAAn3B,WAAAnxB,KAAAowG,YACA,IAAA2D,EAAA/zG,KAAAsyG,kBAAA/pB,WACA,QAAAvoF,KAAA0pB,cAAA4+B,GACA,QAAA5rD,EAAAq3G,EAAAr0G,OAAA,EAAsDhD,GAAA,EAAQA,IAAA,CAC9D,IAAAu1G,EAAA8B,EAAAr3G,GACA,GAAAu1G,EAAA7pD,YAIA,IADA6pD,EAAAhqD,YAAAK,GAEA,SAQA6mD,EAAA7wG,UAAA01G,iBAAA,WACA,IAAA7iF,EAAAnxB,KAAAowG,YAUApoE,EAAAhoC,KAAAwxG,WACA,IAAAxpE,EAAApjB,UAAA,CACA,IAAAigF,EAAA7kG,KAAA4vG,iBACA9K,EAAAD,EACA,GAAA1zE,EAAA,CACA,IAAA8iF,EAAA9iF,EAAA40D,UACA,GAAAkuB,EAA0BxnC,KAAQwnC,EAAqBxnC,IAAQ,CAC/D,IAAAynC,EAAArnG,KAAAulF,MAAAjhE,EAAA3gB,KAAA,EACAq0F,EAAAqP,EAAA,IACApP,EAAAoP,EAAA,KAGAlsE,EAAA08D,kBAAAG,IACA78D,EAAAg8D,eACAh8D,EAAA48D,cAAAC,EAAAC,KAGA3zE,IAAAnxB,KAAA+pB,YAA2C4F,KAAewB,EAAAkW,SAC1DrnC,KAAAwxG,WAAA9M,mBAwYA,SAAAyP,EAAA/F,GACA,QAAA1xG,EAAA,EAAA+C,EAAA2uG,EAAA1uG,OAAuChD,EAAA+C,IAAQ/C,EAAA,CAC/C,IAAA2xB,EAAA+/E,EAAA1xG,GACA,GAAgC,qBAAAgyG,UAChC,OAAAyF,EAAoD,EAAAzF,YAAAnmB,YAGpD,IAAAppF,EAAuE,EAAA4xB,YACvE,GAAA5xB,KAAA49C,QACA,SAIA,SArZAo3D,CAAAn0G,KAAA0uG,YAAAnmB,aACAvoF,KAAA0wB,UAAA0jF,oBAA+CzkF,GAAewB,GAG9D,IADA,IAAAwW,EAAA3nC,KAAAuxG,qBACA70G,EAAA,EAAA+C,EAAAkoC,EAAAjoC,OAAwDhD,EAAA+C,IAAQ/C,EAChEirC,EAAAjrC,GAAAsD,KAAAmxB,GAEAwW,EAAAjoC,OAAA,GAKAyvG,EAAA7wG,UAAAwzG,mBAAA,WACA9xG,KAAA6pD,WACA7pD,KAAA6pD,UAAAu/C,mBAAA,GAEAppG,KAAAkxB,UAKAi+E,EAAA7wG,UAAAyzG,qBAAA,WAKA,IAAAsC,EAIA,GAHAr0G,KAAAszG,cACAe,EAAAr0G,KAAA0vD,oBAEA1vD,KAAAixG,gBAAA,CACA,QAAAv0G,EAAA,EAAA+C,EAAAO,KAAAixG,gBAAAvxG,OAA6DhD,EAAA+C,IAAQ/C,EACrDspB,EAAahmB,KAAAixG,gBAAAv0G,IAE7BsD,KAAAixG,gBAAA,KAEA,GAAAoD,EAQA,CACAA,EAAAx8F,YAAA7X,KAAAywG,WACA,IAAApB,EAAArvG,KAAAgxG,qBACAhxG,KAAAgxG,qBAAAqD,EACAr0G,KAAAixG,gBAAA,CACgBrrF,EAAMypF,EAAsBjpF,EAASU,QAAA9mB,KAAAkxG,mBAAAlxG,MACrC4lB,EAAMypF,EAAsBjpF,EAASW,SAAA/mB,KAAAkxG,mBAAAlxG,OAErDA,KAAAqxG,gBACArxG,KAAAqxG,cAAArxG,KAAAs0G,WAAAp2G,KAAA8B,MACA0H,iBAAiC0e,EAASmB,OAAAvnB,KAAAqxG,eAAA,SAjB1CrxG,KAAA0wB,UAAA6jF,uBACYr8E,GAAUl4B,KAAAywG,gBACtB5gG,IAAA7P,KAAAqxG,gBACA7pG,oBAAoC4e,EAASmB,OAAAvnB,KAAAqxG,eAAA,GAC7CrxG,KAAAqxG,mBAAAxhG,GAgBA7P,KAAAs0G,cAOAnF,EAAA7wG,UAAAozG,kBAAA,WACA1xG,KAAAkxB,UAKAi+E,EAAA7wG,UAAAk2G,2BAAA,WACAx0G,KAAAkxB,UAKAi+E,EAAA7wG,UAAAuzG,mBAAA,WACA7xG,KAAAswG,2BACYtqF,EAAahmB,KAAAswG,0BACzBtwG,KAAAswG,yBAAA,MAEAtwG,KAAAuwG,yBACYvqF,EAAahmB,KAAAuwG,wBACzBvwG,KAAAuwG,uBAAA,MAEA,IAAAtpD,EAAAjnD,KAAA6pD,UACA5C,IACAjnD,KAAAywG,UAAA93F,aAAA,YAAqDmP,EAAMm/B,IAC3DjnD,KAAAswG,yBAA4C1qF,EAAMqhC,EAAOh/B,EAAejoB,KAAAw0G,2BAAAx0G,MACxEA,KAAAuwG,uBAA0C3qF,EAAMqhC,EAAO7gC,EAASC,OAAArmB,KAAAw0G,2BAAAx0G,MAChEinD,EAAAmiD,mBAAA,IAEAppG,KAAAkxB,UAKAi+E,EAAA7wG,UAAAszG,yBAAA,WACA5xG,KAAAwwG,kCACAxwG,KAAAwwG,gCAAAnkG,QAAyD2Z,GACzDhmB,KAAAwwG,gCAAA,MAEA,IAAAd,EAAA1vG,KAAAwyG,gBACA9C,IACA1vG,KAAAwwG,gCAAA,CACgB5qF,EAAM8pF,EAAaznF,EAAejoB,KAAAkxB,OAAAlxB,MAClC4lB,EAAM8pF,EAAatpF,EAASC,OAAArmB,KAAAkxB,OAAAlxB,QAG5CA,KAAAkxB,UAKAi+E,EAAA7wG,UAAAm2G,WAAA,WACA,QAAAz0G,KAAAowG,aAMAjB,EAAA7wG,UAAAo2G,WAAA,WACA10G,KAAA8vG,oBACA7F,qBAAAjqG,KAAA8vG,oBAEA9vG,KAAA+vG,mBAMAZ,EAAA7wG,UAAA4yB,OAAA,gBACArhB,IAAA7P,KAAA8vG,qBACA9vG,KAAA8vG,mBAAAnF,sBAAA3qG,KAAA+vG,mBAUAZ,EAAA7wG,UAAAq2G,cAAA,SAAA3C,GACA,OAAAhyG,KAAAoyG,cAAApuG,OAAAguG,IASA7C,EAAA7wG,UAAAs2G,kBAAA,SAAA3C,GACA,OAAAjyG,KAAAsyG,kBAAAtuG,OAAAiuG,IASA9C,EAAA7wG,UAAAu2G,YAAA,SAAAxmF,GAEA,OADAruB,KAAAwyG,gBAAA9D,YACA1qG,OAAAqqB,IASA8gF,EAAA7wG,UAAAw2G,cAAA,SAAApC,GACA,OAAA1yG,KAAA2yG,cAAA3uG,OAAA0uG,IAMAvD,EAAA7wG,UAAA0xG,aAAA,SAAAx/F,GACA,IAAA6wB,EACA5K,EAAAz2B,KAAA6yB,UACAo0B,EAAAjnD,KAAA6pD,UACAl7B,E5I31BA,CAAArtB,SAAA,U4I41BAyzG,EAAA/0G,KAAAowG,YAEAj/E,EAAA,KACA,QAAAthB,IAAA4mB,G5G//BO,SAAAA,GACP,OAAAA,EAAA,MAAAA,EAAA,K4G8/BkCu+E,CAAOv+E,IAAAwwB,KAAAwiD,QAAA,CACzC,IAAA1jB,EAAA9+B,EAAAkkD,SAAAnrG,KAAAowG,YAAApwG,KAAAowG,YAAArqB,eAAAl2E,GACAwxB,EAAA4lB,EAAAj2B,SAAAhxB,KAAA05C,aACAvoB,EAA+C,CAC/CkW,SAAA,EACA3F,2BAAA1hC,KAAAiwG,4BACAthF,SACAilF,MAAA5zG,KAAAsxG,OAAAtxG,KAAAsxG,OAAAjwE,EAAA9K,OACAryB,MAAAlE,KAAAmwG,cACA1+E,iBAAAzxB,KAAAwyG,gBAAAtjF,sBACAgS,WAAAlhC,KAAA05C,YACA65D,2BAAAvzG,KAAAkwG,4BACAvoE,oBAAA,GACAlR,OACAuvD,mBAAAhmF,KAAA2xG,oBACA3pE,UAAAhoC,KAAAwxG,WACAhhG,OACAi2B,UAAA,GACApF,YACA0kD,YACAl+C,YAAA,IAQA,GALA1W,IACAA,EAAAxC,OAAgC2H,GAAiB+K,EAAA9K,OAAA8K,EAAAlR,WAAAkR,EAAA7K,SAAArF,EAAAsF,KAAA9H,IAEjD3uB,KAAAowG,YAAAj/E,EACAnxB,KAAA0wB,UAAAa,YAAAJ,GACAA,EAAA,CAKA,GAJAA,EAAAkW,SACArnC,KAAAkxB,SAEAjjB,MAAA3P,UAAAwE,KAAA8B,MAAA5E,KAAAuxG,qBAAApgF,EAAAwW,qBACAotE,IACA/0G,KAAAqwG,kBACsBn6E,GAAOl2B,KAAAqwG,mBACJ19E,GAAMxB,EAAAxC,OAAA3uB,KAAAqwG,oBAE/BrwG,KAAA0pB,cAAA,IAA2CgjC,GAASs1C,GAAYhiG,KAAA+0G,IAChE/0G,KAAAqwG,gBAA2Cn7E,GAAmBl1B,KAAAqwG,kBAG9DrwG,KAAAqwG,kBACAl/E,EAAA40D,UAAsCtZ,MACtCt7C,EAAA40D,UAAsCtZ,MACrB95C,GAAMxB,EAAAxC,OAAA3uB,KAAAqwG,mBAEvBrwG,KAAA0pB,cAAA,IAAuCgjC,GAASs1C,GAAYhiG,KAAAmxB,IAC5CqD,GAAKrD,EAAAxC,OAAA3uB,KAAAqwG,kBAGrBrwG,KAAA0pB,cAAA,IAA+BgjC,GAASs1C,GAAYhiG,KAAAmxB,IACpDxV,WAAA3b,KAAAg0G,iBAAA91G,KAAA8B,MAAA,IAQAmvG,EAAA7wG,UAAA22G,cAAA,SAAAvF,GACA1vG,KAAA4N,IAAiBq0F,GAAWC,WAAAwN,IAQ5BP,EAAA7wG,UAAAg9B,QAAA,SAAA7E,GACAz2B,KAAA4N,IAAiBq0F,GAAWE,KAAA1rE,IAS5B04E,EAAA7wG,UAAAs0G,UAAA,SAAAx8F,GACApW,KAAA4N,IAAiBq0F,GAAWG,OAAAhsF,IAQ5B+4F,EAAA7wG,UAAA42G,QAAA,SAAAjuD,GACAjnD,KAAA4N,IAAiBq0F,GAAWI,KAAAp7C,IAK5BkoD,EAAA7wG,UAAA62G,YAAA,SAAApqC,GACA/qE,KAAA2xG,oBAAiC7pF,EAAMijD,KAAA,EACvC/qE,KAAAkxB,UAOAi+E,EAAA7wG,UAAAg2G,WAAA,WACA,IAAAD,EAAAr0G,KAAA0vD,mBACA,GAAA2kD,EAGA,CACA,IAAAe,EAAAnK,iBAAAoJ,GACAr0G,KAAAs7B,QAAA,CACA+4E,EAAAgB,YACAvuE,WAAAsuE,EAAA,iBACAtuE,WAAAsuE,EAAA,aACAtuE,WAAAsuE,EAAA,cACAtuE,WAAAsuE,EAAA,kBACAf,EAAAp2E,aACA6I,WAAAsuE,EAAA,gBACAtuE,WAAAsuE,EAAA,YACAtuE,WAAAsuE,EAAA,eACAtuE,WAAAsuE,EAAA,0BAdAp1G,KAAAs7B,aAAAzrB,IAqBAs/F,EAAA7wG,UAAAg3G,cAAA,SAAAvqC,UACA/qE,KAAA2xG,oBAAwC7pF,EAAMijD,IAC9C/qE,KAAAkxB,UAEAi+E,EA1hCgB,CA2hCd5jF,GC/pCF,IAAIgqF,GAAyB,WAC7B,IAAA7sF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAqJdssF,GA7FJ,SAAApsF,GAKX,SAAAqsF,EAAA9gG,GACA,IAAA2U,EAAAF,EAAAvsB,KAAAmD,YA4BA,OAvBAspB,EAAAy+D,QAAApzE,EAAAozE,QAAApzE,EAAAozE,QAAA,KAKAz+D,EAAAosF,QAAA,KAKApsF,EAAA4+B,KAAA,KAKA5+B,EAAAqsF,aAAA,GAIArsF,EAAA4H,OAAAvc,EAAAuc,OAAAvc,EAAAuc,OAAyDzI,EACzD9T,EAAAyB,QACAkT,EAAAspF,UAAAj+F,EAAAyB,QAEAkT,EAyDA,OA1FIisF,GAASE,EAAArsF,GAsCbqsF,EAAAn3G,UAAAgqB,gBAAA,WACQ4P,GAAUl4B,KAAA+nF,SAClB3+D,EAAA9qB,UAAAgqB,gBAAAzrB,KAAAmD,OAOAy1G,EAAAn3G,UAAA+pD,OAAA,WACA,OAAAroD,KAAAkoD,MASAutD,EAAAn3G,UAAAqyB,OAAA,SAAAtjB,GACArN,KAAAkoD,MACYhwB,GAAUl4B,KAAA+nF,SAEtB,QAAArrF,EAAA,EAAA+C,EAAAO,KAAA21G,aAAAj2G,OAAsDhD,EAAA+C,IAAQ/C,EAClDspB,EAAahmB,KAAA21G,aAAAj5G,KAEzBsD,KAAA21G,aAAAj2G,OAAA,EACAM,KAAAkoD,KAAA76C,EACArN,KAAAkoD,SACAloD,KAAA01G,QACA11G,KAAA01G,QAAAroG,EAAAqmG,gCACA77F,YAAA7X,KAAA+nF,SACA/nF,KAAAkxB,SAAgCzI,GAChCzoB,KAAA21G,aAAA7yG,KAAuC8iB,EAAMvY,EAAM20F,GAAYhiG,KAAAkxB,OAAAlxB,OAE/DqN,EAAA6jB,WAYAukF,EAAAn3G,UAAAs0G,UAAA,SAAAx8F,GACApW,KAAA01G,QAAA,iBAAAt/F,EACAH,SAAAq5F,eAAAl5F,GACAA,GAEAq/F,EA3FW,CA4FTlqF,GCpJEqqF,GAAyB,WAC7B,IAAAltF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgTtB,SAAS2sF,GAAMC,GACtB91G,KAAA+1G,eAAAD,EAAA3kF,YAEe,IAAA6kF,GA7PA,SAAA5sF,GAKf,SAAA6sF,EAAAlkF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,IACAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA+nF,QAAA9xE,SAAAmC,cAAA,OACA8Y,OAAAvc,EAAAuc,QAAsC2kF,GACtCz/F,OAAAzB,EAAAyB,UACSpW,MAKTk2G,WAAAjgG,SAAAmC,cAAA,MAKAkR,EAAA6sF,gBAAAtmG,IAAA8E,EAAAyhG,WAAAzhG,EAAAyhG,UAKA9sF,EAAA+sF,0BAAAxmG,IAAA8E,EAAA2hG,YAKAhtF,EAAAitF,kBAAA1mG,IAAA8E,EAAA2hG,aACA3hG,EAAA2hG,YACAhtF,EAAAitF,eACAjtF,EAAA6sF,YAAA,GAEA,IAAAloF,OAAApe,IAAA8E,EAAAsZ,UAAAtZ,EAAAsZ,UAAA,iBACAuoF,OAAA3mG,IAAA8E,EAAA6hG,SAAA7hG,EAAA6hG,SAAA,eACAC,OAAA5mG,IAAA8E,EAAA8hG,cAAA9hG,EAAA8hG,cAAA,IACA,iBAAAA,GAKAntF,EAAAotF,eAAAzgG,SAAAmC,cAAA,QACAkR,EAAAotF,eAAAC,YAAAF,GAGAntF,EAAAotF,eAAAD,EAEA,IAAAr5B,OAAAvtE,IAAA8E,EAAAyoE,MAAAzoE,EAAAyoE,MAAA,IACA,iBAAAA,GAKA9zD,EAAAstF,OAAA3gG,SAAAmC,cAAA,QACAkR,EAAAstF,OAAAD,YAAAv5B,GAGA9zD,EAAAstF,OAAAx5B,EAEA,IAAAy5B,EAAAvtF,EAAAitF,eAAAjtF,EAAA6sF,WACA7sF,EAAAotF,eAAAptF,EAAAstF,OACA9mD,EAAA75C,SAAAmC,cAAA,UACA03C,EAAAn3C,aAAA,iBACAm3C,EAAA/wC,MAAAy3F,EACA1mD,EAAAj4C,YAAAg/F,GACQjxF,EAAMkqC,EAAS1pC,EAASI,MAAA8C,EAAAwtF,aAAAxtF,GAChC,IAAAytF,EAAA9oF,EAAA,IAA2C8K,GAAkB,IAASC,IACtE1P,EAAA6sF,YAAA7sF,EAAAitF,aAAA,IAA4Dt9E,GAAe,KAC3E3P,EAAAitF,aAAA,wBACAxuB,EAAAz+D,EAAAy+D,QAeA,OAdAA,EAAA95D,UAAA8oF,EACAhvB,EAAAlwE,YAAAyR,EAAA4sF,YACAnuB,EAAAlwE,YAAAi4C,GAMAxmC,EAAA0tF,sBAAA,GAKA1tF,EAAA2tF,kBAAA,EACA3tF,EA0JA,OAjPIssF,GAASK,EAAA7sF,GA+Fb6sF,EAAA33G,UAAA44G,2BAAA,SAAA/lF,GAaA,IARA,IAAAgmF,EAAA,GAKAC,EAAA,GACA3lF,EAAAN,EAAAM,iBACAtB,EAAAgB,EAAAkQ,UAAAlR,WACAzzB,EAAA,EAAA+C,EAAAgyB,EAAA/xB,OAAqDhD,EAAA+C,IAAQ/C,EAAA,CAC7D,IAAAwzB,EAAAuB,EAAA/0B,GACA,GAAiBuzB,GAAmBC,EAAAC,GAApC,CAGA,IAAAhxB,EAAwE+wB,EAAA,MAAAa,YACxE,GAAA5xB,EAAA,CAGA,IAAAk4G,EAAAl4G,EAAA+9C,kBACA,GAAAm6D,EAAA,CAGA,IAAAz6D,EAAAy6D,EAAAlmF,GACA,GAAAyrB,EAMA,GAHA58C,KAAAq2G,uBAAA,IAAAl3G,EAAAg+C,8BACAn9C,KAAAs3G,gBAAA,GAEArpG,MAAApP,QAAA+9C,GACA,QAAA33C,EAAA,EAAA86C,EAAAnD,EAAAl9C,OAAyDuF,EAAA86C,IAAQ96C,EACjE23C,EAAA33C,KAAAkyG,IACAC,EAAAt0G,KAAA85C,EAAA33C,IACAkyG,EAAAv6D,EAAA33C,KAAA,QAKA23C,KAAAu6D,IACAC,EAAAt0G,KAAA85C,GACAu6D,EAAAv6D,IAAA,MAIA,OAAAw6D,GAMAnB,EAAA33G,UAAAy3G,eAAA,SAAA5kF,GACA,GAAAA,EAAA,CAOA,IAAAyrB,EAAA58C,KAAAk3G,2BAAA/lF,GACAvD,EAAAgvB,EAAAl9C,OAAA,EAKA,GAJAM,KAAAi3G,kBAAArpF,IACA5tB,KAAA+nF,QAAAr8E,MAAA6rG,QAAA3pF,EAAA,UACA5tB,KAAAi3G,iBAAArpF,IAEYswB,GAAMtB,EAAA58C,KAAAg3G,uBAAlB,E7IzJO,SAAAl2G,GACP,KAAAA,EAAA02G,WACA12G,EAAAoX,YAAApX,EAAA02G,W6I0JQC,CAAcz3G,KAAAk2G,YAEtB,QAAAx5G,EAAA,EAAA+C,EAAAm9C,EAAAl9C,OAAiDhD,EAAA+C,IAAQ/C,EAAA,CACzD,IAAAqrF,EAAA9xE,SAAAmC,cAAA,MACA2vE,EAAAlqD,UAAA+e,EAAAlgD,GACAsD,KAAAk2G,WAAAr+F,YAAAkwE,GAEA/nF,KAAAg3G,sBAAAp6D,QAtBA58C,KAAAi3G,mBACAj3G,KAAA+nF,QAAAr8E,MAAA6rG,QAAA,OACAv3G,KAAAi3G,kBAAA,IA0BAhB,EAAA33G,UAAAw4G,aAAA,SAAAntF,GACAA,EAAAb,iBACA9oB,KAAA03G,iBAKAzB,EAAA33G,UAAAo5G,cAAA,WACA13G,KAAA+nF,QAAA4vB,UAAAC,OAAsC3+E,IACtCj5B,KAAAm2G,WACYp+E,GAAW/3B,KAAA02G,eAAA12G,KAAA42G,QAGX7+E,GAAW/3B,KAAA42G,OAAA52G,KAAA02G,gBAEvB12G,KAAAm2G,YAAAn2G,KAAAm2G,YAOAF,EAAA33G,UAAAu5G,eAAA,WACA,OAAA73G,KAAAu2G,cAOAN,EAAA33G,UAAAg5G,eAAA,SAAAhB,GACAt2G,KAAAu2G,eAAAD,IAGAt2G,KAAAu2G,aAAAD,EACAt2G,KAAA+nF,QAAA4vB,UAAAC,OAAA,qBACAtB,GAAAt2G,KAAAm2G,YACAn2G,KAAA03G,kBAUAzB,EAAA33G,UAAAw5G,aAAA,SAAA1B,GACAp2G,KAAAu2G,cAAAv2G,KAAAm2G,aAAAC,GAGAp2G,KAAA03G,iBAQAzB,EAAA33G,UAAAy5G,aAAA,WACA,OAAA/3G,KAAAm2G,YAEAF,EAlPe,CAmPbT,ICzSEwC,GAAyB,WAC7B,IAAAtvF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAsJtB,SAAS+uF,GAAMnC,GACtB,IAAA3kF,EAAA2kF,EAAA3kF,WACA,GAAAA,EAAA,CAGA,IAAAqF,EAAArF,EAAAkQ,UAAA7K,SACA,GAAAA,GAAAx2B,KAAAolE,UAAA,CACA,IAAAvwD,EAAA,UAAA2hB,EAAA,OACA,GAAAx2B,KAAAk4G,UAAA,CACA,IAAA/1G,EAAAnC,KAAA+nF,QAAA4vB,UAAAx1G,SAA2D22B,IAC3D32B,GAAA,IAAAq0B,EAGAr0B,GAAA,IAAAq0B,GACAx2B,KAAA+nF,QAAA4vB,UAAA3zG,OAA8C80B,IAH9C94B,KAAA+nF,QAAA4vB,UAAA3mG,IAA2C8nB,IAM3C94B,KAAA42G,OAAAlrG,MAAAmJ,YAEA7U,KAAAolE,UAAA5uC,GAEe,IAAA2hF,GA/HL,SAAA/uF,GAKV,SAAAgvF,EAAArmF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA+nF,QAAA9xE,SAAAmC,cAAA,OACA8Y,OAAAvc,EAAAuc,QAAsC+mF,GACtC7hG,OAAAzB,EAAAyB,UACSpW,KACT,IAAAiuB,OAAApe,IAAA8E,EAAAsZ,UAAAtZ,EAAAsZ,UAAA,YACAmvD,OAAAvtE,IAAA8E,EAAAyoE,MAAAzoE,EAAAyoE,MAAA,IAKA9zD,EAAAstF,OAAA,KACA,iBAAAx5B,GACA9zD,EAAAstF,OAAA3gG,SAAAmC,cAAA,QACAkR,EAAAstF,OAAA3oF,UAAA,aACA3E,EAAAstF,OAAAD,YAAAv5B,IAGA9zD,EAAAstF,OAAAx5B,EACA9zD,EAAAstF,OAAAe,UAAA3mG,IAAA,eAEA,IAAAwlG,EAAA7hG,EAAA6hG,SAAA7hG,EAAA6hG,SAAA,iBACA1mD,EAAA75C,SAAAmC,cAAA,UACA03C,EAAA7hC,YAAA,SACA6hC,EAAAn3C,aAAA,iBACAm3C,EAAA/wC,MAAAy3F,EACA1mD,EAAAj4C,YAAAyR,EAAAstF,QACQhxF,EAAMkqC,EAAS1pC,EAASI,MAAA8C,EAAAwtF,aAAAxtF,GAChC,IAAAytF,EAAA9oF,EAAA,IAA2C8K,GAAkB,IAASC,GACtE+uD,EAAAz+D,EAAAy+D,QAsBA,OArBAA,EAAA95D,UAAA8oF,EACAhvB,EAAAlwE,YAAAi4C,GACAxmC,EAAA+uF,gBAAA1jG,EAAA2jG,WAAA3jG,EAAA2jG,gBAAAzoG,EAKAyZ,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IAKAv+B,EAAA4uF,eAAAroG,IAAA8E,EAAA6jG,UAAA7jG,EAAA6jG,SAKAlvF,EAAA87C,eAAAv1D,EACAyZ,EAAA4uF,WACA5uF,EAAAy+D,QAAA4vB,UAAA3mG,IAAwC8nB,IAExCxP,EAuCA,OAjGI0uF,GAASI,EAAAhvF,GAgEbgvF,EAAA95G,UAAAw4G,aAAA,SAAAntF,GACAA,EAAAb,sBACAjZ,IAAA7P,KAAAq4G,gBACAr4G,KAAAq4G,kBAGAr4G,KAAAy4G,eAMAL,EAAA95G,UAAAm6G,YAAA,WACA,IACAxxD,EADAjnD,KAAAqoD,SACAwB,UACA5C,QAKAp3C,IAAAo3C,EAAAse,gBACAvlE,KAAAu4G,UAAA,EACAtxD,EAAA5f,QAAA,CACA7Q,SAAA,EACAqxB,SAAA7nD,KAAAu4G,UACAzwD,OAA4Blf,KAI5Bqe,EAAA8e,YAAA,KAIAqyC,EAlGU,CAmGR5C,IC/IEkD,GAAyB,WAC7B,IAAAhwF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgIdyvF,GArFP,SAAAvvF,GAKR,SAAAwvF,EAAA7mF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA+nF,QAAA9xE,SAAAmC,cAAA,OACAhC,OAAAzB,EAAAyB,UACSpW,KACT,IAAAiuB,OAAApe,IAAA8E,EAAAsZ,UAAAtZ,EAAAsZ,UAAA,UACAwb,OAAA55B,IAAA8E,EAAA80B,MAAA90B,EAAA80B,MAAA,EACAovE,OAAAhpG,IAAA8E,EAAAkkG,YAAAlkG,EAAAkkG,YAAA,IACAC,OAAAjpG,IAAA8E,EAAAmkG,aAAAnkG,EAAAmkG,aAAA,IACAC,OAAAlpG,IAAA8E,EAAAokG,eACApkG,EAAAokG,eAAA,UACAC,OAAAnpG,IAAA8E,EAAAqkG,gBACArkG,EAAAqkG,gBAAA,WACAC,EAAAhjG,SAAAmC,cAAA,UACA6gG,EAAAhrF,YAAA,MACAgrF,EAAAtgG,aAAA,iBACAsgG,EAAAl6F,MAAAg6F,EACAE,EAAAphG,YAAA,iBAAAghG,EAAA5iG,SAAA2D,eAAAi/F,MACQjzF,EAAMqzF,EAAY7yF,EAASI,MAAA8C,EAAAwtF,aAAA54G,KAAAorB,EAAAmgB,IACnC,IAAAyvE,EAAAjjG,SAAAmC,cAAA,UACA8gG,EAAAjrF,YAAA,OACAirF,EAAAvgG,aAAA,iBACAugG,EAAAn6F,MAAAi6F,EACAE,EAAArhG,YAAA,iBAAAihG,EAAA7iG,SAAA2D,eAAAk/F,MACQlzF,EAAMszF,EAAa9yF,EAASI,MAAA8C,EAAAwtF,aAAA54G,KAAAorB,GAAAmgB,IACpC,IAAAstE,EAAA9oF,EAAA,IAA2C8K,GAAkB,IAASC,GACtE+uD,EAAAz+D,EAAAy+D,QASA,OARAA,EAAA95D,UAAA8oF,EACAhvB,EAAAlwE,YAAAohG,GACAlxB,EAAAlwE,YAAAqhG,GAKA5vF,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IACAv+B,EAyCA,OAlFIovF,GAASE,EAAAxvF,GAgDbwvF,EAAAt6G,UAAAw4G,aAAA,SAAArtE,EAAA9f,GACAA,EAAAb,iBACA9oB,KAAAm5G,aAAA1vE,IAMAmvE,EAAAt6G,UAAA66G,aAAA,SAAA1vE,GACA,IACAwd,EADAjnD,KAAAqoD,SACAwB,UACA,GAAA5C,EAAA,CAKA,IAAAG,EAAAH,EAAAI,UACA,QAAAx3C,IAAAu3C,EAAA,CACA,IAAAE,EAAAL,EAAAM,mBAAAH,EAAA3d,GACAzpC,KAAAu4G,UAAA,GACAtxD,EAAAS,gBACAT,EAAAU,mBAEAV,EAAA5f,QAAA,CACA3H,KAAA4nB,EACAO,SAAA7nD,KAAAu4G,UACAzwD,OAA4Blf,MAI5Bqe,EAAAkiD,QAAA7hD,MAIAsxD,EAnFQ,CAoFNpD,ICtHF,IAsGe4D,GAtGf,WAOA,SAAAC,EAAAC,EAAAC,EAAAC,GAKAx5G,KAAAy5G,OAAAH,EAKAt5G,KAAA05G,aAAAH,EAKAv5G,KAAA25G,OAAAH,EAKAx5G,KAAAwmE,QAAA,GAKAxmE,KAAA6mE,OAAA,EAKA7mE,KAAA45G,iBAAA,EA+DA,OA1DAP,EAAA/6G,UAAAy/C,MAAA,WACA/9C,KAAAwmE,QAAA9mE,OAAA,EACAM,KAAA6mE,OAAA,EACA7mE,KAAA45G,iBAAA,GAMAP,EAAA/6G,UAAAmJ,OAAA,SAAA8B,EAAAmjB,GACA1sB,KAAAwmE,QAAA1jE,KAAAyG,EAAAmjB,EAAA7f,KAAAulF,QAKAinB,EAAA/6G,UAAAi3B,IAAA,WACA,GAAAv1B,KAAAwmE,QAAA9mE,OAAA,EAGA,SAEA,IAAA85G,EAAA3sG,KAAAulF,MAAApyF,KAAA25G,OACAE,EAAA75G,KAAAwmE,QAAA9mE,OAAA,EACA,GAAAM,KAAAwmE,QAAAqzC,EAAA,GAAAL,EAGA,SAIA,IADA,IAAAM,EAAAD,EAAA,EACAC,EAAA,GAAA95G,KAAAwmE,QAAAszC,EAAA,GAAAN,GACAM,GAAA,EAEA,IAAAjyD,EAAA7nD,KAAAwmE,QAAAqzC,EAAA,GAAA75G,KAAAwmE,QAAAszC,EAAA,GAIA,GAAAjyD,EAAA,OACA,SAEA,IAAA76B,EAAAhtB,KAAAwmE,QAAAqzC,GAAA75G,KAAAwmE,QAAAszC,GACA7sF,EAAAjtB,KAAAwmE,QAAAqzC,EAAA,GAAA75G,KAAAwmE,QAAAszC,EAAA,GAGA,OAFA95G,KAAA6mE,OAAA3mE,KAAAwsC,MAAAzf,EAAAD,GACAhtB,KAAA45G,iBAAA15G,KAAAoF,KAAA0nB,IAAAC,KAAA46B,EACA7nD,KAAA45G,iBAAA55G,KAAA05G,cAKAL,EAAA/6G,UAAA2tC,YAAA,WACA,OAAAjsC,KAAA05G,aAAA15G,KAAA45G,kBAAA55G,KAAAy5G,QAKAJ,EAAA/6G,UAAAgpE,SAAA,WACA,OAAAtnE,KAAA6mE,QAEAwyC,EApGA,GCTIU,GAAyB,WAC7B,IAAArxF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA2D7B,SAAA++B,GAAAK,GACA,IAAA6b,GAAA,EACA,GAAA7b,EAAA1pD,MAAgCktD,GAAmBrlC,SAAA,CACnD,IAAAsmC,EAAiDzE,EAAA,cACjDj7C,EAAAi7C,EAAAj7C,IACAu6C,EAAAU,EAAA3zB,WACA8U,EAAAsjB,EAAAwC,UAAAvvD,KAAAg6G,OAAAh6G,KAAAg6G,OAEQhzD,GADR35C,EAAAw8C,UACmBpgB,EAAAme,EAAA5nD,KAAAu4G,WACnBjwD,EAAAx/B,iBACAq7C,GAAA,EAEA,OAAAA,EAEe,IAAA81C,GA7Cf,SAAA7wF,GAKA,SAAA8wF,EAAAnoF,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACAioD,kBACSjoD,KACT2U,EAAAod,GAAA,GAWA,OANAzI,EAAA0wF,OAAArlG,EAAA80B,MAAA90B,EAAA80B,MAAA,EAKAngB,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IACAv+B,EAEA,OArBIywF,GAASG,EAAA9wF,GAqBb8wF,EAtBA,CAuBEnyD,ICnDEoyD,GAAyB,WAC7B,IAAAzxF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA0KdkxF,GAzIJ,SAAAhxF,GAKX,SAAAixF,EAAAtoF,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA+jE,SAAsBv7C,KACbxoB,KACT2U,EAAAod,GAAA,GA4BA,OAvBAzI,EAAAgxF,SAAA3lG,EAAA4lG,QAIAjxF,EAAAkxF,aAAA,KAIAlxF,EAAAmxF,mBAIAnxF,EAAAoxF,UAAA,EAKApxF,EAAAsoE,WAAAj9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAmE7hC,GAKnE1mC,EAAAqxF,YAAA,EACArxF,EAkGA,OAtII6wF,GAASE,EAAAjxF,GAyCbixF,EAAA/7G,UAAAslE,gBAAA,SAAAtb,GACA,IhGkMqB3zB,EAAAqK,EgGlMrBklC,EAAAlkE,KAAAkkE,eACA02C,EAAuBr3C,GAAoBW,GAC3C,GAAAA,EAAAxkE,QAAAM,KAAAy6G,oBAIA,GAHAz6G,KAAAs6G,UACAt6G,KAAAs6G,SAAA7yG,OAAAmzG,EAAA,GAAAA,EAAA,IAEA56G,KAAAw6G,aAAA,CACA,IAAA/wE,EAAA,CACAzpC,KAAAw6G,aAAA,GAAAI,EAAA,GACAA,EAAA,GAAA56G,KAAAw6G,aAAA,IAGAvzD,EADAqB,EAAAj7C,IACAw8C,UhGsLqBl1B,EgGrLU8U,EhGqLVzK,EgGrLUioB,EAAA/iB,gBhGsL/BvP,EAAA,IAAAqK,EACArK,EAAA,IAAAqK,EgGtLgB+uB,GAAgBtkB,EAAAwd,EAAAse,eAChCte,EAAA6lD,aAAArjE,SAGAzpC,KAAAs6G,UAGAt6G,KAAAs6G,SAAAv8D,QAEA/9C,KAAAw6G,aAAAI,EACA56G,KAAAy6G,mBAAAv2C,EAAAxkE,QAKA26G,EAAA/7G,UAAAwlE,cAAA,SAAAxb,GACA,IAAAj7C,EAAAi7C,EAAAj7C,IACA45C,EAAA55C,EAAAw8C,UACA,OAAA7pD,KAAAkkE,eAAAxkE,OAAA,CACA,IAAAM,KAAA26G,YAAA36G,KAAAs6G,UAAAt6G,KAAAs6G,SAAA/kF,MAAA,CACA,IAAA8d,EAAArzC,KAAAs6G,SAAAruE,cACAtS,EAAA35B,KAAAs6G,SAAAhzC,WACA/wC,EAA+E0wB,EAAA9wB,YAC/E0kF,EAAAxtG,EAAAimF,uBAAA/8D,GACAr3B,EAAAmO,EAAA8/C,uBAAA,CACA0tD,EAAA,GAAAxnE,EAAAnzC,KAAAy2B,IAAAgD,GACAkhF,EAAA,GAAAxnE,EAAAnzC,KAAA22B,IAAA8C,KAEAstB,EAAA5f,QAAA,CACA9Q,OAAA0wB,EAAA2lD,qBAAA1tG,GACA2oD,SAAA,IACAC,OAA4Blf,KAO5B,OAJA5oC,KAAA06G,WACA16G,KAAA06G,UAAA,EACAzzD,EAAA0mD,mBAEA,EASA,OANA3tG,KAAAs6G,UAGAt6G,KAAAs6G,SAAAv8D,QAEA/9C,KAAAw6G,aAAA,MACA,GAMAH,EAAA/7G,UAAAqlE,gBAAA,SAAArb,GACA,GAAAtoD,KAAAkkE,eAAAxkE,OAAA,GAAAM,KAAA4xF,WAAAtpC,GAAA,CACA,IACArB,EADAqB,EAAAj7C,IACAw8C,UAgBA,OAfA7pD,KAAAw6G,aAAA,KAEAvzD,EAAAS,gBACAT,EAAAU,mBAEA3nD,KAAA06G,WACA16G,KAAA06G,UAAA,EACA16G,KAAAqoD,SAAAwB,UAAA6jD,oBAEA1tG,KAAAs6G,UACAt6G,KAAAs6G,SAAAv8D,QAIA/9C,KAAA26G,WAAA36G,KAAAkkE,eAAAxkE,OAAA,GACA,EAGA,UAGA26G,EAvIW,CAwIT52C,ICzKEq3C,GAAyB,WAC7B,IAAApyF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAqHd6xF,GAhFD,SAAA3xF,GAKd,SAAA4xF,EAAAjpF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GAmBA,OAlBAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA+jE,SAAsBv7C,KACbxoB,MAKT4xF,WAAAj9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAmEriC,GAKnElmC,EAAA2xF,gBAAAprG,EAKAyZ,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IACAv+B,EAoDA,OA7EIwxF,GAASE,EAAA5xF,GA8Bb4xF,EAAA18G,UAAAslE,gBAAA,SAAAtb,GACA,GAAa8H,GAAS9H,GAAtB,CAGA,IAAAj7C,EAAAi7C,EAAAj7C,IACA45C,EAAA55C,EAAAw8C,UACA,GAAA5C,EAAAikD,iBAAA10E,WAA+CovE,GAA/C,CAGA,IAAAnvE,EAAAppB,EAAAwlB,UACAyC,EAAAgzB,EAAApoB,MACA6oE,EAAA7oG,KAAAwsC,MAAAjW,EAAA,KAAAnB,EAAA,GAAAA,EAAA,GAAAmB,EAAA,MACA,QAAA5mB,IAAA7P,KAAAi7G,WAAA,CACA,IAAAxxE,EAAAs/D,EAAA/oG,KAAAi7G,WACAh0D,EAAAkmD,gBAAA1jE,GAEAzpC,KAAAi7G,WAAAlS,KAKAiS,EAAA18G,UAAAwlE,cAAA,SAAAxb,GACA,OAAa8H,GAAS9H,KAGtBA,EAAAj7C,IACAw8C,UACA8jD,eAAA3tG,KAAAu4G,YACA,IAKAyC,EAAA18G,UAAAqlE,gBAAA,SAAArb,GACA,QAAa8H,GAAS9H,QAGVuH,GAAiBvH,KAAAtoD,KAAA4xF,WAAAtpC,MAC7BA,EAAAj7C,IACAw8C,UAAA6jD,mBACA1tG,KAAAi7G,gBAAAprG,GACA,KAMAmrG,EA9Ec,CA+EZv3C,ICjHEy3C,GAAyB,WAC7B,IAAAxyF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4HdiyF,GA7GF,SAAA/xF,GAKb,SAAAgyF,EAAAntF,GACA,IAAA3E,EAAAF,EAAAvsB,KAAAmD,YA4BA,OAvBAspB,EAAA4gD,UAAA,KAKA5gD,EAAA61E,SAAAlpF,SAAAmC,cAAA,OACAkR,EAAA61E,SAAAzzF,MAAAqyB,SAAA,WACAzU,EAAA61E,SAAAlxE,UAAA,UAAAA,EAKA3E,EAAA4+B,KAAA,KAKA5+B,EAAA+xF,YAAA,KAKA/xF,EAAAgyF,UAAA,KACAhyF,EAyEA,OA1GI4xF,GAASE,EAAAhyF,GAsCbgyF,EAAA98G,UAAAgqB,gBAAA,WACAtoB,KAAA2wB,OAAA,OAKAyqF,EAAA98G,UAAA6oE,QAAA,WACA,IAAAo0C,EAAAv7G,KAAAq7G,YACAG,EAAAx7G,KAAAs7G,UAEA5vG,EAAA1L,KAAAm/F,SAAAzzF,MACAA,EAAAlJ,KAAAtC,KAAA4B,IAAAy5G,EAAA,GAAAC,EAAA,IAFA,KAGA9vG,EAAAoqE,IAAA51E,KAAA4B,IAAAy5G,EAAA,GAAAC,EAAA,IAHA,KAIA9vG,EAAAmsB,MAAA33B,KAAAg1C,IAAAsmE,EAAA,GAAAD,EAAA,IAJA,KAKA7vG,EAAArJ,OAAAnC,KAAAg1C,IAAAsmE,EAAA,GAAAD,EAAA,IALA,MAUAH,EAAA98G,UAAAqyB,OAAA,SAAAtjB,GACA,GAAArN,KAAAkoD,KAAA,CACAloD,KAAAkoD,KAAAurD,sBAAAv7F,YAAAlY,KAAAm/F,UACA,IAAAzzF,EAAA1L,KAAAm/F,SAAAzzF,MACAA,EAAAlJ,KAAAkJ,EAAAoqE,IAAApqE,EAAAmsB,MAAAnsB,EAAArJ,OAAA,UAEArC,KAAAkoD,KAAA76C,EACArN,KAAAkoD,MACAloD,KAAAkoD,KAAAurD,sBAAA57F,YAAA7X,KAAAm/F,WAOAic,EAAA98G,UAAAm9G,UAAA,SAAAF,EAAAC,GACAx7G,KAAAq7G,YAAAE,EACAv7G,KAAAs7G,UAAAE,EACAx7G,KAAA07G,yBACA17G,KAAAmnE,WAKAi0C,EAAA98G,UAAAo9G,uBAAA,WACA,IAAAH,EAAAv7G,KAAAq7G,YACAG,EAAAx7G,KAAAs7G,UAOAnnF,EANA,CACAonF,EACA,CAAAA,EAAA,GAAAC,EAAA,IACAA,EACA,CAAAA,EAAA,GAAAD,EAAA,KAEAluG,IAAArN,KAAAkoD,KAAAiF,uBAAAntD,KAAAkoD,MAEA/zB,EAAA,GAAAA,EAAA,GAAAvwB,QACA5D,KAAAkqE,UAIAlqE,KAAAkqE,UAAAnW,eAAA,CAAA5/B,IAHAn0B,KAAAkqE,UAAA,IAAiCvL,GAAO,CAAAxqC,KASxCinF,EAAA98G,UAAA+sD,YAAA,WACA,OAAArrD,KAAAkqE,WAEAkxC,EA3Ga,CA4GXlzF,GC9HEyzF,GAAyB,WAC7B,IAAAjzF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6C7B0yF,GAMA,WANAA,GAYA,UAZAA,GAkBA,SAOAC,GAAA,SAAAzyF,GAOA,SAAAyyF,EAAAj9G,EAAA+1B,EAAA2zB,GACA,IAAAh/B,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAcA,OAPAspB,EAAAqL,aAMArL,EAAAg/B,kBACAh/B,EAEA,OAvBIqyF,GAASE,EAAAzyF,GAuBbyyF,EAxBA,CAyBElzF,GA4HamzF,GA7GJ,SAAA1yF,GAKX,SAAA2yF,EAAAhqF,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,YACA2U,EAAAod,GAAA,GAiCA,OA5BAzI,EAAA0yF,KAAA,IAAyBb,GAASxmG,EAAAsZ,WAAA,cAKlC3E,EAAA2yF,cAAApsG,IAAA8E,EAAA/O,QAAA+O,EAAA/O,QAAA,GAMA0jB,EAAA4yF,UAAAvnG,EAAAwnG,SAAAxnG,EAAAwnG,SAAgE1zF,EAKhEa,EAAA+xF,YAAA,KAKA/xF,EAAAsoE,WAAAj9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAmEjiC,GAKnEtmC,EAAA8yF,iBAAAznG,EAAA0nG,gBACA1nG,EAAA0nG,gBAAA/yF,EAAAgzF,uBACAhzF,EAmEA,OA1GIqyF,GAASI,EAAA3yF,GAkDb2yF,EAAAz9G,UAAAg+G,uBAAA,SAAAh0D,EAAAizD,EAAAC,GACA,IAAA3jF,EAAA2jF,EAAA,GAAAD,EAAA,GACAl5G,EAAAm5G,EAAA,GAAAD,EAAA,GACA,OAAA1jF,IAAAx1B,KAAArC,KAAAi8G,UAOAF,EAAAz9G,UAAA+sD,YAAA,WACA,OAAArrD,KAAAg8G,KAAA3wD,eAKA0wD,EAAAz9G,UAAAslE,gBAAA,SAAAtb,GACa8H,GAAS9H,KAGtBtoD,KAAAg8G,KAAAP,UAAAz7G,KAAAq7G,YAAA/yD,EAAApoB,OACAlgC,KAAA0pB,cAAA,IAAAmyF,GAAAD,GAAAtzD,EAAA3zB,WAAA2zB,MAKAyzD,EAAAz9G,UAAAwlE,cAAA,SAAAxb,GACA,OAAa8H,GAAS9H,KAGtBtoD,KAAAg8G,KAAArrF,OAAA,MACA3wB,KAAAo8G,iBAAA9zD,EAAAtoD,KAAAq7G,YAAA/yD,EAAApoB,SACAlgC,KAAAk8G,UAAA5zD,GACAtoD,KAAA0pB,cAAA,IAAAmyF,GAAAD,GAAAtzD,EAAA3zB,WAAA2zB,MAEA,IAKAyzD,EAAAz9G,UAAAqlE,gBAAA,SAAArb,GACA,QAAa8H,GAAS9H,QAGVuH,GAAiBvH,KAC7BtoD,KAAA4xF,WAAAtpC,MACAtoD,KAAAq7G,YAAA/yD,EAAApoB,MACAlgC,KAAAg8G,KAAArrF,OAAA23B,EAAAj7C,KACArN,KAAAg8G,KAAAP,UAAAz7G,KAAAq7G,YAAAr7G,KAAAq7G,aACAr7G,KAAA0pB,cAAA,IAAAmyF,GAAAD,GAAAtzD,EAAA3zB,WAAA2zB,KACA,KAMAyzD,EA3GW,CA4GTt4C,IC1NE84C,GAAyB,WAC7B,IAAA7zF,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAwE7B,SAAAizF,KACA,IvJiKOhoF,EAAAI,EuJjKPlnB,EAAArN,KAAAqoD,SACApB,EAAwD55C,EAAAw8C,UACxDpzB,EAAqDppB,EAAAwlB,UACrDlE,EAAA3uB,KAAAqrD,cAAAz8B,YACA,GAAA5uB,KAAAw8G,KAAA,CACA,IAAAC,EAAAx1D,EAAAokD,gBAAA50E,GACAimF,GvJ2JOvoF,EuJ3JmD,CAC1D9mB,EAAAimF,uBAAuCz9D,GAAalH,IACpDthB,EAAAimF,uBAAuCv9D,GAAWpH,KvJ2JlD+G,GADAR,GAAAX,GACAJ,KAiZO,SAAAxF,EAAAhxB,GACP,IAAAkzD,GAAAliC,EAAA,GAAAA,EAAA,OAAAhxB,EAAA,GACAmzD,GAAAniC,EAAA,GAAAA,EAAA,OAAAhxB,EAAA,GACAgxB,EAAA,IAAAkiC,EACAliC,EAAA,IAAAkiC,EACAliC,EAAA,IAAAmiC,EACAniC,EAAA,IAAAmiC,EuJ/iBQ6rD,CAAeF,EAAA,EADvBx1D,EAAA0kD,uBAAA+Q,EAAAjmF,IAEA9H,EAAA8tF,EAEA,IAAAtsF,EAAA82B,EAAAwlD,yBAAAxlD,EAAA0kD,uBAAAh9E,EAAA8H,IACAF,EAAA0wB,EAAA2lD,qBAA2Cz2E,GAASxH,GAAAwB,GACpD82B,EAAA5f,QAAA,CACAlX,aACAoG,SACAsxB,SAAA7nD,KAAAu4G,UACAzwD,OAAgBlf,KAGD,IAAAg0E,GAvDH,SAAAxzF,GAKZ,SAAAyzF,EAAA9qF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACA8/D,EAAAl9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAgE5hC,GAgBhE,OAfA3mC,EAAAF,EAAAvsB,KAAAmD,KAAA,CACA6xF,YACA5jE,UAAAtZ,EAAAsZ,WAAA,cACAkuF,eACSn8G,MAKTu4G,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IAKAv+B,EAAAkzF,UAAA3sG,IAAA8E,EAAA4pF,KAAA5pF,EAAA4pF,IACAj1E,EAEA,OAzBIizF,GAASM,EAAAzzF,GAyBbyzF,EA1BY,CA2BVf,IC7DagB,GAAA,CACf7oF,KAAA,GACA8oF,GAAA,GACAhpF,MAAA,GACAipF,KAAA,ICXIC,GAAyB,WAC7B,IAAAv0F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA6F7B,SAASg0F,GAAW50D,GACpB,IAAA6b,GAAA,EACA,GAAA7b,EAAA1pD,MAAgCwnB,EAASU,QAAA,CACzC,IACAq2F,EADgD70D,EAAA,cAChD60D,QACA,GAAAn9G,KAAA4xF,WAAAtpC,KACA60D,GAAwBL,GAAOE,MAC/BG,GAA2BL,GAAO7oF,MAClCkpF,GAA2BL,GAAO/oF,OAClCopF,GAA2BL,GAAOC,IAAA,CAClC,IACA91D,EADAqB,EAAAj7C,IACAw8C,UACAuzD,EAAAn2D,EAAA/iB,gBAAAlkC,KAAAq9G,YACAxsD,EAAA,EAAAC,EAAA,EACAqsD,GAA2BL,GAAOE,KAClClsD,GAAAssD,EAEAD,GAAgCL,GAAO7oF,KACvC48B,GAAAusD,EAEAD,GAAgCL,GAAO/oF,MACvC88B,EAAAusD,EAGAtsD,EAAAssD,EAEA,IAAA3zE,EAAA,CAAAonB,EAAAC,GACY/C,GAAgBtkB,EAAAwd,EAAAse,e7GTrB,SAAAte,EAAAxd,EAAA0d,GACP,IAAAyjD,EAAA3jD,EAAA9wB,YACA,GAAAy0E,EAAA,CACA,IAAAr0E,EAAA,CAAAq0E,EAAA,GAAAnhE,EAAA,GAAAmhE,EAAA,GAAAnhE,EAAA,IACAwd,EAAAyiD,SAAA,CACA7hD,cAAAh4C,IAAAs3C,IAAA,IACAW,OAAoBhf,GACpBvS,OAAA0wB,EAAA2lD,qBAAAr2E,M6GGY+mF,CAAGr2D,EAAAxd,EAAAzpC,KAAAu4G,WACfjwD,EAAAx/B,iBACAq7C,GAAA,GAGA,OAAAA,EAEe,IAAAo5C,GAnFA,SAAAn0F,GAKf,SAAAo0F,EAAAzrF,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACAioD,YAAyBi1D,MAChBl9G,KACT2U,EAAAod,GAAA,GA2BA,OArBAzI,EAAAm0F,kBAAA,SAAAn1D,GACA,OAAmB0H,GAAc1H,IACjB4H,GAAiB5H,IAMjCh/B,EAAAsoE,gBAAA/hF,IAAA8E,EAAAk9E,UACAl9E,EAAAk9E,UAAAvoE,EAAAm0F,kBAKAn0F,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IAKAv+B,EAAA+zF,iBAAAxtG,IAAA8E,EAAA+oG,WACA/oG,EAAA+oG,WAAA,IACAp0F,EAEA,OArCI2zF,GAASO,EAAAp0F,GAqCbo0F,EAtCe,CAuCbz1D,ICpFE41D,GAAyB,WAC7B,IAAAj1F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA8E7B,SAAS00F,GAAWt1D,GACpB,IAAA6b,GAAA,EACA,GAAA7b,EAAA1pD,MAAgCwnB,EAASU,SACzCwhC,EAAA1pD,MAAgCwnB,EAASW,SAAA,CACzC,IACA49B,EADgD2D,EAAA,cAChD3D,SACA,GAAA3kD,KAAA4xF,WAAAtpC,KACA3D,GAAA,IAAAF,WAAA,IAAAE,GAAA,IAAAF,WAAA,KACA,IAAAp3C,EAAAi7C,EAAAj7C,IACAo8B,EAAAkb,GAAA,IAAAF,WAAA,GAAAzkD,KAAAg6G,QAAAh6G,KAAAg6G,OAEYhzD,GADZ35C,EAAAw8C,UACuBpgB,OAAA55B,EAAA7P,KAAAu4G,WACvBjwD,EAAAx/B,iBACAq7C,GAAA,GAGA,OAAAA,EAEe,IAAA05C,GAvDC,SAAAz0F,GAKhB,SAAA00F,EAAA/rF,GACA,IAAAzI,EAAAF,EAAAvsB,KAAAmD,KAAA,CACAioD,YAAyB21D,MAChB59G,KACT2U,EAAAod,GAAA,GAgBA,OAXAzI,EAAAsoE,WAAAj9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAmE3hC,GAKnE5mC,EAAA0wF,OAAArlG,EAAA80B,MAAA90B,EAAA80B,MAAA,EAKAngB,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IACAv+B,EAEA,OA1BIq0F,GAASG,EAAA10F,GA0Bb00F,EA3BgB,CA4Bd/1D,ICrEEg2D,GAAyB,WAC7B,IAAAr1F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAwBlB80F,GACX,WADWA,GAEX,QAqNeC,GAjMG,SAAA70F,GAKlB,SAAA80F,EAAAnsF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GAyEA,OAxEAzI,EAAAF,EAAAvsB,KAAAmD,KAA2F,IAAAA,MAK3Fm+G,YAAA,EAKA70F,EAAA80F,WAAA,EAKA90F,EAAA4wC,eAAArqD,IAAA8E,EAAAihD,SAAAjhD,EAAAihD,SAAA,EAKAtsC,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IAKAv+B,EAAA+0F,cAAAxuG,IAAA8E,EAAA8J,QAAA9J,EAAA8J,QAAA,GAKA6K,EAAAg1F,gBAAAzuG,IAAA8E,EAAA4pG,WAAA5pG,EAAA4pG,UAKAj1F,EAAAsoE,WAAAj9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAmEjiC,GAKnEtmC,EAAAk1F,YAAA,KAKAl1F,EAAAm1F,gBAAA5uG,EAKAyZ,EAAAo1F,WAKAp1F,EAAA2mE,WAAApgF,EAMAyZ,EAAAq1F,kBAAA,IAIAr1F,EAAAs1F,mBAMAt1F,EAAAu1F,sBAAA,IACAv1F,EA+GA,OA9LIy0F,GAASG,EAAA90F,GAoFb80F,EAAA5/G,UAAAwgH,gBAAA,WACA9+G,KAAA4+G,wBAAA/uG,EACA7P,KAAAqoD,SAAAwB,UACA8jD,oBAAA99F,EAAA3P,KAAA6+G,KAAA/+G,KAAAo+G,YAAAp+G,KAAAw+G,cAOAN,EAAA5/G,UAAA2pD,YAAA,SAAAK,GACA,IAAAtoD,KAAA4xF,WAAAtpC,GACA,SAEA,IAAA1pD,EAAA0pD,EAAA1pD,KACA,GAAAA,IAAqBwnB,EAASuB,OAAA/oB,IAAmBwnB,EAASiB,WAC1D,SAEAihC,EAAAx/B,iBACA,IAOA2gB,EAPAp8B,EAAAi7C,EAAAj7C,IACA2xG,EAA+C12D,EAAA,cAuB/C,GAtBAtoD,KAAAs+G,aACAt+G,KAAAw+G,YAAAl2D,EAAA3zB,YAKA2zB,EAAA1pD,MAAoCwnB,EAASuB,OAC7C8hB,EAAAu1E,EAAAluD,OACgBpC,IAChBswD,EAAAC,YAAAC,WAAAC,kBACA11E,GAAyBqlB,IAEzBkwD,EAAAC,YAAAC,WAAAE,iBACA31E,GAAA,KAGA6e,EAAA1pD,MAAyCwnB,EAASiB,aAClDoiB,GAAAu1E,EAAAK,YACgB1wD,KAChBllB,GAAA,IAGA,IAAAA,EACA,SAGAzpC,KAAAo+G,WAAA30E,EAEA,IAAA2oD,EAAAvlF,KAAAulF,MASA,QARAviF,IAAA7P,KAAAy+G,aACAz+G,KAAAy+G,WAAArsB,KAEApyF,KAAAiwF,OAAAmC,EAAApyF,KAAAy+G,WAAAz+G,KAAA2+G,qBACA3+G,KAAAiwF,MAAA/vF,KAAAg1C,IAAAzL,GAAA,EACgBu0E,GACAA,IAEhBh+G,KAAAiwF,QAA2B+tB,GAAI,CAC/B,IAAA/2D,EAAA55C,EAAAw8C,UAUA,OATA7pD,KAAA4+G,mBACAljG,aAAA1b,KAAA4+G,oBAGA33D,EAAAymD,mBAEA1tG,KAAA4+G,mBAAAjjG,WAAA3b,KAAA8+G,gBAAA5gH,KAAA8B,WAAA2+G,mBACA13D,EAAAimD,YAAAzjE,EAAAzpC,KAAA6+G,sBAAA7+G,KAAAw+G,aACAx+G,KAAAy+G,WAAArsB,GACA,EAEApyF,KAAAm+G,aAAA10E,EACA,IAAA61E,EAAAp/G,KAAAC,IAAAH,KAAAq+G,UAAAjsB,EAAApyF,KAAAy+G,YAAA,GAGA,OAFA/iG,aAAA1b,KAAA0+G,YACA1+G,KAAA0+G,WAAA/iG,WAAA3b,KAAAu/G,iBAAArhH,KAAA8B,KAAAqN,GAAAiyG,IACA,GAMApB,EAAA5/G,UAAAihH,iBAAA,SAAAlyG,GACA,IAAA45C,EAAA55C,EAAAw8C,UACA5C,EAAAS,gBACAT,EAAAU,mBAGQX,GAAWC,GADCz6B,EAAKxsB,KAAAm+G,aAAAn+G,KAAAk6D,UAAAl6D,KAAAk6D,WACNl6D,KAAAw+G,YAAAx+G,KAAAu4G,WACnBv4G,KAAAiwF,WAAApgF,EACA7P,KAAAm+G,YAAA,EACAn+G,KAAAw+G,YAAA,KACAx+G,KAAAy+G,gBAAA5uG,EACA7P,KAAA0+G,gBAAA7uG,GAQAquG,EAAA5/G,UAAAkhH,eAAA,SAAAjB,GACAv+G,KAAAs+G,WAAAC,EACAA,IACAv+G,KAAAw+G,YAAA,OAGAN,EA/LkB,CAgMhBn2D,IC9OE03D,GAAyB,WAC7B,IAAA/2F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAqJdw2F,GAtHA,SAAAt2F,GAKf,SAAAu2F,EAAA5tF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACAw9D,EAAuE,EAmCvE,OAlCAA,EAAAxrB,WACAwrB,EAAAxrB,SAAsCv7C,IAEtCc,EAAAF,EAAAvsB,KAAAmD,KAAAuvF,IAAAvvF,MAKA+mE,QAAA,KAKAz9C,EAAA2xF,gBAAAprG,EAKAyZ,EAAAs2F,WAAA,EAKAt2F,EAAAu2F,eAAA,EAKAv2F,EAAAw2F,gBAAAjwG,IAAA8E,EAAAorG,UAAAprG,EAAAorG,UAAA,GAKAz2F,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IACAv+B,EAyEA,OAnHIm2F,GAASE,EAAAv2F,GA+Cbu2F,EAAArhH,UAAAslE,gBAAA,SAAAtb,GACA,IAAA03D,EAAA,EACAC,EAAAjgH,KAAAkkE,eAAA,GACAg8C,EAAAlgH,KAAAkkE,eAAA,GAEAvqC,EAAAz5B,KAAAwsC,MAAAwzE,EAAA78C,QAAA48C,EAAA58C,QAAA68C,EAAA98C,QAAA68C,EAAA78C,SACA,QAAAvzD,IAAA7P,KAAAi7G,WAAA,CACA,IAAAxxE,EAAA9P,EAAA35B,KAAAi7G,WACAj7G,KAAA6/G,gBAAAp2E,GACAzpC,KAAA4/G,WACA1/G,KAAAg1C,IAAAl1C,KAAA6/G,gBAAA7/G,KAAA8/G,aACA9/G,KAAA4/G,WAAA,GAEAI,EAAAv2E,EAEAzpC,KAAAi7G,WAAAthF,EACA,IAAAtsB,EAAAi7C,EAAAj7C,IACA45C,EAAA55C,EAAAw8C,UACA,GAAA5C,EAAAikD,iBAAA10E,WAA+CovE,GAA/C,CAMA,IAAAuN,EAAA9lG,EAAA88C,cAAAipD,wBACAwH,EAAuBr3C,GAAoBvjE,KAAAkkE,gBAC3C02C,EAAA,IAAAzH,EAAA3wG,KACAo4G,EAAA,IAAAzH,EAAAr9B,IACA91E,KAAA+mE,QAAA15D,EAAA8/C,uBAAAytD,GAEA56G,KAAA4/G,YACAvyG,EAAA6jB,SACA+1B,EAAAkmD,eAAA6S,EAAAhgH,KAAA+mE,YAMA44C,EAAArhH,UAAAwlE,cAAA,SAAAxb,GACA,QAAAtoD,KAAAkkE,eAAAxkE,OAAA,KACA4oD,EAAAj7C,IACAw8C,UACA8jD,eAAA3tG,KAAAu4G,YACA,IASAoH,EAAArhH,UAAAqlE,gBAAA,SAAArb,GACA,GAAAtoD,KAAAkkE,eAAAxkE,QAAA,GACA,IAAA2N,EAAAi7C,EAAAj7C,IAQA,OAPArN,KAAA+mE,QAAA,KACA/mE,KAAAi7G,gBAAAprG,EACA7P,KAAA4/G,WAAA,EACA5/G,KAAA6/G,eAAA,EACA7/G,KAAAgkE,wBACA32D,EAAAw8C,UAAA6jD,oBAEA,EAGA,UAGAiS,EApHe,CAqHbl8C,ICpJE08C,GAAyB,WAC7B,IAAAz3F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAgIdk3F,GApGF,SAAAh3F,GAKb,SAAAi3F,EAAAtuF,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACAw9D,EAAuE,EAyBvE,OAxBAA,EAAAxrB,WACAwrB,EAAAxrB,SAAsCv7C,IAEtCc,EAAAF,EAAAvsB,KAAAmD,KAAAuvF,IAAAvvF,MAKA+mE,QAAA,KAKAz9C,EAAAivF,eAAA1oG,IAAA8E,EAAAkzC,SAAAlzC,EAAAkzC,SAAA,IAKAv+B,EAAAg3F,mBAAAzwG,EAKAyZ,EAAAi3F,gBAAA,EACAj3F,EAiEA,OAjGI62F,GAASE,EAAAj3F,GAqCbi3F,EAAA/hH,UAAAslE,gBAAA,SAAAtb,GACA,IAAAk4D,EAAA,EACAP,EAAAjgH,KAAAkkE,eAAA,GACAg8C,EAAAlgH,KAAAkkE,eAAA,GACAl3C,EAAAizF,EAAA78C,QAAA88C,EAAA98C,QACAn2C,EAAAgzF,EAAA58C,QAAA68C,EAAA78C,QAEAhwB,EAAAnzC,KAAAoF,KAAA0nB,IAAAC,UACApd,IAAA7P,KAAAsgH,gBACAE,EAAAxgH,KAAAsgH,cAAAjtE,GAEArzC,KAAAsgH,cAAAjtE,EACA,IAAAhmC,EAAAi7C,EAAAj7C,IACA45C,EAAA55C,EAAAw8C,UACA,GAAA22D,IACAxgH,KAAAugH,gBAAAC,GAGA,IAAArN,EAAA9lG,EAAA88C,cAAAipD,wBACAwH,EAAuBr3C,GAAoBvjE,KAAAkkE,gBAC3C02C,EAAA,IAAAzH,EAAA3wG,KACAo4G,EAAA,IAAAzH,EAAAr9B,IACA91E,KAAA+mE,QAAA15D,EAAA8/C,uBAAAytD,GAEAvtG,EAAA6jB,SACA+1B,EAAA+lD,iBAAAwT,EAAAxgH,KAAA+mE,UAKAs5C,EAAA/hH,UAAAwlE,cAAA,SAAAxb,GACA,GAAAtoD,KAAAkkE,eAAAxkE,OAAA,GACA,IACAunD,EADAqB,EAAAj7C,IACAw8C,UACAhM,EAAA79C,KAAAugH,gBAAA,OAEA,OADAt5D,EAAA0mD,eAAA3tG,KAAAu4G,UAAA16D,IACA,EAGA,UAMAwiE,EAAA/hH,UAAAqlE,gBAAA,SAAArb,GACA,GAAAtoD,KAAAkkE,eAAAxkE,QAAA,GACA,IAAA2N,EAAAi7C,EAAAj7C,IAOA,OANArN,KAAA+mE,QAAA,KACA/mE,KAAAsgH,mBAAAzwG,EACA7P,KAAAugH,gBAAA,EACAvgH,KAAAgkE,wBACA32D,EAAAw8C,UAAA6jD,oBAEA,EAGA,UAGA2S,EAlGa,CAmGX58C,ICvHF,IAAAg9C,GAAA,WACA,SAAAA,IAKAzgH,KAAA0gH,OAAA,GAKA1gH,KAAA2gH,WAAA,EAKA3gH,KAAA4gH,cAAA,GA8DA,OAzDAH,EAAAniH,UAAAiC,MAAA,WACAP,KAAA0gH,OAAA,GACA1gH,KAAA2gH,WAAA,GAKAF,EAAAniH,UAAAq8B,eAAA,WACA,OAAA36B,KAAA2gH,WAAA3gH,KAAA4gH,eAKAH,EAAAniH,UAAAuiH,OAAA,WACA,GAAA7gH,KAAA26B,iBAAA,CACA,IAAAj+B,EAAA,EACA,QAAAuB,KAAA+B,KAAA0gH,OAAA,CACA,IAAAI,EAAA9gH,KAAA0gH,OAAAziH,GACA,MAAAvB,MAAAokH,EAAA/2F,uBACA/pB,KAAA0gH,OAAAziH,KACA+B,KAAA2gH,eAWAF,EAAAniH,UAAAf,IAAA,SAAAysC,EAAAC,EAAA06B,GACA,IAAA1mE,EAAkB8iH,GAAM/2E,EAAAC,EAAA06B,GACxB,OAAA1mE,KAAA+B,KAAA0gH,OAAA1gH,KAAA0gH,OAAAziH,GAAA,MAQAwiH,EAAAniH,UAAAsP,IAAA,SAAAo8B,EAAAC,EAAA06B,EAAAm8C,GACA,IAAA7iH,EAAkB8iH,GAAM/2E,EAAAC,EAAA06B,GACxB3kE,KAAA0gH,OAAAziH,GAAA6iH,IACA9gH,KAAA2gH,YASAF,EAAAniH,UAAAg9B,QAAA,SAAA0lF,GACAhhH,KAAA4gH,cAAAI,EACAhhH,KAAA6gH,UAEAJ,EA9EA,GAsFA,SAASM,GAAM/2E,EAAAC,EAAA06B,GAEf,OAAA16B,EAAA,IAAAD,EAAA,KADA26B,E3E9DO,SAAAA,GACP,uBAAAA,EACAA,EAGeC,GAAQD,G2EyDOs8C,CAAQt8C,GAAA,QAGvB,IAMRu8C,GAAA,IAAAT,GCxGHU,GAAyB,WAC7B,IAAAz4F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAwQ7B,SAAAk4F,GAAA/zG,EAAA8jB,GACI+vF,GAAcL,SAYH,IAAAQ,GAzPA,SAAAj4F,GAKf,SAAAk4F,EAAAj0G,GACA,IAAAic,EAAAF,EAAAvsB,KAAAmD,YAgBA,OAXAspB,EAAA4+B,KAAA76C,EAKAic,EAAAi4F,gBAAA,GAKAj4F,EAAAk4F,wBAAA,GACAl4F,EAgNA,OArOI63F,GAASG,EAAAl4F,GA4Bbk4F,EAAAhjH,UAAA81G,oBAAA,SAAAx1G,EAAAuyB,GACQvJ,KAMR05F,EAAAhjH,UAAAmjH,oBAAA,SAAAtwF,GACA,IAAAkQ,EAAAlQ,EAAAkQ,UACAK,EAAAvQ,EAAAuQ,2BACA6xE,EAAApiF,EAAAoiF,2BACQj6E,GAAgBoI,EAAAvQ,EAAAsF,KAAA,KAAAtF,EAAAsF,KAAA,OAAA4K,EAAAlR,YAAA,EAAAkR,EAAAlR,YAAAkR,EAAA7K,UAAA6K,EAAA9K,OAAA,IAAA8K,EAAA9K,OAAA,IAChBuD,GAAWy5E,EAAA7xE,IAKnB4/E,EAAAhjH,UAAAi2G,qBAAA,WACA,QAAAt2G,KAAA+B,KAAAuhH,gBACAvhH,KAAA0hH,0BAAAzjH,GAAAoqB,WAkBAi5F,EAAAhjH,UAAAyhC,2BAAA,SAAApL,EAAAxD,EAAA6O,EAAA33B,EAAAmV,EAAAs1F,EAAA6O,GACA,IAAAv+G,EACAi+B,EAAAlQ,EAAAkQ,UACAqC,EAAArC,EAAAlR,WAOA,SAAA4P,EAAAzR,EAAAy8C,EAAA18C,GACA,KAAkBvG,EAAMijD,KAAA55C,EAAA60D,qBAAA13D,EACxB,OAAAjmB,EAAAxL,KAAA2gB,EAAAutD,EAAAz8C,EAAAD,EAAA,MAGA,IAAAwR,EAAAwB,EAAAxB,WACA+hF,EAAAjtF,EACA,GAAAkL,EAAAyO,WAAA,CACA,IAAA0U,EAAAnjB,EAAAjR,YACAq0B,EAA6BnwB,GAAQkwB,GACrCz5C,EAAAorB,EAAA,GACA,GAAAprB,EAAAy5C,EAAA,IAAAz5C,EAAAy5C,EAAA,GAEA4+D,EAAA,CAAAr4G,EAAA05C,EADA/iD,KAAAG,MAAA2iD,EAAA,GAAAz5C,GAAA05C,GACAtuB,EAAA,IAGA,IAEAj4B,EAFAmlH,EAAA1wF,EAAAM,iBAGA,IAAA/0B,EAFAmlH,EAAAniH,OAEA,EAA+BhD,GAAA,IAAQA,EAAA,CACvC,IAAAwzB,EAAA2xF,EAAAnlH,GACA2xB,EAAuE6B,EAAA,MACvE,GAAgBD,GAAmBC,EAAAwT,IAAAovE,EAAAj2G,KAAA8kH,EAAAtzF,GAAA,CACnC,IAAA+C,EAAApxB,KAAA8hH,iBAAAzzF,GACAlvB,EAAAkvB,EAAA0C,YACA,GAAAK,GAAAjyB,EAAA,CACA,IAAA4iH,EAAAhiF,EAAA7hC,KAAA,KAAAgyB,EAAA5B,SACAlrB,EAAAguB,EAAA2O,2BAAA5gC,EAAAm+C,WAAAskE,EAAAjtF,EAAAxD,EAAA6O,EAAA+hF,GAEA,GAAA3+G,EACA,OAAAA,KAoBAk+G,EAAAhjH,UAAA00G,oBAAA,SAAA9yE,EAAA/O,EAAA6O,EAAA33B,EAAAyqG,GACA,OAAelrF,KAcf05F,EAAAhjH,UAAAgiC,uBAAA,SAAA3L,EAAAxD,EAAA6O,EAAA8yE,EAAAt1F,GAEA,YAAA3N,IADA7P,KAAA+/B,2BAAApL,EAAAxD,EAAA6O,EAA+FzX,EAAIvoB,KAAA8yG,EAAAt1F,IAQnG8jG,EAAAhjH,UAAAwjH,iBAAA,SAAAzzF,GACA,IAAA2zF,EAAuBl6F,EAAMuG,GAC7B,GAAA2zF,KAAAhiH,KAAAuhH,gBACA,OAAAvhH,KAAAuhH,gBAAAS,GAEA,IAAA33C,EAAAh8C,EAAAgD,cACA,OAAAg5C,GAGArqE,KAAAuhH,gBAAAS,GAAA33C,EACArqE,KAAAwhH,wBAAAQ,GAAiDp8F,EAAMykD,EAAWjkD,EAASC,OAAArmB,KAAAiiH,2BAAAjiH,MAC3EqqE,GAJA,MAUAi3C,EAAAhjH,UAAA4jH,kBAAA,WACA,OAAAliH,KAAAuhH,iBAKAD,EAAAhjH,UAAA+pD,OAAA,WACA,OAAAroD,KAAAkoD,MAMAo5D,EAAAhjH,UAAA2jH,2BAAA,WACAjiH,KAAAkoD,KAAAh3B,UAOAowF,EAAAhjH,UAAAojH,0BAAA,SAAAM,GACA,IAAA5wF,EAAApxB,KAAAuhH,gBAAAS,GAIA,cAHAhiH,KAAAuhH,gBAAAS,GACQh8F,EAAahmB,KAAAwhH,wBAAAQ,WACrBhiH,KAAAwhH,wBAAAQ,GACA5wF,GAOAkwF,EAAAhjH,UAAAizB,YAAA,SAAAJ,GACQvJ,KAMR05F,EAAAhjH,UAAA6jH,wBAAA,SAAAhxF,GACY+vF,GAAcvmF,kBAC1BxJ,EAAAwW,oBAAA7kC,KAAAs+G,KAOAE,EAAAhjH,UAAA8jH,mCAAA,SAAAjxF,GACA,IAAAkxF,EAAAlxF,EAAAM,iBA2BAnkB,OAAA,SAAAg1G,EAAAlmG,GAEA,OADAkmG,EAAYx6F,EAAM1L,EAAAiS,QAAAjS,EAClBkmG,GACK,IA7BL3zB,EAAA,SAAAqzB,GACAA,KAAAK,GACAlxF,EAAAwW,oBAAA7kC,KAAA,WACA9C,KAAA0hH,0BAAAM,GAAA35F,WACiBnqB,KAAA2wF,KAGjBA,EAAA7uF,KACA,QAAAgiH,KAAAhiH,KAAAuhH,gBACA5yB,EAAAqzB,IAGAV,EAtOe,CAuObp5F,GCnQEq6F,GAAyB,WAC7B,IAAA75F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA4Ids5F,GAhHS,SAAAp5F,GAKxB,SAAAq5F,EAAAp1G,GACA,IAAAic,EAAAF,EAAAvsB,KAAAmD,KAAAqN,IAAArN,KAKAspB,EAAA61E,SAAAlpF,SAAAmC,cAAA,OACA,IAAA1M,EAAA4d,EAAA61E,SAAAzzF,MACAA,EAAAqyB,SAAA,WACAryB,EAAAmsB,MAAA,OACAnsB,EAAArJ,OAAA,OACAqJ,EAAAmiB,OAAA,IACAvE,EAAA61E,SAAAlxE,UAAmC8K,GAAkB,aACrD,IAAAsnE,EAAAhzF,EAAA88C,cAYA,OAXAk2C,EAAAzoF,aAAA0R,EAAA61E,SAAAkB,EAAAvoF,YAAA,MAKAwR,EAAAo5F,UAAA,GAKAp5F,EAAA2tF,kBAAA,EACA3tF,EAgFA,OA7GIi5F,GAASE,EAAAr5F,GAmCbq5F,EAAAnkH,UAAA81G,oBAAA,SAAAx1G,EAAAuyB,GACA,IAAA9jB,EAAArN,KAAAqoD,SACA,GAAAh7C,EAAA0c,YAAAnrB,GAAA,CACA,IAAAsjC,EAAA,IAA8B7J,GAAWz5B,OAAAiR,EAAAshB,GACzC9jB,EAAAqc,cAAAwY,KAMAugF,EAAAnkH,UAAAizB,YAAA,SAAAJ,GACA,GAAAA,EAAA,CAOAnxB,KAAAyhH,oBAAAtwF,GACAnxB,KAAAo0G,oBAAiCzkF,EAAewB,GAChD,IAAAM,EAAAN,EAAAM,iBACAiS,EAAAvS,EAAAkQ,UAAAlR,WACAnwB,KAAA0iH,UAAAhjH,OAAA,EACA,QAAAhD,EAAA,EAAA+C,EAAAgyB,EAAA/xB,OAAqDhD,EAAA+C,IAAQ/C,EAAA,CAC7D,IAAAwzB,EAAAuB,EAAA/0B,GACA,GAAiBuzB,GAAmBC,EAAAwT,IAAAxT,EAAA1B,aAA0DoB,GAAWG,MAAzG,CAGA,IACAg4D,EADA73D,EAAA7B,MACA6C,OAAAC,GACA,GAAA42D,EAAA,CACA,IAAAl6D,EAAAqC,EAAArC,OACAA,IAAAk6D,EAAAr8E,MAAAmiB,SACAk6D,EAAAr8E,MAAAmiB,UAEA7tB,KAAA0iH,UAAA5/G,KAAAilF,M/JrBO,SAAAjnF,EAAAG,GAEP,IADA,IAAA0hH,EAAA7hH,EAAAyZ,WACA7d,EAAA,KAAyBA,EAAA,CACzB,IAAAkmH,EAAAD,EAAAjmH,GACAmmH,EAAA5hH,EAAAvE,GAEA,IAAAkmH,IAAAC,EACA,MAGAD,IAAAC,IAIAD,EAKAC,EAMA/hH,EAAA8W,aAAAirG,EAAAD,IALA9hH,EAAAoX,YAAA0qG,KACAlmH,GANAoE,EAAA+W,YAAAgrG,K+JSQC,CAAe9iH,KAAAm/F,SAAAn/F,KAAA0iH,WACvB1iH,KAAAo0G,oBAAiCzkF,EAAewB,GAChDnxB,KAAAi3G,mBACAj3G,KAAAm/F,SAAAzzF,MAAA6rG,QAAA,GACAv3G,KAAAi3G,kBAAA,GAEAj3G,KAAAoiH,mCAAAjxF,GACAnxB,KAAAmiH,wBAAAhxF,QAjCAnxB,KAAAi3G,mBACAj3G,KAAAm/F,SAAAzzF,MAAA6rG,QAAA,OACAv3G,KAAAi3G,kBAAA,IAoCAwL,EAAAnkH,UAAA00G,oBAAA,SAAA9yE,EAAA/O,EAAA6O,EAAA33B,EAAAyqG,GAKA,IAJA,IACApvE,EADAvS,EAAAkQ,UACAlR,WACA0xF,EAAA1wF,EAAAM,iBAEA/0B,EADAmlH,EAAAniH,OACA,EAAmChD,GAAA,IAAQA,EAAA,CAC3C,IAAAwzB,EAAA2xF,EAAAnlH,GACA2xB,EAAA6B,EAAA7B,MACA,GAAgB4B,GAAmBC,EAAAwT,IAAAovE,EAAAzkF,GAAA,CACnC,IAAA+C,EAAApxB,KAAA8hH,iBAAAzzF,GACA,IAAA+C,EACA,SAEA,IAAAnuB,EAAAmuB,EAAA6O,eAAAC,EAAA/O,EAAA6O,GACA,GAAA/8B,EAAA,CACA,IAAAG,EAAAiF,EAAAgmB,EAAAprB,GACA,GAAAG,EACA,OAAAA,MAOAq/G,EA9GwB,CA+GtBpB,IC3IE0B,GAAyB,WAC7B,IAAAr6F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA0Fd85F,GAtBR,SAAA55F,GAKP,SAAA65F,EAAAtuG,GAUA,OARAA,EAAkB6P,EAAM,GAAG7P,IAC3B46F,WACA56F,EAAA46F,SCxCO,SAAAx9E,GACP,IAAApd,EAAAod,GAAA,GACAw9E,EAAA,IAAuBvnB,GAcvB,YAbAn4E,IAAA8E,EAAA+qB,MAAA/qB,EAAA+qB,OAEA6vE,EAAAzsG,KAAA,IAA0B61G,GAAIhkG,EAAAuuG,oBAE9BrzG,IAAA8E,EAAA6pB,QAAA7pB,EAAA6pB,SAEA+wE,EAAAzsG,KAAA,IAA0Bq1G,GAAMxjG,EAAAwuG,sBAEhCtzG,IAAA8E,EAAAyuG,aACAzuG,EAAAyuG,cAEA7T,EAAAzsG,KAAA,IAA0BkzG,GAAWrhG,EAAA0uG,qBAErC9T,EDwB+BznG,IAE/B6M,EAAA66F,eACA76F,EAAA66F,aECO,SAAiBz9E,GACxB,IAAApd,EAAAod,GAAA,GACAy9E,EAAA,IAA2BxnB,GAC3BuyB,EAAA,IAAsBnB,IAAO,cAuD7B,YAtDAvpG,IAAA8E,EAAA2uG,oBACA3uG,EAAA2uG,qBAEA9T,EAAA1sG,KAAA,IAA8Bi4G,UAE9BlrG,IAAA8E,EAAA4uG,iBACA5uG,EAAA4uG,kBAEA/T,EAAA1sG,KAAA,IAA8Bm3G,GAAe,CAC7CxwE,MAAA90B,EAAA6uG,UACA37D,SAAAlzC,EAAA8uG,sBAGA5zG,IAAA8E,EAAA+uG,SAAA/uG,EAAA+uG,UAEAlU,EAAA1sG,KAAA,IAA8Bs3G,GAAO,CACrCvoB,UAAAl9E,EAAAgvG,YAA6Cl0D,QAAK5/C,EAClD0qG,mBAGA1qG,IAAA8E,EAAAivG,aAAAjvG,EAAAivG,cAGApU,EAAA1sG,KAAA,IAA8B48G,UAE9B7vG,IAAA8E,EAAAkvG,WAAAlvG,EAAAkvG,YAEArU,EAAA1sG,KAAA,IAA8Bs9G,GAAS,CACvCv4D,SAAAlzC,EAAA8uG,sBAGA5zG,IAAA8E,EAAAmvG,UAAAnvG,EAAAmvG,YAEAtU,EAAA1sG,KAAA,IAA8By6G,IAC9B/N,EAAA1sG,KAAA,IAA8B+6G,GAAY,CAC1Cp0E,MAAA90B,EAAA6uG,UACA37D,SAAAlzC,EAAA8uG,uBAGA5zG,IAAA8E,EAAAovG,gBACApvG,EAAAovG,iBAEAvU,EAAA1sG,KAAA,IAA8Bm7G,GAAc,CAC5CpsB,UAAAl9E,EAAAgvG,YAA6Cl0D,QAAK5/C,EAClDg4C,SAAAlzC,EAAA8uG,sBAGA5zG,IAAA8E,EAAAqvG,eACArvG,EAAAqvG,gBAEAxU,EAAA1sG,KAAA,IAA8B85G,GAAQ,CACtC/0D,SAAAlzC,EAAA8uG,gBAGAjU,EF3DmCyU,IAEnC76F,EAAAvsB,KAAAmD,KAAA2U,IAAA3U,KAMA,OAnBI+iH,GAASE,EAAA75F,GAgBb65F,EAAA3kH,UAAAozB,eAAA,WACA,WAAmB8wF,GAAoBxiH,OAEvCijH,EApBO,CAqBL/T,IGzFEgV,GAAyB,WAC7B,IAAAx7F,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GA+C7Bi7F,GAAA,EAIAC,GAMA,cANAA,GAYA,YA8CAC,GAAA,SAAAj7F,GASA,SAAAi7F,EAAAzlH,EAAAiqD,EAAAy7D,GACA,IAAAh7F,EAAAF,EAAAvsB,KAAAmD,KAAApB,IAAAoB,KAaA,OAPAspB,EAAAu/B,WAMAv/B,EAAAg/B,gBAAAg8D,EACAh7F,EAEA,OAxBI46F,GAASG,EAAAj7F,GAwBbi7F,EAzBA,CA0BE17F,GAi9BF,SAAA47F,GAAA3iH,EAAAC,GACA,OAAAD,EAAAsC,MAAArC,EAAAqC,MAWA,SAAAsgH,GAAAC,EAAAC,GACA,IAAAz5D,EAAAy5D,EAAAz5D,SACA,GAAAA,EAAAqH,YAA+BhnB,GAAYS,OAAA,CAC3C,IAAAghC,EAA4E,EAC5E,GAAA23C,EAAAxgH,QAAAigH,GAAA,CACA,IAAAQ,EAA0Cz2D,GAAyB6e,EAAA52C,YAAAsuF,GACnEG,EAAA1kH,KAAAoF,KAAAq/G,GAAA53C,EAAA/X,YACA,OAAA4vD,KAGA,OAAWt2D,GAAwBm2D,EAAAC,EAAAh3D,SAWnC,SAAAm3D,GAAAJ,EAAAC,GACA,IAAAz5D,EAAAy5D,EAAAz5D,SACA,OAAAA,EAAAqH,YAA+BhnB,GAAYS,QAC3C24E,EAAAxgH,QAAAigH,GACAl5D,EAAA2G,gBAAA6yD,GAEWh3D,GAAgBg3D,EAAAC,EAAAh3D,SAWZ,IAAAo3D,GAl/BL,SAAA17F,GAKV,SAAA27F,EAAApwG,GACA,IAu+BAjJ,EA/2BAm9C,EAxHAv/B,EAAAF,EAAAvsB,KAAAmD,KAAgF,IAAAA,KAkIhF,GA7HAspB,EAAAsoE,WAAAj9E,EAAAk9E,UAAAl9E,EAAAk9E,UAAmEvhC,GAMnEhnC,EAAA07F,wBAAA,SAAA18D,GACA,OAAmB6G,GAAU7G,IAAqByH,GAAWzH,IAM7Dh/B,EAAA27F,iBAAAtwG,EAAAuwG,gBACAvwG,EAAAuwG,gBAAA57F,EAAA07F,wBAKA17F,EAAA67F,uBAAAxwG,EAAAywG,sBACAzwG,EAAAywG,sBAA4Cx1D,GAM5CtmC,EAAA+7F,eAAA,KAMA/7F,EAAAg8F,gBAAA,KAKAh8F,EAAAi8F,WAAA,MAOAj8F,EAAAk8F,wBAAA,EAKAl8F,EAAAm8F,WAAA,EAMAn8F,EAAAo8F,OAAA,IAA2Bp7B,GAK3BhhE,EAAAq8F,qBAAA91G,IAAA8E,EAAAixG,eACAjxG,EAAAixG,eAAA,GAKAt8F,EAAAu8F,kBAAA,EAOAv8F,EAAAw8F,kBAAA,EAKAx8F,EAAAy8F,cAAA,GAMAz8F,EAAAooE,SAAA,IAA6BrK,GAAW,CACxCloF,OAAA,IAAwBgsF,GAAY,CACpCS,iBAAA,EACA3uC,QAAAtoC,EAAAsoC,QAEAvxC,MAAAiJ,EAAAjJ,MAAAiJ,EAAAjJ,OAy4BAA,EAAgBw/D,KAChB,SAAAH,EAAA56C,GACA,OAAAzkB,EAAqB4/B,GAAYC,SAz4BjCkgC,sBAAA,EACAC,wBAAA,IAOApiD,EAAA08F,iBAAA,CACAnqD,MAAAvyC,EAAA28F,oBACAlsD,WAAAzwC,EAAA48F,yBACAxpD,WAAApzC,EAAA48F,yBACAtoD,QAAAt0C,EAAA68F,sBACAnqD,WAAA1yC,EAAA88F,yBACAvrD,gBAAAvxC,EAAA+8F,8BACA7mD,aAAAl2C,EAAAg9F,2BACAzxD,OAAAvrC,EAAAi9F,qBACAtiC,mBAAA36D,EAAAk9F,kCAMAl9F,EAAAsgC,QAAA,KAEAj1C,EAAAxV,QACAmqB,EAAAsgC,QAAAj1C,EAAAxV,OACA0pD,EAAA,IAA2Bm/B,GAAU1+D,EAAAsgC,QAAA+jC,eACzB/nE,EAAM0D,EAAAsgC,QAAgBsgC,GAAeC,WAAA7gE,EAAAm9F,iBAAAn9F,GACrC1D,EAAM0D,EAAAsgC,QAAgBsgC,GAAeG,cAAA/gE,EAAAo9F,oBAAAp9F,IAGjDu/B,EAAAl0C,EAAAk0C,UAEAA,EACA,UAAAz+C,MAAA,wDAeA,OATAkf,EAAAumE,UAAAhnC,EACAv/B,EAAAumE,UAAAxjF,QAAAid,EAAAq9F,YAAAzoH,KAAAorB,IACQ1D,EAAM0D,EAAAumE,UAAkBtI,GAAmBC,IAAAl+D,EAAAs9F,kBAAAt9F,GAC3C1D,EAAM0D,EAAAumE,UAAkBtI,GAAmBE,OAAAn+D,EAAAu9F,qBAAAv9F,GAKnDA,EAAAw9F,kBAAA,KACAx9F,EAiyBA,OAx7BI46F,GAASa,EAAA37F,GA6Jb27F,EAAAzmH,UAAAqoH,YAAA,SAAA57C,GACA,IAAA9f,EAAA8f,EAAA1f,cACAJ,KAAAqH,YAAAtyD,KAAAgmH,kBACAhmH,KAAAgmH,iBAAA/6D,EAAAqH,WAAAz1D,KAAAmD,KAAA+qE,EAAA9f,GAEA,IAAA59C,EAAArN,KAAAqoD,SACAh7C,KAAAonG,cAAAz0G,KAAAooD,aACApoD,KAAA+mH,sBAAA/mH,KAAAulH,WAAAl4G,GAEQuY,EAAMmlD,EAAU3kD,EAASC,OAAArmB,KAAA2sF,qBAAA3sF,OAMjC+kH,EAAAzmH,UAAA0oH,oBAAA,SAAAjhG,GACA/lB,KAAAylH,YACAzlH,KAAAylH,WAAA,EACAzlH,KAAA0pB,cAAA,IAAA26F,GAAAD,GAAApkH,KAAA6vF,UAAA9pE,MAOAg/F,EAAAzmH,UAAA2oH,eAAA,SAAAl8C,GACA/qE,KAAAknH,0BAAAn8C,GAGA/qE,KAAAqlH,gBAAA,IAAArlH,KAAA6vF,UAAAp1B,cACAz6D,KAAA0xF,SAAA3gE,YAAAm8D,cAAAltF,KAAAqlH,gBACArlH,KAAAqlH,eAAA,MAEQl/F,EAAQ4kD,EAAU3kD,EAASC,OAAArmB,KAAA2sF,qBAAA3sF,OAMnC+kH,EAAAzmH,UAAA4oH,0BAAA,SAAAn8C,GACA,IAAAo8C,EAAAnnH,KAAA0lH,OAC0C0B,EAAA,GAC1CD,EAAA96G,QAIA,SAAAvL,GACAiqE,IAAAjqE,EAAAiqE,SACAq8C,EAAAtkH,KAAAhC,KAGA,QAAApE,EAAA0qH,EAAA1nH,OAAA,EAA8ChD,GAAA,IAAQA,EAAA,CAEtD,IADA,IAAA2qH,EAAAD,EAAA1qH,GACAuI,EAAAjF,KAAA+lH,cAAArmH,OAAA,EAAuDuF,GAAA,IAAQA,EAC/DjF,KAAA+lH,cAAA9gH,GAAA,KAAAoiH,GACArnH,KAAA+lH,cAAAzhH,OAAAW,EAAA,GAGAkiH,EAAAnjH,OAAAqjH,KAMAtC,EAAAzmH,UAAA6pD,UAAA,SAAAI,GACAvoD,KAAAqlH,iBAAA98D,IACAvoD,KAAA0xF,SAAA3gE,YAAAm8D,cAAAltF,KAAAqlH,gBACArlH,KAAAqlH,eAAA,MAEAj8F,EAAA9qB,UAAA6pD,UAAAtrD,KAAAmD,KAAAuoD,IAKAw8D,EAAAzmH,UAAAqyB,OAAA,SAAAtjB,GACArN,KAAA0xF,SAAA/gE,OAAAtjB,GACA+b,EAAA9qB,UAAAqyB,OAAA9zB,KAAAmD,KAAAqN,IAOA03G,EAAAzmH,UAAA4zF,WAAA,WACA,OAAAlyF,KAAA0xF,UAMAqzB,EAAAzmH,UAAAmoH,iBAAA,SAAA98F,GACAA,EAAAohD,SACA/qE,KAAA6vF,UAAA/sF,KAAA6mB,EAAAohD,UAOAg6C,EAAAzmH,UAAAooH,oBAAA,SAAA/8F,GACAA,EAAAohD,SACA/qE,KAAA6vF,UAAA7rF,OAAA2lB,EAAAohD,UAOAg6C,EAAAzmH,UAAAsoH,kBAAA,SAAA7gG,GACA/lB,KAAA2mH,YAA4C5gG,EAAA,UAM5Cg/F,EAAAzmH,UAAAquF,qBAAA,SAAA5mE,GACA,IAAA/lB,KAAA8lH,iBAAA,CACA,IAAA/6C,EAA6ChlD,EAAA,OAC7C/lB,KAAAinH,eAAAl8C,GACA/qE,KAAA2mH,YAAA57C,KAOAg6C,EAAAzmH,UAAAuoH,qBAAA,SAAA9gG,GACA,IAAAglD,EAAyChlD,EAAA,QACzC/lB,KAAAinH,eAAAl8C,IAOAg6C,EAAAzmH,UAAA2nH,oBAAA,SAAAl7C,EAAA9f,GACA,IAAA92B,EAAA82B,EAAAqI,iBACAoxD,EAAiD,CACjD35C,UACA9f,WACAyC,QAAA,CAAAv5B,MAEAn0B,KAAA0lH,OAAAhiH,OAAAunD,EAAAr8B,YAAA81F,IAOAK,EAAAzmH,UAAA8nH,yBAAA,SAAAr7C,EAAA9f,GAEA,IADA,IAAAmR,EAAAnR,EAAAqI,iBACA52D,EAAA,EAAA+C,EAAA28D,EAAA18D,OAA2ChD,EAAA+C,IAAQ/C,EAAA,CACnD,IAAAy3B,EAAAioC,EAAA1/D,GACAgoH,EAAqD,CACrD35C,UACA9f,WACAjgD,MAAA,CAAAtO,GACAwH,MAAAxH,EACAgxD,QAAA,CAAAv5B,MAEAn0B,KAAA0lH,OAAAhiH,OAAAunD,EAAAr8B,YAAA81F,KAQAK,EAAAzmH,UAAA4nH,yBAAA,SAAAn7C,EAAA9f,GAEA,IADA,IAAA92B,EAAA82B,EAAAqI,iBACA52D,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAAoDhD,EAAA+C,IAAQ/C,EAAA,CAC5D,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAqD,CACrD35C,UACA9f,WACA/mD,MAAAxH,EACAgxD,WAEA1tD,KAAA0lH,OAAAhiH,OAA+BwwB,GAAcw5B,GAAAg3D,KAQ7CK,EAAAzmH,UAAA+nH,8BAAA,SAAAt7C,EAAA9f,GAEA,IADA,IAAAqyB,EAAAryB,EAAAqI,iBACAruD,EAAA,EAAA86C,EAAAu9B,EAAA59E,OAA0CuF,EAAA86C,IAAQ96C,EAElD,IADA,IAAAkvB,EAAAmpD,EAAAr4E,GACAvI,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAAwDhD,EAAA+C,IAAQ/C,EAAA,CAChE,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAyD,CACzD35C,UACA9f,WACAjgD,MAAA,CAAA/F,GACAf,MAAAxH,EACAgxD,WAEA1tD,KAAA0lH,OAAAhiH,OAAmCwwB,GAAcw5B,GAAAg3D,KASjDK,EAAAzmH,UAAA6nH,sBAAA,SAAAp7C,EAAA9f,GAEA,IADA,IAAAq8D,EAAAr8D,EAAAqI,iBACAruD,EAAA,EAAA86C,EAAAunE,EAAA5nH,OAA0CuF,EAAA86C,IAAQ96C,EAElD,IADA,IAAAkvB,EAAAmzF,EAAAriH,GACAvI,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAAwDhD,EAAA+C,IAAQ/C,EAAA,CAChE,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAyD,CACzD35C,UACA9f,WACAjgD,MAAA,CAAA/F,GACAf,MAAAxH,EACAgxD,WAEA1tD,KAAA0lH,OAAAhiH,OAAmCwwB,GAAcw5B,GAAAg3D,KASjDK,EAAAzmH,UAAAgoH,2BAAA,SAAAv7C,EAAA9f,GAEA,IADA,IAAA4U,EAAA5U,EAAAqI,iBACApyD,EAAA,EAAAqmH,EAAA1nD,EAAAngE,OAA6CwB,EAAAqmH,IAAQrmH,EAErD,IADA,IAAAomH,EAAAznD,EAAA3+D,GACA+D,EAAA,EAAA86C,EAAAunE,EAAA5nH,OAA8CuF,EAAA86C,IAAQ96C,EAEtD,IADA,IAAAkvB,EAAAmzF,EAAAriH,GACAvI,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAA4DhD,EAAA+C,IAAQ/C,EAAA,CACpE,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAA6D,CAC7D35C,UACA9f,WACAjgD,MAAA,CAAA/F,EAAA/D,GACAgD,MAAAxH,EACAgxD,WAEA1tD,KAAA0lH,OAAAhiH,OAAuCwwB,GAAcw5B,GAAAg3D,KAgBrDK,EAAAzmH,UAAAioH,qBAAA,SAAAx7C,EAAA9f,GACA,IAAA92B,EAAA82B,EAAA90B,YACAqxF,EAAuD,CACvDz8C,UACA9f,WACA/mD,MAvhBA,EAwhBAwpD,QAAA,CAAAv5B,MAEAszF,EAA8D,CAC9D18C,UACA9f,WACA/mD,MAAAigH,GACAz2D,QAAA,CAAAv5B,MAEAuzF,EAAA,CAAAF,EAAAC,GACAD,EAAAE,gBAAAD,EAAAC,kBACA1nH,KAAA0lH,OAAAhiH,OAA2ByxB,GAA4BhB,GAAAqzF,GACvDxnH,KAAA0lH,OAAAhiH,OAAAunD,EAAAr8B,YAAA64F,IAOA1C,EAAAzmH,UAAAkoH,iCAAA,SAAAz7C,EAAA9f,GAEA,IADA,IAAAk5B,EAAAl5B,EAAAm5B,qBACA1nF,EAAA,EAAuBA,EAAAynF,EAAAzkF,SAAuBhD,EAC9CsD,KAAAgmH,iBAAA7hC,EAAAznF,GAAA41D,WAAAz1D,KAAAmD,KAAA+qE,EAAAoZ,EAAAznF,KAQAqoH,EAAAzmH,UAAAqpH,6BAAA,SAAAxzF,GACA,IAAAyzF,EAAA5nH,KAAAqlH,eACAuC,EAM4CA,EAAAv8D,cAC5C0I,eAAA5/B,IANAyzF,EAAA,IAAgCr9D,GAAO,IAAKqR,GAAKznC,IACjDn0B,KAAAqlH,eAAAuC,EACA5nH,KAAA0xF,SAAA3gE,YAAAu7D,WAAAs7B,IAMA,OAAAA,GAMA7C,EAAAzmH,UAAA2pD,YAAA,SAAAK,GACA,OAAyE,iBAGzEtoD,KAAA8mH,kBAAAx+D,EAEAA,EAAAj7C,IAAAw8C,UAAAmgD,kBACA1hD,EAAA1pD,MAAoCktD,GAAmBG,aACvDjsD,KAAAgkE,wBACAhkE,KAAAsyF,mBAAAhqC,GAEAtoD,KAAAqlH,gBAAArlH,KAAAilH,iBAAA38D,KAKAgc,IAJAhc,EAAA1pD,MAAwCktD,GAAmBC,cAAA/rD,KAAAwlH,yBAC3DxlH,KAAA6nH,eAMAv/D,EAAA1pD,MAAoCktD,GAAmBC,cACvD/rD,KAAAwlH,wBAAA,GAEAp8F,EAAA9qB,UAAA2pD,YAAAprD,KAAAmD,KAAAsoD,KAAAgc,GAjBA,IAAAA,GAsBAygD,EAAAzmH,UAAAslE,gBAAA,SAAA79C,GACA/lB,KAAAwlH,wBAAA,EACAxlH,KAAAgnH,oBAAAjhG,GAEA,IADA,IAAA+hG,EAAA/hG,EAAA4O,WACAj4B,EAAA,EAAA+C,EAAAO,KAAA+lH,cAAArmH,OAAuDhD,EAAA+C,IAAQ/C,EAAA,CAQ/D,IAPA,IAAAqrH,EAAA/nH,KAAA+lH,cAAArpH,GACAgoH,EAAAqD,EAAA,GACA/8G,EAAA05G,EAAA15G,MACAigD,EAAAy5D,EAAAz5D,SACA92B,OAAA,EACAu5B,EAAAg3D,EAAAh3D,QACAxpD,EAAA6jH,EAAA,GACAD,EAAApoH,OAAAurD,EAAA4I,aACAi0D,EAAAhlH,KAAA4qD,EAAAxpD,GAAA4jH,EAAApoH,SAEA,OAAAurD,EAAAqH,WACA,KAAqBhnB,GAAYC,MACjCpX,EAAA2zF,EACAp6D,EAAA,GAAAA,EAAA,GAAAo6D,EACA,MACA,KAAqBx8E,GAAYK,aACjCxX,EAAA82B,EAAAqI,kBACAoxD,EAAAxgH,OAAA4jH,EACAp6D,EAAA,GAAAA,EAAA,GAAAo6D,EACA,MACA,KAAqBx8E,GAAYE,aACjCrX,EAAA82B,EAAAqI,kBACAoxD,EAAAxgH,SAAA4jH,EACAp6D,EAAAxpD,GAAA4jH,EACA,MACA,KAAqBx8E,GAAYM,kBAKjC,KAAqBN,GAAYI,SACjCvX,EAAA82B,EAAAqI,kBACAtoD,EAAA,IAAA05G,EAAAxgH,SAAA4jH,EACAp6D,EAAAxpD,GAAA4jH,EACA,MACA,KAAqBx8E,GAAYO,eACjC1X,EAAA82B,EAAAqI,kBACAtoD,EAAA,IAAAA,EAAA,IAAA05G,EAAAxgH,SAAA4jH,EACAp6D,EAAAxpD,GAAA4jH,EACA,MACA,KAAqBx8E,GAAYS,OACjC2hB,EAAA,GAAAA,EAAA,GAAAo6D,EA/oBA,IAgpBApD,EAAAxgH,OACAlE,KAAA8lH,kBAAA,EACA76D,EAAAiK,UAAA4yD,GACA9nH,KAAA8lH,kBAAA,IAGA9lH,KAAA8lH,kBAAA,EACA76D,EAAAkK,UAA2C9G,GAAkBpD,EAAA90B,YAAA2xF,IAC7D9nH,KAAA8lH,kBAAA,GAMA3xF,GACAn0B,KAAAgoH,wBAAA/8D,EAAA92B,GAGAn0B,KAAA2nH,6BAAAG,IAKA/C,EAAAzmH,UAAAqlE,gBAAA,SAAA59C,GACA,IAAA/lB,KAAA4xF,WAAA7rE,GACA,SAEA/lB,KAAA+mH,sBAAAhhG,EAAAma,MAAAna,EAAA1Y,KACA,IAAA46G,EAAAliG,EAAA1Y,IAAA8/C,uBAAApnC,EAAAma,OACAlgC,KAAA+lH,cAAArmH,OAAA,EACAM,KAAAylH,WAAA,EACA,IAAAmC,EAAA5nH,KAAAqlH,eACA,GAAAuC,EAAA,CACA,IAAAM,EAAA,GAEAJ,EAD4CF,EAAAv8D,cAC5CiI,iBACA60D,EAA+Bj0F,GAAc,CAAA4zF,IAC7CM,EAAApoH,KAAA0lH,OAAA76B,YAAAs9B,GACAE,EAAA,GACAD,EAAAzhH,KAAA49G,IACA,QAAA7nH,EAAA,EAAA+C,EAAA2oH,EAAA1oH,OAA2DhD,EAAA+C,IAAQ/C,EAAA,CACnE,IAAA4rH,EAAAF,EAAA1rH,GACAgxD,EAAA46D,EAAA56D,QACAhpB,EAA0B5c,EAAMwgG,EAAAv9C,SAChC//D,EAAAs9G,EAAAt9G,MAOA,GANAA,IACA05B,GAAA,IAAA15B,EAAA9D,KAAA,MAEAmhH,EAAA3jF,KACA2jF,EAAA3jF,GAAA,IAAAz2B,MAAA,IAEAq6G,EAAAr9D,SAAAqH,YAA4DhnB,GAAYS,QACxEu8E,EAAApkH,QAAAigH,GAEwBv2D,GADxBi3D,GAAAoD,EAAAK,GACwCR,KAAAO,EAAA3jF,GAAA,KACxC1kC,KAAA+lH,cAAAjjH,KAAA,CAAAwlH,EAAA,IACAD,EAAA3jF,GAAA,GAAA4jF,QAGA,GAAyB16D,GAAgBF,EAAA,GAAAo6D,KACzCO,EAAA3jF,GAAA,GACA1kC,KAAA+lH,cAAAjjH,KAAA,CAAAwlH,EAAA,IACAD,EAAA3jF,GAAA,GAAA4jF,OAEA,GAAyB16D,GAAgBF,EAAA,GAAAo6D,KACzCO,EAAA3jF,GAAA,IAEA,IAAA4jF,EAAAr9D,SAAAqH,YACwBhnB,GAAYE,aACpC88E,EAAAr9D,SAAAqH,YAC4BhnB,GAAYM,oBACxCy8E,EAAA3jF,GAAA,IACA,IAAA2jF,EAAA3jF,GAAA,GAAAxgC,MACA,SAEAlE,KAAA+lH,cAAAjjH,KAAA,CAAAwlH,EAAA,IACAD,EAAA3jF,GAAA,GAAA4jF,OAEyBxgG,EAAM4lC,KAAA1tD,KAAAslH,kBAC/B+C,EAAA3jF,GAAA,KAAA2jF,EAAA3jF,GAAA,IACA1kC,KAAAmlH,uBAAAp/F,IACAmiG,EAAAplH,KAAA,CAAAwlH,EAAAR,IAGAI,EAAAxoH,QACAM,KAAAgnH,oBAAAjhG,GAEA,QAAA9gB,EAAAijH,EAAAxoH,OAAA,EAAmDuF,GAAA,IAAQA,EAC3DjF,KAAAuoH,cAAA3jH,MAAA5E,KAAAkoH,EAAAjjH,IAGA,QAAAjF,KAAAqlH,gBAKAN,EAAAzmH,UAAAwlE,cAAA,SAAA/9C,GACA,QAAArpB,EAAAsD,KAAA+lH,cAAArmH,OAAA,EAAmDhD,GAAA,IAAQA,EAAA,CAC3D,IAAAgoH,EAAA1kH,KAAA+lH,cAAArpH,GAAA,GACAuuD,EAAAy5D,EAAAz5D,SACA,GAAAA,EAAAqH,YAAuChnB,GAAYS,OAAA,CAEnD,IAAA5X,EAAA82B,EAAA90B,YACAqxF,EAAA9C,EAAAgD,gBAAA,GACAD,EAAA/C,EAAAgD,gBAAA,GACAF,EAAA95D,QAAA,GAAA85D,EAAA95D,QAAA,GAAAv5B,EACAszF,EAAA/5D,QAAA,GAAA+5D,EAAA/5D,QAAA,GAAAv5B,EACAn0B,KAAA0lH,OAAAj+G,OAAmC0tB,GAA4BhB,GAAAqzF,GAC/DxnH,KAAA0lH,OAAAj+G,OAAAwjD,EAAAr8B,YAAA64F,QAGAznH,KAAA0lH,OAAAj+G,OAAmCysB,GAAcwwF,EAAAh3D,SAAAg3D,GAOjD,OAJA1kH,KAAAylH,YACAzlH,KAAA0pB,cAAA,IAAA26F,GAAAD,GAAApkH,KAAA6vF,UAAA9pE,IACA/lB,KAAAylH,WAAA,IAEA,GAMAV,EAAAzmH,UAAAg0F,mBAAA,SAAAvsE,GACA/lB,KAAAulH,WAAAx/F,EAAAma,MACAlgC,KAAA+mH,sBAAAhhG,EAAAma,MAAAna,EAAA1Y,MAOA03G,EAAAzmH,UAAAyoH,sBAAA,SAAA7mF,EAAA7yB,GACA,IAAA46G,EAAA56G,EAAA8/C,uBAAAjtB,GAKA++C,EAAkB3qD,GAAOa,GAA4B8yF,GAAA56G,EAAAw8C,UAAA3lB,gBAAAlkC,KAAA2lH,iBAErD6C,EADAxoH,KAAA0lH,OACA76B,YAAA5L,GACA,GAAAupC,EAAA9oH,OAAA,GACA8oH,EAAA7hH,KARA,SAAA/E,EAAAC,GACA,OAAA2iH,GAAAyD,EAAArmH,GACA4iH,GAAAyD,EAAApmH,KAOA,IAAAf,EAAA0nH,EAAA,GACAC,EAAA3nH,EAAA4sD,QACAo6D,EAAAjD,GAAAoD,EAAAnnH,GACA4nH,EAAAr7G,EAAAimF,uBAAAw0B,GACAa,EAAuBt6D,GAAkBnuB,EAAAwoF,GACzC,GAAAC,GAAA3oH,KAAA2lH,gBAAA,CAEA,IAAAiD,EAAA,GACA,GAAA9nH,EAAAmqD,SAAAqH,YAAgDhnB,GAAYS,QAC5DjrC,EAAAoD,QAAAigH,GACAnkH,KAAA6lH,kBAAA,EACA7lH,KAAA2nH,6BAAAG,OAEA,CACA,IAAAe,EAAAx7G,EAAAimF,uBAAAm1B,EAAA,IACAK,EAAAz7G,EAAAimF,uBAAAm1B,EAAA,IACAM,EAAuC76D,GAAyBw6D,EAAAG,GAChEG,EAAuC96D,GAAyBw6D,EAAAI,GAChEH,EAAAzoH,KAAAoF,KAAApF,KAAA4B,IAAAinH,EAAAC,IACAhpH,KAAA6lH,iBAAA8C,GAAA3oH,KAAA2lH,gBACA3lH,KAAA6lH,mBACAiC,EAAAiB,EAAAC,EAAAP,EAAA,GAAAA,EAAA,IAEAzoH,KAAA2nH,6BAAAG,GACA,QAAAprH,EAAA,EAAA+C,EAAA+oH,EAAA9oH,OAAsDhD,EAAA+C,IAAQ/C,EAAA,CAC9D,IAAAgxD,EAAA86D,EAAA9rH,GAAAgxD,QACA,KAA6BE,GAAgB66D,EAAA,GAAA/6D,EAAA,KACjBE,GAAgB66D,EAAA,GAAA/6D,EAAA,KACfE,GAAgB66D,EAAA,GAAA/6D,EAAA,KACbE,GAAgB66D,EAAA,GAAA/6D,EAAA,KAIhD,MAHAk7D,EAA2C9gG,EAAM4lC,KAAA,GASjD,OAFAk7D,EAA+B9gG,EAAM2gG,KAAA,OACrCzoH,KAAAslH,gBAAAsD,IAIA5oH,KAAAqlH,iBACArlH,KAAA0xF,SAAA3gE,YAAAm8D,cAAAltF,KAAAqlH,gBACArlH,KAAAqlH,eAAA,OAQAN,EAAAzmH,UAAAiqH,cAAA,SAAA7D,EAAAoD,GAOA,IANA,IAKA3zF,EALAu5B,EAAAg3D,EAAAh3D,QACAqd,EAAA25C,EAAA35C,QACA9f,EAAAy5D,EAAAz5D,SACAjgD,EAAA05G,EAAA15G,MACA9G,EAAsCwgH,EAAA,MAEtCoD,EAAApoH,OAAAurD,EAAA4I,aACAi0D,EAAAhlH,KAAA,GAEA,OAAAmoD,EAAAqH,WACA,KAAiBhnB,GAAYM,kBAI7B,KAAiBN,GAAYI,SAC7BvX,EAAA82B,EAAAqI,kBACAtoD,EAAA,IAAA1G,OAAAJ,EAAA,IAAA4jH,GACA,MACA,KAAiBx8E,GAAYO,eAC7B1X,EAAA82B,EAAAqI,kBACAtoD,EAAA,IAAAA,EAAA,IAAA1G,OAAAJ,EAAA,IAAA4jH,GACA,MACA,KAAiBx8E,GAAYE,aAC7BrX,EAAA82B,EAAAqI,kBACAhvD,OAAAJ,EAAA,IAAA4jH,GACA,MACA,QACA,OAEA9nH,KAAAgoH,wBAAA/8D,EAAA92B,GACA,IAAA80F,EAAAjpH,KAAA0lH,OACAuD,EAAAjlH,OAAA0gH,GACA1kH,KAAAkpH,sBAAAj+D,EAAA/mD,EAAA8G,EAAA,GACA,IAAAm+G,EAAoD,CACpDz7D,QAAA,CAAAA,EAAA,GAAAo6D,GACA/8C,UACA9f,WACAjgD,QACA9G,SAEA+kH,EAAAvlH,OAAqBwwB,GAAci1F,EAAAz7D,SAAAy7D,GACnCnpH,KAAA+lH,cAAAjjH,KAAA,CAAAqmH,EAAA,IACA,IAAAC,EAAqD,CACrD17D,QAAA,CAAAo6D,EAAAp6D,EAAA,IACAqd,UACA9f,WACAjgD,QACA9G,QAAA,GAEA+kH,EAAAvlH,OAAqBwwB,GAAck1F,EAAA17D,SAAA07D,GACnCppH,KAAA+lH,cAAAjjH,KAAA,CAAAsmH,EAAA,IACAppH,KAAAwlH,wBAAA,GAOAT,EAAAzmH,UAAAupH,YAAA,WACA,GAAA7nH,KAAA8mH,mBAAA9mH,KAAA8mH,kBAAAloH,MAAqEktD,GAAmBE,YAAA,CACxF,IAAAjmC,EAAA/lB,KAAA8mH,kBACA9mH,KAAAgnH,oBAAAjhG,GACA,IAAAgpE,EAAA/uF,KAAAqpH,gBAGA,OAFArpH,KAAA0pB,cAAA,IAAA26F,GAAAD,GAAApkH,KAAA6vF,UAAA9pE,IACA/lB,KAAAylH,WAAA,EACA12B,EAEA,UAOAg2B,EAAAzmH,UAAA+qH,cAAA,WACA,IAGAC,EAAAn1F,EAAA4zF,EAAA98D,EAAAvuD,EAAAwH,EAAA1B,EACA+mH,EAAA9mH,EAAAiiH,EAAAhgF,EAJA8kF,EAAAxpH,KAAA+lH,cACA0D,EAAA,GACAC,GAAA,EAGA,IAAAhtH,EAAA8sH,EAAA9pH,OAAA,EAAyChD,GAAA,IAAQA,EAGjDgoC,EAAkB5c,GADlB48F,GADAqD,EAAAyB,EAAA9sH,IACA,IACwBquE,SACxB25C,EAAA15G,QAEA05B,GAAA,IAAAggF,EAAA15G,MAAA9D,KAAA,MAEAw9B,KAAA+kF,IACAA,EAAA/kF,GAAA,IAEA,IAAAqjF,EAAA,IACA0B,EAAA/kF,GAAAjiC,MAAAiiH,EACA+E,EAAA/kF,GAAAxgC,MAAAwgH,EAAAxgH,OAEA,GAAA6jH,EAAA,KACA0B,EAAA/kF,GAAAliC,KAAAkiH,EACA+E,EAAA/kF,GAAAxgC,MAAAwgH,EAAAxgH,MAAA,GAGA,IAAAwgC,KAAA+kF,EAAA,CAkBA,OAjBAhnH,EAAAgnH,EAAA/kF,GAAAjiC,MACAD,EAAAinH,EAAA/kF,GAAAliC,MAEA+mH,GADArlH,EAAAulH,EAAA/kF,GAAAxgC,OACA,GAOA,IACAqlH,EAAA,GAIAD,EADAn1F,GADA82B,GARAy5D,OADA70G,IAAArN,EACAA,EAGAC,GAKAwoD,UACAqI,iBAEAo2D,GAAA,EACAz+D,EAAAqH,WACA,KAAqBhnB,GAAYM,kBACjCzX,EAAAuwF,EAAA15G,MAAA,IAAAtL,OAAA,IACAy0B,EAAAuwF,EAAA15G,MAAA,IAAA1G,OAAAJ,EAAA,GACAwlH,GAAA,GAEA,MACA,KAAqBp+E,GAAYE,YACjCrX,EAAAz0B,OAAA,IACAy0B,EAAA7vB,OAAAJ,EAAA,GACAwlH,GAAA,GAEA,MACA,KAAqBp+E,GAAYO,cACjCy9E,IAAA5E,EAAA15G,MAAA,IAEA,KAAqBsgC,GAAYI,SACjC49E,IAAA5E,EAAA15G,MAAA,KACAtL,OAAA,IACAwE,GAAAolH,EAAA5pH,OAAA,IACAwE,EAAA,GAEAolH,EAAAhlH,OAAAJ,EAAA,GACAwlH,GAAA,EACA,IAAAxlH,IAEAolH,EAAAzmH,MACAymH,EAAAxmH,KAAAwmH,EAAA,IACAC,EAAAD,EAAA5pH,OAAA,IAOA,GAAAgqH,EAAA,CACA1pH,KAAAgoH,wBAAA/8D,EAAA92B,GACA,IAAAw1F,EAAA,GASA,QARA95G,IAAArN,IACAxC,KAAA0lH,OAAA1hH,OAAAxB,GACAmnH,EAAA7mH,KAAAN,EAAAkrD,QAAA,UAEA79C,IAAApN,IACAzC,KAAA0lH,OAAA1hH,OAAAvB,GACAknH,EAAA7mH,KAAAL,EAAAirD,QAAA,UAEA79C,IAAArN,QAAAqN,IAAApN,EAAA,CACA,IAAA0mH,EAAgE,CAChEn+G,MAAA05G,EAAA15G,MACA+/D,QAAA25C,EAAA35C,QACA9f,SAAAy5D,EAAAz5D,SACA/mD,MAAAqlH,EACA77D,QAAAi8D,GAEA3pH,KAAA0lH,OAAAhiH,OAAuCwwB,GAAci1F,EAAAz7D,SAAAy7D,GAErDnpH,KAAAkpH,sBAAAj+D,EAAA/mD,EAAAwgH,EAAA15G,OAAA,GACAhL,KAAAqlH,iBACArlH,KAAA0xF,SAAA3gE,YAAAm8D,cAAAltF,KAAAqlH,gBACArlH,KAAAqlH,eAAA,MAEAmE,EAAA9pH,OAAA,GAGA,OAAAgqH,GAOA3E,EAAAzmH,UAAA0pH,wBAAA,SAAA/8D,EAAA92B,GACAn0B,KAAA8lH,kBAAA,EACA76D,EAAA8I,eAAA5/B,GACAn0B,KAAA8lH,kBAAA,GASAf,EAAAzmH,UAAA4qH,sBAAA,SAAAj+D,EAAA/mD,EAAA8G,EAAAy+B,GACAzpC,KAAA0lH,OAAA36B,gBAAA9/B,EAAAr8B,YAAA,SAAA05F,GACAA,EAAAr9D,oBACAp7C,IAAA7E,QAAA6E,IAAAy4G,EAAAt9G,OACoBkzC,GAAMoqE,EAAAt9G,WAC1Bs9G,EAAApkH,UACAokH,EAAApkH,OAAAulC,MAIAs7E,EAz7BU,CA07BRthD,ICllCEmmD,GAAyB,WAC7B,IAAAlhG,EAAA,SAAA1rB,EAAA6E,GAIA,OAHA6mB,EAAAtrB,OAAA8U,gBACA,CAAc+W,UAAA,cAAgBhb,OAAA,SAAAjR,EAAA6E,GAAsC7E,EAAAisB,UAAApnB,IACpE,SAAA7E,EAAA6E,GAA6B,QAAArD,KAAAqD,IAAAtD,eAAAC,KAAAxB,EAAAwB,GAAAqD,EAAArD,MAC7BxB,EAAA6E,IAEA,gBAAA7E,EAAA6E,GAEA,SAAAqnB,IAAuBlpB,KAAA8L,YAAA9O,EADvB0rB,EAAA1rB,EAAA6E,GAEA7E,EAAAsB,UAAA,OAAAuD,EAAAzE,OAAAY,OAAA6D,IAAAqnB,EAAA5qB,UAAAuD,EAAAvD,UAAA,IAAA4qB,IAV6B,GAqD7B,SAAA2gG,GAAA9jG,GACA,OAAoE,EAAAglD,QACM,EAAAA,QAEN,EAAAgd,QACkD,eADtH,EAqgBe,IAAA+hC,GA5eP,SAAA1gG,GAKR,SAAA2gG,EAAAh4F,GACA,IAAAzI,EAAAtpB,KACA2U,EAAAod,GAAA,GACAw9D,EAAuE,EA4FvE,OA3FAA,EAAA5rB,kBACA4rB,EAAA5rB,gBAA6Cp7C,GAE7CgnE,EAAAxrB,WACAwrB,EAAAxrB,SAAsCv7C,IAEtCc,EAAAF,EAAAvsB,KAAAmD,KAAAuvF,IAAAvvF,MAKA4pD,QAAAj1C,EAAAxV,OAAAwV,EAAAxV,OAAA,KAKAmqB,EAAA0gG,aAAAn6G,IAAA8E,EAAAmzG,QAAAnzG,EAAAmzG,OAKAx+F,EAAA2gG,WAAAp6G,IAAA8E,EAAAyoD,MAAAzoD,EAAAyoD,KAKA9zC,EAAAumE,UAAAl7E,EAAAk0C,SAAAl0C,EAAAk0C,SAAA,KAKAv/B,EAAA4gG,sBAAA,GAKA5gG,EAAA6gG,2BAAA,GAOA7gG,EAAA8gG,wBAAA,GAQA9gG,EAAA+gG,iBAAA,GAMA/gG,EAAAghG,iBAAA,KAKAhhG,EAAAq8F,qBAAA91G,IAAA8E,EAAAixG,eACAjxG,EAAAixG,eAAA,GAKAt8F,EAAAihG,gBA0ZA,SAAuB3oH,EAAAC,GACvB,IAAA2oH,EAAiBl8D,GAAwBtuD,KAAAsqH,iBAAA1oH,EAAA8rD,SACzC+8D,EAAiBn8D,GAAwBtuD,KAAAsqH,iBAAAzoH,EAAA6rD,SACzC,OAAA88D,EAAAC,GA7Z8CvsH,KAAAorB,GAM9CA,EAAAo8F,OAAA,IAA2Bp7B,GAM3BhhE,EAAA08F,iBAAA,CACAnqD,MAAAvyC,EAAA28F,oBACAlsD,WAAAzwC,EAAA48F,yBACAxpD,WAAApzC,EAAA48F,yBACAtoD,QAAAt0C,EAAA68F,sBACAnqD,WAAA1yC,EAAA88F,yBACAvrD,gBAAAvxC,EAAA+8F,8BACA7mD,aAAAl2C,EAAAg9F,2BACAriC,mBAAA36D,EAAAk9F,iCACA3xD,OAAAvrC,EAAAi9F,sBAEAj9F,EA0XA,OA7dIsgG,GAASG,EAAA3gG,GA4Gb2gG,EAAAzrH,UAAAguF,WAAA,SAAAvhB,EAAA2/C,GACA,IAAAviH,OAAA0H,IAAA66G,KACAC,EAA0B7iG,EAAMijD,GAChC9f,EAAA8f,EAAA1f,cACA,GAAAJ,EAAA,CACA,IAAA2/D,EAAA5qH,KAAAgmH,iBAAA/6D,EAAAqH,WACAs4D,IACA5qH,KAAAoqH,wBAAAO,GAAA1/D,EAAAr8B,UrKVA,CAAAttB,SAAA,WqKWAspH,EAAA/tH,KAAAmD,KAAA+qE,EAAA9f,IAGA9iD,IACAnI,KAAAmqH,2BAAAQ,GAA2D/kG,EAAMmlD,EAAU3kD,EAASC,OAAArmB,KAAA2sF,qBAAA3sF,QAOpF+pH,EAAAzrH,UAAAusH,mBAAA,SAAA9/C,GACA/qE,KAAAssF,WAAAvhB,IAMAg/C,EAAAzrH,UAAAwsH,sBAAA,SAAA//C,GACA/qE,KAAAktF,cAAAniB,IAMAg/C,EAAAzrH,UAAAysH,aAAA,WACA,IAAAliE,EAOA,OANA7oD,KAAA6vF,UACAhnC,EAAA7oD,KAAA6vF,UAEA7vF,KAAA4pD,UACAf,EAAA7oD,KAAA4pD,QAAA+jC,eAEA9kC,GAKAkhE,EAAAzrH,UAAA2pD,YAAA,SAAAliC,GACA,IAAA3iB,EAAApD,KAAAgrH,OAAAjlG,EAAAma,MAAAna,EAAA4O,WAAA5O,EAAA1Y,KAKA,OAJAjK,EAAA6nH,UACAllG,EAAA4O,WAAAvxB,EAAA0kH,OAAAlkH,MAAA,KACAmiB,EAAAma,MAAA98B,EAAAslH,aAEAt/F,EAAA9qB,UAAA2pD,YAAAprD,KAAAmD,KAAA+lB,IAMAgkG,EAAAzrH,UAAAsoH,kBAAA,SAAA7gG,GACA,IAAAglD,EAAA8+C,GAAA9jG,GACA/lB,KAAAssF,WAAAvhB,IAMAg/C,EAAAzrH,UAAAuoH,qBAAA,SAAA9gG,GACA,IAAAglD,EAAA8+C,GAAA9jG,GACA/lB,KAAAktF,cAAAniB,IAMAg/C,EAAAzrH,UAAAquF,qBAAA,SAAA5mE,GACA,IAAAglD,EAAiEhlD,EAAA,OACjE,GAAA/lB,KAAAgkE,uBAAA,CACA,IAAAt/B,EAAsB5c,EAAMijD,GAC5BrmC,KAAA1kC,KAAAqqH,mBACArqH,KAAAqqH,iBAAA3lF,GAAAqmC,QAIA/qE,KAAAkrH,eAAAngD,IAMAg/C,EAAAzrH,UAAAwlE,cAAA,SAAA/9C,GACA,IAAAolG,EAA+BxmG,EAAS3kB,KAAAqqH,kBAKxC,OAJAc,EAAAzrH,SACAyrH,EAAA9+G,QAAArM,KAAAkrH,eAAAhtH,KAAA8B,OACAA,KAAAqqH,iBAAA,KAEA,GASAN,EAAAzrH,UAAA4uF,cAAA,SAAAniB,EAAAqgD,GACA,IAAA9iH,OAAAuH,IAAAu7G,KACAT,EAA0B7iG,EAAMijD,GAChCp8C,EAAA3uB,KAAAoqH,wBAAAO,GACA,GAAAh8F,EAAA,CACA,IAAAw4F,EAAAnnH,KAAA0lH,OACA2F,EAAA,GACAlE,EAAAp8B,gBAAAp8D,EAAA,SAAA7tB,GACAiqE,IAAAjqE,EAAAiqE,SACAsgD,EAAAvoH,KAAAhC,KAGA,QAAApE,EAAA2uH,EAAA3rH,OAAA,EAAoDhD,GAAA,IAAQA,EAC5DyqH,EAAAnjH,OAAAqnH,EAAA3uH,IAGA4L,IACY0d,EAAahmB,KAAAmqH,2BAAAQ,WACzB3qH,KAAAmqH,2BAAAQ,KAMAZ,EAAAzrH,UAAAqyB,OAAA,SAAAtjB,GACA,IAAAi+G,EAAAtrH,KAAAqoD,SACA3/C,EAAA1I,KAAAkqH,sBACArhE,EAAyE7oD,KAAA+qH,eACzEO,IACA5iH,EAAA2D,QAAyB2Z,GACzBtd,EAAAhJ,OAAA,EACAmpD,EAAAx8C,QAAArM,KAAA8qH,sBAAA5sH,KAAA8B,QAEAopB,EAAA9qB,UAAAqyB,OAAA9zB,KAAAmD,KAAAqN,GACAA,IACArN,KAAA6vF,UACAnnF,EAAA5F,KAA0B8iB,EAAM5lB,KAAA6vF,UAAiBtI,GAAmBC,IAAAxnF,KAAA4mH,kBAAA5mH,MAAqC4lB,EAAM5lB,KAAA6vF,UAAiBtI,GAAmBE,OAAAznF,KAAA6mH,qBAAA7mH,OAEnJA,KAAA4pD,SACAlhD,EAAA5F,KAA0B8iB,EAAM5lB,KAAA4pD,QAAesgC,GAAeC,WAAAnqF,KAAA4mH,kBAAA5mH,MAA4C4lB,EAAM5lB,KAAA4pD,QAAesgC,GAAeG,cAAArqF,KAAA6mH,qBAAA7mH,OAE9I6oD,EAAAx8C,QAAArM,KAAA6qH,mBAAA3sH,KAAA8B,SASA+pH,EAAAzrH,UAAA0sH,OAAA,SAAA9qF,EAAA+nF,EAAA56G,GACA,IAEA4xE,EAAkB/qD,GAAc,CAFhC7mB,EAAA8/C,uBAAA,CAAAjtB,EAAA,GAAAlgC,KAAA2lH,gBAAAzlF,EAAA,GAAAlgC,KAAA2lH,kBACAt4G,EAAA8/C,uBAAA,CAAAjtB,EAAA,GAAAlgC,KAAA2lH,gBAAAzlF,EAAA,GAAAlgC,KAAA2lH,oBAEAgE,EAAA3pH,KAAA0lH,OAAA76B,YAAA5L,GAEAj/E,KAAAgqH,UAAAhqH,KAAAiqH,QACAN,IAAAvvG,OAAA,SAAAszC,GACA,OAAAA,EAAAqd,QAAA1f,cAAAiH,YACoBhnB,GAAYS,UAGhC,IAIA88E,EAAAC,EAAAC,EAAAC,EAHAiC,GAAA,EACAnD,EAAA,KACAY,EAAA,KAEA,GAAAiB,EAAAjqH,OAAA,GACAM,KAAAsqH,iBAAArC,EACA0B,EAAAhjH,KAAA3G,KAAAuqH,iBACA,IAAA9B,EAAAkB,EAAA,GAAAj8D,QACA69D,EAAA5B,EAAA,GAAA5+C,QAAA1f,cAAAiH,YACgBhnB,GAAYS,OAC5B/rC,KAAAgqH,UAAAhqH,KAAAiqH,OACApB,EAAAx7G,EAAAimF,uBAAAm1B,EAAA,IACAK,EAAAz7G,EAAAimF,uBAAAm1B,EAAA,IACAM,EAA+B76D,GAAyBhuB,EAAA2oF,GACxDG,EAA+B96D,GAAyBhuB,EAAA4oF,GACxD5oH,KAAAoF,KAAApF,KAAA4B,IAAAinH,EAAAC,KACAhpH,KAAA2lH,kBAEAsF,GAAA,EACAnD,EAAAiB,EAAAC,EAAAP,EAAA,GAAAA,EAAA,GACAC,EAAAr7G,EAAAimF,uBAAAw0B,KAGA9nH,KAAAiqH,QAEAnC,EADAyD,ElH/UO,SAAA52F,EAAAmqC,GACP,IAAAthE,EAAAshE,EAAA9J,YACAz+B,EAAAuoC,EAAA3oC,YACAe,EAAAX,EAAA,GACAa,EAAAb,EAAA,GAGAvJ,EAFA2H,EAAA,GAEAuC,EACAjK,EAFA0H,EAAA,GAEAyC,EACA,IAAApK,GAAA,IAAAC,IACAD,EAAA,GAEA,IAAAhwB,EAAAkD,KAAAoF,KAAA0nB,IAAAC,KAGA,OAFAiK,EAAA15B,EAAAwvB,EAAAhwB,EACAo6B,EAAA55B,EAAAyvB,EAAAjwB,GkHkU6BwuH,CAAevD,EACuB0B,EAAA,GAAA5+C,QAAA1f,eAGtCoC,GAAgBw6D,EAAAQ,GAGzBp6D,GAAkBnuB,EADtCwoF,EAAAr7G,EAAAimF,uBAAAw0B,KACsC9nH,KAAA2lH,kBACtCsF,GAAA,EACAjrH,KAAAgqH,UAAAuB,IACA1C,EAAAx7G,EAAAimF,uBAAAm1B,EAAA,IACAK,EAAAz7G,EAAAimF,uBAAAm1B,EAAA,IACAM,EAAuC76D,GAAyBw6D,EAAAG,GAChEG,EAAuC96D,GAAyBw6D,EAAAI,GAChE5oH,KAAAoF,KAAApF,KAAA4B,IAAAinH,EAAAC,KACAhpH,KAAA2lH,kBAEAmC,EAAAiB,EAAAC,EAAAP,EAAA,GAAAA,EAAA,GACAC,EAAAr7G,EAAAimF,uBAAAw0B,OAKAmD,IACAvC,EAAA,CAAAxoH,KAAAmU,MAAAq0G,EAAA,IAAAxoH,KAAAmU,MAAAq0G,EAAA,MAGA,OACAuC,UACAnD,SACAY,gBAOAqB,EAAAzrH,UAAA4sH,eAAA,SAAAngD,GACA/qE,KAAAktF,cAAAniB,GAAA,GACA/qE,KAAAssF,WAAAvhB,GAAA,IAOAg/C,EAAAzrH,UAAAioH,qBAAA,SAAAx7C,EAAA9f,GAGA,IAFA,IACA92B,EADsB0qC,GAAU5T,GAChCqI,iBAAA,GACA52D,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAAoDhD,EAAA+C,IAAQ/C,EAAA,CAC5D,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAA,CACA35C,UACArd,WAEA1tD,KAAA0lH,OAAAhiH,OAA+BwwB,GAAcw5B,GAAAg3D,KAQ7CqF,EAAAzrH,UAAAkoH,iCAAA,SAAAz7C,EAAA9f,GAEA,IADA,IAAAk5B,EAAAl5B,EAAAm5B,qBACA1nF,EAAA,EAAuBA,EAAAynF,EAAAzkF,SAAuBhD,EAAA,CAC9C,IAAAkuH,EAAA5qH,KAAAgmH,iBAAA7hC,EAAAznF,GAAA41D,WACAs4D,GACAA,EAAA/tH,KAAAmD,KAAA+qE,EAAAoZ,EAAAznF,MASAqtH,EAAAzrH,UAAA4nH,yBAAA,SAAAn7C,EAAA9f,GAEA,IADA,IAAA92B,EAAA82B,EAAAqI,iBACA52D,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAAoDhD,EAAA+C,IAAQ/C,EAAA,CAC5D,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAA,CACA35C,UACArd,WAEA1tD,KAAA0lH,OAAAhiH,OAA+BwwB,GAAcw5B,GAAAg3D,KAQ7CqF,EAAAzrH,UAAA+nH,8BAAA,SAAAt7C,EAAA9f,GAEA,IADA,IAAAqyB,EAAAryB,EAAAqI,iBACAruD,EAAA,EAAA86C,EAAAu9B,EAAA59E,OAA0CuF,EAAA86C,IAAQ96C,EAElD,IADA,IAAAkvB,EAAAmpD,EAAAr4E,GACAvI,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAAwDhD,EAAA+C,IAAQ/C,EAAA,CAChE,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAA,CACA35C,UACArd,WAEA1tD,KAAA0lH,OAAAhiH,OAAmCwwB,GAAcw5B,GAAAg3D,KASjDqF,EAAAzrH,UAAA8nH,yBAAA,SAAAr7C,EAAA9f,GAEA,IADA,IAAAmR,EAAAnR,EAAAqI,iBACA52D,EAAA,EAAA+C,EAAA28D,EAAA18D,OAA2ChD,EAAA+C,IAAQ/C,EAAA,CACnD,IAAAy3B,EAAAioC,EAAA1/D,GACAgoH,EAAA,CACA35C,UACArd,QAAA,CAAAv5B,MAEAn0B,KAAA0lH,OAAAhiH,OAAAunD,EAAAr8B,YAAA81F,KAQAqF,EAAAzrH,UAAAgoH,2BAAA,SAAAv7C,EAAA9f,GAEA,IADA,IAAA4U,EAAA5U,EAAAqI,iBACApyD,EAAA,EAAAqmH,EAAA1nD,EAAAngE,OAA6CwB,EAAAqmH,IAAQrmH,EAErD,IADA,IAAAomH,EAAAznD,EAAA3+D,GACA+D,EAAA,EAAA86C,EAAAunE,EAAA5nH,OAA8CuF,EAAA86C,IAAQ96C,EAEtD,IADA,IAAAkvB,EAAAmzF,EAAAriH,GACAvI,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAA4DhD,EAAA+C,IAAQ/C,EAAA,CACpE,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAA,CACA35C,UACArd,WAEA1tD,KAAA0lH,OAAAhiH,OAAuCwwB,GAAcw5B,GAAAg3D,KAUrDqF,EAAAzrH,UAAA2nH,oBAAA,SAAAl7C,EAAA9f,GACA,IAAA92B,EAAA82B,EAAAqI,iBACAoxD,EAAA,CACA35C,UACArd,QAAA,CAAAv5B,MAEAn0B,KAAA0lH,OAAAhiH,OAAAunD,EAAAr8B,YAAA81F,IAOAqF,EAAAzrH,UAAA6nH,sBAAA,SAAAp7C,EAAA9f,GAEA,IADA,IAAAq8D,EAAAr8D,EAAAqI,iBACAruD,EAAA,EAAA86C,EAAAunE,EAAA5nH,OAA0CuF,EAAA86C,IAAQ96C,EAElD,IADA,IAAAkvB,EAAAmzF,EAAAriH,GACAvI,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAA,EAAwDhD,EAAA+C,IAAQ/C,EAAA,CAChE,IAAAgxD,EAAAv5B,EAAAvwB,MAAAlH,IAAA,GACAgoH,EAAA,CACA35C,UACArd,WAEA1tD,KAAA0lH,OAAAhiH,OAAmCwwB,GAAcw5B,GAAAg3D,KAIjDqF,EA9dQ,CA+dNtmD,uBC9iBF,SAAAgoD,GAAA9tH,EAAA+tH,GACA,MAAAC,EAAAzrH,KAAA8E,IAAA,GAAA0mH,GACA,OAAAxrH,KAAAmU,MAAA1W,EAAAguH,MAAA/+G,WA2Ge,IAAAg/G,GAxGf,SAAAv+G,EAAAsH,GAEA,IAAA0yB,EAEAA,EADA,YAFA1yB,KAAA,IAGAA,EAAA0yB,QAEA,CAAewgB,SAAA,KAGf,MAAAZ,EAAA55C,EAAAw8C,UACAhqB,EAAAonB,EAAA7J,gBAAA7O,UAEA,IAAA7O,EAAAnJ,EAAAC,EACA,GAAAywB,EAAAwiD,QACA/pE,EAAAunB,EAAAI,UACA9wB,EAAA0wB,EAAA9wB,YACAK,EAAAywB,EAAAse,kBACG,CACH,MAAAsmD,EAAAx+G,EAAA88C,cAEAzqB,EADAmsF,EACA3rH,KAAA4rH,MAAA5rH,KAAA6E,IAAA8mH,EAAAE,YAAA,KAEA,EAEAx1F,EAAA,MACAC,EAAA,EAGA,MAAApuB,EAAA,CACAmuB,OAAA,CACA32B,QAAA22B,EACAruB,UAAA,SAAAypD,EAAAv1C,GACA,IAAAsvG,EAOA,OALAA,EADAtvG,GAAA,SAAAA,EACAlc,KAAAC,IAAA,EAAAD,KAAAG,KAAAH,KAAA6E,IAAAqX,EAAAsjB,MAAAx/B,KAAA8rH,MAEA,EAIAP,IAFA95D,EAAgB5e,GAAS4e,EAAA9xB,EAAA,cAEzB,GAAA6rF,GACA,IACAD,GAAA95D,EAAA,GAAA+5D,IAGA/jH,YAAA,SAAAyB,GACA,MAAA6N,EAAA7N,EAAAyE,MAAA,KACA,OAAAoJ,EAAAvX,OACA,UAAA0K,MAAA,4BAAAhB,GAGA,OAAe2pC,GADf,CAAAjM,WAAA7vB,EAAA,IAAA6vB,WAAA7vB,EAAA,KACwB,YAAA4oB,KAGxBH,KAAA,CACA9/B,QAAA8/B,EACAx3B,UAAA,SAAAvK,GACA,OAAA8tH,GAAA9tH,EAAA,IAEAgK,YAAA6B,QAEAgtB,SAAA,CACA52B,QAAA42B,EACAtuB,UAAA,SAAAvK,GACA,OAAA8tH,GAAA9tH,EAAA,IAEAgK,YAAA6B,SAIA,SAAAyiH,EAAA7vG,GACA6qC,EAAAwiD,SAAApiE,EACA4f,EAAA5f,QAAAjqC,OAAAqnB,OAAA,GAAmCrI,EAAAirB,KAGnC,WAAAjrB,GACA6qC,EAAAiO,UAAA94C,EAAAma,QAEA,SAAAna,GACA6qC,EAAAkiD,QAAA/sF,EAAAsjB,MAEA,aAAAtjB,GACA6qC,EAAA8e,YAAA3pD,EAAAoa,WAIA,MAAA/uB,EAAiBykH,GAAAtqH,EAAMuG,SAAAC,EAAA6jH,GAEvB,SAAAE,IACA1kH,EAAA,CACA8uB,OAAA0wB,EAAA9wB,YACAuJ,KAAAunB,EAAAI,UACA7wB,SAAAywB,EAAAse,gBAMA,OAFAl4D,EAAA+R,GAAA,UAAA+sG,GAEA,WACA9+G,EAAAid,GAAA,UAAA6hG,GACID,GAAAtqH,EAAM0G,WAAA2jH;;;;ACrFV,MAAMG,GAAG,IACHC,GAAG,KACT/3G,GAAA,GACAg4G,UAAaC,GAAQ,CACrBt4G,SAAA,YACAC,QAAAI,KAOA,SAAAwzD,GAAAiD,GACA,MAAArlE,EnJgIO,SAAS8mH,EAAOvhE,EAAAl5B,GACvB,IAAApd,EAAAod,GAAA,GACAsa,EAAA13B,EAAA03B,QAAAL,GACAnM,EAAAlrB,EAAAkrB,YAAA,YACAjhC,EAAAqsD,EAAAqH,UACA1zD,IAAiB0sC,GAAYQ,sBAC7Bmf,IAAAz2B,QAAA3f,UAAAgrB,EAAA,cAEA,IACA1L,EAAAqsD,EAAA9jF,EAAA+C,EAAAwF,EAAA86C,EADAr6C,EAAA,EAEA,OAAA9G,GACA,KAAa0sC,GAAYC,MACzB,KAAaD,GAAYK,YACzB,KAAaL,GAAYE,YACzB,KAAaF,GAAYM,kBACzB,KAAaN,GAAYG,YACzB,MAEA,KAAaH,GAAYI,QAGzB,IAFAvX,EAAyE,EAAAm/B,iBACzE5tD,EAAAxF,KAAAg1C,IAAAvI,GAAAxY,EAAA,GAAAkY,IACA3vC,EAAA,EAAA+C,EAAA00B,EAAAz0B,OAAgDhD,EAAA+C,IAAQ/C,EACxDgJ,GAAAxF,KAAAg1C,IAAAvI,GAAAxY,EAAAz3B,GAAA2vC,IAEA,MAEA,KAAaf,GAAYO,cAEzB,IAAAnvC,EAAA,EAAA+C,GADA00B,EAAgF,EAAAm/B,kBAChF5zD,OAAgDhD,EAAA+C,IAAQ/C,EAGxD,IAFA8jF,EAAArsD,EAAAz3B,GACAgJ,GAAAxF,KAAAg1C,IAAAvI,GAAA6zC,EAAA,GAAAn0C,IACApnC,EAAA,EAAA86C,EAAAygC,EAAA9gF,OAA+CuF,EAAA86C,IAAQ96C,EACvDS,GAAAxF,KAAAg1C,IAAAvI,GAAA6zC,EAAAv7E,GAAAonC,IAGA,MAEA,KAAaf,GAAYQ,oBACzB,IAAAq4C,EAAuF,EAAAW,gBACvF,IAAApoF,EAAA,EAAA+C,EAAA0kF,EAAAzkF,OAA+ChD,EAAA+C,IAAQ/C,EACvDgJ,GAAwB8mH,EAAOroC,EAAAznF,GAAAq1B,GAE/B,MAEA,QACA,UAAA3nB,MAAA,8BAAAxL,GAGA,OAAA8G,EmJhLe8mH,CAAOzhD,EAAA1f,eACtBviD,EAAA5I,KAAA8E,KANcrH,GAMY+H,EAAS0mH,KAAQC,GAAMD,IANnCh1D,EAMsC,EANtCC,EAMsC,EALpDn3D,KAAAC,IAAAi3D,EAAAl3D,KAAA4B,IAAAnE,EAAA05D,KAKoD,IANpD,IAAc15D,EAAAy5D,EAAAC,EAOd,MAAAnzD,EAAAhE,KAAAmU,MAAAvL,GAAAwL,GAAA,IACA,OAAAg4G,GAAApoH;WAKA;MAAMuoH,GAAG,IAAOzJ,GAAG,CACnB5sG,OAAA,gBACAg4F,OAAA,CACA,IAAQ5lE,GAAS,CACjBrpC,OAAA,IAAkBqnD,GAAS,CAC3B1C,IAAA,sDAIAmD,KAAA,IAAYs/C,GAAI,CAChBhwE,OAAA,MACAmJ,KAAA,MAIAksF,GAAKa,IAEL,MAAAC,GAAA,IAAoBvhC,GAKdwhC,GAAK,IAAOtlC,GAAW,CAC7BloF,OAAAutH,GACAhhH,MAAA,SAAAq/D,GACA,WAAeI,GAAK,CACpB/qD,KAAA,IAAgB4oD,GAAI,CACpBrE,MAAAmD,GAAAiD,KAEAn1B,OAAA,IAAkBwzB,GAAM,CACxBzE,MAAA;;;AAOA8nD,GAAGla,SAAUoa,IAEbF,GAAGpa,eAAA,IAAoB9oD,GAAW,CAClCpqD,OAAAutH,GACAhjE,mBAAA,CAAuB6tC,OAGvBk1B,GAAGpa,eAAA,IAAoByS,GAAM,CAC7B3lH,OAAAutH,MAGAD,GAAGpa,eAAA,IAAoBhjB,GAAI,CAC3BlwF,OAAAutH,GACA9tH,KAAQ0sC,GAAYI,WAGpB+gF,GAAGpa,eAAA,IAAoByX,GAAI,CAC3B3qH,OAAAutH,MAGWz2G,SAAAq5F,eAAA,SACN5nG,iBAAA,mBACLglH,GAAAnsH,UAGA,MAAMqsH,GAAM,IAAOr1B,GAAO,CAAExtC,kBAAA,cAC5B8iE,GAAA52G,SAAAq5F,eAAA,YACAnwG,OAAAigB,GAAA,oBACA,MAAAypC,EAAA1pD,OAAAwuF,cACAm/B,EAAeF,GAAMt4B,cAAAzrC,GACrBgkE,GAAApzG,KAAA,gCAAkCqzG","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","const util = require('util');\n\n/**\n * Get the type of a value.\n * @param {*} value The value.\n * @return {string} The type.\n */\nexports.typeOf = function typeOf(value) {\n  let type = typeof value;\n  if (type === 'object') {\n    if (value === null) {\n      type = 'null';\n    } else if (util.isArray(value)) {\n      type = 'array';\n    } else if (util.isDate(value)) {\n      type = 'date';\n    } else if (util.isRegExp(value)) {\n      type = 'regexp';\n    } else if (util.isError(value)) {\n      type = 'error';\n    }\n  }\n  return type;\n};\n\n/**\n * Copy properties from one object to another.\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n * @return {Object} The destination object.\n */\nexports.extend = function(dest, source) {\n  for (const key in source) {\n    dest[key] = source[key];\n  }\n  return dest;\n};\n\n/**\n * Generate an array of alternating name, value from an object's properties.\n * @param {Object} object The object to zip.\n * @return {Array} The array of name, value [, name, value]*.\n */\nexports.zip = function(object) {\n  const zipped = [];\n  let count = 0;\n  for (const key in object) {\n    zipped[2 * count] = key;\n    zipped[2 * count + 1] = object[key];\n    ++count;\n  }\n  return zipped;\n};\n\n/**\n * Generate an object from an array of alternating name, value items.\n * @param {Array} array The array of name, value [, name, value]*.\n * @return {Object} The zipped up object.\n */\nexports.unzip = function(array) {\n  const object = {};\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\n    object[array[i]] = array[i + 1];\n  }\n  return object;\n};\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","const util = require('util');\n\nconst enc = encodeURIComponent;\n\nconst serializers = {\n  string: function(str) {\n    if (typeof str !== 'string') {\n      throw new Error('Expected string to serialize: ' + str);\n    }\n    return enc(str);\n  },\n  number: function(num) {\n    if (typeof num !== 'number') {\n      throw new Error('Expected number to serialize: ' + num);\n    }\n    return enc(String(num));\n  },\n  boolean: function(bool) {\n    if (typeof bool !== 'boolean') {\n      throw new Error('Expected boolean to serialize: ' + bool);\n    }\n    return bool ? '1' : '0';\n  },\n  date: function(date) {\n    if (!util.isDate(date)) {\n      throw new Error('Expected date to serialize: ' + date);\n    }\n    return enc(date.toISOString());\n  },\n  array: function(array) {\n    if (!util.isArray(array)) {\n      throw new Error('Expected array to serialize: ' + array);\n    }\n    return enc(JSON.stringify(array));\n  },\n  object: function(obj) {\n    return enc(JSON.stringify(obj));\n  }\n};\n\n/**\n * Get a serializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(*): string} Function that serializes a value to a string.\n */\nexports.get = function(type) {\n  if (!(type in serializers)) {\n    throw new Error('Unable to serialize type: ' + type);\n  }\n  return serializers[type];\n};\n","/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */\n'use strict';\n\nvar colorScale = require('./colorScale');\nvar lerp = require('lerp')\n\nmodule.exports = createColormap;\n\nfunction createColormap (spec) {\n    /*\n     * Default Options\n     */\n    var indicies, fromrgba, torgba,\n        nsteps, cmap, colormap, format,\n        nshades, colors, alpha, i;\n\n    if ( !spec ) spec = {};\n\n    nshades = (spec.nshades || 72) - 1;\n    format = spec.format || 'hex';\n\n    colormap = spec.colormap;\n    if (!colormap) colormap = 'jet';\n\n    if (typeof colormap === 'string') {\n        colormap = colormap.toLowerCase();\n\n        if (!colorScale[colormap]) {\n            throw Error(colormap + ' not a supported colorscale');\n        }\n\n        cmap = colorScale[colormap];\n\n    } else if (Array.isArray(colormap)) {\n        cmap = colormap.slice();\n\n    } else {\n        throw Error('unsupported colormap option', colormap);\n    }\n\n    if (cmap.length > nshades + 1) {\n        throw new Error(\n            colormap+' map requires nshades to be at least size '+cmap.length\n        );\n    }\n\n    if (!Array.isArray(spec.alpha)) {\n\n        if (typeof spec.alpha === 'number') {\n            alpha = [spec.alpha, spec.alpha];\n\n        } else {\n            alpha = [1, 1];\n        }\n\n    } else if (spec.alpha.length !== 2) {\n        alpha = [1, 1];\n\n    } else {\n        alpha = spec.alpha.slice();\n    }\n\n    // map index points from 0..1 to 0..n-1\n    indicies = cmap.map(function(c) {\n        return Math.round(c.index * nshades);\n    });\n\n    // Add alpha channel to the map\n    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\n    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\n\n    var steps = cmap.map(function(c, i) {\n        var index = cmap[i].index\n\n        var rgba = cmap[i].rgb.slice();\n\n        // if user supplies their own map use it\n        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\n            return rgba\n        }\n        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;\n\n        return rgba\n    })\n\n\n    /*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */\n    var colors = []\n    for (i = 0; i < indicies.length-1; ++i) {\n        nsteps = indicies[i+1] - indicies[i];\n        fromrgba = steps[i];\n        torgba = steps[i+1];\n\n        for (var j = 0; j < nsteps; j++) {\n            var amt = j / nsteps\n            colors.push([\n                Math.round(lerp(fromrgba[0], torgba[0], amt)),\n                Math.round(lerp(fromrgba[1], torgba[1], amt)),\n                Math.round(lerp(fromrgba[2], torgba[2], amt)),\n                lerp(fromrgba[3], torgba[3], amt)\n            ])\n        }\n    }\n\n    //add 1 step as last value\n    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\n\n    if (format === 'hex') colors = colors.map( rgb2hex );\n    else if (format === 'rgbaString') colors = colors.map( rgbaStr );\n    else if (format === 'float') colors = colors.map( rgb2float );\n\n    return colors;\n};\n\nfunction rgb2float (rgba) {\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ]\n}\n\nfunction rgb2hex (rgba) {\n    var dig, hex = '#';\n    for (var i = 0; i < 3; ++i) {\n        dig = rgba[i];\n        dig = dig.toString(16);\n        hex += ('00' + dig).substr( dig.length );\n    }\n    return hex;\n}\n\nfunction rgbaStr (rgba) {\n    return 'rgba(' + rgba.join(',') + ')';\n}\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","const Schema = require('./schema').Schema;\nconst util = require('./util');\nconst serializers = require('./serializers');\n\n/**\n * An object backed store of string values.  Allows registering multiple state\n * providers.\n * @param {Object} values Initial serialized values.\n * @param {function(Object)} callback Called with an object of serialized\n *     values and defaults whenever a provider updates state.\n * @constructor\n */\nconst Store = (exports.Store = function(values, callback) {\n  this._values = values;\n  this._defaults = {};\n  this._providers = [];\n  this._callback = callback;\n  this._callbackTimer = null;\n});\n\nStore.prototype._scheduleCallback = function() {\n  if (this._callbackTimer) {\n    clearTimeout(this._callbackTimer);\n  }\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\n};\n\nStore.prototype._debouncedCallback = function() {\n  this._callbackTimer = null;\n  this._callback(this._values, this._defaults);\n};\n\nStore.prototype.update = function(values) {\n  if (this._updateTimer) {\n    clearTimeout(this._updateTimer);\n  }\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\n};\n\nStore.prototype._debouncedUpdate = function(newValues) {\n  this._updateTimer = null;\n  const values = this._values;\n  const providers = this._providers.slice(); // callbacks may unregister providers\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const provider = providers[i];\n    const schema = provider.schema;\n    let changed = false;\n    const state = {};\n    schema.forEachKey(function(key, prefixed) {\n      let deserialized;\n      if (!(prefixed in newValues)) {\n        deserialized = schema.getDefault(key);\n        const serializedDefault = schema.serialize(key, deserialized);\n        if (values[prefixed] !== serializedDefault) {\n          changed = true;\n          values[prefixed] = serializedDefault;\n          state[key] = deserialized;\n        }\n      } else if (values[prefixed] !== newValues[prefixed]) {\n        try {\n          deserialized = schema.deserialize(key, newValues[prefixed]);\n          values[prefixed] = newValues[prefixed];\n          state[key] = deserialized;\n          changed = true;\n        } catch (err) {\n          // invalid value, pass\n        }\n      }\n    });\n    if (changed && this._providers.indexOf(provider) >= 0) {\n      provider.callback(state);\n    }\n  }\n};\n\n/**\n * Unregister a provider.  Deletes the provider's values from the underlying\n * store and calls the store's callback.\n * @param {Function} callback The provider's callback.\n */\nStore.prototype.unregister = function(callback) {\n  let removedProvider;\n  this._providers = this._providers.filter(function(provider) {\n    const remove = provider.callback === callback;\n    if (remove) {\n      removedProvider = provider;\n    }\n    return !remove;\n  });\n  if (!removedProvider) {\n    throw new Error('Unable to unregister hashed state provider');\n  }\n  const values = this._values;\n  const defaults = this._defaults;\n  removedProvider.schema.forEachKey(function(key, prefixed) {\n    delete values[prefixed];\n    delete defaults[prefixed];\n  });\n  this._scheduleCallback();\n};\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called by the store on state changes.\n * @return {function(Object)} Called by the provider on state changes.\n */\nStore.prototype.register = function(config, callback) {\n  const provider = {\n    schema: new Schema(config),\n    callback: callback\n  };\n\n  // ensure there are no conflicts with existing providers\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\n    if (conflicts) {\n      throw new Error(\n        'Provider already registered using the same name: ' + conflicts\n      );\n    }\n    if (provider.callback === this._providers[i].callback) {\n      throw new Error('Provider already registered with the same callback');\n    }\n  }\n\n  this._providers.push(provider);\n  this._initializeProvider(provider);\n\n  return function update(state) {\n    if (this._providers.indexOf(provider) === -1) {\n      throw new Error('Unregistered provider attempting to update state');\n    }\n    const schema = provider.schema;\n    let changed = false;\n    const values = this._values;\n    schema.forEachKey(function(key, prefixed) {\n      if (key in state) {\n        const serializedValue = schema.serialize(key, state[key], state);\n        if (values[prefixed] !== serializedValue) {\n          changed = true;\n          values[prefixed] = serializedValue;\n        }\n      }\n    });\n    if (changed) {\n      this._scheduleCallback();\n    }\n  }.bind(this);\n};\n\n/**\n * Call provider with initial values.\n * @param {Object} provider Provider to be initialized.\n */\nStore.prototype._initializeProvider = function(provider) {\n  const state = {};\n  const defaults = {};\n  const values = this._values;\n  provider.schema.forEachKey(function(key, prefixed) {\n    let deserializedValue;\n    const deserializedDefault = provider.schema.getDefault(key);\n    const serializedDefault = provider.schema.serialize(\n      key,\n      deserializedDefault\n    );\n    if (prefixed in values) {\n      try {\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\n      } catch (err) {\n        deserializedValue = deserializedDefault;\n      }\n    } else {\n      deserializedValue = deserializedDefault;\n    }\n    state[key] = deserializedValue;\n    defaults[prefixed] = serializedDefault;\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\n  });\n  for (const prefixed in defaults) {\n    this._defaults[prefixed] = defaults[prefixed];\n  }\n  provider.callback(state);\n};\n\n/**\n * Serialize values with provider serializers where available.\n * @param {Object} values Values to be serialized.\n * @return {Object} The serialized values.\n */\nStore.prototype.serialize = function(values) {\n  const serialized = {};\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const provider = this._providers[i];\n    provider.schema.forEachKey(function(key, prefixed) {\n      if (prefixed in values) {\n        serialized[prefixed] = provider.schema.serialize(\n          key,\n          values[prefixed],\n          values\n        );\n      }\n    });\n  }\n  for (const key in values) {\n    if (!(key in serialized)) {\n      const value = values[key];\n      const type = util.typeOf(value);\n      const serializer = serializers.get(type);\n      serialized[key] = serializer(value);\n    }\n  }\n  return serialized;\n};\n","const Field = require('./field').Field;\nconst util = require('./util');\n\n/**\n * Create a new schema.  A schema is a collection of field definitions.\n * @param {Object} config Keys are field names, values are field configs.\n * @constructor\n */\nconst Schema = (exports.Schema = function(config) {\n  config = util.extend({}, config);\n  const fields = {};\n  let prefix;\n  if ('_' in config) {\n    prefix = config._;\n    delete config._;\n  }\n  for (const key in config) {\n    fields[key] = new Field(config[key]);\n  }\n  this._prefix = prefix;\n  this._fields = fields;\n});\n\n/**\n * Get the prefixed version of a key.\n * @param {string} key The key.\n * @return {string} The prefixed key.\n */\nSchema.prototype.getPrefixed = function(key) {\n  return this._prefix ? this._prefix + '.' + key : key;\n};\n\n/**\n * Call a callback for each field key.\n * @param {function(string, number)} callback Called with a local field key and\n *     a prefixed key.\n * @param {Object} thisArg This argument for the callback.\n */\nSchema.prototype.forEachKey = function(callback, thisArg) {\n  let more;\n  for (const key in this._fields) {\n    more = callback.call(thisArg, key, this.getPrefixed(key));\n    if (more === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Serialize a value.\n * @param {string} key The key or field name.\n * @param {*} value The value to serialize.\n * @param {Object} values Additional values for providers to use when serializing.\n * @return {string} The serialized value.\n */\nSchema.prototype.serialize = function(key, value, values) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].serialize(value, values);\n};\n\n/**\n * Deserialize a value.\n * @param {string} key The key or field name.\n * @param {string} str The serialized value.\n * @return {*} The deserialized value.\n */\nSchema.prototype.deserialize = function(key, str) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].deserialize(str);\n};\n\n/**\n * Get the default value for a particular field.\n * @param {string} key The key or field name.\n * @return {*} The default value.\n */\nSchema.prototype.getDefault = function(key) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].default;\n};\n\n/**\n * Determine if one schema conflicts with another.  Two schemas conflict if\n * any of their prefixed keys are the same.\n * @param {Schema} other The other schema.\n * @return {boolean|string} This schema conflicts with the other.  If the two\n *     schemas conflict, the return will be the first conflicting key (with\n *     any prefix).\n */\nSchema.prototype.conflicts = function(other) {\n  const thisPrefixedKeys = {};\n  for (const key in this._fields) {\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\n  }\n\n  let conflicts = false;\n  other.forEachKey(function(_, prefixed) {\n    if (prefixed in thisPrefixedKeys) {\n      conflicts = prefixed;\n    }\n    return !conflicts;\n  });\n  return conflicts;\n};\n","const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","const util = require('./util');\n\nconst dec = decodeURIComponent;\n\nconst noop = function() {};\n\nconst deserializers = {\n  string: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    return dec(str);\n  },\n  number: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const num = Number(dec(str));\n    if (isNaN(num)) {\n      throw new Error('Expected to deserialize a number: ' + str);\n    }\n    return num;\n  },\n  boolean: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let bool;\n    if (str === '1') {\n      bool = true;\n    } else if (str === '0') {\n      bool = false;\n    } else {\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\n    }\n    return bool;\n  },\n  date: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const date = new Date(dec(str));\n    if (isNaN(date.getTime())) {\n      throw new Error('Expected to deserialize a date: ' + str);\n    }\n    return date;\n  },\n  array: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let array;\n    try {\n      array = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!array || util.typeOf(array) !== 'array') {\n      throw new Error('Expected to deserialize an array: ' + str);\n    }\n    return array;\n  },\n  object: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let obj;\n    try {\n      obj = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!obj || util.typeOf(obj) !== 'object') {\n      throw new Error('Expected to deserialize an object: ' + str);\n    }\n    return obj;\n  }\n};\n\n/**\n * Get a deserializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(string): *} Function that deserializes a string to a value.\n */\nexports.get = function(type) {\n  if (!(type in deserializers)) {\n    throw new Error('Unable to deserialize type: ' + type);\n  }\n  return deserializers[type];\n};\n","const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n","module.exports={\n\t\"jet\":[{\"index\":0,\"rgb\":[0,0,131]},{\"index\":0.125,\"rgb\":[0,60,170]},{\"index\":0.375,\"rgb\":[5,255,255]},{\"index\":0.625,\"rgb\":[255,255,0]},{\"index\":0.875,\"rgb\":[250,0,0]},{\"index\":1,\"rgb\":[128,0,0]}],\n\n\t\"hsv\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":0.169,\"rgb\":[253,255,2]},{\"index\":0.173,\"rgb\":[247,255,2]},{\"index\":0.337,\"rgb\":[0,252,4]},{\"index\":0.341,\"rgb\":[0,252,10]},{\"index\":0.506,\"rgb\":[1,249,255]},{\"index\":0.671,\"rgb\":[2,0,253]},{\"index\":0.675,\"rgb\":[8,0,253]},{\"index\":0.839,\"rgb\":[255,0,251]},{\"index\":0.843,\"rgb\":[255,0,245]},{\"index\":1,\"rgb\":[255,0,6]}],\n\n\t\"hot\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.3,\"rgb\":[230,0,0]},{\"index\":0.6,\"rgb\":[255,210,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"cool\":[{\"index\":0,\"rgb\":[0,255,255]},{\"index\":1,\"rgb\":[255,0,255]}],\n\n\t\"spring\":[{\"index\":0,\"rgb\":[255,0,255]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"summer\":[{\"index\":0,\"rgb\":[0,128,102]},{\"index\":1,\"rgb\":[255,255,102]}],\n\n\t\"autumn\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"winter\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[0,255,128]}],\n\n\t\"bone\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.376,\"rgb\":[84,84,116]},{\"index\":0.753,\"rgb\":[169,200,200]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"copper\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.804,\"rgb\":[255,160,102]},{\"index\":1,\"rgb\":[255,199,127]}],\n\n\t\"greys\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"yignbu\":[{\"index\":0,\"rgb\":[8,29,88]},{\"index\":0.125,\"rgb\":[37,52,148]},{\"index\":0.25,\"rgb\":[34,94,168]},{\"index\":0.375,\"rgb\":[29,145,192]},{\"index\":0.5,\"rgb\":[65,182,196]},{\"index\":0.625,\"rgb\":[127,205,187]},{\"index\":0.75,\"rgb\":[199,233,180]},{\"index\":0.875,\"rgb\":[237,248,217]},{\"index\":1,\"rgb\":[255,255,217]}],\n\n\t\"greens\":[{\"index\":0,\"rgb\":[0,68,27]},{\"index\":0.125,\"rgb\":[0,109,44]},{\"index\":0.25,\"rgb\":[35,139,69]},{\"index\":0.375,\"rgb\":[65,171,93]},{\"index\":0.5,\"rgb\":[116,196,118]},{\"index\":0.625,\"rgb\":[161,217,155]},{\"index\":0.75,\"rgb\":[199,233,192]},{\"index\":0.875,\"rgb\":[229,245,224]},{\"index\":1,\"rgb\":[247,252,245]}],\n\n\t\"yiorrd\":[{\"index\":0,\"rgb\":[128,0,38]},{\"index\":0.125,\"rgb\":[189,0,38]},{\"index\":0.25,\"rgb\":[227,26,28]},{\"index\":0.375,\"rgb\":[252,78,42]},{\"index\":0.5,\"rgb\":[253,141,60]},{\"index\":0.625,\"rgb\":[254,178,76]},{\"index\":0.75,\"rgb\":[254,217,118]},{\"index\":0.875,\"rgb\":[255,237,160]},{\"index\":1,\"rgb\":[255,255,204]}],\n\n\t\"bluered\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rdbu\":[{\"index\":0,\"rgb\":[5,10,172]},{\"index\":0.35,\"rgb\":[106,137,247]},{\"index\":0.5,\"rgb\":[190,190,190]},{\"index\":0.6,\"rgb\":[220,170,132]},{\"index\":0.7,\"rgb\":[230,145,90]},{\"index\":1,\"rgb\":[178,10,28]}],\n\n\t\"picnic\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":0.1,\"rgb\":[51,153,255]},{\"index\":0.2,\"rgb\":[102,204,255]},{\"index\":0.3,\"rgb\":[153,204,255]},{\"index\":0.4,\"rgb\":[204,204,255]},{\"index\":0.5,\"rgb\":[255,255,255]},{\"index\":0.6,\"rgb\":[255,204,255]},{\"index\":0.7,\"rgb\":[255,153,255]},{\"index\":0.8,\"rgb\":[255,102,204]},{\"index\":0.9,\"rgb\":[255,102,102]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rainbow\":[{\"index\":0,\"rgb\":[150,0,90]},{\"index\":0.125,\"rgb\":[0,0,200]},{\"index\":0.25,\"rgb\":[0,25,255]},{\"index\":0.375,\"rgb\":[0,152,255]},{\"index\":0.5,\"rgb\":[44,255,150]},{\"index\":0.625,\"rgb\":[151,255,0]},{\"index\":0.75,\"rgb\":[255,234,0]},{\"index\":0.875,\"rgb\":[255,111,0]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"portland\":[{\"index\":0,\"rgb\":[12,51,131]},{\"index\":0.25,\"rgb\":[10,136,186]},{\"index\":0.5,\"rgb\":[242,211,56]},{\"index\":0.75,\"rgb\":[242,143,56]},{\"index\":1,\"rgb\":[217,30,30]}],\n\n\t\"blackbody\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.2,\"rgb\":[230,0,0]},{\"index\":0.4,\"rgb\":[230,210,0]},{\"index\":0.7,\"rgb\":[255,255,255]},{\"index\":1,\"rgb\":[160,200,255]}],\n\n\t\"earth\":[{\"index\":0,\"rgb\":[0,0,130]},{\"index\":0.1,\"rgb\":[0,180,180]},{\"index\":0.2,\"rgb\":[40,210,40]},{\"index\":0.4,\"rgb\":[230,230,50]},{\"index\":0.6,\"rgb\":[120,70,20]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"electric\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.15,\"rgb\":[30,0,100]},{\"index\":0.4,\"rgb\":[120,0,100]},{\"index\":0.6,\"rgb\":[160,90,0]},{\"index\":0.8,\"rgb\":[230,200,0]},{\"index\":1,\"rgb\":[255,250,220]}],\n\n\t\"alpha\": [{\"index\":0, \"rgb\": [255,255,255,0]},{\"index\":1, \"rgb\": [255,255,255,1]}],\n\n\t\"viridis\": [{\"index\":0,\"rgb\":[68,1,84]},{\"index\":0.13,\"rgb\":[71,44,122]},{\"index\":0.25,\"rgb\":[59,81,139]},{\"index\":0.38,\"rgb\":[44,113,142]},{\"index\":0.5,\"rgb\":[33,144,141]},{\"index\":0.63,\"rgb\":[39,173,129]},{\"index\":0.75,\"rgb\":[92,200,99]},{\"index\":0.88,\"rgb\":[170,220,50]},{\"index\":1,\"rgb\":[253,231,37]}],\n\n\t\"inferno\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[31,12,72]},{\"index\":0.25,\"rgb\":[85,15,109]},{\"index\":0.38,\"rgb\":[136,34,106]},{\"index\":0.5,\"rgb\":[186,54,85]},{\"index\":0.63,\"rgb\":[227,89,51]},{\"index\":0.75,\"rgb\":[249,140,10]},{\"index\":0.88,\"rgb\":[249,201,50]},{\"index\":1,\"rgb\":[252,255,164]}],\n\n\t\"magma\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[28,16,68]},{\"index\":0.25,\"rgb\":[79,18,123]},{\"index\":0.38,\"rgb\":[129,37,129]},{\"index\":0.5,\"rgb\":[181,54,122]},{\"index\":0.63,\"rgb\":[229,80,100]},{\"index\":0.75,\"rgb\":[251,135,97]},{\"index\":0.88,\"rgb\":[254,194,135]},{\"index\":1,\"rgb\":[252,253,191]}],\n\n\t\"plasma\": [{\"index\":0,\"rgb\":[13,8,135]},{\"index\":0.13,\"rgb\":[75,3,161]},{\"index\":0.25,\"rgb\":[125,3,168]},{\"index\":0.38,\"rgb\":[168,34,150]},{\"index\":0.5,\"rgb\":[203,70,121]},{\"index\":0.63,\"rgb\":[229,107,93]},{\"index\":0.75,\"rgb\":[248,148,65]},{\"index\":0.88,\"rgb\":[253,195,40]},{\"index\":1,\"rgb\":[240,249,33]}],\n\n\t\"warm\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[172,0,187]},{\"index\":0.25,\"rgb\":[219,0,170]},{\"index\":0.38,\"rgb\":[255,0,130]},{\"index\":0.5,\"rgb\":[255,63,74]},{\"index\":0.63,\"rgb\":[255,123,0]},{\"index\":0.75,\"rgb\":[234,176,0]},{\"index\":0.88,\"rgb\":[190,228,0]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"cool\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[116,0,218]},{\"index\":0.25,\"rgb\":[98,74,237]},{\"index\":0.38,\"rgb\":[68,146,231]},{\"index\":0.5,\"rgb\":[0,204,197]},{\"index\":0.63,\"rgb\":[0,247,146]},{\"index\":0.75,\"rgb\":[0,255,88]},{\"index\":0.88,\"rgb\":[40,255,8]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"rainbow-soft\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.1,\"rgb\":[199,0,180]},{\"index\":0.2,\"rgb\":[255,0,121]},{\"index\":0.3,\"rgb\":[255,108,0]},{\"index\":0.4,\"rgb\":[222,194,0]},{\"index\":0.5,\"rgb\":[150,255,0]},{\"index\":0.6,\"rgb\":[0,255,55]},{\"index\":0.7,\"rgb\":[0,246,150]},{\"index\":0.8,\"rgb\":[50,167,222]},{\"index\":0.9,\"rgb\":[103,51,235]},{\"index\":1,\"rgb\":[124,0,186]}],\n\n\t\"bathymetry\": [{\"index\":0,\"rgb\":[40,26,44]},{\"index\":0.13,\"rgb\":[59,49,90]},{\"index\":0.25,\"rgb\":[64,76,139]},{\"index\":0.38,\"rgb\":[63,110,151]},{\"index\":0.5,\"rgb\":[72,142,158]},{\"index\":0.63,\"rgb\":[85,174,163]},{\"index\":0.75,\"rgb\":[120,206,163]},{\"index\":0.88,\"rgb\":[187,230,172]},{\"index\":1,\"rgb\":[253,254,204]}],\n\n\t\"cdom\": [{\"index\":0,\"rgb\":[47,15,62]},{\"index\":0.13,\"rgb\":[87,23,86]},{\"index\":0.25,\"rgb\":[130,28,99]},{\"index\":0.38,\"rgb\":[171,41,96]},{\"index\":0.5,\"rgb\":[206,67,86]},{\"index\":0.63,\"rgb\":[230,106,84]},{\"index\":0.75,\"rgb\":[242,149,103]},{\"index\":0.88,\"rgb\":[249,193,135]},{\"index\":1,\"rgb\":[254,237,176]}],\n\n\t\"chlorophyll\": [{\"index\":0,\"rgb\":[18,36,20]},{\"index\":0.13,\"rgb\":[25,63,41]},{\"index\":0.25,\"rgb\":[24,91,59]},{\"index\":0.38,\"rgb\":[13,119,72]},{\"index\":0.5,\"rgb\":[18,148,80]},{\"index\":0.63,\"rgb\":[80,173,89]},{\"index\":0.75,\"rgb\":[132,196,122]},{\"index\":0.88,\"rgb\":[175,221,162]},{\"index\":1,\"rgb\":[215,249,208]}],\n\n\t\"density\": [{\"index\":0,\"rgb\":[54,14,36]},{\"index\":0.13,\"rgb\":[89,23,80]},{\"index\":0.25,\"rgb\":[110,45,132]},{\"index\":0.38,\"rgb\":[120,77,178]},{\"index\":0.5,\"rgb\":[120,113,213]},{\"index\":0.63,\"rgb\":[115,151,228]},{\"index\":0.75,\"rgb\":[134,185,227]},{\"index\":0.88,\"rgb\":[177,214,227]},{\"index\":1,\"rgb\":[230,241,241]}],\n\n\t\"freesurface-blue\": [{\"index\":0,\"rgb\":[30,4,110]},{\"index\":0.13,\"rgb\":[47,14,176]},{\"index\":0.25,\"rgb\":[41,45,236]},{\"index\":0.38,\"rgb\":[25,99,212]},{\"index\":0.5,\"rgb\":[68,131,200]},{\"index\":0.63,\"rgb\":[114,156,197]},{\"index\":0.75,\"rgb\":[157,181,203]},{\"index\":0.88,\"rgb\":[200,208,216]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"freesurface-red\": [{\"index\":0,\"rgb\":[60,9,18]},{\"index\":0.13,\"rgb\":[100,17,27]},{\"index\":0.25,\"rgb\":[142,20,29]},{\"index\":0.38,\"rgb\":[177,43,27]},{\"index\":0.5,\"rgb\":[192,87,63]},{\"index\":0.63,\"rgb\":[205,125,105]},{\"index\":0.75,\"rgb\":[216,162,148]},{\"index\":0.88,\"rgb\":[227,199,193]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"oxygen\": [{\"index\":0,\"rgb\":[64,5,5]},{\"index\":0.13,\"rgb\":[106,6,15]},{\"index\":0.25,\"rgb\":[144,26,7]},{\"index\":0.38,\"rgb\":[168,64,3]},{\"index\":0.5,\"rgb\":[188,100,4]},{\"index\":0.63,\"rgb\":[206,136,11]},{\"index\":0.75,\"rgb\":[220,174,25]},{\"index\":0.88,\"rgb\":[231,215,44]},{\"index\":1,\"rgb\":[248,254,105]}],\n\n\t\"par\": [{\"index\":0,\"rgb\":[51,20,24]},{\"index\":0.13,\"rgb\":[90,32,35]},{\"index\":0.25,\"rgb\":[129,44,34]},{\"index\":0.38,\"rgb\":[159,68,25]},{\"index\":0.5,\"rgb\":[182,99,19]},{\"index\":0.63,\"rgb\":[199,134,22]},{\"index\":0.75,\"rgb\":[212,171,35]},{\"index\":0.88,\"rgb\":[221,210,54]},{\"index\":1,\"rgb\":[225,253,75]}],\n\n\t\"phase\": [{\"index\":0,\"rgb\":[145,105,18]},{\"index\":0.13,\"rgb\":[184,71,38]},{\"index\":0.25,\"rgb\":[186,58,115]},{\"index\":0.38,\"rgb\":[160,71,185]},{\"index\":0.5,\"rgb\":[110,97,218]},{\"index\":0.63,\"rgb\":[50,123,164]},{\"index\":0.75,\"rgb\":[31,131,110]},{\"index\":0.88,\"rgb\":[77,129,34]},{\"index\":1,\"rgb\":[145,105,18]}],\n\n\t\"salinity\": [{\"index\":0,\"rgb\":[42,24,108]},{\"index\":0.13,\"rgb\":[33,50,162]},{\"index\":0.25,\"rgb\":[15,90,145]},{\"index\":0.38,\"rgb\":[40,118,137]},{\"index\":0.5,\"rgb\":[59,146,135]},{\"index\":0.63,\"rgb\":[79,175,126]},{\"index\":0.75,\"rgb\":[120,203,104]},{\"index\":0.88,\"rgb\":[193,221,100]},{\"index\":1,\"rgb\":[253,239,154]}],\n\n\t\"temperature\": [{\"index\":0,\"rgb\":[4,35,51]},{\"index\":0.13,\"rgb\":[23,51,122]},{\"index\":0.25,\"rgb\":[85,59,157]},{\"index\":0.38,\"rgb\":[129,79,143]},{\"index\":0.5,\"rgb\":[175,95,130]},{\"index\":0.63,\"rgb\":[222,112,101]},{\"index\":0.75,\"rgb\":[249,146,66]},{\"index\":0.88,\"rgb\":[249,196,65]},{\"index\":1,\"rgb\":[232,250,91]}],\n\n\t\"turbidity\": [{\"index\":0,\"rgb\":[34,31,27]},{\"index\":0.13,\"rgb\":[65,50,41]},{\"index\":0.25,\"rgb\":[98,69,52]},{\"index\":0.38,\"rgb\":[131,89,57]},{\"index\":0.5,\"rgb\":[161,112,59]},{\"index\":0.63,\"rgb\":[185,140,66]},{\"index\":0.75,\"rgb\":[202,174,88]},{\"index\":0.88,\"rgb\":[216,209,126]},{\"index\":1,\"rgb\":[233,246,171]}],\n\n\t\"velocity-blue\": [{\"index\":0,\"rgb\":[17,32,64]},{\"index\":0.13,\"rgb\":[35,52,116]},{\"index\":0.25,\"rgb\":[29,81,156]},{\"index\":0.38,\"rgb\":[31,113,162]},{\"index\":0.5,\"rgb\":[50,144,169]},{\"index\":0.63,\"rgb\":[87,173,176]},{\"index\":0.75,\"rgb\":[149,196,189]},{\"index\":0.88,\"rgb\":[203,221,211]},{\"index\":1,\"rgb\":[254,251,230]}],\n\n\t\"velocity-green\": [{\"index\":0,\"rgb\":[23,35,19]},{\"index\":0.13,\"rgb\":[24,64,38]},{\"index\":0.25,\"rgb\":[11,95,45]},{\"index\":0.38,\"rgb\":[39,123,35]},{\"index\":0.5,\"rgb\":[95,146,12]},{\"index\":0.63,\"rgb\":[152,165,18]},{\"index\":0.75,\"rgb\":[201,186,69]},{\"index\":0.88,\"rgb\":[233,216,137]},{\"index\":1,\"rgb\":[255,253,205]}],\n\n\t\"cubehelix\": [{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.07,\"rgb\":[22,5,59]},{\"index\":0.13,\"rgb\":[60,4,105]},{\"index\":0.2,\"rgb\":[109,1,135]},{\"index\":0.27,\"rgb\":[161,0,147]},{\"index\":0.33,\"rgb\":[210,2,142]},{\"index\":0.4,\"rgb\":[251,11,123]},{\"index\":0.47,\"rgb\":[255,29,97]},{\"index\":0.53,\"rgb\":[255,54,69]},{\"index\":0.6,\"rgb\":[255,85,46]},{\"index\":0.67,\"rgb\":[255,120,34]},{\"index\":0.73,\"rgb\":[255,157,37]},{\"index\":0.8,\"rgb\":[241,191,57]},{\"index\":0.87,\"rgb\":[224,220,93]},{\"index\":0.93,\"rgb\":[218,241,142]},{\"index\":1,\"rgb\":[227,253,198]}]\n};\n","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors ?\n            options.formatConstructors : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection ?\n            getProjection(options.projection) : null;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        var features = [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                break;\n            }\n        }\n        if (this.source_) {\n            this.source_.clear();\n            this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\n                listen(dropArea, EventType.DROP, handleStop, this)\n            ];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        _super.prototype.setActive.call(this, active);\n        if (active) {\n            this.registerListeners_();\n        }\n        else {\n            this.unregisterListeners_();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return format.readFeatures(text, options);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    return DragAndDrop;\n}(Interaction));\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n        var file = files.item(i);\n        var reader = new FileReader();\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n        reader.readAsText(file);\n    }\n}\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @override\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport { POINTER_TYPE } from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {GeometryType}\n         * @private\n         */\n        _this.type_ = /** @type {GeometryType} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints ?\n            options.minPoints :\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n                        new Circle([NaN, NaN]);\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance ?\n            options.clickTolerance * options.clickTolerance : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileInteracting: true\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition ?\n                options.freehandCondition : shiftKeyOnly;\n        }\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @override\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                pass = this.handlePointerMove_(event);\n            }\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == POINTER_TYPE ||\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.finishCoordinate_ = null;\n            this.abortDrawing_();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @return {boolean} Pass the event to other interactions.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_ ?\n                squaredDistance > this.squaredClickTolerance_ :\n                squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return true;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n        return true;\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        if (coordinates.length === 0) {\n            this.finishCoordinate_ = null;\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        if (sketchFeature) {\n            this.sketchFeature_ = null;\n            this.sketchPoint_ = null;\n            this.sketchLine_ = null;\n            this.overlay_.getSource().clear(true);\n        }\n        return sketchFeature;\n    };\n    /**\n     * Extend an existing geometry by adding additional points. This only works\n     * on features with `LineString` geometries, where the interaction will\n     * extend lines by adding points to the end of the coordinates array.\n     * @param {!Feature} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = /** @type {LineString} */ (geometry);\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing_();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry) {\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n            fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return (function (coordinates, opt_geometry) {\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n        var boxCoordinates = [[\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent)\n            ]];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        return geometry;\n    });\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT ||\n        type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return (\n    /** @type {!Mode} */ (mode));\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { equals } from '../array.js';\nimport { equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment } from '../coordinate.js';\nimport { listen, unlisten } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { always, primaryAction, altKeyOnly, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer, createOrUpdateFromCoordinate } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n     * Associated {@link module:ol/MapBrowserPointerEvent}.\n     */\n    function ModifyEvent(type, features, mapBrowserPointerEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserPointerEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition ?\n            options.deleteCondition : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition ?\n            options.insertVertexCondition : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.modified_ = false;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'Circle': _this.writeCircleGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        var features;\n        if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            listen(_this.source_, VectorEventType.ADDFEATURE, _this.handleSourceAdd_, _this);\n            listen(_this.source_, VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_, _this);\n        }\n        else {\n            features = options.features;\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features or a source');\n        }\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        listen(_this.features_, CollectionEventType.ADD, _this.handleFeatureAdd_, _this);\n        listen(_this.features_, CollectionEventType.REMOVE, _this.handleFeatureRemove_, _this);\n        /**\n         * @type {import(\"../MapBrowserPointerEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n            this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt) {\n        if (!this.modified_) {\n            this.modified_ = true;\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features\n        // is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        unlisten(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates]\n        });\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates]\n            });\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment\n            });\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = /** @type {SegmentData} */ ({\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment\n                    });\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var circumferenceSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(coordinates);\n        }\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @override\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt);\n        var vertex = evt.coordinate;\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var depth = segmentData.depth;\n            var geometry = segmentData.geometry;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else { // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n        var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n        this.dragSegments_.length = 0;\n        this.modified_ = false;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var insertVertices = [];\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            var vertex = geometry.getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.feature);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n                    if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                }\n                else if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                }\n                else if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() ===\n                        GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                }\n                else if (getUid(segment) in this.vertexSegments_ &&\n                    (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push([segmentDataMatch, vertex]);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_.apply(this, insertVertices[j]);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n                this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.modified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n                pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n        };\n        var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate), map.getView().getResolution() * this.pixelTolerance_);\n        var rBush = this.rBush_;\n        var nodes = rBush.getInExtent(box);\n        if (nodes.length > 0) {\n            nodes.sort(sortByDistance);\n            var node = nodes[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex);\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1]) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0])))) {\n                            vertexSegments[getUid(segment)] = true;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                vertexSegments[getUid(closestSegment)] = true;\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = /** @type {number} */ (segmentData.index);\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        var newSegmentData = /** @type {SegmentData} */ ({\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index\n        });\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        var newSegmentData2 = /** @type {SegmentData} */ ({\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1\n        });\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    var newSegmentData = /** @type {SegmentData} */ ({\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments\n                    });\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined || segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        return geometry.getClosestPoint(pointCoordinates);\n    }\n    return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment } from '../coordinate.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport { getValues } from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if ( /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */(evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n    }\n    else if ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element);\n    }\n}\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * Used for distance sorting in sortByDistance_\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.pixelCoordinate_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {function(SegmentData, SegmentData): number}\n         * @private\n         */\n        _this.sortByDistance_ = sortByDistance.bind(_this);\n        /**\n        * Segment RTree for each layer\n        * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n        * @private\n        */\n        _this.rBush_ = new RBush();\n        /**\n        * @const\n        * @private\n        * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n        */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_,\n            'Circle': _this.writeCircleGeometry_\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter.call(this, feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n        var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !==\n                    GeometryType.CIRCLE;\n            });\n        }\n        var snappedToVertex = false;\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n        if (segments.length > 0) {\n            this.pixelCoordinate_ = pixelCoordinate;\n            segments.sort(this.sortByDistance_);\n            var closestSegment = segments[0].segment;\n            var isCircle = segments[0].feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (this.vertex_ && !this.edge_) {\n                pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n                squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n                dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                snappedToVertex = dist <= this.pixelTolerance_;\n                if (snappedToVertex) {\n                    snapped = true;\n                    vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    vertexPixel = map.getPixelFromCoordinate(vertex);\n                }\n            }\n            else if (this.edge_) {\n                if (isCircle) {\n                    vertex = closestOnCircle(pixelCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n                }\n                else {\n                    vertex = closestOnSegment(pixelCoordinate, closestSegment);\n                }\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n                if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                    snapped = true;\n                    if (this.vertex_ && !isCircle) {\n                        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                        squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                        squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                        snappedToVertex = dist <= this.pixelTolerance_;\n                        if (snappedToVertex) {\n                            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                            vertexPixel = map.getPixelFromCoordinate(vertex);\n                        }\n                    }\n                }\n            }\n            if (snapped) {\n                vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n            }\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var polygon = fromCircle(geometry);\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter.call(this, feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates]\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates]\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n    var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n    var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n    return deltaA - deltaB;\n}\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","import hashed from 'hashed';\nimport {transform} from 'ol/proj';\n\nfunction toPrecision(value, precision) {\n  const factor = Math.pow(10, precision);\n  return (Math.round(value * factor) / factor).toString();\n}\n\nfunction synchronize(map, options) {\n  options = options || {};\n  let animate;\n  if ('animate' in options) {\n    animate = options.animate;\n  } else {\n    animate = {duration: 250};\n  }\n\n  const view = map.getView();\n  const projection = view.getProjection().getCode();\n\n  let zoom, center, rotation;\n  if (view.isDef()) {\n    zoom = view.getZoom();\n    center = view.getCenter();\n    rotation = view.getRotation();\n  } else {\n    const viewport = map.getViewport();\n    if (viewport) {\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\n    } else {\n      zoom = 0;\n    }\n    center = [0, 0];\n    rotation = 0;\n  }\n\n  const config = {\n    center: {\n      default: center,\n      serialize: function(coord, state) {\n        let precision;\n        if (state && 'zoom' in state) {\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\n        } else {\n          precision = 3;\n        }\n        coord = transform(coord, projection, 'EPSG:4326');\n        return (\n          toPrecision(coord[0], precision) +\n          ',' +\n          toPrecision(coord[1], precision)\n        );\n      },\n      deserialize: function(str) {\n        const parts = str.split(',');\n        if (parts.length !== 2) {\n          throw new Error('Expected lon,lat but got ' + str);\n        }\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\n        return transform(coord, 'EPSG:4326', projection);\n      }\n    },\n    zoom: {\n      default: zoom,\n      serialize: function(value) {\n        return toPrecision(value, 1);\n      },\n      deserialize: Number\n    },\n    rotation: {\n      default: rotation,\n      serialize: function(value) {\n        return toPrecision(value, 2);\n      },\n      deserialize: Number\n    }\n  };\n\n  function hashHandler(state) {\n    if (view.isDef() && animate) {\n      view.animate(Object.assign({}, state, animate));\n      return;\n    }\n    if ('center' in state) {\n      view.setCenter(state.center);\n    }\n    if ('zoom' in state) {\n      view.setZoom(state.zoom);\n    }\n    if ('rotation' in state) {\n      view.setRotation(state.rotation);\n    }\n  }\n\n  const update = hashed.register(config, hashHandler);\n\n  function onMoveEnd() {\n    update({\n      center: view.getCenter(),\n      zoom: view.getZoom(),\n      rotation: view.getRotation()\n    });\n  }\n\n  map.on('moveend', onMoveEnd);\n\n  return function unregister() {\n    map.un('moveend', onMoveEnd);\n    hashed.unregister(hashHandler);\n  };\n}\n\nexport default synchronize;\n","import 'ol/ol.css';\n\nimport TileLayer from 'ol/layer/Tile';\nimport XYZSource from 'ol/source/XYZ';\n\nimport DragAndDrop from 'ol/interaction/DragAndDrop';\nimport Draw from 'ol/interaction/Draw';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport GeometryType from 'ol/geom/GeometryType';\nimport Map from 'ol/Map';\nimport Modify from 'ol/interaction/Modify';\nimport Snap from 'ol/interaction/Snap';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport sync from 'ol-hashed';\nimport {Fill, Stroke, Style} from 'ol/style';\n//! [imports]\nimport {getArea} from 'ol/sphere';\nimport colormap from 'colormap';\n//! [imports]\n\n//! [color]\nconst min = 1e8; // the smallest area\nconst max = 2e13; // the biggest area\nconst steps = 50;\nconst ramp = colormap({\n  colormap: 'blackbody',\n  nshades: steps\n});\n\nfunction clamp(value, low, high) {\n  return Math.max(low, Math.min(value, high));\n}\n\nfunction getColor(feature) {\n  const area = getArea(feature.getGeometry());\n  const f = Math.pow(clamp((area - min) / (max - min), 0, 1), 1 / 2);\n  const index = Math.round(f * (steps - 1));\n  return ramp[index];\n}\n//! [color]\n\n\nconst map = new Map({\n  target: 'map-container',\n  layers: [\n    new TileLayer({\n      source: new XYZSource({\n        url: 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg'\n      })\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nsync(map);\n\nconst source1 = new VectorSource();\n\n//! [style]\n\n\nconst layer = new VectorLayer({\n  source: source1,\n  style: function(feature) {\n    return new Style({\n      fill: new Fill({\n        color: getColor(feature)\n      }),\n      stroke: new Stroke({\n        color: 'rgba(255,255,255,0.8)'\n      })\n    });\n  }\n});\n//! [style]\n\nmap.addLayer(layer);\n\nmap.addInteraction(new DragAndDrop({\n  source: source1,\n  formatConstructors: [GeoJSON]\n}));\n\nmap.addInteraction(new Modify({\n  source: source1\n}));\n\nmap.addInteraction(new Draw({\n  source: source1,\n  type: GeometryType.POLYGON\n}));\n\nmap.addInteraction(new Snap({\n  source: source1\n}));\n\nconst clear = document.getElementById('clear');\nclear.addEventListener('click', function() {\n  source1.clear();\n});\n\nconst format = new GeoJSON({featureProjection: 'EPSG:3857'});\nconst download = document.getElementById('download');\nsource.on('change', function() {\n  const features = source.getFeatures();\n  const json = format.writeFeatures(features);\n  download.href = 'data:text/json;charset=utf-8,' + json;\n});\n"],"sourceRoot":""}