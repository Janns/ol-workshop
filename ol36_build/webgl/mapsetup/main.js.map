{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/Stamen.js","webpack:///./node_modules/ol/Feature.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","content","options","hmr","transform","insertInto","undefined","locals","useSourceMap","list","toString","map","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","fn","memo","stylesInDom","isOldIE","window","document","atob","arguments","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","factory","util_abstract","uidCounter_","getUid","ol_uid","String","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","Array","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","assert","assertion","errorCode","clamp","cosh","x","y","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","sin","cos","atan2","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","ii","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","equals","extendCoordinates","extendFlatCoordinates","flatCoordinates","offset","end","stride","extendXY","extent_getArea","isEmpty","getWidth","getHeight","getBottomLeft","getBottomRight","getCenter","getCorner","corner","getTopLeft","getTopRight","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","obj_assign","assign","var_sources","TypeError","obj_clear","getValues","values","obj_isEmpty","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","CollectionEventType","ADD","REMOVE","ObjectEventType","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","events_Event","Event","propagationStopped","preventDefault","stopPropagation","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","set","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","f","array","getArray","elem","removeAt","prev","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","abs","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","array_extend","extension","array_equals","arr1","arr2","len1","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","easeIn","easeOut","inAndOut","linear","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","Point_extends","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","callback","val","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","intersectsLineString","coordinatesExtent","ret","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getComputedStyle","parseInt","w","h","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getProjection","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","getContext","replaceNode","oldNode","replaceChild","removeNode","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","renderEvent","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getAngle","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","context","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","normalize","color","color_toString","g","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerStates","getLayerRenderer","callback_1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","reduce","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","children_","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","body","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","ImageState","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","getImageData","err","Uint8Array","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile","tileState","getTile","setState","getInterimTile","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clearRect","zs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","restore","canvasTransform","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","getImage","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","asColorLike","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getScale","getRotateWithView","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","getFill","getPoints","getRadius","getRadius2","getStroke","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","Circle_extends","Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","image_","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","styles_1","toFunction","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","origin","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","Image","LineString","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","textAlign","flatOffset","flatEnd","oo","range","drawChars_","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","p1","p2","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","renderDeclutter_","groupCount","box","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","imageData","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","vectorSource","clipExtent","clipped","world","transform_1","transform_2","layer_1","features_1","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","FormatType","ARRAY_BUFFER","XML","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","loadingstrategy_all","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","setUrl","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","self","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","OSM_extends","ATTRIBUTION","Stamen_extends","OSM","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","main_source","client","csv","curIndex","prevIndex","line","substr","fromLonLat","mass","year"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","import 'ol/ol.css';\nimport {fromLonLat} from 'ol/proj';\nimport {Map, View} from 'ol';\nimport {Vector as VectorLayer, Tile as TileLayer} from 'ol/layer';\nimport {Vector as VectorSource, Stamen} from 'ol/source';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\n\nconst source = new VectorSource();\n\nconst client = new XMLHttpRequest();\nclient.open('GET', 'data/meteorites.csv');\nclient.onload = function() {\n  const csv = client.responseText;\n  const features = [];\n\n  let prevIndex = csv.indexOf('\\n') + 1; // scan past the header line\n\n  let curIndex;\n  while ((curIndex = csv.indexOf('\\n', prevIndex)) != -1) {\n    const line = csv.substr(prevIndex, curIndex - prevIndex).split(',');\n    prevIndex = curIndex + 1;\n\n    const coords = fromLonLat([parseFloat(line[4]), parseFloat(line[3])]);\n    if (isNaN(coords[0]) || isNaN(coords[1])) {\n      // guard against bad data\n      continue;\n    }\n\n    features.push(new Feature({\n      mass: parseFloat(line[1]) || 0,\n      year: parseInt(line[2]) || 0,\n      geometry: new Point(coords)\n    }));\n  }\n  source.addFeatures(features);\n};\nclient.send();\n\n\nnew Map({\n  target: 'map-container',\n  layers: [\n    new TileLayer({\n      source: new Stamen({\n        layer: 'toner'\n      })\n    }),\n    new VectorLayer({\n      source: source\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}